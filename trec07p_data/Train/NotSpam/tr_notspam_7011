From beginners-return-91275-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 13:40:16 2007
Return-Path: <beginners-return-91275-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l42HeEb9025009
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 13:40:15 -0400
Received: (qmail 19024 invoked by uid 514); 2 May 2007 17:40:07 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 19014 invoked from network); 2 May 2007 17:40:07 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 May 2007 17:40:07 -0000
Received: (qmail 6494 invoked by uid 225); 2 May 2007 17:40:07 -0000
Delivered-To: beginners@perl.org
Received: (qmail 6489 invoked by alias); 2 May 2007 17:40:06 -0000
X-Spam-Status: No, hits=-0.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 199.185.220.240 as permitted sender)
Received: from defout.telus.net (HELO defout.telus.net) (199.185.220.240)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 10:39:45 -0700
Received: from priv-edtnaa06.telusplanet.net ([154.20.161.24])
          by priv-edtnes87.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070502173941.QUKJ5023.priv-edtnes87.telusplanet.net@priv-edtnaa06.telusplanet.net>
          for <beginners@perl.org>; Wed, 2 May 2007 11:39:41 -0600
Received: from [154.20.161.24] (d154-20-161-24.bchsia.telus.net [154.20.161.24])
	by priv-edtnaa06.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id FCB8LRSP3H
	for <beginners@perl.org>; Wed,  2 May 2007 11:39:41 -0600 (MDT)
Message-ID: <4638CCDA.3040908@telus.net>
Date: Wed, 02 May 2007 10:39:38 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: crypt() and /etc/shadow entries do not match?
References: <61268.134.117.60.110.1178124981.squirrel@webmail.sce.carleton.ca>
In-Reply-To: <61268.134.117.60.110.1178124981.squirrel@webmail.sce.carleton.ca>
X-Enigmail-Version: 0.90.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

jbuburuz@sce.carleton.ca wrote:
> Hey folks,

Hello,

> I have been using crypt for a while. No problems until recently.
> 
> Problem crypt does not return a hash that matches getpwnam(). I have been 
> using crypt for a long time without any problems.
> 
> Bellow is test script I have using for testing hashs. The output of the
> script bellow is as follows(Note passwd  for user "test" is "hello"):
> 
> linux:/tmp# ./perltest.pl
> Enter a string to encrypt with DES: hello
> Enter two random alphanumerics to be used as a salt:n$!
> 
> "hello" encrypted using the perl crypt() function and salt "$!" returns:
> $!8VHq6xLWgQc  $1$70w840Bc$Hkmqjlz8N7abM2SGlLm0T1
> 
> crypt returns= $!8VHq6xLWgQc
> hash value returned by getpwnam= $1$70w840Bc$Hkmqjlz8N7abM2SGlLm0T1
> 
> I have tested crypt() on debian, and redhat. Same problems. The has values
> do not match each other.
> 
> Please help, any suggestions.
> 
> thanks
> 
> jerry
> 
> #########################################################################
> Perl script bellow
> #########################################################################
> #!/usr/bin/perl
> 
> print "Enter a string to encrypt with DES:n";
> chomp(my $string = <STDIN>); #Take the input from the user and remove the n
> 
> print "Enter two random alphanumerics to be used as a salt:n";
> chomp(my $salt = <STDIN>);
> 
> my $encrypted_string = crypt($string,$salt); #take the string and the salt
> and put through crypt()
> 
> $pass = (getpwnam(test))[1];

You need to use the old password as the salt, so change that to:

my $pass = ( getpwnam 'test' )[ 1 ];

my $encrypted_string = crypt $string, $pass;


> print qq~
> "$string" encrypted using the perl crypt() function and salt "$salt" returns:
> $encrypted_string  $pass
> ~;



John
-- 
Perl isn't a toolbox, but a small machine shop where you can special-order
certain sorts of tools at low cost and in short order.       -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


