From beginners-return-91471-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  9 17:09:33 2007
Return-Path: <beginners-return-91471-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l49L9WqD001404
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 9 May 2007 17:09:33 -0400
Received: (qmail 16061 invoked by uid 514); 9 May 2007 21:09:25 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 16052 invoked from network); 9 May 2007 21:09:25 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 May 2007 21:09:25 -0000
Received: (qmail 28303 invoked by uid 225); 9 May 2007 21:09:24 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28296 invoked by alias); 9 May 2007 21:09:24 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.239 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.239)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 09 May 2007 14:09:17 -0700
Received: by nz-out-0506.google.com with SMTP id 12so337166nzp
        for <beginners@perl.org>; Wed, 09 May 2007 14:09:12 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=X8tfBQs35KVj4gxMkUnw8KdLchDJuvzkGd6KbjZquEbDGZZRruCia6N8VZ/KsyYMTt4320H1tycXNsuYXkVcQoTk4IgFC8LskBhuTbfS4zcW7Fjhc2nW3BXw5jT90daJzHvlbZedNV1je9eJv5Q4vtxQDqIaOBBD6tcZYLMhWEo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=O9XmiFf0dKBrV5Uw7JGZcKfz8TtAOaNW03zolHE8Y5nJC2ADEOaUTW4CNp7Ca9SaZRiDW7+9LcmdT9Mfm4SjUNZidppcpXBrOxiQktOyn07ugwx39yZPZO54bzekkZey+I0gn3Oof+RsYaAzRHPKVd6rgEc8nJPDjJ1fxhOjSpI=
Received: by 10.114.73.1 with SMTP id v1mr307328waa.1178744952440;
        Wed, 09 May 2007 14:09:12 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Wed, 9 May 2007 14:09:12 -0700 (PDT)
Message-ID: <58ce48dc0705091409s19194d9fr24ecbfc1f59e7780@mail.gmail.com>
Date: Wed, 9 May 2007 17:09:12 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "tom@tacocat.net" <tom@tacocat.net>
Subject: Re: forking problem with dbd::mysql
Cc: pangj@earthlink.net, beginners-list <beginners@perl.org>
In-Reply-To: <SiV6GusX.1178734717.5941940.tom@tacocat.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <29172822.1178726953247.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>
	 <SiV6GusX.1178734717.5941940.tom@tacocat.net>

On 5/9/07, tom@tacocat.net <tom@tacocat.net> wrote:
> This is an interesting point, but I think a database might be more
> similar to a network socket than a file handle.
>
> I have this same observed behaviour under Oracle and PostgreSQL, so it's
> not limited to mysql (and shouldn't be fixed with mysql specific flags).
snip

This is just to summarize what this thread was about.

The problem:

1. a process opens a database connection
2. does some work
3. forks a child that opens its own database connection
4. both run along with no problems
5. the child process ends
6. the parent's database connection is closed unexpectedly.

The reason:

The child has a copy of the parent's database handle.  When that
handle goes out of scope (because the program ended) it automagically*
closes.  This causes the databases to free the resources that are
still in use by the parent thus closing its handle unexpectedly.

The solution:

Setting a flag (InactiveDestroy) on the parent's handle inside the
child process prevents the automagic closing of the connection.

* the magic in this case is the DESTROY method of DBI::db

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


