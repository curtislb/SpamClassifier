From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue May 29 06:49:03 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4TAn2hB029679
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 29 May 2007 06:49:02 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 4E653163854
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 29 May 2007 10:48:54 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.7 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 605)
	id 5C001162AE1; Tue, 29 May 2007 10:48:43 +0000 (GMT)
To: samba-cvs@samba.org
From: vlendec@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070529104843.5C001162AE1@lists.samba.org>
Date: Tue, 29 May 2007 10:48:43 +0000 (GMT)
Subject: svn commit: samba r23185 - in branches: SAMBA_3_0/source/lib
	SAMBA_3_0/source/smbd SAMBA_3_0_26/source/lib
	SAMBA_3_0_26/source/smbd
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: vlendec
Date: 2007-05-29 10:48:42 +0000 (Tue, 29 May 2007)
New Revision: 23185

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23185

Log:
Try to fix the IRIX build, also add the forgotten file_id.c in .26

Added:
   branches/SAMBA_3_0_26/source/lib/file_id.c
Modified:
   branches/SAMBA_3_0/source/lib/file_id.c
   branches/SAMBA_3_0/source/smbd/oplock_irix.c
   branches/SAMBA_3_0_26/source/smbd/oplock_irix.c


Changeset:
Modified: branches/SAMBA_3_0/source/lib/file_id.c
===================================================================
--- branches/SAMBA_3_0/source/lib/file_id.c	2007-05-29 10:15:01 UTC (rev 23184)
+++ branches/SAMBA_3_0/source/lib/file_id.c	2007-05-29 10:48:42 UTC (rev 23185)
@@ -26,7 +26,7 @@
   return a file_id which gives a unique ID for a file given the device and
   inode numbers
  */
-static struct file_id file_id_create(SMB_DEV_T dev, SMB_INO_T inode)
+struct file_id file_id_create(SMB_DEV_T dev, SMB_INO_T inode)
 {
 	struct file_id key;
 	/* the ZERO_STRUCT ensures padding doesn't break using the key as a

Modified: branches/SAMBA_3_0/source/smbd/oplock_irix.c
===================================================================
--- branches/SAMBA_3_0/source/smbd/oplock_irix.c	2007-05-29 10:15:01 UTC (rev 23184)
+++ branches/SAMBA_3_0/source/smbd/oplock_irix.c	2007-05-29 10:48:42 UTC (rev 23185)
@@ -140,8 +140,9 @@
 	 * is the first fsp open with this dev,ino pair.
 	 */
 
-	if ((fsp = file_find_di_first((SMB_DEV_T)os.os_dev,
-				      (SMB_INO_T)os.os_ino)) == NULL) {
+	if ((fsp = file_find_di_first(
+		     file_id_create((SMB_DEV_T)os.os_dev,
+				    (SMB_INO_T)os.os_ino))) == NULL) {
 		DEBUG(0,("irix_oplock_receive_message: unable to find open "
 			 "file with dev = %x, inode = %.0f\n",
 			 (unsigned int)os.os_dev, (double)os.os_ino ));

Added: branches/SAMBA_3_0_26/source/lib/file_id.c
===================================================================
--- branches/SAMBA_3_0_26/source/lib/file_id.c	2007-05-29 10:15:01 UTC (rev 23184)
+++ branches/SAMBA_3_0_26/source/lib/file_id.c	2007-05-29 10:48:42 UTC (rev 23185)
@@ -0,0 +1,102 @@
+/* 
+   Unix SMB/CIFS implementation.
+
+   file_id structure handling
+
+   Copyright (C) Andrew Tridgell 2007
+   
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+*/
+
+#include "includes.h"
+
+/*
+  return a file_id which gives a unique ID for a file given the device and
+  inode numbers
+ */
+struct file_id file_id_create(SMB_DEV_T dev, SMB_INO_T inode)
+{
+	struct file_id key;
+	/* the ZERO_STRUCT ensures padding doesn't break using the key as a
+	 * blob */
+	ZERO_STRUCT(key);
+	key.devid = dev;
+	key.inode = inode;
+	return key;
+}
+
+/*
+  generate a file_id from a stat structure
+ */
+struct file_id file_id_sbuf(const SMB_STRUCT_STAT *sbuf)
+{
+	return file_id_create(sbuf->st_dev, sbuf->st_ino);
+}
+
+
+/*
+  return True if two file_id structures are equal
+ */
+BOOL file_id_equal(const struct file_id *id1, const struct file_id *id2)
+{
+	return id1->inode == id2->inode && id1->devid == id2->devid;
+}
+
+/*
+  a static string for a file_id structure
+ */
+const char *file_id_static_string(const struct file_id *id)
+{
+	static char buf[32];
+	snprintf(buf, sizeof(buf), "%llx:%llx", 
+		 (unsigned long long)id->devid, 
+		 (unsigned long long)id->inode);
+	return buf;
+}
+
+/*
+  a 2nd static string for a file_id structure so we can print 2 at once
+ */
+const char *file_id_static_string2(const struct file_id *id)
+{
+	static char buf[32];
+	snprintf(buf, sizeof(buf), "%llx:%llx", 
+		 (unsigned long long)id->devid, 
+		 (unsigned long long)id->inode);
+	return buf;
+}
+
+/*
+  push a 16 byte version of a file id into a buffer
+ */
+void push_file_id_16(char *buf, const struct file_id *id)
+{
+	SIVAL(buf,  0, id->devid&0xFFFFFFFF);
+	SIVAL(buf,  4, id->devid>>32);
+	SIVAL(buf,  8, id->inode&0xFFFFFFFF);
+	SIVAL(buf, 12, id->inode>>32);
+}
+
+/*
+  pul a 16 byte version of a file id from a buffer
+ */
+void pull_file_id_16(char *buf, struct file_id *id)
+{
+	ZERO_STRUCTP(id);
+	id->devid  = IVAL(buf,  0);
+	id->devid |= ((uint64_t)IVAL(buf,4))<<32;
+	id->inode  = IVAL(buf,  8);
+	id->inode |= ((uint64_t)IVAL(buf,12))<<32;
+}

Modified: branches/SAMBA_3_0_26/source/smbd/oplock_irix.c
===================================================================
--- branches/SAMBA_3_0_26/source/smbd/oplock_irix.c	2007-05-29 10:15:01 UTC (rev 23184)
+++ branches/SAMBA_3_0_26/source/smbd/oplock_irix.c	2007-05-29 10:48:42 UTC (rev 23185)
@@ -140,8 +140,9 @@
 	 * is the first fsp open with this dev,ino pair.
 	 */
 
-	if ((fsp = file_find_di_first((SMB_DEV_T)os.os_dev,
-				      (SMB_INO_T)os.os_ino)) == NULL) {
+	if ((fsp = file_find_di_first(
+		     file_id_create((SMB_DEV_T)os.os_dev,
+				    (SMB_INO_T)os.os_ino))) == NULL) {
 		DEBUG(0,("irix_oplock_receive_message: unable to find open "
 			 "file with dev = %x, inode = %.0f\n",
 			 (unsigned int)os.os_dev, (double)os.os_ino ));

