From beginners-return-92657-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun 22 06:16:02 2007
Return-Path: <beginners-return-92657-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5MAG1L9004856
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 22 Jun 2007 06:16:02 -0400
Received: (qmail 7314 invoked by uid 514); 22 Jun 2007 10:15:55 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Delivered-To: moderator for beginners@perl.org
Received: (qmail 26283 invoked from network); 22 Jun 2007 04:14:37 -0000
Delivered-To: beginners@perl.org
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of baxter.brad@gmail.com)
To: beginners@perl.org
MBOX-Line: From news@google.com Fri Jun 22 04:14:22 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Delivered-To: news-moderator-perl.beginners@perl.org
Received-SPF: neutral (x1.develooper.com: 130.59.1.10 is neither permitted nor denied by domain of news@google.com)
From: Brad Baxter <baxter.brad@gmail.com>
Subject: Re: Command line usage [solved]
Date: Fri, 22 Jun 2007 04:14:10 -0000
Organization: http://groups.google.com
Lines: 54
Message-ID: <1182485650.258326.89170@g37g2000prf.googlegroups.com>
References: <1068.64986.qm@web35710.mail.mud.yahoo.com>
NNTP-Posting-Host: 72.152.103.170
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Trace: posting.google.com 1182485651 2979 127.0.0.1 (22 Jun 2007 04:14:11 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Fri, 22 Jun 2007 04:14:11 +0000 (UTC)
In-Reply-To: <1068.64986.qm@web35710.mail.mud.yahoo.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en-US; rv:1.8.1.4) Gecko/20070515 Firefox/2.0.0.4,gzip(gfe),gzip(gfe)
Complaints-To: groups-abuse@google.com
Injection-Info: g37g2000prf.googlegroups.com; posting-host=72.152.103.170;
   posting-account=hUvzDg0AAABuZ3O7lZFUX0BFNJiaUzie
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Jun 18, 5:54 pm, jeehan...@yahoo.com (John Degen) wrote:
> >----- Original Message ----
> >From: Paul Lalli <mri...@gmail.com>
> >To: beginn...@perl.org
> >Sent: Monday, June 18, 2007 6:47:05 PM
> >Subject: Re: Command line usage
>
> >On Jun 18, 10:50 am, jeehan...@yahoo.com (John Degen) wrote:
>
> >> I think I'm out of luck with this OS;) Your suggestion for creating a backup
> >> file gave the same result: no error, no change in the files. The output of
> >> 'perl -le"print for @ARGV" *'  is * and the other is *.*. Funny though that
> >> sed *does* work.
>
> >Ah.  Well there's your problem.  The command line interpreter you're
> >running doesn't expand wildcards.  That's why Perl wasn't giving you
> >any errors - it had nothing to do because there was no file named "*"
> >that it could find...   You'll have to expand the wildcard from within
> >Perl.
>
> >perl -pi.bkp -e"BEGIN { @ARGV = glob($ARGV[0]); }  s/old/new/;" *
>
> >Hope this helps,
> >Paul Lalli
>
> Thank you all for your responses. Paul's suggestion above is the winner. The command works, creates a neat backup file and does what it's told. I'll be checking the docs to see *why* it works:)

Normally your command line interpreter would expand "*" into a list of
files, and perl would store them in @ARGV, e.g.,

$ARGV[0] = "a.txt";
$ARGV[1] = "b.txt";
$ARGV[2] = "c.txt";

Instead, yours is not expanding, but simply passing "*" unchanged, but
perl still stores it in @ARGV, which looks like

$ARGV[0] = "*";

So in the BEGIN block (which executes before the -p flag starts
reading files), Paul's code passes $ARGV[0] to the glob() function,
which is perl's way of expanding "*" into a list of files.  Assigning
that output to @ARGV (overwriting $ARGV[0] in the process) yields,
e.g.,

$ARGV[0] = "a.txt";
$ARGV[1] = "b.txt";
$ARGV[2] = "c.txt";

Q.E.F.

--
Brad


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


