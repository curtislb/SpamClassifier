From beginners-return-92034-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun  1 00:37:18 2007
Return-Path: <beginners-return-92034-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l514bFhB004841
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 1 Jun 2007 00:37:16 -0400
Received: (qmail 22652 invoked by uid 514); 1 Jun 2007 04:37:06 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 22643 invoked from network); 1 Jun 2007 04:37:06 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 04:37:06 -0000
Received: (qmail 1383 invoked by uid 225); 1 Jun 2007 04:37:06 -0000
Delivered-To: beginners@perl.org
Received: (qmail 1375 invoked by alias); 1 Jun 2007 04:37:05 -0000
X-Spam-Status: No, hits=3.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,FORGED_YAHOO_RCVD,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from office.servervault.com (HELO mail1.dulles.sv.int) (216.12.128.136)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 31 May 2007 21:36:57 -0700
Received: from [192.168.4.103] ([192.168.4.103]) by mail1.dulles.sv.int with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 1 Jun 2007 00:36:47 -0400
Message-ID: <465FA240.4060105@yahoo.com>
Date: Fri, 01 Jun 2007 00:36:16 -0400
From: Mathew Snyder <theillien@yahoo.com>
User-Agent: Thunderbird 1.5.0.10 (X11/20060911)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Effective date grab
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 01 Jun 2007 04:36:47.0230 (UTC) FILETIME=[76BE71E0:01C7A406]

A while ago I had posted requesting help with a long block of code that would do
all kinds of stuff dealing with the date.  It turned out to not work despite
being technically, correct.  Instead of getting help with it, Mr. Phoenix
provided me with a block of code that did what I needed but much more concisely.
 And, more importantly, correctly.

for (1 .. 7) {
  $time -= 24*60*60;
  my @date = (localtime($time))[3 .. 5];
  push @days, (sprintf '%02d', $date[0]);
  push @months,(sprintf '%02d',$date[1] + 1);
  push @years, $date[2] + 1900;
  push @searchDate, join "-", ($date[2] + 1900), (sprintf '%02d',$date[1] + 1),
(sprintf '%02d', $date[0]);
}

This will give me a weeks worth of dates regardless of whether or not the month
flips over in the middle of the week.

What I'd like to do now is modify this or figure out a similar block of code
that will do the same only for an entire month.  The thing I see being a problem
though is that some months have 30 days, some months have 31 days and February
has 28/29 days.  This makes it pretty much impossible to just do a for loop
utilizing (1..whatever).  How can I populate an array of an entire month's worth
of dates without worrying about how many days the month has?

Mathew
-- 
Keep up with me and what I'm up to: http://theillien.blogspot.com

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


