From perl6-all-return-81855-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun  6 20:33:39 2007
Return-Path: <perl6-all-return-81855-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l570XchB027966
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 6 Jun 2007 20:33:38 -0400
Received: (qmail 6481 invoked by uid 514); 7 Jun 2007 00:33:31 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 6476 invoked from network); 7 Jun 2007 00:33:30 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: unknown (x1.develooper.com: error in processing during lookup of andy@petdance.com)
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Transfer-Encoding: 7bit
Message-Id: <6ABAC79D-BD11-4F95-B19D-1A925AB605E1@petdance.com>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
To: perl6-internals List <perl6-internals@perl.org>
From: Andy Lester <andy@petdance.com>
Subject: About the headerizer
Date: Wed, 6 Jun 2007 19:32:49 -0500
X-Mailer: Apple Mail (2.752.3)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME

The long-term plan for the headerizer is that it will take all the  
prototypes for all the functions and populate all the .h files  
automatically.  No need to worry about differences between header and  
source, because the header comes from it.  It'll also auto-generate  
attributes for each of the functions that work with GCC.

Yesterday there was a problem where I forgot to put PARROT_API on the  
function in source, so linking on Windows broke.  If that happens  
again, here's what you do:

* Run Configure.pl
* Update the source with PARROT_API above the return type
* Run "make headerizer"

The .h file should now have PARROT_API for the function in question.

xoxo,
Andy


--
Andy Lester => andy@petdance.com => www.petdance.com => AIM:petdance




