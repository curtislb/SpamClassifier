From beginners-return-91291-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 17:42:22 2007
Return-Path: <beginners-return-91291-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l42LgLb9027770
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 17:42:21 -0400
Received: (qmail 21891 invoked by uid 514); 2 May 2007 21:42:14 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 21882 invoked from network); 2 May 2007 21:42:14 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 May 2007 21:42:14 -0000
Received: (qmail 13991 invoked by uid 225); 2 May 2007 21:42:09 -0000
Delivered-To: beginners@perl.org
Received: (qmail 13958 invoked by alias); 2 May 2007 21:42:07 -0000
X-Spam-Status: No, hits= required=
	tests=
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 204.209.205.55 as permitted sender)
Received: from defout.telus.net (HELO defout.telus.net) (204.209.205.55)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 14:41:08 -0700
Received: from priv-edmwaa06.telusplanet.net ([154.20.161.24])
          by priv-edmwes34.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070502214102.LIME23023.priv-edmwes34.telusplanet.net@priv-edmwaa06.telusplanet.net>
          for <beginners@perl.org>; Wed, 2 May 2007 15:41:02 -0600
Received: from [154.20.161.24] (d154-20-161-24.bchsia.telus.net [154.20.161.24])
	by priv-edmwaa06.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 1A63U43WWA
	for <beginners@perl.org>; Wed,  2 May 2007 15:40:58 -0600 (MDT)
Message-ID: <46390566.60007@telus.net>
Date: Wed, 02 May 2007 14:40:54 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: Checking if files are older than 20 mins in a particular directory
References: <20070502191646.28095.qmail@lists.develooper.com>	 <4638E7FB.5050402@350.com> <4ce365ec0705021411o627edf6cg4d9ec02ce82d34b@mail.gmail.com>
In-Reply-To: <4ce365ec0705021411o627edf6cg4d9ec02ce82d34b@mail.gmail.com>
X-Enigmail-Version: 0.90.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Jay Savage wrote:
> On 5/2/07, Rob Dixon <rob.dixon@350.com> wrote:
>> Chris E. Rempola wrote:
>> >
>> > Could someone point me in the right direction to write out a simple
>> Perl
>> > script to check for old files in a particular directory that are older
>> > than 20 mins.  Is there a module to grab current timestamp?  Thanks.
>>
>> Check out
>>
>>   perldoc -f -x
>>
>> and look at the -M option. It gives the age of the file in days in
>> floating point, so if its greater than 20/(24*60) your file is older than
>> twenty minutes.
> 
> Not quite. -M reports "Script start time minus file modification time,
> in days." To put it another way, -M reports how old the file was when
> the script started running. Or more appropriately, how old the file
> would have been when the script started running, assuming its current
> mtime. That's not the same thing as how old the file is when the test
> is executed.
> 
> For short-lived scripts, the difference is mainly a technicality For
> long-running programs, though, -M's behavior has serious consequences.
> -M on its own is useless in, say, a daemon that runs for days or
> months--if you're lucky--or even in a program that just takes a while
> to process all its data. The math to correct for running time is
> complicated by -M returning fractional days. To use -M effectively,
> you need to do something like:
> 
>    my $minutes = 20;
>    if ( (-M "file") + ((time - $^T) / (24 * 60 * 60)) >
> $limit_minutes/(24*60) )
>        { do something }
> 
> Usually it's easier to just use the mtime from stat():
> 
>    if (time - (stat "file")[9] > $minutes * 60)
>        { do something }

Or you could simply do:

$^T = time;

Before you do the file test which will put the current time into $^T which is
what -M uses to calculate the file time:

$ perl -le'
    $file = shift;
    print -M $file;
    $^T = time() - 86400;
    print -M $file;
' yourfile.txt
8.75521990740741
7.75521990740741



John
-- 
Perl isn't a toolbox, but a small machine shop where you can special-order
certain sorts of tools at low cost and in short order.       -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


