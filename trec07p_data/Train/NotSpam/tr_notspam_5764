From perl6-all-return-80942-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 27 19:15:24 2007
Return-Path: <perl6-all-return-80942-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3RNFN6w032327
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 19:15:23 -0400
Received: (qmail 3528 invoked by uid 514); 27 Apr 2007 23:15:21 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 3523 invoked from network); 27 Apr 2007 23:15:21 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of mddiep@gmail.com designates 64.233.166.178 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=djH6rEV8Yb6zkgY+azR7UzQT0d6pzK0Y2a6Kus4UWEX8Z1AVuak4t1mRkVD33eUh/PbVxhfr8y6DqOjgF9wf9ApPP6w1/fBjsXtZtGCSuhrEERZsgb8a8YHbklCILkklabHkDq8WsHLnYA/k54xnV/ExOW5s8ky1CsraJOwXBmE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=TXwLCdbERoUyoQINl8WGT6XISbT9Rk1A6idwZV2COCTrFcH/AWOUXF8ZmtkRagzNg5OIa4KoicgER38s2RXmFJJYNbPYFfPw49ZD5SZYhcXhn4vD0fKa0h6pY4wcR0dT/H4x2HrfpnpNet69GHDA+8qJy3xXZjuV9I49leIfXfM=
Message-ID: <198c87380704271614y549d85dci2e2c0f856eff962f@mail.gmail.com>
Date: Fri, 27 Apr 2007 19:14:56 -0400
From: "Matt Diephouse" <mddiep@gmail.com>
Reply-To: matt@diephouse.com
To: perl6-internals@perl.org
Subject: Re: [perl #42776] [BUG] is isa ok?
Cc: bugs-bitbucket@netlabs.develooper.com
In-Reply-To: <rt-3.6.HEAD-6655-1177701697-287.42776-72-0@perl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <RT-Ticket-42776@perl.org>
	 <1d9a3f400704271221p3bfaf273t224fe5f040a97a13@mail.gmail.com>
	 <rt-3.6.HEAD-6655-1177701697-287.42776-72-0@perl.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
Status: O
Content-Length: 2040
Lines: 59

On 4/27/07, via RT Jerry Gay <parrotbug-followup@parrotcode.org> wrote:
> # New Ticket Created by  Jerry Gay
> # Please include the string:  [perl #42776]
> # in the subject line of all future correspondence about this issue.
> # <URL: http://rt.perl.org/rt3/Ticket/Display.html?id=42776 >
>
>
> there are two 'isa' ops, defined in src/ops/object.ops
>
> one takes a string param, and the other a pmc. it seems the string
> variant is used frequently throughout the source and tests, but the
> pmc variant is much less frequently used, and i haven't come across
> any tests, either. it seems these two ops don't agree on return
> value... which is problematic.
>
>   D:\usr\local\parrot\head>parrot -
>   .sub main
>       .local pmc class, obj
>       class = new 'Class'
>       obj = class.'new'()
>       $I0 = isa obj, 'Object'
>       print $I0
>       .local pmc cl
>       cl = new 'String'
>       cl = 'Object'
>       $I1 = isa obj, cl
>       print $I1
>   .end
>   ^Z
>   10
>
> why? iunno. but this is causing me problems when using 'isa_ok' in
> 'Test/More.pir', since it uses the pmc variant.

It looks like the PMC variant is correct in this case, because Object
isn't actually a class. There's a class flag for PMCs that sets
whether or not they are a class and Object doesn't have this set.

When you call the PMC variant of isa, it calls Parrot_object_isa, and
that has this code:

    /* if this is not a class */
    if (!PObj_is_class_TEST(pmc)) {
        pmc = VTABLE_get_class(interp, pmc);
    }

So since Object isn't a class, it calls the get_class vtable and gets
the Class pmc. It then tests the object to see if it's a Class, which
it obviously isn't.

Contrast this to the String isa variant. It calls the isa vtable
function. Object inherits whatever default isa implementation is
provided. I'm not sure where that code is (it's a little harder to
find), but I'm guessing it just does a string comparison on the PMC
names without testing if the PMC is a class.

-- 
Matt Diephouse
http://matt.diephouse.com

