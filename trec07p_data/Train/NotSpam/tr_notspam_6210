From beginners-return-91207-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Apr 29 20:57:23 2007
Return-Path: <beginners-return-91207-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3U0vM6w007274
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 29 Apr 2007 20:57:23 -0400
Received: (qmail 32074 invoked by uid 514); 30 Apr 2007 00:57:18 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 32065 invoked from network); 30 Apr 2007 00:57:17 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 Apr 2007 00:57:17 -0000
Received: (qmail 16805 invoked by uid 225); 30 Apr 2007 00:57:17 -0000
Delivered-To: beginners@perl.org
Received: (qmail 16795 invoked by alias); 30 Apr 2007 00:57:16 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of mja@richweb.com designates 63.90.9.3 as permitted sender)
Received: from mail.richweb.com (HELO mail.richweb.com) (63.90.9.3)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 29 Apr 2007 17:57:14 -0700
Received: from [192.168.0.20] (c-67-172-217-152.hsd1.va.comcast.net [67.172.217.152])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mail.richweb.com (Postfix) with ESMTP id 2C93DFA39
	for <beginners@perl.org>; Sun, 29 Apr 2007 20:57:08 -0400 (EDT)
Message-ID: <46353E93.60206@richweb.com>
Date: Sun, 29 Apr 2007 20:55:47 -0400
From: "Matthew J. Avitable" <mja@richweb.com>
User-Agent: Thunderbird 1.5.0.10 (X11/20070403)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: creating hash from scalar variable
References: <46349351.3090501@gmail.com> <bb075cdf0704291703o51bc1bbawa0e484d074154268@mail.gmail.com>
In-Reply-To: <bb075cdf0704291703o51bc1bbawa0e484d074154268@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1025
Lines: 45

Given the original string ...
> my $test =
>   'NAS-IP-Address = 192.168.42.1
>   .......
>   Acct-Unique-Session-Id = "87d380e1881d226c"
>   Timestamp = 1177282824';
>

You could also invoke perl 5.8's ability to treat an in-memory string as 
a file:

## get a filehandle on $test
open(my $fh, '<', \$test) or die "Unable to open scalar ref for reading: 
$!";

while (my $line = <$fh>) {

    ## split on '=' with a max of two resulting fields, clear spaces 
adjacent to '='.
    ## clear newlines as well.
    chomp ( my ($k, $v) = split(/\s*=\s*/, $line, 2) );

    ## clear out the quotes in the value
    $v =~ s/"//og;

    ## do something with your key and value:
    print "Key is $k,  Value is: $v\n";

}

close $fh;


Reading a file line by line is a fairly recognizable pattern to perl 
programmers of all levels, so it may assist future maintainers.

Hope this helps!

-m

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


