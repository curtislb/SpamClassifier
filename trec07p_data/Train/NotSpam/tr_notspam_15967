From perl6-all-return-81792-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun  4 01:24:49 2007
Return-Path: <perl6-all-return-81792-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l545OmhB023743
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 4 Jun 2007 01:24:48 -0400
Received: (qmail 10969 invoked by uid 514); 4 Jun 2007 05:24:41 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 10961 invoked from network); 4 Jun 2007 05:24:41 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of dataweaver@gmail.com designates 64.233.162.224 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=MOppKhWlk2vkK6FPtGqxrnbeblNSagMS07MBJOraYKKQHlT7Hxy/+NVOZQRCQxwXTt0fUJ2fE6JxYqejqAJuB81RtHUTdUxl1SqNb8mvNby104Z2UdZWP0WEDqS4luLjpzBS1eKD9PjVjl+BB2iRMn5jJnkenzkKWPoBBVvxcpE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=tz//wJpviJqYCWFA1hKVl0WtCGhgsrfsBBmufzs25OeUeZjJ+128jywv3I52SiKlTmohLebieeqGa+Rzoft7KxMYcr2MYXqAbkFYFBDRCR7YnYzd/1WJESBNK623W82+mNsk7Prt8DP6TRBtZGeSZdhF6g4mzaSqQ7ZbRgXixYQ=
Message-ID: <ef30550b0706032223j33ae3e02qcd1dad48a2f64c06@mail.gmail.com>
Date: Sun, 3 Jun 2007 22:23:44 -0700
From: "Jonathan Lang" <dataweaver@gmail.com>
To: "larry@cvs.perl.org" <larry@cvs.develooper.com>
Subject: Re: [svn:perl6-synopsis] r14415 - doc/trunk/design/syn
Cc: perl6-language@perl.org
In-Reply-To: <20070604002317.AD5CCCBA7D@x12.develooper.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <20070604002317.AD5CCCBA7D@x12.develooper.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS

larry@cvs.perl.org wrote:
> Author: larry
> Date: Sun Jun  3 17:23:15 2007
> New Revision: 14415
>
> Modified:
>    doc/trunk/design/syn/S03.pod
>    doc/trunk/design/syn/S04.pod
>    doc/trunk/design/syn/S06.pod
>
> Log:
> typo from Aaron Crane++
> s/cat/list/ for flattening captures in order
> cat() now only produces pseudo-strings even in list context



> Modified: doc/trunk/design/syn/S03.pod
> ==============================================================================
> --- doc/trunk/design/syn/S03.pod        (original)
> +++ doc/trunk/design/syn/S03.pod        Sun Jun  3 17:23:15 2007
> @@ -610,7 +610,7 @@
>      $string x $count
>
>  Evaluates the left argument in string context, replicates the resulting
> -string value the number of time specified by the right argument and
> +string value the number of times specified by the right argument and
>  returns the result as a single concatenated string regardless of context.
>
>  If the count is less than 1, returns the null string.
> @@ -625,7 +625,7 @@
>      @list xx $count
>
>  Evaluates the left argument in list context, replicates the resulting
> -C<Capture> value the number of time specified by the right argument and
> +C<Capture> value the number of times specified by the right argument and
>  returns the result in a context dependent fashion.  If the operator
>  is being evaluated in ordinary list context, the operator returns a
>  flattened list.  In slice (C<@@>) context, the operator converts each C<Capture>
> @@ -3554,15 +3554,12 @@
>          ...
>      }
>
> -To read arrays serially rather than in parallel, use C<cat(@x;@y)>.
> -This wins a "useless use of cat award" in this case since you could
> +To read arrays serially rather than in parallel, use C<list(@x;@y)>.
> +This wins a "useless use of list award" in this case since you could
>  always just write C<(@x,@y)> to mean the same thing.  But sometimes
>  it's nice to be explicit about that:
>
> -    @foo := [[1,2,3],[4,5,6]]; say cat([;] @foo); # 1,2,3,4,5,6
> -
> -(The C<cat> function is not entirely useless; it also provides stringy
> -semantics in string context.)
> +    @foo := [[1,2,3],[4,5,6]]; say list([;] @foo); # 1,2,3,4,5,6

Let me see if I understand this correctly:

* In list context, a list of captures gets flattened.

* In slice context (a variant of list context), a list of captures
doesn't get flattened.

* In hash context (another variant of list context), a list of
captures gets flattened, and then grouped into Pairs.

* In item context, a list of captures becomes a single Array object,
and the question about whether or not it gets flattened gets deferred
until its contents get looked at in list, slice, or hash context.

Meanwhile, 'zip' produces a list of captures - which, because list
context is the default "plural" context, immediately gets flattened
most of the time.  As I see it, then, the serial equivalent to
'zip(@a;@b)' would be '(@a;@b)', and 'list(@a;@b)' would be the serial
equivalent to 'list(zip(@a;@b))'.

Or does '(@a;@b)' default to slice context?

-- 
Jonathan "Dataweaver" Lang

