From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue May 29 04:23:23 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4T8NNhB028528
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 29 May 2007 04:23:23 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 6A6F516382F
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 29 May 2007 08:23:18 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id D6870162AE1; Tue, 29 May 2007 08:22:45 +0000 (GMT)
To: samba-cvs@samba.org
From: tridge@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070529082245.D6870162AE1@lists.samba.org>
Date: Tue, 29 May 2007 08:22:45 +0000 (GMT)
Subject: svn commit: samba r23181 - in
	branches/SAMBA_4_0/source/torture/raw: .
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: tridge
Date: 2007-05-29 08:22:45 +0000 (Tue, 29 May 2007)
New Revision: 23181

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23181

Log:

prevent attempts to reopen the connection twice at the same time

Modified:
   branches/SAMBA_4_0/source/torture/raw/lockbench.c
   branches/SAMBA_4_0/source/torture/raw/openbench.c


Changeset:
Modified: branches/SAMBA_4_0/source/torture/raw/lockbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/lockbench.c	2007-05-29 07:32:28 UTC (rev 23180)
+++ branches/SAMBA_4_0/source/torture/raw/lockbench.c	2007-05-29 08:22:45 UTC (rev 23181)
@@ -54,6 +54,7 @@
 	int lastcount;
 	struct smbcli_request *req;
 	struct smb_composite_connect reconnect;
+	struct timed_event *te;
 
 	/* these are used for reconnections */
 	int dest_port;
@@ -148,9 +149,10 @@
 
 	status = smb_composite_connect_recv(ctx, state->mem_ctx);
 	if (!NT_STATUS_IS_OK(status)) {
-		event_add_timed(state->ev, state->mem_ctx, 
-				timeval_current_ofs(1,0), 
-				reopen_connection, state);
+		talloc_free(state->te);
+		state->te = event_add_timed(state->ev, state->mem_ctx, 
+					    timeval_current_ofs(1,0), 
+					    reopen_connection, state);
 		return;
 	}
 
@@ -218,9 +220,10 @@
 			state->tree = NULL;
 			num_connected--;	
 			DEBUG(0,("reopening connection to %s\n", state->dest_host));
-			event_add_timed(state->ev, state->mem_ctx, 
-					timeval_current_ofs(1,0), 
-					reopen_connection, state);
+			talloc_free(state->te);
+			state->te = event_add_timed(state->ev, state->mem_ctx, 
+						    timeval_current_ofs(1,0), 
+						    reopen_connection, state);
 		} else {
 			DEBUG(0,("Lock failed - %s\n", nt_errstr(status)));
 			lock_failed++;
@@ -256,9 +259,10 @@
 		state->tree = NULL;
 		num_connected--;	
 		DEBUG(0,("reopening connection to %s\n", state->dest_host));
-		event_add_timed(state->ev, state->mem_ctx, 
-				timeval_current_ofs(1,0), 
-				reopen_connection, state);
+		talloc_free(state->te);
+		state->te = event_add_timed(state->ev, state->mem_ctx, 
+					    timeval_current_ofs(1,0), 
+					    reopen_connection, state);
 	}
 }
 

Modified: branches/SAMBA_4_0/source/torture/raw/openbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/openbench.c	2007-05-29 07:32:28 UTC (rev 23180)
+++ branches/SAMBA_4_0/source/torture/raw/openbench.c	2007-05-29 08:22:45 UTC (rev 23181)
@@ -57,6 +57,7 @@
 	struct smbcli_request *req_open;
 	struct smbcli_request *req_close;
 	struct smb_composite_connect reconnect;
+	struct timed_event *te;
 
 	/* these are used for reconnections */
 	int dest_port;
@@ -81,9 +82,10 @@
 
 	status = smb_composite_connect_recv(ctx, state->mem_ctx);
 	if (!NT_STATUS_IS_OK(status)) {
-		event_add_timed(state->ev, state->mem_ctx, 
-				timeval_current_ofs(1,0), 
-				reopen_connection, state);
+		talloc_free(state->te);
+		state->te = event_add_timed(state->ev, state->mem_ctx, 
+					    timeval_current_ofs(1,0), 
+					    reopen_connection, state);
 		return;
 	}
 
@@ -210,9 +212,10 @@
 		state->cli = NULL;
 		num_connected--;	
 		DEBUG(0,("reopening connection to %s\n", state->dest_host));
-		event_add_timed(state->ev, state->mem_ctx, 
-				timeval_current_ofs(1,0), 
-				reopen_connection, state);
+		talloc_free(state->te);
+		state->te = event_add_timed(state->ev, state->mem_ctx, 
+					    timeval_current_ofs(1,0), 
+					    reopen_connection, state);
 		return;
 	}
 
@@ -262,9 +265,10 @@
 		state->cli = NULL;
 		num_connected--;	
 		DEBUG(0,("reopening connection to %s\n", state->dest_host));
-		event_add_timed(state->ev, state->mem_ctx, 
-				timeval_current_ofs(1,0), 
-				reopen_connection, state);
+		talloc_free(state->te);
+		state->te = event_add_timed(state->ev, state->mem_ctx, 
+					    timeval_current_ofs(1,0), 
+					    reopen_connection, state);
 		return;
 	}
 
@@ -289,9 +293,10 @@
 		state->tree = NULL;
 		num_connected--;	
 		DEBUG(0,("reopening connection to %s\n", state->dest_host));
-		event_add_timed(state->ev, state->mem_ctx, 
-				timeval_current_ofs(1,0), 
-				reopen_connection, state);
+		talloc_free(state->te);
+		state->te = event_add_timed(state->ev, state->mem_ctx, 
+					    timeval_current_ofs(1,0), 
+					    reopen_connection, state);
 	}
 }
 

