From r-help-bounces@stat.math.ethz.ch  Wed Jun 13 02:05:19 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5D65IL9003912
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 13 Jun 2007 02:05:19 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l5D64kMA011845;
	Wed, 13 Jun 2007 08:04:51 +0200
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL, BAYES_50, DKIM_SIGNED,
	DKIM_VERIFIED autolearn=no version=3.2.0
Received: from web39710.mail.mud.yahoo.com (web39710.mail.mud.yahoo.com
	[209.191.106.56])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with SMTP id l5D64X1P011803
	for <r-help@stat.math.ethz.ch>; Wed, 13 Jun 2007 08:04:34 +0200
Received: (qmail 83551 invoked by uid 60001); 13 Jun 2007 06:04:33 -0000
X-YMail-OSG: Vg0QfxUVM1mrhtwlzfFXjHgi2RTtN6cGqpxnm8XQVMdo25b2z62XW35vFpJHHMBa_hdbTEc0bknX6TM2vIcsyXBryDc3BAMAlQ.KJ99EuZ89jlUndBE-
Received: from [66.91.227.183] by web39710.mail.mud.yahoo.com via HTTP;
	Tue, 12 Jun 2007 23:04:33 PDT
Date: Tue, 12 Jun 2007 23:04:33 -0700 (PDT)
From: Stephen Tucker <brown_emu@yahoo.com>
To: r-help@stat.math.ethz.ch
MIME-Version: 1.0
Message-ID: <34506.83532.qm@web39710.mail.mud.yahoo.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: [R] passing (or obtaining) index or element name of list to FUN in
	lapply()
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Hello everyone,

I wonder if there is a way to pass the index or name of a list to a
user-specified function in lapply(). For instance, my desired effect is
something like the output of 

> L <- list(jack=4098,sape=4139)
> lapply(seq(along=L),function(i,x) if(i==1) "jack" else "sape",x=L)
[[1]]
[1] "jack"

[[2]]
[1] "sape"

> lapply(seq(along=L),function(i,x) if(names(x)[i]=="jack") 1 else 2,x=L)
[[1]]
[1] 1

[[2]]
[1] 2

But by passing L as the first argument of lapply(). I thought there was a
tangentially-related post on this mailing list in the past but I don't recall
that it was ever addressed directly (and I can't seem to find it now). The
examples above are perfectly good alternatives especially if I wrap each of
the lines in "names<-"() to return lists with appropriate names assigned, but
it feels like I am essentially writing a FOR-LOOP - though I was surprised to
find that speed-wise, it doesn't seem to make much of a difference (unless I
have not selected a rigorous test):

> N <- 10000
> y <- runif(N)
## looping through elements of y
> system.time(lapply(y,
+                    function(x) {
+                      set.seed(222)
+                      mean(rnorm(1e4,x,1))
+                    }))
[1] 21.00  0.17 21.29    NA    NA
## looping through indices
> system.time(lapply(1:N,
+                    function(x,y) {
+                      set.seed(222)
+                      mean(rnorm(1e4,y[x],1))
+                      },y=y))
[1] 21.09  0.14 21.26    NA    NA

In Python, there are methods for Lists and Dictionaries called enumerate(),
and iteritems(), respectively. Example applications:

## a list
L = ['a','b','c']
[x for x in enumerate(L)]
## returns index of list along with the list element
[(0, 'a'), (1, 'b'), (2, 'c')]

## a dictionary
D = {'jack': 4098, 'sape': 4139}
[x for x in D.iteritems()]
## returns element key (name) along with element contents
[('sape', 4139), ('jack', 4098)]

And this is something of the effect I was looking for...

Thanks to all,

Stephen

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

