From perl6-all-return-81211-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  8 22:40:16 2007
Return-Path: <perl6-all-return-81211-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l492eEqD023367
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 8 May 2007 22:40:14 -0400
Received: (qmail 29984 invoked by uid 514); 9 May 2007 02:40:12 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29977 invoked from network); 9 May 2007 02:40:11 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of alek.storm@gmail.com designates 66.249.90.176 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=clcOfjd6cfjhbh3kpj3PKvTkQF19/KsklpvWwQ+iVI1OxO0Cbi73K3Dv3NpBCYJx6JZbLa/7MsQXgHLi5APfYVJ9YV1DDCm/Tsd5FZY9JKKwPNhW7+H29zYZU/JfBSxcWOijuJo0M/89QOmfVUElkiNdV1mrro06DDE2iAIhVnU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=l8npqvnby16SMzAHG9CZ+GR4979Hnafqg6Z4+XwJ8UEc9rsQgm32aQq3iptPG5rmE10ZfzmfxI5Kavrajpk7lTKE6+gbWz76499MPJwIEnD7Wr1spL3z60JTyim/2NxnV8cdHtkbPU3XWArs0rfkg4fQVFugolB/TZLNFLzv4/E=
Message-ID: <189adbd0705081939s588295ebv3009edf4dd7bff14@mail.gmail.com>
Date: Wed, 9 May 2007 02:39:41 +0000
From: "Alek Storm" <alek.storm@gmail.com>
To: "Will Coleda" <will@coleda.com>
Subject: Re: [perl #42905] [PATCH] implement vtable overriding for PDD15, bugfix
Cc: "Allison Randal" <allison@perl.org>, chromatic <chromatic@wgz.org>,
   "Perl 6 Internals" <perl6-internals@perl.org>
In-Reply-To: <838D413E-D41B-48EF-8803-2FFAC18AC6D5@coleda.com>
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_65288_12935451.1178678381710"
References: <RT-Ticket-42905@perl.org>
	 <20070508142014.47991.qmail@spout.spiders.net>
	 <189adbd0705081338t14af7dbdm8de22de66df6c70@mail.gmail.com>
	 <200705081406.00431.chromatic@wgz.org>
	 <189adbd0705081502o46a685b7oce042c7d3cfa6e7d@mail.gmail.com>
	 <838D413E-D41B-48EF-8803-2FFAC18AC6D5@coleda.com>
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS

------=_Part_65288_12935451.1178678381710
Content-Type: multipart/alternative; 
	boundary="----=_Part_65289_6965907.1178678381711"

------=_Part_65289_6965907.1178678381711
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 5/9/07, Will Coleda <will@coleda.com> wrote:

> Looking at PDD15, I see this paragraph...
> > To override a vtable function, either add the :vtable pragma to the
> > declaration of the method, or pass a named parameter "vtable" into
> the
> > add_method method on a class or role.
>
> ... which is kind of lonely, since, as you point out, there is no way
> in PDD15 to *declare* a method (and not that vtable ISA method, either.)


Oops, missed that part.  Attached a patch to bring that in line with the
rest of the patch, and also to s/vtable function/vtable method/gi.  In
addition, a vtable method ISA method; it's just not returned by
'find_method'.

On a related note, :method is mentioned in docs/compiler_faq.pod &
> docs/imcc/calling_conventions.pod. If it's dead, it needs to be
> deprecated; if it's not, it should probably be mentioned in PDD15.


As far as I know, we still need :method, because it changes the arg
signature of the sub to get 'self' as the first argument.  If we were to
remove it, we could work around this and still get 'self' to work without it
being an argument, but then how would 'self' be defined if the sub is called
as a non-method, and uses 'self'?

-- 
Alek Storm

------=_Part_65289_6965907.1178678381711
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 5/9/07, <b class="gmail_sendername">Will Coleda</b> &lt;<a href="mailto:will@coleda.com" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">will@coleda.com</a>&gt; wrote:<div><span class="gmail_quote">
</span><br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">Looking at PDD15, I see this paragraph...<br> &gt; To override a vtable function, either add the :vtable pragma to the
<br> &gt; declaration of the method, or pass a named parameter &quot;vtable&quot; into<br>the<br> &gt; add_method method on a class or role.<br><br>... which is kind of lonely, since, as you point out, there is no way<br>

in PDD15 to *declare* a method (and not that vtable ISA method, either.)</blockquote><div><br>Oops, missed that part.&nbsp; Attached a patch to bring that in line with the rest of the patch, and also to s/vtable function/vtable method/gi.&nbsp; In addition, a vtable method ISA method; it&#39;s just not returned by &#39;find_method&#39;.
<br></div><br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">On a related note, :method is mentioned in docs/compiler_faq.pod &amp;
<br>docs/imcc/calling_conventions.pod. If it&#39;s dead, it needs to be<br>deprecated; if it&#39;s not, it should probably be mentioned in PDD15.</blockquote><div><br>As far as I know, we still need :method, because it changes the arg signature of the sub to get &#39;self&#39; as the first argument.&nbsp; If we were to remove it, we could work around this and still get &#39;self&#39; to work without it being an argument, but then how would &#39;self&#39; be defined if the sub is called as a non-method, and uses &#39;self&#39;?
<br></div></div><br>-- <br>Alek Storm

------=_Part_65289_6965907.1178678381711--

------=_Part_65288_12935451.1178678381710
Content-Type: application/octet-stream; name=pdd15_vtable.patch
Content-Transfer-Encoding: base64
X-Attachment-Id: f_f1gvtbxj
Content-Disposition: attachment; filename="pdd15_vtable.patch"

LS0tIGRvY3MvcGRkcy9wZGQxNV9vYmplY3RzLnBvZAkyMDA3LTA1LTA3IDE4OjI2OjI5LjAwMDAw
MDAwMCArMDAwMAorKysgZG9jcy9wZGRzL3BkZDE1X29iamVjdHMucG9kCTIwMDctMDUtMDggMjE6
Mjg6MzEuMDAwMDAwMDAwICswMDAwCkBAIC0xMzUsNyArMTM1LDcgQEAKIAogVGhlcmUgYXJlIGZv
dXIgcGllY2VzIHRvIHRoZSBvYmplY3QgaW1wbGVtZW50YXRpb24uIFRoZXJlIGFyZSB0aGUgUE1D
cyBmb3IgdGhlCiBjbGFzc2VzLCByb2xlcywgYW5kIG9iamVjdHMsIHRoZSBvcGNvZGVzIHRoZSBl
bmdpbmUgdXNlcyB0byBkbyBvYmplY3R5IHRoaW5ncywgdGhlCi1zcGVjaWZpYyB2dGFibGUgZnVu
Y3Rpb25zIHVzZWQgdG8gcGVyZm9ybSB0aG9zZSBvYmplY3R5IHRoaW5ncywgYW5kIHRoZQorc3Bl
Y2lmaWMgdnRhYmxlIG1ldGhvZHMgdXNlZCB0byBwZXJmb3JtIHRob3NlIG9iamVjdHkgdGhpbmdz
LCBhbmQgdGhlCiBzdXBwb3J0aW5nIGNvZGUgcHJvdmlkZWQgYnkgdGhlIGludGVycHJldGVyIGVu
Z2luZSB0byBkbyB0aGUgaGVhdnkgbGlmdGluZy4KIAogUGFycm90LCBpbiBnZW5lcmFsLCBkb2Vz
bid0IHJlc3RyaWN0IG9wZXJhdGlvbnMgb24gb2JqZWN0cyBhbmQgY2xhc3Nlcy4gSWYgYQpAQCAt
MzMxLDcgKzMzMSw3IEBACiBOb3RlIHRoYXQgZm9yIGxhbmd1YWdlcyB3aGljaCBzdXBwb3J0IGRl
ZmF1bHQgZmFsbGJhY2sgbWV0aG9kcywgc3VjaCBhcyBQZXJsCiA1J3MgQVVUT0xPQUQsIHRoaXMg
d291bGQgYmUgdGhlIHBsYWNlIHRvIHJldHVybiBpdCBpZiBhIG5vcm1hbCBsb29rdXAgZmFpbHMu
CiAKLVNpbmNlIHRoZSBtZXRob2QgbGlzdCBhbmQgdnRhYmxlIGZ1bmN0aW9uIGxpc3QgYXJlIHN0
b3JlZCBpbiB0aGUgY2xhc3MKK1NpbmNlIHRoZSBtZXRob2QgbGlzdCBhbmQgdnRhYmxlIG1ldGhv
ZCBsaXN0IGFyZSBzdG9yZWQgaW4gdGhlIGNsYXNzCiBQTUMsIG1ldGhvZCBmaW5kaW5nIGlzIGEg
bG9va3VwIG9uIHRoZSBjbGFzcyBvYmplY3QgYW5kIG5vdCBhIGxvb2t1cCBpbgogdGhlIG5hbWVz
cGFjZS4gKFRoaXMgY291bGQgYmUgaGFuZGxlZCBhdXRvbWF0aWNhbGx5IHdoZW5ldmVyIGEgY2xh
c3MgaXMKIGFzc29jaWF0ZWQgd2l0aCBhIG5hbWVzcGFjZS4pIEp1c3QgYWRkaW5nIGEgc3ViIHRv
IGEgbmFtZXNwYWNlIHdpbGwgbm90CkBAIC0zOTMsNyArMzkzLDcgQEAKIAogPWhlYWQzIENsYXNz
IE1ldGhvZHMKIAotVGhlc2UgbWV0aG9kcyBhcmUganVzdCBzeW50YWN0aWMgc3VnYXIgZm9yIHRo
ZSB2dGFibGUgZnVuY3Rpb25zLiBUaGV5IGFyZQorVGhlc2UgbWV0aG9kcyBhcmUganVzdCBzeW50
YWN0aWMgc3VnYXIgZm9yIHRoZSB2dGFibGUgbWV0aG9kcy4gVGhleSBhcmUKIG5vdCBpbmNsdWRl
ZCBpbiB0aGUgQ2xhc3MgUE1DIGJ5IGRlZmF1bHQsIGJ1dCBhZGRlZCB0byBDbGFzcyBhcyBhIHJv
bGUuCiAKID1vdmVyIDQKQEAgLTU3OSw3ICs1NzksNyBAQAogT2JqZWN0IFBNQ3MgaGF2ZSB0aGUg
IkkgYW0gYW4gb2JqZWN0IiBmbGFnIHNldCBvbiB0aGVtLgogCiBPYmplY3QgUE1DcyBoYXZlIG5v
IG1ldGhvZHMgYXNpZGUgZnJvbSB0aG9zZSBkZWZpbmVkIGluIHRoZWlyIGFzc29jaWF0ZWQKLWNs
YXNzLiBUaGV5IGRvIGhhdmUgdnRhYmxlIGZ1bmN0aW9ucyBwcm92aWRpbmcgYWNjZXNzIHRvIGNl
cnRhaW4gbG93LWxldmVsCitjbGFzcy4gVGhleSBkbyBoYXZlIHZ0YWJsZSBtZXRob2RzIHByb3Zp
ZGluZyBhY2Nlc3MgdG8gY2VydGFpbiBsb3ctbGV2ZWwKIGluZm9ybWF0aW9uIGFib3V0IHRoZSBv
YmplY3QsIG1ldGhvZCBjYWxsIGZ1bmN0aW9uYWxpdHksIGV0Yy4gU2VlIHRoZQogc2VjdGlvbnMg
YmVsb3cgb24gTDxPYmplY3RzPiBhbmQgTDxWdGFibGVzPi4KIApAQCAtNzU3LDcgKzc1Nyw3IEBA
CiAKID1oZWFkMyBSb2xlIE1ldGhvZHMKIAotVGhlc2UgbWV0aG9kcyBhcmUganVzdCBzeW50YWN0
aWMgc3VnYXIgZm9yIHRoZSB2dGFibGUgZnVuY3Rpb25zLiBUaGV5IGFyZQorVGhlc2UgbWV0aG9k
cyBhcmUganVzdCBzeW50YWN0aWMgc3VnYXIgZm9yIHRoZSB2dGFibGUgbWV0aG9kcy4gVGhleSBh
cmUKIG5vdCBpbmNsdWRlZCBpbiB0aGUgUm9sZSBQTUMgYnkgZGVmYXVsdCwgYnV0IGFkZGVkIHRv
IFJvbGUgYXMgYSByb2xlLgogCiA9b3ZlciA0CkBAIC04MjIsNyArODIyLDcgQEAKIHRoZSBtZXRo
b2Qgd2l0aCB0aGUgbmV3IG1ldGhvZCBhbmQgdGhyb3cgYSB3YXJuaW5nLgogCiBJdCBhbHNvIHRh
a2VzIHNsdXJweSBuYW1lZCBwYXJhbWV0ZXJzIHRvIGZsYWcgd2hldGhlciB0aGUgbWV0aG9kIGlz
IGEKLXZ0YWJsZSBmdW5jdGlvbiwgYW5kIHdoZXRoZXIgaXRzIGFub255bW91cyAobm8gbmFtZWQg
ZW50cnkgYXMgYSBtZXRob2QsCit2dGFibGUgbWV0aG9kLCBhbmQgd2hldGhlciBpdHMgYW5vbnlt
b3VzIChubyBuYW1lZCBlbnRyeSBhcyBhIG1ldGhvZCwKIG9ubHkgYXMgYSB2dGFibGUpLgogCiA9
aXRlbSBtZXRob2RzCkBAIC0xMDM5LDE2ICsxMDM5LDE1IEBACiAKID1oZWFkMiBWdGFibGUgT3Zl
cmxvYWRpbmcKIAotQ2xhc3NlcyBtYXkgb3ZlcnJpZGUgdGhlIHZ0YWJsZSBmdW5jdGlvbnMsIGFs
bG93aW5nIG9iamVjdHMgb2YgYSBjbGFzcyB0bworQ2xhc3NlcyBtYXkgb3ZlcnJpZGUgdGhlIHZ0
YWJsZSBtZXRob2QsIGFsbG93aW5nIG9iamVjdHMgb2YgYSBjbGFzcyB0bwogYmVoYXZlIGxpa2Ug
YSBwcmltaXRpdmUgUE1DLiBUbyB1c2UgdGhlc2UgcHJvcGVybHkgYXQgYSBsb3ctbGV2ZWwKIHJl
cXVpcmVzIGEgZ29vZCB3b3JraW5nIGtub3dsZWRnZSBvZiB0aGUgd2F5IFBhcnJvdCB3b3Jrcy0t
Z2VuZXJhbGx5IGZvcgogaGlnaGVyLWxldmVsIGxhbmd1YWdlcyB0aGUgbGFuZ3VhZ2UgY29tcGls
ZXIgb3IgcnVudGltZSB3aWxsIHByb3ZpZGUKIGVhc2llci10by11c2Ugd3JhcHBlcnMuIFRoZXNl
IG1ldGhvZHMgYXJlIGFsbCBwcm90b3R5cGVkLCBhbmQgdGFrZSBhCi1zaW5nbGUgZml4ZWQgYXJn
dW1lbnQgbGlzdCwgYW5kIHJldHVybiBhdCBtb3N0IGEgc2luZ2xlIHZhbHVlLgorc2luZ2xlIGZp
eGVkIGFyZ3VtZW50IGxpc3QsIGFuZCByZXR1cm4gYXQgbW9zdCBhIHNpbmdsZSB2YWx1ZSwgZXhj
ZXB0IGZvcgorQzxpbml0PiBhbmQgQzxpbnZva2U+IChzZWUgTDxDbGFzcyBQTUMgQVBJL0NsYXNz
IE1ldGhvZHMvPWl0ZW0gYWRkX3Z0YWJsZV9tZXRob2Q+LgogCi1UbyBvdmVycmlkZSBhIHZ0YWJs
ZSBmdW5jdGlvbiwgZWl0aGVyIGFkZCB0aGUgOnZ0YWJsZSBwcmFnbWEgdG8gdGhlCi1kZWNsYXJh
dGlvbiBvZiB0aGUgbWV0aG9kLCBvciBwYXNzIGEgbmFtZWQgcGFyYW1ldGVyICJ2dGFibGUiIGlu
dG8gdGhlCi1DPGFkZF9tZXRob2Q+IG1ldGhvZCBvbiBhIGNsYXNzIG9yIHJvbGUuCitUbyBvdmVy
cmlkZSBhIHZ0YWJsZSBtZXRob2QsIAogCiA9aGVhZDIgV2hhdCBUaGUgQnl0ZWNvZGUgU2Vlcwog
Cg==
------=_Part_65288_12935451.1178678381710--

