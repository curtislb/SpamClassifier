From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Sun Apr 29 17:38:19 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3TLcI6w005025
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 29 Apr 2007 17:38:18 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id A8EB2163910
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 29 Apr 2007 21:38:17 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.2 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 620)
	id 8DBAB162AC1; Sun, 29 Apr 2007 21:37:31 +0000 (GMT)
To: samba-cvs@samba.org
From: metze@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070429213731.8DBAB162AC1@lists.samba.org>
Date: Sun, 29 Apr 2007 21:37:31 +0000 (GMT)
Subject: svn commit: samba r22579 - in branches/SAMBA_4_0/source/torture:
	basic ldap local nbt raw rpc
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 13793
Lines: 392

Author: metze
Date: 2007-04-29 21:37:29 +0000 (Sun, 29 Apr 2007)
New Revision: 22579

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22579

Log:
disable progress printing in the build-farm

metze
Modified:
   branches/SAMBA_4_0/source/torture/basic/base.c
   branches/SAMBA_4_0/source/torture/basic/denytest.c
   branches/SAMBA_4_0/source/torture/basic/mangle_test.c
   branches/SAMBA_4_0/source/torture/basic/misc.c
   branches/SAMBA_4_0/source/torture/basic/utable.c
   branches/SAMBA_4_0/source/torture/ldap/cldapbench.c
   branches/SAMBA_4_0/source/torture/local/iconv.c
   branches/SAMBA_4_0/source/torture/nbt/query.c
   branches/SAMBA_4_0/source/torture/nbt/winsbench.c
   branches/SAMBA_4_0/source/torture/raw/composite.c
   branches/SAMBA_4_0/source/torture/raw/lockbench.c
   branches/SAMBA_4_0/source/torture/raw/openbench.c
   branches/SAMBA_4_0/source/torture/raw/oplock.c
   branches/SAMBA_4_0/source/torture/rpc/bench.c
   branches/SAMBA_4_0/source/torture/rpc/rpc.c


Changeset:
Modified: branches/SAMBA_4_0/source/torture/basic/base.c
===================================================================
--- branches/SAMBA_4_0/source/torture/basic/base.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/basic/base.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -567,7 +567,9 @@
 	{
 		size_t buf_size = ((uint_t)random()%(sizeof(buf)-1))+ 1;
 		if (i % 10 == 0) {
-			torture_comment(tctx, "%d\r", i); fflush(stdout);
+			if (torture_setting_bool(tctx, "progress", true)) {
+				torture_comment(tctx, "%d\r", i); fflush(stdout);
+			}
 		}
 
 		generate_random_buffer(buf, buf_size);

Modified: branches/SAMBA_4_0/source/torture/basic/denytest.c
===================================================================
--- branches/SAMBA_4_0/source/torture/basic/denytest.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/basic/denytest.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -1402,8 +1402,10 @@
 
 static void progress_bar(struct torture_context *tctx, uint_t i, uint_t total)
 {
-	torture_comment(tctx, "%5d/%5d\r", i, total);
-	fflush(stdout);
+	if (torture_setting_bool(tctx, "progress", true)) {
+		torture_comment(tctx, "%5d/%5d\r", i, total);
+		fflush(stdout);
+	}
 }
 
 /*

Modified: branches/SAMBA_4_0/source/torture/basic/mangle_test.c
===================================================================
--- branches/SAMBA_4_0/source/torture/basic/mangle_test.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/basic/mangle_test.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -184,8 +184,10 @@
 			break;
 		}
 		if (total && total % 100 == 0) {
-			printf("collisions %u/%u  - %.2f%%   (%u failures)\r",
-			       collisions, total, (100.0*collisions) / total, failures);
+			if (torture_setting_bool(torture, "progress", true)) {
+				printf("collisions %u/%u  - %.2f%%   (%u failures)\r",
+				       collisions, total, (100.0*collisions) / total, failures);
+			}
 		}
 	}
 

Modified: branches/SAMBA_4_0/source/torture/basic/misc.c
===================================================================
--- branches/SAMBA_4_0/source/torture/basic/misc.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/basic/misc.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -71,7 +71,10 @@
 	for (i=0;i<torture_numops;i++) {
 		uint_t n = (uint_t)random()%10;
 		if (i % 10 == 0) {
-			torture_comment(tctx, "%d\r", i); fflush(stdout);
+			if (torture_setting_bool(tctx, "progress", true)) {
+				torture_comment(tctx, "%d\r", i);
+				fflush(stdout);
+			}
 		}
 		asprintf(&fname, "\\torture.%u", n);
 
@@ -162,8 +165,10 @@
 			break;
 		}
 		num_pipes++;
-		torture_comment(tctx, "%d\r", num_pipes);
-		fflush(stdout);
+		if (torture_setting_bool(tctx, "progress", true)) {
+			torture_comment(tctx, "%d\r", num_pipes);
+			fflush(stdout);
+		}
 	}
 
 	torture_comment(tctx, "pipe_number test - we can open %d %s pipes.\n", num_pipes, pipe_name );
@@ -192,8 +197,10 @@
 		if (!torture_open_connection(&cli[i], i)) {
 			return False;
 		}
-		torture_comment(tctx, "opened %d connections\r", i);
-		fflush(stdout);
+		if (torture_setting_bool(tctx, "progress", true)) {
+			torture_comment(tctx, "opened %d connections\r", i);
+			fflush(stdout);
+		}
 	}
 
 	torture_comment(tctx, "\nStarting pings\n");
@@ -273,7 +280,10 @@
 			break;
 		}
 		free(fname);
-		torture_comment(tctx, "%6d\r", i);
+		if (torture_setting_bool(tctx, "progress", true)) {
+			torture_comment(tctx, "%6d\r", i);
+			fflush(stdout);
+		}
 	}
 	torture_comment(tctx, "%6d\n", i);
 	i--;
@@ -304,7 +314,10 @@
 		}
 		free(fname);
 
-		torture_comment(tctx, "%6d %6d\r", i, maxfid-i);
+		if (torture_setting_bool(tctx, "progress", true)) {
+			torture_comment(tctx, "%6d %6d\r", i, maxfid-i);
+			fflush(stdout);
+		}
 	}
 	torture_comment(tctx, "%6d\n", 0);
 

Modified: branches/SAMBA_4_0/source/torture/basic/utable.c
===================================================================
--- branches/SAMBA_4_0/source/torture/basic/utable.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/basic/utable.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -74,7 +74,10 @@
 		smbcli_unlink(cli->tree, fname);
 
 		if (c % 100 == 0) {
-			torture_comment(tctx, "%d (%d/%d)\r", c, chars_allowed, alt_allowed);
+			if (torture_setting_bool(tctx, "progress", true)) {
+				torture_comment(tctx, "%d (%d/%d)\r", c, chars_allowed, alt_allowed);
+				fflush(stdout);
+			}
 		}
 	}
 	torture_comment(tctx, "%d (%d/%d)\n", c, chars_allowed, alt_allowed);

Modified: branches/SAMBA_4_0/source/torture/ldap/cldapbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/ldap/cldapbench.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/ldap/cldapbench.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -76,9 +76,12 @@
 			req->async.fn = request_handler;
 			num_sent++;
 			if (num_sent % 50 == 0) {
-				printf("%.1f queries per second (%d failures)  \r", 
-				       state->pass_count / timeval_elapsed(&tv),
-				       state->fail_count);
+				if (lp_parm_bool(-1, "torture", "progress", true)) {
+					printf("%.1f queries per second (%d failures)  \r", 
+					       state->pass_count / timeval_elapsed(&tv),
+					       state->fail_count);
+					fflush(stdout);
+				}
 			}
 		}
 

Modified: branches/SAMBA_4_0/source/torture/local/iconv.c
===================================================================
--- branches/SAMBA_4_0/source/torture/local/iconv.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/local/iconv.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -315,6 +315,7 @@
 		if (codepoint % 1000 == 0) {
 			if (torture_setting_bool(tctx, "progress", True)) {
 				torture_comment(tctx, "codepoint=%u   \r", codepoint);
+				fflush(stdout);
 			}
 		}
 
@@ -335,6 +336,7 @@
 		if (i % 1000 == 0) {
 			if (torture_setting_bool(tctx, "progress", true)) {
 				torture_comment(tctx, "i=%u              \r", i);
+				fflush(stdout);
 			}
 		}
 

Modified: branches/SAMBA_4_0/source/torture/nbt/query.c
===================================================================
--- branches/SAMBA_4_0/source/torture/nbt/query.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/nbt/query.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -78,9 +78,12 @@
 			req->async.private = result;
 			num_sent++;
 			if (num_sent % 1000 == 0) {
-				torture_comment(tctx, "%.1f queries per second (%d failures)  \r", 
-				       result->num_pass / timeval_elapsed(&tv),
-				       result->num_fail);
+				if (torture_setting_bool(tctx, "progress", true)) {
+					torture_comment(tctx, "%.1f queries per second (%d failures)  \r", 
+					       result->num_pass / timeval_elapsed(&tv),
+					       result->num_fail);
+					fflush(stdout);
+				}
 			}
 		}
 

Modified: branches/SAMBA_4_0/source/torture/nbt/winsbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/nbt/winsbench.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/nbt/winsbench.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -254,9 +254,12 @@
 			generate_request(nbtsock, state, num_sent % state->num_names);
 			num_sent++;
 			if (num_sent % 50 == 0) {
-				torture_comment(tctx, "%.1f queries per second (%d failures)  \r", 
-				       state->pass_count / timeval_elapsed(&tv),
-				       state->fail_count);
+				if (torture_setting_bool(tctx, "progress", true)) {
+					torture_comment(tctx, "%.1f queries per second (%d failures)  \r", 
+					       state->pass_count / timeval_elapsed(&tv),
+					       state->fail_count);
+					fflush(stdout);
+				}
 			}
 		}
 

Modified: branches/SAMBA_4_0/source/torture/raw/composite.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/composite.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/raw/composite.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -87,8 +87,10 @@
 	printf("waiting for completion\n");
 	while (*count != num_ops) {
 		event_loop_once(cli->transport->socket->event.ctx);
-		printf("count=%d\r", *count);
-		fflush(stdout);
+		if (lp_parm_bool(-1, "torture", "progress", true)) {
+			printf("count=%d\r", *count);
+			fflush(stdout);
+		}
 	}
 	printf("count=%d\n", *count);
 	
@@ -175,8 +177,10 @@
 
 	while (*count != torture_numops) {
 		event_loop_once(event_ctx);
-		printf("count=%d\r", *count);
-		fflush(stdout);
+		if (lp_parm_bool(-1, "torture", "progress", true)) {
+			printf("count=%d\r", *count);
+			fflush(stdout);
+		}
 	}
 	printf("count=%d\n", *count);
 
@@ -293,8 +297,10 @@
 	printf("waiting for completion\n");
 	while (*count != num_ops) {
 		event_loop_once(event_ctx);
-		printf("count=%d\r", *count);
-		fflush(stdout);
+		if (lp_parm_bool(-1, "torture", "progress", true)) {
+			printf("count=%d\r", *count);
+			fflush(stdout);
+		}
 	}
 	printf("count=%d\n", *count);
 
@@ -358,8 +364,10 @@
 
 	while (*count < torture_numops) {
 		event_loop_once(event_ctx);
-		printf("count=%d\r", *count);
-		fflush(stdout);
+		if (lp_parm_bool(-1, "torture", "progress", true)) {
+			printf("count=%d\r", *count);
+			fflush(stdout);
+		}
 	}
 	printf("count=%d\n", *count);
 

Modified: branches/SAMBA_4_0/source/torture/raw/lockbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/lockbench.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/raw/lockbench.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -171,8 +171,11 @@
 		for (i=0;i<nprocs;i++) {
 			total += state[i].count;
 		}
-		printf("%.2f ops/second\r", total/timeval_elapsed(&tv));
-		fflush(stdout);
+
+		if (torture_setting_bool(torture, "progress", true)) {
+			printf("%.2f ops/second\r", total/timeval_elapsed(&tv));
+			fflush(stdout);
+		}
 	}
 
 	printf("%.2f ops/second\n", total/timeval_elapsed(&tv));

Modified: branches/SAMBA_4_0/source/torture/raw/openbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/openbench.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/raw/openbench.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -209,9 +209,11 @@
 
 		if (loops++ % 1000 != 0) continue;
 
-		printf("%.2f ops/second (%d retries)\r", 
-		       total/timeval_elapsed(&tv), open_retries);
-		fflush(stdout);
+		if (torture_setting_bool(torture, "progress", true)) {
+			printf("%.2f ops/second (%d retries)\r", 
+			       total/timeval_elapsed(&tv), open_retries);
+			fflush(stdout);
+		}
 	}
 
 	printf("%.2f ops/second (%d retries)\n", 

Modified: branches/SAMBA_4_0/source/torture/raw/oplock.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/oplock.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/raw/oplock.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -827,7 +827,10 @@
 			CHECK_STATUS(torture, status, NT_STATUS_OK);
 			count++;
 		}
-		torture_comment(torture, "%.2f ops/second\r", count/timeval_elapsed(&tv));
+
+		if (torture_setting_bool(torture, "progress", true)) {
+			torture_comment(torture, "%.2f ops/second\r", count/timeval_elapsed(&tv));
+		}
 	}
 
 	torture_comment(torture, "%.2f ops/second\n", count/timeval_elapsed(&tv));

Modified: branches/SAMBA_4_0/source/torture/rpc/bench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/rpc/bench.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/rpc/bench.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -82,8 +82,10 @@
 		talloc_free(tmp_ctx);
 		count++;
 		if (count % 50 == 0) {
-			printf("%.1f queries per second  \r", 
-			       count / timeval_elapsed(&tv));
+			if (lp_parm_bool(-1, "torture", "progress", true)) {
+				printf("%.1f queries per second  \r", 
+				       count / timeval_elapsed(&tv));
+			}
 		}
 	}
 

Modified: branches/SAMBA_4_0/source/torture/rpc/rpc.c
===================================================================
--- branches/SAMBA_4_0/source/torture/rpc/rpc.c	2007-04-29 21:37:24 UTC (rev 22578)
+++ branches/SAMBA_4_0/source/torture/rpc/rpc.c	2007-04-29 21:37:29 UTC (rev 22579)
@@ -175,6 +175,7 @@
 	torture_suite_add_suite(suite, torture_rpc_atsvc());
 	torture_suite_add_suite(suite, torture_rpc_wkssvc());
 	torture_suite_add_suite(suite, torture_rpc_handles());
+//	torture_suite_add_suite(suite, torture_rpc_disconnect());
 	torture_suite_add_simple_test(suite, "SPOOLSS", torture_rpc_spoolss);
 	torture_suite_add_simple_test(suite, "SAMR", torture_rpc_samr);
 	torture_suite_add_simple_test(suite, "SAMR-USERS", torture_rpc_samr_users);

