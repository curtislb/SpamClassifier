From perl6-all-return-81104-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May  4 02:45:07 2007
Return-Path: <perl6-all-return-81104-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l446j5qD012194
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 4 May 2007 02:45:05 -0400
Received: (qmail 11272 invoked by uid 514); 4 May 2007 06:45:04 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 11267 invoked from network); 4 May 2007 06:45:04 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
X-Virus-Scanned: by both ClamAV and Kaspersky at http://aliencamel.com/
Message-ID: <463AD61C.4040608@perl.org>
Date: Thu, 03 May 2007 23:43:40 -0700
From: Allison Randal <allison@perl.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: chromatic <chromatic@wgz.org>
CC: perl6-internals@perl.org
Subject: Re: [perl #42864] [BUG] Copying a :vtable sub also copies :vtable
 information
References: <RT-Ticket-42864@perl.org> <198c87380705032213s63040885tdffb0809dfb91325@mail.gmail.com> <463AC1EC.8090408@perl.org> <200705032250.37409.chromatic@wgz.org>
In-Reply-To: <200705032250.37409.chromatic@wgz.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

chromatic wrote:
> 
> Suppose I extend a built-in PMC through PIR code.  If certain vtable methods 
> can share the same implementation, it would be nice to be able to re-use a 
> single implementation through some mechanism other than copy and paste.

Yeah, through composition or inheritance. Manually stuffing a code PMC 
into a class won't give you conflict checking, and won't set up the 
necessary lookup tables for a method/vtable.

If you really want to pretend you're working with GLOBs, though, you can 
introspect into the source class to retrieve the method/vtable code 
object, and call add_method on the destination class to have it store 
the retrieved code object.

Allison

