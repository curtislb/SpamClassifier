From perl6-all-return-81099-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May  4 01:36:04 2007
Return-Path: <perl6-all-return-81099-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l445a2qD011594
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 4 May 2007 01:36:02 -0400
Received: (qmail 24850 invoked by uid 514); 4 May 2007 05:35:58 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 24845 invoked from network); 4 May 2007 05:35:58 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DKIM_SIGNED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of parrotcode@gmail.com designates 64.233.162.235 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
        b=aoo0rcfuLKfUOZR1BYoShoSpgdCyJ/rAk+83LpnoSMANNu6ux+hapqr4nWZgLvChyAfZSrw3Ufe1ba2ICiG3AkqlghOHe/d873x2lleN0stdG18t9tuvQ9kI4NBsWHZc3FWb+arYvdyQRJhShbQleiHdkb97/fi0zUo78uVuFKU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type;
        b=dU3k22xfyIp9CvZPjyQtOZTb3L+nu5qibaVaOsedBXKF1sPogdA83AdgTu21Y2N5ZqhjiZAkZMnPQaI+VoNvtCE9W0d4O9MS2d0RyTHGhOGBDMzuN6BhMKXITvRROB4EPdZ/ERWF6w5iESxtXMJ8aHvnIJHBJJtJ6lK8dkshZxM=
Message-ID: <7b0e52b40705032235q20a0cce9pdd5c80cc6d08e2f4@mail.gmail.com>
Date: Fri, 4 May 2007 13:35:35 +0800
From: "Klaas-Jan Stol" <parrotcode@gmail.com>
To: perl6-internals@perl.org
Subject: PIR syntax methods ambiguity
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_42399_13131363.1178256935543"
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS

------=_Part_42399_13131363.1178256935543
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

hi,
IIRC (currently no pc around to check, but I realized this issue when
reading on objects pdd), calling a method in PIR can be done as follows:

$P0.'someMethod'()

but also:

.local string meth  /* or maybe a pmc ?*/
meth = 'someMethod'
$P0.meth()

However, this looks like as if the object in $P0 has a method called 'meth',
just as a class object has methods like 'inspect', and 'roles'. This is imho
a bit unfortunate, it makes this syntax a bit ambiguous.
It gets tricky if you have some variable that goes by the same name, like
'inspect', or 'roles'.

So, I would suggest to disallow arbitrary objects holding methods for this
syntax; only allow for strings as method names, or barenames if they are
known to be methods on the PMC.

kjs

------=_Part_42399_13131363.1178256935543--

