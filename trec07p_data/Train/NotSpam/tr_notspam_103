From r-help-bounces@stat.math.ethz.ch  Mon Apr  9 06:53:14 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l39ArD0I012926
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 9 Apr 2007 06:53:14 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l39ApjHi011174;
	Mon, 9 Apr 2007 12:51:54 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=5.0 tests=AWL, BAYES_50, FUZZY_REFINANCE,
	HTML_60_70, HTML_MESSAGE autolearn=no version=3.1.8
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.241])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l39Ahijw008886
	for <r-help@stat.math.ethz.ch>; Mon, 9 Apr 2007 12:43:45 +0200
Received: by an-out-0708.google.com with SMTP id c24so1593382ana
	for <r-help@stat.math.ethz.ch>; Mon, 09 Apr 2007 03:43:44 -0700 (PDT)
Received: by 10.100.165.9 with SMTP id n9mr3818155ane.1176115424098;
	Mon, 09 Apr 2007 03:43:44 -0700 (PDT)
Received: by 10.100.138.15 with HTTP; Mon, 9 Apr 2007 03:43:43 -0700 (PDT)
Message-ID: <af8b65e10704090343u4540b851o3c780f62f833f7ef@mail.gmail.com>
Date: Mon, 9 Apr 2007 18:43:43 +0800
From: Shao <xshining@gmail.com>
To: r-help <r-help@stat.math.ethz.ch>
In-Reply-To: <OF0D5684C0.96BB9571-ON652572B8.0034AEFE-652572B8.0035514B@ccilindia.co.in>
MIME-Version: 1.0
References: <af8b65e10704090202o6eae29c7t9676f5a366c02cba@mail.gmail.com>
	<OF0D5684C0.96BB9571-ON652572B8.0034AEFE-652572B8.0035514B@ccilindia.co.in>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Content-Disposition: inline
Subject: Re: [R] How to solve differential and integral equation using R?
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 13174
Lines: 283

Thanks,
I have much to learn~~~

Shao chunxuan






On 4/9/07, gyadav@ccilindia.co.in <gyadav@ccilindia.co.in> wrote:
>
>
> i think 'odesolve' and MASS package may help you..... rest is below
> >help.search("differential")
> >help.search("integration")
> HTH
>
>
> >help.search("differential")
> Help files with alias or concept or title matching 'differential' using
> fuzzy matching:
>
> distfacmap(adehabitat)           Compute distances to the different levels
> of a factor map
> Citrus(BSDA)                     Percent of peak bone density of different
> aged children
> Clean(BSDA)                      Residual contaminant following the use of
> three different
>                                  cleansing agents
> Fabric(BSDA)                     Measures of softness of 10 different
> clothing garments washed
>                                  with and without a softener
> Differential Equation System
> pda.fd(fda)                      Principal Differential Analysis
> summary.Lfd(fda)                 Summarize a Linear Differential Operator
> Object
> vec2Lfd(fda)                     Make a Linear Differential Operator
> Object from a Vector
> cellular(forward)                Cellular differentiation data
> diffseries(fracdiff)             Fractionally Differenciate Data
> test.between(hierfstat)          Tests the significance of the effect of
> test.lev on genetic
>                                  differentiation
> test.between.within(hierfstat)   Tests the significance of the effect of
> test.lev on genetic
>                                  differentiation
> test. g(hierfstat)                Tests the significance of the effect of
> level on genetic
>                                  differentiation
> test.within(hierfstat)           Tests the significance of the effect of
> inner.level on genetic
>                                  differentiation within blocks defined by
> outer.level
> poster.plot(IDPmisc)             Convenient xyplot with Differently
> Colored Margin and Plot Region
> ebayes(limma)                    Empirical Bayes Statistics for
> Differential Expression
> nlmeODE(nlmeODE)                 Non-linear mixed-effects modelling in
> nlme using differential
>                                  equations
> Dmean(nlreg)                     Differentiate the Mean Function of a
> Nonlinear Model
> Dvar(nlreg)                      Differentiate the Variance Function of a
> Nonlinear Model
> lsoda(odesolve)                  Solve System of ODE (ordinary
> differential equation)s.
> rk4(odesolve)                    Solve System of ODE (ordinary
> differential equation)s by
>                                  classical Runge-Kutta 4th order
> integration.
> deriv.polynomial(polynom)        Differentiate a Polynomial
> sde.sim(sde)                     Simulation of Stochastic Differential
> Equation
> crossdist.psp(spatstat)          Pairwise distances between two different
> line segment patterns
> compare.method(varmixt)          Compare the different analysis methods
> fdr.compare.method(varmixt)      Comparison of the different analysis
> methods
>
>
> >help.search("integration")
>
> Help files with alias or concept or title matching 'integration' using
> fuzzy matching:
>
> interaction(base)                Compute Factor Interactions
> plot.bim.mcmc(bim)               Bayesian MCMC sequence plots for burnin
> and iterations.
> plot.nDesign(binGroup)           Plot iteration of nDesign
> boa.getiter(boa)                 Extract Iterations
> boa.iter(boa)                    Extract Iteration Numbers
> boa.sortiter(boa)                Sort by Iteration Numbers
> sintegral(Bolstad)               Numerical integration using Simpson's
> Rule
> modelIteration(BRugs)            Returns number of iterations
> modelSetSeed(BRugs)              Seed of Random Number Generator
> modelSetAP(BRugs)                Changing settings of updating algorithms
> modelUpdate(BRugs)               Updating the model
> samplesSample(BRugs)             Stored values
> samplesStats(BRugs)              Calculate summary statistics
> Angell(car)                      Moral Integration of American Cities
> trapz(caTools)                   Trapezoid Rule Numerical Integration
> E(distrEx)                       Generic Function for the Computation of
> (Conditional)
>                                  Expectations
> GLIntegrate(distrEx)             Gauss-Legendre Quadrature
> distrExIntegrate(distrEx)        Integration of One-Dimensional Functions
> distrExOptions(distrEx)          Function to change the global variables
> of the package 'distrEx'
> Mofa(Ecdat)                      International Expansion of U.S. Mofa's
> (majority-owned Foreign
>                                  Affiliates in Fire (finance, Insurance
> and Real Estate)
> myintegrate(elliptic)            Complex integration
> newton.rapheson(elliptic)        Newton Rapheson iteration to find roots
> of equations
> ilspline(fame)                   Linear Spline Integration
> strongx(faraway)                 Strong interaction experiment data
> itnumber(fpc)                    Number of regression fixed point cluster
> iterations
> cvLoss(gbev)                     Cross-validation of boosting iteration.
> plotLoss(gbev)                   Plot loss function versus iteration.
> ConvertMedUnits(gdata)           Convert medical measurements between
> International Standard (SI)
>                                  and US 'Conventional' Units.
> MedUnits(gdata)                  Table of conversions between Intertional
> Standard (SI) and US
>                                  'Conventional' Units for common medical
> measurements.
> scan.glm.2D(GenABEL)             Scans regional data allowing for
> gene-gene interaction using glm
> MultHomog(gnm)                   Specify a Multiplicative Interaction with
> Homogeneous Effects in
>                                  a gnm Model Formula
> Symm(gnm)                        Symmetric Interaction of Factors
> Topo(gnm)                        Topological Interaction of Factors
> interaction.positioned(HH)       interaction method for positioned
> factors.
> interaction2wt(HH)               Plot all main effects and twoway
> interactions in a multifactor
>                                  design
> intxplot(HH)                     Interaction plot, with an option to print
> standard error bars.
> panel.interaction2wt(HH)         Plot all main effects and twoway
> interactions in a multifactor
>                                  design
> ciapower(Hmisc)                  Power of Interaction Test for Exponential
> Survival
> safeIntegrate(HyperbolicDist)    Safe Integration of One-Dimensional
> Functions
> interaction.indices(kappalab)    The Shapley interaction indices
> area(MASS)                       Adaptive Numerical Integration
> intr.plot.2d(MBESS)              Plotting Conditional Regression Lines
> with Interactions in Two
>                                  Dimensions
> intr.plot(MBESS)                 Regression Surface Containing Interaction
> sigma.mle(merror)                Computes the ith iteration for computing
> the squared imprecision
>                                  estimates.
> gam.outer(mgcv)                  Minimize GCV or UBRE score of a GAM using
> 'outer' iteration
> mice.mids(mice)                  Multivariate Imputation by Chained
> Equations (Iteration Step)
> nthOrderModel(mimR)              Create generating class with nth order
> interactions for
>                                  log-linear model
> mc.irf(MSBVAR)                   Monte Carlo Integration / Simulation of
> Impulse Response
>                                  Functions
> gqz(npmlreg)                     Gauss-Hermite integration points
> rk4(odesolve)                    Solve System of ODE (ordinary
> differential equation)s by
>                                  classical Runge-Kutta 4th order
> integration.
> odfInsertPlot(odfWeave)          Write XML for image inseration
> qb.epistasis(qtlbim)             Density Plots for Models Showing
> Epistasis and GxE Interactions.
> Interaction2wtRcmdr(Rcmdr.HH)    Rcmdr menu interface to interaction2wt
> interaction2wt(Rcmdr.HH)         Plot all main effects and twoway
> interactions in a multifactor
>                                  design
> panel.interaction2wt(Rcmdr.HH)   Plot all main effects and twoway
> interactions in a multifactor
>                                  design
> imode(rggobi)                    Interaction mode
> pmodes(rggobi)                   List available projection/interaction
> modes
> gdk-Cairo-Interaction(RGtk2)     Cairo Interaction
> gdk-Pango-Interaction(RGtk2)     Pango Interaction
> gtkMainIteration(RGtk2)          gtkMainIteration
> gtkMainIterationDo(RGtk2)        gtkMainIterationDo
> quadIntegr(rjacobi)              Quadrature Integration
> mfit(Rlab)                       Computes main and interaction fitted
> effects
> telef(robustbase)                Number of International Calls from
> Belgium
> telef(rrcov)                     Number of International Calls from
> Belgium
> SIMS(SASmixed)                   Second International Mathematics Study
> data
> graphinter(SensoMineR)           Graphical display of the interaction
> between two qualitative
>                                  variables
> interact(SensoMineR)             Estimation of interaction coefficients
> E2.4(SenSrivastava)              International Car Ownership Data
> integrate.xy(sfsmisc)            Cheap Numerical Integration through Data
> points.
> rotate(shapes)                   Internal function(s)
> euler(simecol)                   Euler Integration
> iteration(simecol)               Discrete Simulation
> rk4(simecol)                     Runge-Kutta 4th order integration
> SNPassoc-internal(SNPassoc)      Internal SNPstat functions
> haplo.interaction(SNPassoc)      Haplotype interaction with a covariate
> int(SNPassoc)                    Identify interaction term
> interactionPval(SNPassoc)        Two-dimensional SNP analysis for
> association studies
> Ord(spatstat)                    Generic Ord Interaction model
> OrdThresh(spatstat)              Ord's Interaction model
> PairPiece(spatstat)              The Piecewise Constant Pairwise
> Interaction Point Process Model
> Pairwise(spatstat)               Generic Pairwise Interaction model
> Saturated(spatstat)              Saturated Pairwise Interaction model
> affinexy(spatstat)               Internal spatstat functions
> ord.family(spatstat)             Ord Interaction Process Family
> pairsat.family(spatstat)         Saturated Pairwise Interaction Point
> Process Family
> pairwise.family(spatstat)        Pairwise Interaction Process Family
> reach(spatstat)                  Interaction Distance of a Point Process
> diffinv(stats)                   Discrete Integration: Inverse of
> Differencing
> integrate(stats)                 Integration of One-Dimensional Functions
> interaction.plot(stats)          Two-way Interaction Plot
> nls.control(stats)               Control the Iterations in nls
> po.test(tseries)                 Phillips-Ouliaris Cointegration Test
> alphaols(urca)                   OLS regression of VECM weighting matrix
> ca.po(urca)                      Phillips & Ouliaris Cointegration Test
> cajolst(urca)                    Testing Cointegrating Rank with Level
> Shift at Unknown time
> cajools(urca)                    OLS regression of VECM
> menu(utils)                      Menu Interaction Function
> humpfit(vegan)                   No-interaction Model for Hump-backed
> Species Richness vs. Biomass
> dpss.taper(waveslim)             Calculating Thomson's Spectral
> Multitapers by Inverse Iteration
>
>
>
> Type 'help(FOO, package = PKG)' to inspect entry 'FOO(PKG) TITLE'.
>
>
> -gaurav
> ============================================================================================
> DISCLAIMER AND CONFIDENTIALITY CAUTION:
>
> This message and any attachments with it (the "message") are confidential
> and intended
> solely for the addressees. Unauthorized reading, copying, dissemination,
> distribution or
> disclosure either whole or partial, is prohibited. If you receive this
> message in error,
> please delete it and immediately notify the sender. Communicating through
> email is not
> secure and capable of interception, corruption and delays. Anyone
> communicating with The
> Clearing Corporation of India Limited (CCIL) by email accepts the risks
> involved and their
> consequences. The internet can not guarantee the integrity of this
> message. CCIL shall
> (will) not therefore be liable for the message if modified. The recipient
> should check this
> email and any attachments for the presence of viruses. CCIL accepts no
> liability for any
> damage caused by any virus transmitted by this email.
>

	[[alternative HTML version deleted]]

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

