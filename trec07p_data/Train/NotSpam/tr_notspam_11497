From perl6-all-return-81461-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 17 22:01:08 2007
Return-Path: <perl6-all-return-81461-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4I217qD007233
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 22:01:07 -0400
Received: (qmail 31519 invoked by uid 514); 18 May 2007 02:01:03 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 31513 invoked from network); 18 May 2007 02:01:03 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: perl6-internals@perl.org
Subject: Re: [perl #42974] [BUG] Hungry Alligator Eats Integer; Developer Registers Complaint
Date: Thu, 17 May 2007 18:59:58 -0700
User-Agent: KMail/1.9.6
Cc: "Mehmet Yavuz Selim Soyturk" <mehmet.yavuz.selim@gmail.com>
References: <RT-Ticket-42974@perl.org> <1abd9eb20705162115x5de8ace2m8ec1cdc05f28dcfe@mail.gmail.com> <200705171830.09017.chromatic@wgz.org>
In-Reply-To: <200705171830.09017.chromatic@wgz.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Disposition: inline
Message-Id: <200705171859.58269.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=1.4 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,RCVD_IN_CBL,SPF_PASS
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l4I217qD007233

On Thursday 17 May 2007 18:30:08 chromatic wrote:

> Sort of, but it also breaks test #15 in t/pmc/class.t.  That's not your
> fault though; the code fails to take into account role composition into
> roles.  I keep trying to fix it, but it gets a lot more complex than I
> thought.
>
> I suspect what needs to happen is that Class#does() ought to loop through
> all of the roles composed into the class, check if their names match the
> given name, then call does() on each of them in turn.

That was the trick.  I just fixed it in r18582.

Thanks for tracking it down!

-- c

