From beginners-return-92752-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 25 11:32:11 2007
Return-Path: <beginners-return-92752-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5PFW9L9030437
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 25 Jun 2007 11:32:09 -0400
Received: (qmail 10865 invoked by uid 514); 25 Jun 2007 15:32:00 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 10856 invoked from network); 25 Jun 2007 15:32:00 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Jun 2007 15:32:00 -0000
Received: (qmail 14612 invoked by uid 225); 25 Jun 2007 15:31:58 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14596 invoked by alias); 25 Jun 2007 15:31:56 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 66.249.82.239 as permitted sender)
Received: from wx-out-0506.google.com (HELO wx-out-0506.google.com) (66.249.82.239)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 25 Jun 2007 08:31:53 -0700
Received: by wx-out-0506.google.com with SMTP id r21so1579745wxc
        for <beginners@perl.org>; Mon, 25 Jun 2007 08:31:49 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=c/7TijiumEXZfv0gRmnsjvv2itglrkcYK+H9kyZj2POaQICeQCyVc0aUT8UAOTNRtCLycKggYOe6lm+Fc2+YDb+1FMWuLabv4+3jhgigW7gR9X4traL1pyVY9D8QxcddO0TlZ7LSLnGsGB2N/u3cUmHYwTS6KXL18M0FKs+f59Y=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=d6lcjZG4+ocAvBJRhmlCTiPw87EhGq0cR2O2px2Ec4DzJWYnnEuYfXXACOak+HH3OQDJGjcrDXNHYkBFLtJ9aQKIvdSsjxOW8jRkFyGQlPBzaG3gRbAtFCc2kUFjFBgjxGzphAwlmQuqdC9oHM4SfVj2+Ad+YNSVNxT/E0YXg/Q=
Received: by 10.90.79.6 with SMTP id c6mr4277759agb.1182785509361;
        Mon, 25 Jun 2007 08:31:49 -0700 (PDT)
Received: by 10.90.116.9 with HTTP; Mon, 25 Jun 2007 08:31:49 -0700 (PDT)
Message-ID: <31086b240706250831p5e38db42g286d2f3bc3a6fab2@mail.gmail.com>
Date: Mon, 25 Jun 2007 08:31:49 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Mihir Kamdar" <kamdarmihir06@gmail.com>
Subject: Re: Help parsing a CSV file
Cc: beginners@perl.org
In-Reply-To: <15a372ce0706250659o16179d44r84084d453f4d7667@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <15a372ce0706240730y70e65894pc545a2f68c61a3c@mail.gmail.com>
	 <31086b240706240854i29ecdaf7ke3b8c4939ee0c4b2@mail.gmail.com>
	 <15a372ce0706250659o16179d44r84084d453f4d7667@mail.gmail.com>
X-Google-Sender-Auth: b567c8cbcaf9a7be

On 6/25/07, Mihir Kamdar <kamdarmihir06@gmail.com> wrote:

> if (2 != ($#ARGV+1)) {

That works, but it's usually written more like this:

    if (@ARGV != 2) {

> open INFILE,  "<$ARGV[0]" || die "unable to open INFILE";
> open OUTFILE, ">$ARGV[1]" || die "unable to open OUTFILE";

These don't do what they look like. The vertical-bar-or operator is
high precedence, so the string sticks too tightly to the die, and so
the open will never die. Either put parentheses around the part to the
left of the vertical-bar-or operator, or change to the low-precedence
word 'or' operator. See the precedence chart in the perlop manpage.

> It converts the fields in my input file like 097611/4 to
> 097611
> 097612
> 097613
> 097614
>
> But there are some of the fields like 09778/0, which should be converted to
> 09778
> 09779
> 09770

So the 0 is a special case. Is that last one supposed to be 09770 or 09780?

You can check for 0 and handle it separately. If $end isn't 0, you get
what you need from ($start..$end) . If it is 0, your list of suffixes
would be ($start..9, 0) instead. If you need 09780, you might need to
go with something like this:

  my $range;
  if ($end) {
    @range = "$stub$start".."$stub$end";
  } else {
    my $stub1 = $stub;
    $stub1++; # magical autoincrement
    @range = "$stub$start".."$stub1$end";
  }

Good luck with it!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


