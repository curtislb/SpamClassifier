From r-help-bounces@stat.math.ethz.ch  Sun Apr 15 23:25:31 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3G3PU0I000580
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 15 Apr 2007 23:25:30 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3G3Nuhe012909;
	Mon, 16 Apr 2007 05:24:20 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=AWL,
	BAYES_99 autolearn=no version=3.1.8
Received: from web61313.mail.yahoo.com (web61313.mail.yahoo.com
	[209.73.179.82])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with SMTP id l3G3NarN012760
	for <r-help@stat.math.ethz.ch>; Mon, 16 Apr 2007 05:23:36 +0200
Received: (qmail 66164 invoked by uid 60001); 16 Apr 2007 03:23:35 -0000
X-YMail-OSG: TxGDZ7EVM1nt.n3cBv0TUv_7b6Jwi3eXUw6SGyqaisU8Zk73i8TTeHAy0vYF86S9TgLOquy88l1U.ItezD.dO0CRbImWG3w8IRzxvSJWwvfRzWDdggMa52uHs6SuWVU-
Received: from [211.31.23.58] by web61313.mail.yahoo.com via HTTP;
	Sun, 15 Apr 2007 20:23:34 PDT
X-Mailer: YahooMailRC/478 YahooMailWebService/0.7.41.10
Date: Sun, 15 Apr 2007 20:23:34 -0700 (PDT)
From: charles loboz <charles_loboz@yahoo.com>
To: r-help@stat.math.ethz.ch, r-help@stat.math.ethz.ch
MIME-Version: 1.0
Message-ID: <924137.65844.qm@web61313.mail.yahoo.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: Re: [R] Reasons to Use R (no memory limitations :-))
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 3015
Lines: 26

This thread discussed R memory limitations, compared handling with S and SAS. Since I routinely use R to process multi-gigababyte sets on computers with sometimes 256mb of memory - here are some comments on that. 

Most memory limitations vanish if R is used with any relational database. [My personal preference is SQLite (RSQLite packaga)  because of speed and no-admin (used in embedded mode)]. The comments below apply to any relational database, unless otherwise stated.

Most people appear to think about database tables as dataframes - that is to store and load the _whole_ dataframe in one go - probably because appropriate function names are suggesting this approach. Also, it is a natural mapping. This is convenient if the data set can fit fully in memory - but limits the size of the data set the same way as without using the database.

However, using SQL language directly one can expand the size of the data set R is capable of operating on - we just have to stop treating database tables as 'atomic'. For example, assume we have a set of several million patients and want to analyze some specific subset - the following SQL statement 
  SELECT * FROM patients WHERE gender='M" AND AGE BETWEEN 30 AND 35
will result in bringing to R much smaller dataframe than selection of the whole table. [Also, such subset selection may take _less_time_ then selecting from the total dataframe - assuming the table is properly indexed]. 
Also, direct SQL statements can be used to pre-compute some characteristics internally in the database and bring only the summudles to R:
 SELECT AVG(age) FROM patients GROUP BY gender
will bring a data frame of two rows only.

Admittedly, if the data set is really large and we cannot operate on its subsets, the above does not help. Though I do not believe that this would the the majority of the situations. 

Naturally, going for a 64bit system with enough memory will solve some problems without using the database -  but not all of them. Relational databases can be very efficient at selecting subsets as they do not have to do linear scans [when the tables are indexed] - while R has to do a linear scan every time(??? I did not look up the source code of R - please correct me if I am wrong). Two other areas where a database is better than R, especially for large data sets:
 - verification of data correctness for individual points [a frequent problem with large data sets]
 - combining data from several different types of tables into one dataframe

In summary: using SQL from R allows to process extremely large data sets in a limited memory, sometimes even faster then if we had a large memory and kept our data set fully in it. Relational database perfectly complements R capabilities.

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

