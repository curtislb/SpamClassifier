From beginners-return-92709-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 23 22:03:38 2007
Return-Path: <beginners-return-92709-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5O23bL9026283
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 23 Jun 2007 22:03:37 -0400
Received: (qmail 4768 invoked by uid 514); 24 Jun 2007 02:03:29 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 4759 invoked from network); 24 Jun 2007 02:03:29 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 24 Jun 2007 02:03:29 -0000
Received: (qmail 28124 invoked by uid 225); 24 Jun 2007 02:03:28 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28115 invoked by alias); 24 Jun 2007 02:03:27 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of vahid.moghaddasi@gmail.com designates 64.233.166.181 as permitted sender)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.181)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 23 Jun 2007 19:03:25 -0700
Received: by py-out-1112.google.com with SMTP id a25so987396pyi
        for <beginners@perl.org>; Sat, 23 Jun 2007 19:03:20 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=FsSouClsu3eB0hX6MjOLFRP4L65hCzYfNLhDCnY1UtpKTpZ9HZ1VHkAzZrIjCGQm5KbgyFRsEAEQwEV0jA2a6dNP1TgR3b1oSCc6kFE/DWxFspUrrr//oK2Figi3s6tq5tEde/hnU+AKPgNR11W7WlCcpUbC8+5LLrPf0UZBhQY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=BB68Zd80mvmpNOckILRPH6K0Pw4fncTl2Bvnqcg5fYYv7HLahA6mMQTViPGR+FyQet2NBN6aTIeFsIX88Y4ZgULTto4CNCldeBcsSzNNbAnx7yH/A2xjVzW8mfqm1ap7Y4PZi+hFG923oIIiJj6ZgWRKUHsjNANklYKfjVGC/rk=
Received: by 10.65.107.10 with SMTP id j10mr7592639qbm.1182650599836;
        Sat, 23 Jun 2007 19:03:19 -0700 (PDT)
Received: by 10.65.252.9 with HTTP; Sat, 23 Jun 2007 19:03:19 -0700 (PDT)
Message-ID: <a3bd4fe00706231903k6cd592e3t9bbffaecd15c5996@mail.gmail.com>
Date: Sat, 23 Jun 2007 22:03:19 -0400
From: "Vahid Moghaddasi" <vahid.moghaddasi@gmail.com>
To: beginners@perl.org
Subject: grep from one file and write to another
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi all,
I am trying to read a colon delimited text file (filter.in) then
search for each field in another file (/etc/passwd) and if it is found
then write that line in the third file (passwd.out). Here is what I
have written so far but it is not given me the correct result. Thanks
for any help.


#!/bin/perl
#
# the format of filter.in is user1:user2:user3:user4:
#
use File::Copy;
use strict;
use warnings;
$|=1;           # flush output buffer
open (FILTERfh, "< filter.in") || die "Can not open filter.in: $!\n";
open PASSWDfh, '</etc/passwd' or die "Can not open the file: $!\n";
open PASSWDFILfh, ">passwd.out";
while (<FILTERfh>) {
chomp;
my @input = split /:/, $_;
    for (my $user = 1; $user <= $#input ; $user++) {
        print "$input[$user] is being added.\n";
        while (<PASSWDfh>) {
                my %seen;
                next if (m/^#/);        # Skip comments
                next if (m/^\s*$/);     # Skip blank lines
                my ($field1) = /([^:]+)/;
#      print PASSWDFILfh $_ unless $seen{$field1} or warn
#      "WARNING: User $input[$user] does not exist!\n";
      print PASSWDFILfh $_ unless $input[$user] or warn
      "WARNING: User $input[$user] does not exist!\n";
# print PASSWDFILfh $_ if("$field1" eq "$input[$user]");
#        print PASSWDFILfh $_ if( grep(/$field1:/, $_ )) or warn
"WARNING: User $input[$user] does not exist!\n";
     } # while
} # for
} # while
close FILTERfh;
close PASSWDFILfh;
close PASSWDfh;

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


