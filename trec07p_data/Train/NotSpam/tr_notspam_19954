From perl6-all-return-82028-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun 17 05:58:56 2007
Return-Path: <perl6-all-return-82028-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5H9wtL9005747
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 17 Jun 2007 05:58:56 -0400
Received: (qmail 22733 invoked by uid 514); 17 Jun 2007 09:58:42 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 22590 invoked from network); 17 Jun 2007 09:58:41 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Sun, 17 Jun 2007 11:58:02 +0200
From: Mark Overmeer <mark@overmeer.net>
To: perl6-language@perl.org
Subject: Re: [svn:perl6-synopsis] r14421 - doc/trunk/design/syn
Message-ID: <20070617095802.GA10498@earth.overmeer.net>
Mail-Followup-To: perl6-language@perl.org
References: <20070613205525.7ECA0CB9B8@x12.develooper.com> <ef30550b0706131429o34838a6es6704e8ec73851b49@mail.gmail.com> <467073C4.6020708@conway.org> <20070614082341.GU31918@earth.overmeer.net> <832f158a0706141717j7accfb36w92bf3a2ed7a8e115@mail.gmail.com> <20070615075949.GR31918@earth.overmeer.net> <20070616090944.GG6900@stripey.com> <20070616103358.GB10601@earth.overmeer.net> <20070616201521.GA1199@pobox.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20070616201521.GA1199@pobox.com>
Organization: MARKOV Solutions
User-Agent: Mutt/1.5.9i
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

* Jonathan Scott Duff (duff@pobox.com) [070616 20:15]:
> You mention OOP.  For Perl 5 we have a standard, if very general,
> syntax and "open" semantics that have allowed people to implement OOP
> in a variety of ways.  This was all well and good for a while until we
> realized that there should be some more reasonable defaults (in both
> syntax and semantics) for common operations in OOP.

OOP in Perl5 has a mechanism, but not a standard in the use of those
features.  Full OO languages all choose a direction, but there are
serious culture differences.  Perl uses them all.  There are many ways
how to instantiate an object, which is lot of fun as programmer but a
hassle for "the average" programmer.  Within one program, you may very
well need to use different instantiation techniques...  Of course, this
could have been forseen (perl is not the first language which implements
OO), and some advice on the convention to use could have avoided wild
collection of approaches we see now.

This is also why "Perl Best Practices" is a good book [shameless plug]
although I would have welcomed it 11 years earlier.

> I think it's the same thing with POD6. It's "open" enough that many
> documentation systems can be built from it (man pages, books, magazines,
> wikis, etc.) For some of those documentation systems we'll have nice
> conventions and other conventions will grow as needed. If we find that
> convention isn't enough in specific areas, ...

Without any doubt, there are thousands of documentation systems around.
At least ten percent of them are considered "the best ever made" by
its developer or developer community.  Just by simple math, the chance
that the system developed really is the best is less than one percent.

Gladly, there are many areas of application for documentation systems,
and there is a large variety in taste by the users.  So per user/usage,
a different doc-system can be the best.  Still, its a muddy terrain.

POD6 has the unique opportunity to become "the best documentation system"
for a specific large group of users: Perl programmers.  Tenth of thousands
of people will use POD6 in their Perl6 programs, every day.

IMO, any argument that POD6 is good because it can be used to write books
or express complex mathematical expressions is really frightning me.
Damian is correctly avoiding this, in his argument.  Is this another area
where our community is trying to incorporate every thinkable feature in
some design?  And in the process, producing such a complex design that
it deserves an extra volume in "Programming Perl 6"? (Next to the 1000
page volumes for each of basic syntax, grammars, and OO).

IMO, the needs for POD6 are much simpler: a way to document the features
of the related Perl6 code, and smooth that into (parts of) manual pages.
If you write a book, than use pod6-to-docbook or pod6-to-pod, or whatever,
to get some fragments in your some documentation system which is
specialized in books.

Every single complication added to the doc syntax will make it not
to understand for a large percentage of the primar target community,
as every teacher can tell you from experience.

> Also, I don't think that documentation is being treated as
> second-class at all.  It's being treated as first-class but different.

It's treated second-class in the Perl6 sense: the tools are not an
integral part of the Perl6 environemnt.

When I create a program, it starts with a goal.  To reach that goal,
I have to write some code, some docs, some tests.  For me, it is all
part of the program.  I do not see one to be of more importance than
the other: all three are first-class sitizens in my program.   And what
I really wish for is that those three work together in een KISS way;
to achieve my goal in no time so I can drink (more) beer.  Yeh, on the
subject of tests,... :-b
-- 
               MarkOv

------------------------------------------------------------------------
       Mark Overmeer MSc                                MARKOV Solutions
       Mark@Overmeer.net                          solutions@overmeer.net
http://Mark.Overmeer.net                   http://solutions.overmeer.net

