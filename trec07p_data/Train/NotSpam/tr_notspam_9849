From beginners-return-91613-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun May 13 03:55:26 2007
Return-Path: <beginners-return-91613-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4D7tPqD024992
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 13 May 2007 03:55:25 -0400
Received: (qmail 26345 invoked by uid 514); 13 May 2007 07:55:18 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 26329 invoked from network); 13 May 2007 07:55:17 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 May 2007 07:55:17 -0000
Received: (qmail 4165 invoked by uid 225); 13 May 2007 07:55:17 -0000
Delivered-To: beginners@perl.org
Received: (qmail 4153 invoked by alias); 13 May 2007 07:55:16 -0000
X-Spam-Status: No, hits=2.2 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,FORGED_YAHOO_RCVD,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from office.servervault.com (HELO mail1.dulles.sv.int) (216.12.128.136)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 13 May 2007 00:55:09 -0700
Received: from [192.168.4.103] ([192.168.4.103]) by mail1.dulles.sv.int with Microsoft SMTPSVC(6.0.3790.1830);
	 Sun, 13 May 2007 03:55:02 -0400
Message-ID: <4646C419.1060308@yahoo.com>
Date: Sun, 13 May 2007 03:54:01 -0400
From: Mathew Snyder <theillien@yahoo.com>
User-Agent: Thunderbird 1.5.0.10 (X11/20060911)
MIME-Version: 1.0
To: yaron@kahanovitch.com
CC: Perl Beginners <beginners@perl.org>
Subject: Re: Stuck on a hash referrence, kinda
References: <8759565.38551179041294892.JavaMail.root@store2a.brinkster.com>
In-Reply-To: <8759565.38551179041294892.JavaMail.root@store2a.brinkster.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 13 May 2007 07:55:02.0556 (UTC) FILETIME=[030FE5C0:01C79534]

Thanks, I found a simpler approach though.  I set a variable to '1' and check it
in an if statement:
if ($check == 1) {
	Perform steps
}else{
	Perform other steps.
}

After I pass the hashes I need to use for "Perform steps" I set the variable to
'0' and then pass the next set of hashes.  Since the value is no longer '1', the
"Perform other steps" is processed.  Fortunately, I only have two sets of hashes
so this won't get difficult to maintain.

Keep up with me and what I'm up to: http://theillien.blogspot.com


yaron@kahanovitch.com wrote:
> Hi again,
> 
> In that case can use the following:
> if ($dept and exists($dept->{customer}{user}){ ....}else{....}
> 
> Yaron Kahanovitch
> ----- Original Message -----
> From: "Mathew Snyder" <theillien@yahoo.com>
> To: yaron@kahanovitch.com
> Cc: "Perl Beginners" <beginners@perl.org>
> Sent: Sunday, May 13, 2007 10:22:53 AM (GMT+0200) Auto-Detected
> Subject: Re: Stuck on a hash referrence, kinda
> 
> That's the problem.  'user' isn't in the first hash.  It's in the second hash.
> The hash looks like $dept{customer}{user}.  I need to skip $dept{customer} and
> check for $dept{customer}{user}.
> 
> Mathew
> Keep up with me and what I'm up to: http://theillien.blogspot.com
> 
> 
> yaron@kahanovitch.com wrote:
>> Hi,
>>
>> I am not sure that I understand your problem.
>> In General if you want to check the existence of the key "user" in the first hash, you can use the following
>>  if ($dept and exists($dept->{user}){ ....}else{....}
>>
>>
>> Hope that helps
>>
>>
>> Yaron Kahanovitch
>> ----- Original Message -----
>> From: "Mathew Snyder" <theillien@yahoo.com>
>> To: "Perl Beginners" <beginners@perl.org>
>> Sent: Sunday, May 13, 2007 9:54:38 AM (GMT+0200) Auto-Detected
>> Subject: Stuck on a hash referrence, kinda
>>
>> A subroutine I'm working on takes two hash references.  The hashes are each
>> actually a HoH.
>>
>> timesheet(\%opsTotal, \%opsEnvTotal);
>>
>> The problem I'm having is that I need to look past the first hash and into the
>> second for the existence of a particular key.  I'm not sure how to go about
>> doing this.
>>
>> sub timesheet {
>>         my ($dept, $env) = @_;
>>
>> #This is where I need help.  'user' is in the second hash but I'm not sure how
>> #to get past the first one.  Should I use a foreach and step through each key?
>>         if (exists $dept->{user}) {
>>                 open TIMESHEET,
>> ">/work_reports/user/ops_timesheet_weekof_$endDate.txt";
>>         }else{
>>                 open TIMESHEET,
>> ">/work_reports/user/eng_timesheet_weekof_$endDate.txt";
>>         }
>>
>>         print TIMESHEET "Timesheet for $startDate to $endDate\n\n\n";
>>
>>         foreach my $environ (sort keys %$dept) {
>>                 #Print the header for our data
>>                 print TIMESHEET "$environ", "\n";
>>                 printf TIMESHEET "%10s%8s\n", "User", "hh:mm";
>>                 print TIMESHEET ("-" x 30);
>>                 print TIMESHEET "\n";
>>                 foreach my $name (sort keys %{ $dept->{$environ} }) {
>>                         printf TIMESHEET "%10s%8s\n", "$name",
>> "$dept->{$environ}->{$name}";
>>                 }
>>                 printf TIMESHEET ("-" x 30);
>>                 print  TIMESHEET "\n";
>>                 printf TIMESHEET "%18s\n\n", "$env->{$environ}";
>>         }
>>         close TIMESHEET;
>> }
> 
> 

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


