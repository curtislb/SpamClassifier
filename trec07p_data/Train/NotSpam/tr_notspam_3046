From perl6-all-return-80720-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Apr 19 03:41:03 2007
Return-Path: <perl6-all-return-80720-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3J7f20I021514
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 03:41:02 -0400
Received: (qmail 24150 invoked by uid 514); 19 Apr 2007 07:40:36 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 24145 invoked from network); 19 Apr 2007 07:40:35 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of jrisom@gmail.com designates 64.233.166.180 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:in-reply-to:references:mime-version:content-type:message-id:content-transfer-encoding:cc:from:subject:date:to:x-mailer;
        b=LlfUgTWK4Cr9pkDseChakKTWZ/gaiCSN3py6SQ5D4S3JReqvKFl+PcWOur0BCsNrlVkJ+aSqDvMDjAv2FXN/mlZPkeCb5CkRpKOobJxUkQvnw23kzbAL8MQeHJbqKghtFZ99WqP4CHmGq6uHWElCfU6P3YLXSkBKlYnYSBh1IEA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:in-reply-to:references:mime-version:content-type:message-id:content-transfer-encoding:cc:from:subject:date:to:x-mailer;
        b=GH5fyujJBtUqwvdwU+UzE1zF9dWfPD8XOAUhJQkaERoThEpm8jG1/cHRUpIFIufHxAeiqnKmO8S/8NFHej3nIuRj0M8SiaUmwmVQbjTO3n8RIXAYGPrwQTwf07jXuy8C1A1RWzoHgpB7HIxPKSJxIZKMt1ZmY6ADtH42YYshNBY=
In-Reply-To: <200704181348.40862.chromatic@wgz.org>
References: <RT-Ticket-42430@perl.org> <200704181101.35621.chromatic@wgz.org> <189adbd0704181334n16a6ccbdo6f4747ffa70cafb0@mail.gmail.com> <200704181348.40862.chromatic@wgz.org>
Mime-Version: 1.0 (Apple Message framework v624)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <f7a7d8cd607b932f0b74f62346b526d1@gmail.com>
Content-Transfer-Encoding: 7bit
Cc: Perl 6 Internals <perl6-internals@perl.org>
From: Joshua Isom <jrisom@gmail.com>
Subject: Re: [perl #42430] [PATCH] make :vtable imply :method
Date: Thu, 19 Apr 2007 02:40:06 -0500
To: chromatic <chromatic@wgz.org>
X-Mailer: Apple Mail (2.624)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
Status: O
Content-Length: 1864
Lines: 51


On Apr 18, 2007, at 3:48 PM, chromatic wrote:

> On Wednesday 18 April 2007 13:34, Alek Storm wrote:
>
>> Vtable methods defined in C are visible from C.
>
> Of course, otherwise nothing would be able to call them.
>
>> Therefore, it makes
>> sense that vtable methods defined in PIR are visible from PIR, at
>> least by default.
>
> That makes no sense to me.  Are you saying that vtable methods defined 
> in a
> specific language should be visible to that language by default?
>
> If that's true, then users have to *know* the implementation details 
> of vtable
> methods.  Is it in C code or is it in PIR code?
>
> That's precisely what vtable methods protect against!  That's why 
> they're in
> vtables.  That's why they're *not* visible as methods to PIR code.
>
>> Making :vtable imply :anon might be unintuitive to
>> users.  Besides that, there's still the problem of :method meaning two
>> different things with that implementation.  Basically, in a non-vtable
>> sub, there is the :anon flag to detach it from the namespace, but in a
>> vtable sub, it's detached by default, and the :method flag attaches it
>> to the namespace.  Reversal bad.  Continuity good.
>
> I can't honestly think of a case where you want :vtable AND :method on 
> a
> vtable method, with the caveat that right now you *must* do that
> because :vtable doesn't cause Parrot to include the invocant in the 
> proper
> register on calls.
>
> Fixing that makes these problems all go away.
>
> -- c
>

And if vtables are anonymous by default, it'll make it possible to have 
a vtable and a method, with the same name.  I think it's more likely to 
be a good thing than a bad thing, but I imagine it will at some point 
cause a problem for someone, other than confusion.

No one ever said the logic of a virtual machine intending to support 
all dynamic languages would be simple.

