From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon Apr 16 15:58:11 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3GJwA0I018096
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 16 Apr 2007 15:58:10 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id D60B91638D7
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 16 Apr 2007 19:57:46 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=3.8 tests=AWL, BAYES_00, FORGED_RCVD_HELO,
	RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: from castor.warande.net (castor.sshunet.nl [145.97.192.41])
	by lists.samba.org (Postfix) with ESMTP id 5F159162C28
	for <samba-cvs@samba.org>; Mon, 16 Apr 2007 19:57:01 +0000 (GMT)
Received: from localhost (localhost.localdomain [127.0.0.1])
	by castor.warande.net (Postfix) with ESMTP id F355057C012
	for <samba-cvs@samba.org>; Mon, 16 Apr 2007 21:35:49 +0200 (CEST)
Received: from castor.warande.net ([127.0.0.1])
	by localhost (castor [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 05846-06 for <samba-cvs@samba.org>;
	Mon, 16 Apr 2007 21:35:49 +0200 (CEST)
Received: from ganieda.vernstok.nl (37pc196.sshunet.nl [145.97.196.37])
	by castor.warande.net (Postfix) with ESMTP
	for <samba-cvs@samba.org>; Mon, 16 Apr 2007 21:35:49 +0200 (CEST)
Received: by ganieda.vernstok.nl (Postfix, from userid 1000)
	id 1DA5B5C4388; Mon, 16 Apr 2007 22:35:33 +0200 (CEST)
To: samba-cvs@samba.org
From: Jelmer Vernooij <jelmer@samba.org>
Message-Id: <20070416203535.1DA5B5C4388@ganieda.vernstok.nl>
Date: Mon, 16 Apr 2007 22:35:33 +0200 (CEST)
X-Virus-Scanned: by amavisd-new-20030616-p10 (Debian) at sshunet.nl
Subject: Rev 11875: Convert mksamba4server script to perl. in
	file:///home/jelmer/bzr.samba/SAMBA_4_0/
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 17862
Lines: 588

At file:///home/jelmer/bzr.samba/SAMBA_4_0/

------------------------------------------------------------
revno: 11875
revision-id: jelmer@samba.org-20070416203519-154364q13fgzj42f
parent: svn-v2:22260@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0
committer: Jelmer Vernooij <jelmer@samba.org>
branch nick: SAMBA_4_0
timestamp: Mon 2007-04-16 22:35:19 +0200
message:
  Convert mksamba4server script to perl.
renamed:
  source/script/tests/mksamba4server.sh => source/script/tests/mksamba4server.pl svn-v2:22260@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmksamba4server.sh
modified:
  source/script/tests/Samba4.pm  svn-v2:21707@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fSamba4.pm
  source/script/tests/mk-fedora-ds.sh svn-v2:21069@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmk%2dfedora%2dds.sh
  source/script/tests/mk-keyblobs.sh svn-v2:21069@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmk%2dkeyblobs.sh
  source/script/tests/mk-openldap.sh svn-v2:21069@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmk%2dopenldap.sh
  source/torture/local/torture.c svn-v2:16518@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2ftorture%2flocal%2ftorture.c
  source/script/tests/mksamba4server.pl svn-v2:22260@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmksamba4server.sh
=== renamed file 'source/script/tests/mksamba4server.sh' => 'source/script/tests/mksamba4server.pl'
--- a/source/script/tests/mksamba4server.sh	2007-04-16 10:44:26 +0000
+++ b/source/script/tests/mksamba4server.pl	2007-04-16 20:35:19 +0000
@@ -1,86 +1,89 @@
-#!/bin/sh
+#!/usr/bin/perl
 # Build a test environment for running Samba
 
-if [ $# -lt 1 ]
-then
-	echo "$0 PREFIX"
-	exit 1
-fi
-
-PREFIX=$1
-
-if test -z "$SHARE_BACKEND"; then
-	SHARE_BACKEND=classic
-fi
-
-if test -z "$SMBD_LOGLEVEL"; then
-	SMBD_LOGLEVEL=1
-fi
-
-if test -z "$SERVER_ROLE"; then
-	SERVER_ROLE="domain controller"
-fi
-
-DOMAIN=SAMBADOMAIN
-USERNAME=administrator
-REALM=SAMBA.EXAMPLE.COM
-DNSNAME="samba.example.com"
-BASEDN="dc=samba,dc=example,dc=com"
-PASSWORD=penguin
-SRCDIR=`pwd`
-ROOT=$USER
-SERVER=localhost
-NETBIOSNAME=localtest
-if test -z "$ROOT"; then
-    ROOT=$LOGNAME
-fi
-if test -z "$ROOT"; then
-    ROOT=`whoami`
-fi
-
-oldpwd=`pwd`
-srcdir=`dirname $0`/../..
-mkdir -p $PREFIX || exit $?
-cd $PREFIX
-PREFIX_ABS=`pwd`
-cd $oldpwd
-
-TMPDIR=$PREFIX_ABS/tmp
-ETCDIR=$PREFIX_ABS/etc
-PIDDIR=$PREFIX_ABS/pid
-CONFFILE=$ETCDIR/smb.conf
-KRB5_CONFIG=$ETCDIR/krb5.conf
-PRIVATEDIR=$PREFIX_ABS/private
-NCALRPCDIR=$PREFIX_ABS/ncalrpc
-LOCKDIR=$PREFIX_ABS/lockdir
-
-WINBINDD_SOCKET_DIR=$PREFIX_ABS/winbind_socket
-CONFIGURATION="--configfile=$CONFFILE"
-LDAPDIR=$PREFIX_ABS/ldap
-
-rm -rf $PREFIX/*
-mkdir -p $PRIVATEDIR $ETCDIR $PIDDIR $NCALRPCDIR $LOCKDIR $TMPDIR $LDAPDIR/db $LDAPDIR/db/bdb-logs $LDAPDIR/db/tmp
-
-cat >$CONFFILE<<EOF
+use Cwd;
+use Getopt::Long;
+use FindBin qw($RealBin $Script);
+use strict;
+
+my $opt_help = undef;
+my $server_role = "domain controller";
+my $opt_ldap = undef;
+my $domain = "SAMBADOMAIN";
+my $netbiosname = "localtest";
+
+my $result = GetOptions(
+	'help|h|?' => \$opt_help,
+	'server-role:s' => \$server_role,
+	'ldap:s' => \$opt_ldap,
+	'domain:s' => \$domain,
+	'netbios-name:s' => \$netbiosname,
+);
+
+if (not $result) {
+	exit(1);
+}
+
+if (scalar(@ARGV) == 0) {
+	print "Usage: $Script [OPTIONS] <PREFIX>\n";
+	exit(1);
+}
+
+my $prefix = shift @ARGV;
+
+my $share_backend = "classic";
+my $smbd_loglevel = 1;
+my $username = "administrator";
+my $realm = "SAMBA.EXAMPLE.COM";
+my $dnsname = "samba.example.com";
+my $basedn = "dc=samba,dc=example,dc=com";
+my $password = "penguin";
+my $root = ($ENV{USER} or $ENV{LOGNAME} or `whoami`);
+my $server = "localhost";
+my $srcdir="$RealBin/../..";
+-d $prefix or mkdir($prefix) or die("Unable to create $prefix");
+my $prefix_abs = getcwd()."/".$prefix;
+
+my $tmpdir = "$prefix_abs/tmp";
+my $etcdir = "$prefix_abs/etc";
+my $piddir = "$prefix_abs/pid";
+my $conffile = "$etcdir/smb.conf";
+my $krb5_config = "$etcdir/krb5.conf";
+my $privatedir = "$prefix_abs/private";
+my $ncalrpcdir = "$prefix_abs/ncalrpc";
+my $lockdir= "$prefix_abs/lockdir";
+
+my $winbindd_socket_dir = "$prefix_abs/winbind_socket";
+my $configuration = "--configfile=$conffile";
+my $ldapdir = "$prefix_abs/ldap";
+
+my $tlsdir = "$privatedir/tls";
+
+(system("rm -rf $prefix/*") == 0) or die("Unable to clean up");
+mkdir($_) foreach ($privatedir, $etcdir, $piddir, $ncalrpcdir, $lockdir, 
+	$tmpdir);
+
+open(CONFFILE, ">$conffile");
+print CONFFILE "
 [global]
-	netbios name = $NETBIOSNAME
-	netbios aliases = $SERVER
-	workgroup = $DOMAIN
-	realm = $REALM
-	private dir = $PRIVATEDIR
-	pid directory = $PIDDIR
-	ncalrpc dir = $NCALRPCDIR
-	lock dir = $LOCKDIR
-	share backend = $SHARE_BACKEND
-	setup directory = $SRCDIR/setup
-	js include = $SRCDIR/scripting/libjs
-	winbindd socket directory = $WINBINDD_SOCKET_DIR
+	netbios name = $netbiosname
+	netbios aliases = $server
+	workgroup = $domain
+	realm = $realm
+	private dir = $privatedir
+	pid directory = $piddir
+	ncalrpc dir = $ncalrpcdir
+	lock dir = $lockdir
+	share backend = $share_backend
+	setup directory = $srcdir/setup
+	js include = $srcdir/scripting/libjs
+	winbindd socket directory = $winbindd_socket_dir
 	name resolve order = bcast
 	interfaces = 127.0.0.1/8
-	tls dh params file = $DHFILE
-	panic action = $SRCDIR/script/gdb_backtrace %PID% %PROG%
+	tls dh params file = $tlsdir/dhparms.pem
+	panic action = $srcdir/script/gdb_backtrace \%PID% \%PROG%
 	wins support = yes
-	server role = $SERVER_ROLE
+	server role = $server_role
 	max xmit = 32K
 	server max protocol = SMB2
 	notify:inotify = false
@@ -88,42 +91,44 @@
 	system:anonymous = true
 #We don't want to pass our self-tests if the PAC code is wrong
 	gensec:require_pac = true
-	log level = $SMBD_LOGLEVEL
+	log level = $smbd_loglevel
 
 [tmp]
-	path = $TMPDIR
+	path = $tmpdir
 	read only = no
 	ntvfs handler = posix
 	posix:sharedelay = 100000
-	posix:eadb = $LOCKDIR/eadb.tdb
+	posix:eadb = $lockdir/eadb.tdb
 
 [cifs]
 	read only = no
 	ntvfs handler = cifs
-	cifs:server = $SERVER
-	cifs:user = $USERNAME
-	cifs:password = $PASSWORD
-	cifs:domain = $DOMAIN
+	cifs:server = $server
+	cifs:user = $username
+	cifs:password = $password
+	cifs:domain = $domain
 	cifs:share = tmp
 
 [simple]
-	path = $TMPDIR
+	path = $tmpdir
 	read only = no
 	ntvfs handler = simple
 
 [cifsposixtestshare]
 	copy = simple
 	ntvfs handler = cifsposix   
-EOF
+";
+close(CONFFILE);
 
 ## Override default share.ldb file
-rm -f $PRIVATEDIR/share.ldb
-cat >$PRIVATEDIR/share.ldif<<EOF
+unlink("$privatedir/share.ldb");
+open(LDIF, ">$privatedir/share.ldif");
+print LDIF "
 ### Shares basedn
-dn: @INDEXLIST
-@IDXATTR: name
+dn: \@INDEXLIST
+\@IDXATTR: name
 
-dn: @ATTRIBUTES
+dn: \@ATTRIBUTES
 cn: CASE_INSENSITIVE
 dc: CASE_INSENSITIVE
 name: CASE_INSENSITIVE
@@ -135,12 +140,12 @@
 objectClass: organizationalUnit
 cn: Shares
 
-### Default IPC$ Share
-dn: CN=IPC$,CN=Shares
+### Default IPC\$ Share
+dn: CN=IPC\$,CN=Shares
 objectClass: top
 objectClass: share
-cn: IPC$
-name: IPC$
+cn: IPC\$
+name: IPC\$
 type: IPC
 path: /tmp
 comment: Remote IPC
@@ -150,12 +155,12 @@
 browseable: False
 ntvfs-handler: default
 
-### Default ADMIN$ Share
-dn: CN=ADMIN$,CN=Shares
+### Default ADMIN\$ Share
+dn: CN=ADMIN\$,CN=Shares
 objectClass: top
 objectClass: share
-cn: ADMIN$
-name: ADMIN$
+cn: ADMIN\$
+name: ADMIN\$
 type: DISK
 path: /tmp
 comment: Remote Admin
@@ -171,12 +176,12 @@
 cn: tmp
 name: tmp
 type: DISK
-path: $TMPDIR
+path: $tmpdir
 comment: Temp Dir for Tests
 readonly: False
 ntvfs-handler: posix
 posix-sharedelay: 100000
-posix-eadb: $LOCKDIR/eadb.tdb
+posix-eadb: $lockdir/eadb.tdb
 
 dn: CN=cifs,CN=Shares
 objectClass: top
@@ -186,86 +191,97 @@
 type: DISK
 readonly: False
 ntvfs-handler: cifs
-cifs-server: $SERVER
-cifs-user: $USERNAME
-cifs-password: $PASSWORD
-cifs-domain: $DOMAIN
+cifs-server: $server
+cifs-user: $username
+cifs-password: $password
+cifs-domain: $domain
 cifs-share: tmp
-EOF
-
-$srcdir/bin/ldbadd -H $PRIVATEDIR/share.ldb < $PRIVATEDIR/share.ldif >/dev/null || exit 1
-
-. `dirname $0`/mk-keyblobs.sh
-
-cat >$KRB5_CONFIG<<EOF
-#Generated krb5.conf for $REALM
+";
+close(LDIF);
+
+system("$srcdir/bin/ldbadd -H $privatedir/share.ldb < $privatedir/share.ldif >/dev/null") == 0 or die("Unable to add share ldif");
+
+die ("Unable to create key blobs") if
+	(system("TLSDIR=$tlsdir $RealBin/mk-keyblobs.sh") != 0);
+
+open(KRB5CONF, ">$krb5_config");
+print KRB5CONF "
+#Generated krb5.conf for $realm
 
 [libdefaults]
- default_realm = $REALM
+ default_realm = $realm
  dns_lookup_realm = false
  dns_lookup_kdc = false
  ticket_lifetime = 24h
  forwardable = yes
 
 [realms]
- $REALM = {
-  kdc = 127.0.0.1:88
-  admin_server = 127.0.0.1:88
-  default_domain = $DNSNAME
- }
- $DNSNAME = {
-  kdc = 127.0.0.1:88
-  admin_server = 127.0.0.1:88
-  default_domain = $DNSNAME
- }
- $DOMAIN = {
-  kdc = 127.0.0.1:88
-  admin_server = 127.0.0.1:88
-  default_domain = $DNSNAME
+ $realm = {
+  kdc = 127.0.0.1:88
+  admin_server = 127.0.0.1:88
+  default_domain = $dnsname
+ }
+ $dnsname = {
+  kdc = 127.0.0.1:88
+  admin_server = 127.0.0.1:88
+  default_domain = $dnsname
+ }
+ $domain = {
+  kdc = 127.0.0.1:88
+  admin_server = 127.0.0.1:88
+  default_domain = $dnsname
  }
 
 [appdefaults]
-	pkinit_anchors = FILE:$CAFILE
+	pkinit_anchors = FILE:$tlsdir/ca.pem
 
 [kdc]
 	enable-pkinit = true
-	pkinit_identity = FILE:$KDCCERTFILE,$KEYFILE
-	pkinit_anchors = FILE:$CAFILE
+	pkinit_identity = FILE:$tlsdir/kdc.pem,$tlsdir/key.pem
+	pkinit_anchors = FILE:$tlsdir/ca.pem
 
 [domain_realm]
- .$DNSNAME = $REALM
-EOF
+ .$dnsname = $realm
+";
+close(KRB5CONF);
 
 #Ensure the config file is valid before we start
-$srcdir/bin/testparm $CONFIGURATION -v --suppress-prompt >/dev/null 2>&1 || {
-    echo "">&2
-    echo "Failed to create configuration!" >&2
-    $srcdir/bin/testparm $CONFIGURATION  >&2
-    exit 1
-}
-
-( $srcdir/bin/testparm $CONFIGURATION -v --suppress-prompt --parameter-name="netbios name" --section-name=global 2> /dev/null | grep -i ^$NETBIOSNAME ) >/dev/null 2>&1 || {
-    echo "$?" >&2
-    $srcdir/bin/testparm $CONFIGURATION -v --suppress-prompt --parameter-name="netbios name" --section-name=global --suppress-prompt 2> /dev/null | grep -i ^$NETBIOSNAME >&2
-    echo "Failed to create configuration!" >&2
-    exit 1
-}
-
-PROVISION_OPTIONS="$CONFIGURATION --host-name=$NETBIOSNAME --host-ip=127.0.0.1"
-PROVISION_OPTIONS="$PROVISION_OPTIONS --quiet --domain $DOMAIN --realm $REALM"
-PROVISION_OPTIONS="$PROVISION_OPTIONS --adminpass $PASSWORD --root=$ROOT"
-PROVISION_OPTIONS="$PROVISION_OPTIONS --simple-bind-dn=cn=Manager,$BASEDN --password=$PASSWORD --root=$ROOT"
-$srcdir/bin/smbscript $srcdir/setup/provision $PROVISION_OPTIONS >&2
-
-LDAP_URI="ldapi://"`echo $LDAPDIR/ldapi | sed 's|/|%2F|g'`
-
-. `dirname $0`/mk-openldap.sh
-
-test -z "$FEDORA_DS_PREFIX" || {
-    . `dirname $0`/mk-fedora-ds.sh
-}
-
-cat >$PRIVATEDIR/wins_config.ldif<<EOF
+if (system("$srcdir/bin/testparm $configuration -v --suppress-prompt >/dev/null 2>&1") != 0) {
+    system("$srcdir/bin/testparm $configuration >&2");
+    die("Failed to create configuration!");
+}
+
+(system("($srcdir/bin/testparm $configuration -v --suppress-prompt --parameter-name=\"netbios name\" --section-name=global 2> /dev/null | grep -i ^$netbiosname ) >/dev/null 2>&1") == 0) or die("Failed to create configuration!");
+
+my @provision_options = ($configuration);
+push (@provision_options, "--host-name=$netbiosname");
+push (@provision_options, "--host-ip=127.0.0.1");
+push (@provision_options, "--quiet");
+push (@provision_options, "--domain $domain");
+push (@provision_options, "--realm $realm");
+push (@provision_options, "--adminpass $password");
+push (@provision_options, "--root=$root");
+push (@provision_options, "--simple-bind-dn=cn=Manager,$basedn");
+push (@provision_options, "--password=$password");
+push (@provision_options, "--root=$root");
+
+(system("$srcdir/bin/smbscript $srcdir/setup/provision " .  join(' ', @provision_options) . ">&2") == 0) or die("Unable to provision");
+
+my $ldap_uri="ldapi://" . `echo $ldapdir/ldapi | sed 's|/|%2F|g'`;
+my $provision_aci = "";
+
+if (not defined($opt_ldap)) {
+} elsif ($opt_ldap eq "openldap") {
+	mkdir($_) foreach ($ldapdir, "$ldapdir/db", "$ldapdir/db/bdb-logs", 
+	"$ldapdir/db/tmp");
+	system("$RealBin/mk-openldap.sh") == 0 or die("Unable to create openldap directories");
+} elsif ($opt_ldap eq "fedora") {
+    system("$RealBin/mk-fedora-ds.sh") == 0 or die("Unable to create fedora ds directories");
+	push (@provision_options, "--ldap-module=nsuniqueid");
+}
+
+open(LDIF, ">$privatedir/wins_config.ldif");
+print LDIF "
 dn: name=TORTURE_6,CN=PARTNERS
 objectClass: wreplPartner
 name: TORTURE_6
@@ -273,29 +289,29 @@
 pullInterval: 0
 pushChangeCount: 0
 type: 0x3
-EOF
-
-$srcdir/bin/ldbadd -H $PRIVATEDIR/wins_config.ldb < $PRIVATEDIR/wins_config.ldif >/dev/null || exit 1
-
-echo "KRB5_CONFIG=$KRB5_CONFIG"
-echo "PREFIX_ABS=$PREFIX_ABS"
-echo "SLAPD_CONF=$SLAPD_CONF"
-echo "PIDDIR=$PIDDIR"
-echo "SERVER=$SERVER"
-echo "NETBIOSNAME=$NETBIOSNAME"
-echo "LDAP_URI=$LDAP_URI"
-echo "DOMAIN=$DOMAIN"
-echo "USERNAME=$USERNAME"
-echo "REALM=$REALM"
-echo "DNSNAME=$DNSNAME"
-echo "BASEDN=$BASEDN"
-echo "PASSWORD=$PASSWORD"
-echo "SRCDIR=$SRCDIR"
-echo "PREFIX=$PREFIX"
-echo "LDAPDIR=$LDAPDIR"
-echo "CONFFILE=$CONFFILE"
-echo "PROVISION_OPTIONS=$PROVISION_OPTIONS"
-echo "PROVISION_ACI=$PROVISION_ACI"
-echo "WINBINDD_SOCKET_DIR=$WINBINDD_SOCKET_DIR"
-echo "NCALRPCDIR=$NCALRPCDIR"
-echo "CONFIGURATION=$CONFIGURATION"
+";
+close(LDIF);
+
+system("$srcdir/bin/ldbadd -H $privatedir/wins_config.ldb < $privatedir/wins_config.ldif >/dev/null") == 0 or die("Unable to add wins configuration");
+;
+print "KRB5_CONFIG=$krb5_config\n";
+print "PREFIX_ABS=$prefix_abs\n";
+print "SLAPD_CONF=$slapd_conf\n";
+print "PIDDIR=$piddir\n";
+print "SERVER=$server\n";
+print "NETBIOSNAME=$netbiosname\n";
+print "LDAP_URI=$ldap_uri\n";
+print "DOMAIN=$domain\n";
+print "USERNAME=$username\n";
+print "REALM=$realm\n";
+print "DNSNAME=$dnsname\n";
+print "BASEDN=$basedn\n";
+print "PASSWORD=$password\n";
+print "SRCDIR=$srcdir\n";
+print "PREFIX=$prefix\n";
+print "LDAPDIR=$ldapdir\n";
+print "CONFFILE=$conffile\n";
+print "PROVISION_OPTIONS=".join(' ', @provision_options) . "\n";
+print "WINBINDD_SOCKET_DIR=$winbindd_socket_dir\n";
+print "NCALRPCDIR=$ncalrpcdir\n";
+print "CONFIGURATION=$configuration\n";

=== modified file 'source/script/tests/Samba4.pm'
--- a/source/script/tests/Samba4.pm	2007-04-16 10:44:26 +0000
+++ b/source/script/tests/Samba4.pm	2007-04-16 20:35:19 +0000
@@ -140,7 +140,7 @@
 	my ($self, $prefix, $dcvars) = @_;
 	my %ret = ();
 	print "PROVISIONING...";
-	open(IN, "SERVER_ROLE=\"member server\" $RealBin/mksamba4server.sh $prefix|") or die("Unable to setup");
+	open(IN, "$RealBin/mksamba4server.pl --server-role=\"member server\" $prefix|") or die("Unable to setup");
 	while (<IN>) {
 		die ("Error parsing `$_'") unless (/^([A-Z0-9a-z_]+)=(.*)$/);
 		$ret{$1} = $2;
@@ -160,7 +160,7 @@
 	my ($self, $prefix) = @_;
 	my %ret = ();
 	print "PROVISIONING...";
-	open(IN, "$RealBin/mksamba4server.sh $prefix|") or die("Unable to setup");
+	open(IN, "$RealBin/mksamba4server.pl $prefix|") or die("Unable to setup");
 	while (<IN>) {
 		die ("Error parsing `$_'") unless (/^([A-Z0-9a-z_]+)=(.*)$/);
 		$ret{$1} = $2;

=== modified file 'source/script/tests/mk-fedora-ds.sh'
--- a/source/script/tests/mk-fedora-ds.sh	2007-04-04 12:39:44 +0000
+++ b/source/script/tests/mk-fedora-ds.sh	2007-04-16 20:35:19 +0000
@@ -84,8 +84,7 @@
 
 $srcdir/bin/ad2oLschema $CONFIGURATION -H $PRIVATEDIR/sam.ldb --option=convert:target=fedora-ds -I $srcdir/setup/schema-map-fedora-ds-1.0 -O $FEDORA_DS_DIR/schema/99_ad.ldif >&2
 
-PROVISION_OPTIONS="$PROVISION_OPTIONS --ldap-module=nsuniqueid"
 #it is easier to base64 encode this than correctly escape it:
 # (targetattr = "*") (version 3.0;acl "full access to all by all";allow (all)(userdn = "ldap:///anyone");)
-PROVISION_ACI="--aci=aci:: KHRhcmdldGF0dHIgPSAiKiIpICh2ZXJzaW9uIDMuMDthY2wgImZ1bGwgYWNjZXNzIHRvIGFsbCBieSBhbGwiO2FsbG93IChhbGwpKHVzZXJkbiA9ICJsZGFwOi8vL2FueW9uZSIpOykK"
+echo "PROVISION_ACI=--aci=aci:: KHRhcmdldGF0dHIgPSAiKiIpICh2ZXJzaW9uIDMuMDthY2wgImZ1bGwgYWNjZXNzIHRvIGFsbCBieSBhbGwiO2FsbG93IChhbGwpKHVzZXJkbiA9ICJsZGFwOi8vL2FueW9uZSIpOykK"
 

=== modified file 'source/script/tests/mk-keyblobs.sh'
--- a/source/script/tests/mk-keyblobs.sh	2007-03-05 21:28:55 +0000
+++ b/source/script/tests/mk-keyblobs.sh	2007-04-16 20:35:19 +0000
@@ -1,5 +1,4 @@
 #TLS and PKINIT crypto blobs
-TLSDIR=$PRIVATEDIR/tls
 DHFILE=$TLSDIR/dhparms.pem
 CAFILE=$TLSDIR/ca.pem
 CERTFILE=$TLSDIR/cert.pem

=== modified file 'source/script/tests/mk-openldap.sh'
--- a/source/script/tests/mk-openldap.sh	2007-04-11 05:01:02 +0000
+++ b/source/script/tests/mk-openldap.sh	2007-04-16 20:35:19 +0000
@@ -1,5 +1,6 @@
 SLAPD_CONF=$LDAPDIR/slapd.conf
 export SLAPD_CONF
+echo "SLAPD_CONF=$SLAPD_CONF"
 
 echo "OPENLDAP_LOGLEVEL=0"
 OPENLDAP_PIDFILE=$PIDDIR/slapd.pid
@@ -121,4 +122,3 @@
     
 PATH=$OLDPATH
 export PATH
-

=== modified file 'source/torture/local/torture.c'
--- a/source/torture/local/torture.c	2007-03-21 15:57:07 +0000
+++ b/source/torture/local/torture.c	2007-04-16 20:35:19 +0000
@@ -47,7 +47,7 @@
 
 	torture_assert_ntstatus_ok(tctx, torture_setup_server(mem_ctx, 
 									"setupserver-success",
-									"./script/tests/mktestdc.sh",
+									"./script/tests/mksamba4server.pl",
 									"./bin/smbd", &pid),
 							   "starting smbd failed");
 

