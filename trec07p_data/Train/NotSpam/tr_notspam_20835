From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed Jun 20 09:19:45 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5KDJhL9010297
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 20 Jun 2007 09:19:44 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id D5AA3162BCB
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 20 Jun 2007 13:19:41 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.1 required=3.8 tests=ALL_TRUSTED,AWL,BAYES_00,
	MIME_BASE64_NO_NAME,RCVD_IN_DSBL autolearn=ham version=3.1.7
X-Original-To: samba-technical@samba.org
Delivered-To: samba-technical@samba.org
Received: from localhost.localdomain (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 63EEA1639BA
	for <samba-technical@samba.org>; Wed, 20 Jun 2007 13:17:59 +0000 (GMT)
From: Andrew Bartlett <abartlet@samba.org>
To: Multiple recipients of list SAMBA-TECHNICAL <samba-technical@samba.org>
In-Reply-To: <1182212093.3538.15.camel@naomi>
References: <1182212093.3538.15.camel@naomi>
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature";
	boundary="=-AaTA4gCTi+HOXOljM4xk"
Date: Wed, 20 Jun 2007 23:17:57 +1000
Message-Id: <1182345477.8067.3.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.3 (2.6.3-2.fc5) 
Subject: Re: [SAMBA4] Faster schema loading
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org


--=-AaTA4gCTi+HOXOljM4xk
Content-Type: multipart/mixed; boundary="=-Xu+UeoZxpaKYYMSk2jl8"


--=-Xu+UeoZxpaKYYMSk2jl8
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

On Tue, 2007-06-19 at 10:14 +1000, Andrew Bartlett wrote:
> Metze posted me a patch (schema-loading-13.diff), to load the schema at
> LDB startup, which I hope to use for MMC write support.
>=20
> The problem, as metze pointed out, is that it is slow.
>=20
> In the attached patch, for which I would like suggestions as to cleaner
> methods, I now keep a global variable, with the loaded schema.=20
>=20
> How should we better control this?  In particular, we only really want
> to do this for smbd - but what is the best way to tell that we are 'in
> smbd'?  Likewise, we will at some point need invalidation.
>=20
> make quickest times:
>=20
> 33sec without
> 174sec with
> 39sec with global variable hack

I've now extended this to do some good work - we now have correct
canonisation of objectCategory entries, and I hope the right
implementation of allowedAttributesEffective.  I'm having trouble
getting MMC to talk to Samba4 however.

Some feedback from anyone with a working MMC connection to samba4 would
be very useful.

Comments?

Andrew Bartlett

--=20
Andrew Bartlett                                http://samba.org/~abartlet/
Authentication Developer, Samba Team           http://samba.org
Samba Developer, Red Hat Inc.                  http://redhat.com

--=-Xu+UeoZxpaKYYMSk2jl8
Content-Description: 
Content-Disposition: attachment; filename=schema-loading-13-abartlet.patch
Content-Type: text/x-patch; charset=utf-8
Content-Transfer-Encoding: base64

SW5kZXg6IHRlc3Rwcm9ncy9lanMvc2FtYmEzc2FtLmpzDQo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0gdGVzdHBy
b2dzL2Vqcy9zYW1iYTNzYW0uanMJKHJldmlzaW9uIDIzNTUwKQ0KKysrIHRlc3Rwcm9ncy9lanMv
c2FtYmEzc2FtLmpzCSh3b3JraW5nIGNvcHkpDQpAQCAtMjcwLDcgKzI3MCw3IEBADQogY246IFgN
CiBjb2RlUGFnZTogeA0KIHJldmlzaW9uOiB4DQotb2JqZWN0Q2F0ZWdvcnk6IHgNCitkbnNIb3N0
TmFtZTogeA0KIG5leHRSaWQ6IHkNCiBsYXN0TG9nb246IHgNCiBkZXNjcmlwdGlvbjogeA0KQEAg
LTI4Miw3ICsyODIsNyBAQA0KIGNuOiBZDQogY29kZVBhZ2U6IHgNCiByZXZpc2lvbjogeA0KLW9i
amVjdENhdGVnb3J5OiB5DQorZG5zSG9zdE5hbWU6IHkNCiBuZXh0UmlkOiB5DQogbGFzdExvZ29u
OiB5DQogZGVzY3JpcHRpb246IHgNCkBAIC0yOTIsNyArMjkyLDcgQEANCiBjbjogWg0KIGNvZGVQ
YWdlOiB4DQogcmV2aXNpb246IHkNCi1vYmplY3RDYXRlZ29yeTogeg0KK2Ruc0hvc3ROYW1lOiB6
DQogbmV4dFJpZDogeQ0KIGxhc3RMb2dvbjogeg0KIGRlc2NyaXB0aW9uOiB5DQpAQCAtMzQyLDg2
ICszNDIsODYgQEANCiANCiAJLyogU2VhcmNoIHJlbW90ZSByZWNvcmQgYnkgbG9jYWwgRE4gKi8N
CiAJZG4gPSBzNC5kbigiY249QSIpOw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdv
cnkiLCAibGFzdExvZ29uIik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJs
YXN0TG9nb24iKTsNCiAJcmVzID0gbGRiLnNlYXJjaCgiIiwgZG4sIGxkYi5TQ09QRV9CQVNFLCBh
dHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFzc2VydChyZXMubXNncy5sZW5n
dGggPT0gMSk7DQogCWFzc2VydChyZXMubXNnc1swXS5kbiA9PSBkbik7DQotCWFzc2VydChyZXMu
bXNnc1swXS5vYmplY3RDYXRlZ29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3Nb
MF0uZG5zSG9zdE5hbWUgPT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmxhc3RM
b2dvbiA9PSAieCIpOw0KIA0KIAkvKiBTZWFyY2ggcmVtb3RlIHJlY29yZCBieSByZW1vdGUgRE4g
Ki8NCiAJZG4gPSBzMy5kbigiY249QSIpOw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0
ZWdvcnkiLCAibGFzdExvZ29uIiwgInNhbWJhTG9nb25UaW1lIik7DQorCWF0dHJzID0gbmV3IEFy
cmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24iLCAic2FtYmFMb2dvblRpbWUiKTsNCiAJcmVz
ID0gczMuZGIuc2VhcmNoKCIiLCBkbiwgbGRiLlNDT1BFX0JBU0UsIGF0dHJzKTsNCiAJYXNzZXJ0
KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSAxKTsNCiAJYXNz
ZXJ0KHJlcy5tc2dzWzBdLmRuID09IGRuKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENh
dGVnb3J5ID09IHVuZGVmaW5lZCk7DQorCWFzc2VydChyZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9
PSB1bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0ubGFzdExvZ29uID09IHVuZGVmaW5l
ZCk7DQogCWFzc2VydChyZXMubXNnc1swXS5zYW1iYUxvZ29uVGltZSA9PSAieCIpOw0KIA0KIAkv
KiBTZWFyY2ggc3BsaXQgcmVjb3JkIGJ5IGxvY2FsIEROICovDQogCWRuID0gczQuZG4oImNuPVgi
KTsNCi0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0K
KwlhdHRycyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9
IGxkYi5zZWFyY2goIiIsIGRuLCBsZGIuU0NPUEVfQkFTRSwgYXR0cnMpOw0KIAlhc3NlcnQocmVz
LmVycm9yID09IDApOw0KIAlhc3NlcnQocmVzLm1zZ3MubGVuZ3RoID09IDEpOw0KIAlhc3NlcnQo
cmVzLm1zZ3NbMF0uZG4gPT0gZG4pOw0KLQlhc3NlcnQocmVzLm1zZ3NbMF0ub2JqZWN0Q2F0ZWdv
cnkgPT0gIngiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3ROYW1lID09ICJ4Iik7DQog
CWFzc2VydChyZXMubXNnc1swXS5sYXN0TG9nb24gPT0gIngiKTsNCiANCiAJLyogU2VhcmNoIHNw
bGl0IHJlY29yZCBieSByZW1vdGUgRE4gKi8NCiAJZG4gPSBzMy5kbigiY249WCIpOw0KLQlhdHRy
cyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFzdExvZ29uIiwgInNhbWJhTG9nb25U
aW1lIik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24iLCAi
c2FtYmFMb2dvblRpbWUiKTsNCiAJcmVzID0gczMuZGIuc2VhcmNoKCIiLCBkbiwgbGRiLlNDT1BF
X0JBU0UsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5t
c2dzLmxlbmd0aCA9PSAxKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IGRuKTsNCi0JYXNz
ZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENhdGVnb3J5ID09IHVuZGVmaW5lZCk7DQorCWFzc2VydChy
ZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9PSB1bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3Nb
MF0ubGFzdExvZ29uID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1swXS5zYW1iYUxv
Z29uVGltZSA9PSAieCIpOw0KIA0KIAlwcmludGxuKCJUZXN0aW5nIHNlYXJjaCBieSBhdHRyaWJ1
dGUiKTsNCiANCiAJLyogU2VhcmNoIGJ5IGlnbm9yZWQgYXR0cmlidXRlICovDQotCWF0dHJzID0g
bmV3IEFycmF5KCJvYmplY3RDYXRlZ29yeSIsICJsYXN0TG9nb24iKTsNCisJYXR0cnMgPSBuZXcg
QXJyYXkoImRuc0hvc3ROYW1lIiwgImxhc3RMb2dvbiIpOw0KIAlyZXMgPSBsZGIuc2VhcmNoKCIo
cmV2aXNpb249eCkiLCBOVUxMLCBsZGIuIFNDT1BFX0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNzZXJ0
KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSAyKTsNCiAJYXNz
ZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1ZIikpOw0KLQlhc3NlcnQocmVzLm1zZ3Nb
MF0ub2JqZWN0Q2F0ZWdvcnkgPT0gInkiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3RO
YW1lID09ICJ5Iik7DQogCWFzc2VydChyZXMubXNnc1swXS5sYXN0TG9nb24gPT0gInkiKTsNCiAJ
YXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJjbj1YIikpOw0KLQlhc3NlcnQocmVzLm1z
Z3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gIngiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hv
c3ROYW1lID09ICJ4Iik7DQogCWFzc2VydChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0gIngiKTsN
CiANCiAJLyogU2VhcmNoIGJ5IGtlcHQgYXR0cmlidXRlICovDQotCWF0dHJzID0gbmV3IEFycmF5
KCJvYmplY3RDYXRlZ29yeSIsICJsYXN0TG9nb24iKTsNCisJYXR0cnMgPSBuZXcgQXJyYXkoImRu
c0hvc3ROYW1lIiwgImxhc3RMb2dvbiIpOw0KIAlyZXMgPSBsZGIuc2VhcmNoKCIoZGVzY3JpcHRp
b249eSkiLCBOVUxMLCBsZGIuIFNDT1BFX0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5l
cnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSAyKTsNCiAJYXNzZXJ0KHJl
cy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1aIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMF0ub2Jq
ZWN0Q2F0ZWdvcnkgPT0gInoiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3ROYW1lID09
ICJ6Iik7DQogCWFzc2VydChyZXMubXNnc1swXS5sYXN0TG9nb24gPT0gInoiKTsNCiAJYXNzZXJ0
KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJjbj1DIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMV0u
b2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hv
c3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0g
InoiKTsNCiANCiAJLyogU2VhcmNoIGJ5IHJlbmFtZWQgYXR0cmlidXRlICovDQotCWF0dHJzID0g
bmV3IEFycmF5KCJvYmplY3RDYXRlZ29yeSIsICJsYXN0TG9nb24iKTsNCisJYXR0cnMgPSBuZXcg
QXJyYXkoImRuc0hvc3ROYW1lIiwgImxhc3RMb2dvbiIpOw0KIAlyZXMgPSBsZGIuc2VhcmNoKCIo
YmFkUHdkQ291bnQ9eCkiLCBOVUxMLCBsZGIuIFNDT1BFX0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNz
ZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSAyKTsNCiAJ
YXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1CIikpOw0KLQlhc3NlcnQocmVzLm1z
Z3NbMF0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBd
LmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1swXS5sYXN0TG9n
b24gPT0gInkiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJjbj1BIikpOw0K
LQlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNz
ZXJ0KHJlcy5tc2dzWzFdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMu
bXNnc1sxXS5sYXN0TG9nb24gPT0gIngiKTsNCiANCiAJLyogU2VhcmNoIGJ5IGNvbnZlcnRlZCBh
dHRyaWJ1dGUgKi8NCi0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RM
b2dvbiIsICJvYmplY3RTaWQiKTsNCisJYXR0cnMgPSBuZXcgQXJyYXkoImRuc0hvc3ROYW1lIiwg
Imxhc3RMb2dvbiIsICJvYmplY3RTaWQiKTsNCiAJLyogVE9ETzoNCiAJICAgVXNpbmcgdGhlIFNJ
RCBkaXJlY3RseSBpbiB0aGUgcGFyc2UgdHJlZSBsZWFkcyB0byBjb252ZXJzaW9uDQogCSAgIGVy
cm9ycywgbGV0dGluZyB0aGUgc2VhcmNoIGZhaWwgd2l0aCBubyByZXN1bHRzLg0KQEAgLTQzMSwy
MyArNDMxLDIzIEBADQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFzc2VydChyZXMubXNn
cy5sZW5ndGggPT0gMik7DQogCWFzc2VydChyZXMubXNnc1swXS5kbiA9PSBzNC5kbigiY249WCIp
KTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENhdGVnb3J5ID09ICJ4Iik7DQorCWFzc2Vy
dChyZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9PSAieCIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0u
bGFzdExvZ29uID09ICJ4Iik7DQogCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RTaWQgPT0gIlMt
MS01LTIxLTQyMzE2MjY0MjMtMjQxMDAxNDg0OC0yMzYwNjc5NzM5LTU1MiIpOw0KIAlhc3NlcnQo
cmVzLm1zZ3NbMV0uZG4gPT0gczQuZG4oImNuPUEiKSk7DQotCWFzc2VydChyZXMubXNnc1sxXS5v
YmplY3RDYXRlZ29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0uZG5zSG9z
dE5hbWUgPT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAi
eCIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0U2lkID09ICJTLTEtNS0yMS00MjMxNjI2
NDIzLTI0MTAwMTQ4NDgtMjM2MDY3OTczOS01NTIiKTsNCiANCiAJLyogU2VhcmNoIGJ5IGdlbmVy
YXRlZCBhdHRyaWJ1dGUgKi8NCiAJLyogSW4gbW9zdCBjYXNlcywgdGhpcyBldmVuIHdvcmtzIHdo
ZW4gdGhlIG1hcHBpbmcgaXMgbWlzc2luZw0KIAkgKiBhIGBjb252ZXJ0X29wZXJhdG9yJyBieSBl
bnVtZXJhdGluZyB0aGUgcmVtb3RlIGRiLiAqLw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0
Q2F0ZWdvcnkiLCAibGFzdExvZ29uIiwgInByaW1hcnlHcm91cElEIik7DQorCWF0dHJzID0gbmV3
IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24iLCAicHJpbWFyeUdyb3VwSUQiKTsNCiAJ
cmVzID0gbGRiLnNlYXJjaCgiKHByaW1hcnlHcm91cElEPTUxMikiLCBOVUxMLCBsZGIuIFNDT1BF
X0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJl
cy5tc2dzLmxlbmd0aCA9PSAxKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRuKCJj
bj1BIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMF0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVk
KTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFz
c2VydChyZXMubXNnc1swXS5sYXN0TG9nb24gPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBd
LnByaW1hcnlHcm91cElEID09ICI1MTIiKTsNCiANCkBAIC00NjgsMjMgKzQ2OCwyMyBAQA0KIAkq
Lw0KIA0KIAkvKiBTZWFyY2ggYnkgcmVtb3RlIG5hbWUgb2YgcmVuYW1lZCBhdHRyaWJ1dGUgKi8N
Ci0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0KKwlh
dHRycyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9IGxk
Yi5zZWFyY2goIihzYW1iYUJhZFBhc3N3b3JkQ291bnQ9KikiLCAiIiwgbGRiLiBTQ09QRV9ERUZB
VUxULCBhdHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFzc2VydChyZXMubXNn
cy5sZW5ndGggPT0gMCk7DQogDQogCS8qIFNlYXJjaCBieSBvYmplY3RDbGFzcyAqLw0KLQlhdHRy
cyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFzdExvZ29uIiwgIm9iamVjdENsYXNz
Iik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24iLCAib2Jq
ZWN0Q2xhc3MiKTsNCiAJcmVzID0gbGRiLnNlYXJjaCgiKG9iamVjdENsYXNzPXVzZXIpIiwgTlVM
TCwgbGRiLiBTQ09QRV9ERUZBVUxULCBhdHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7
DQogCWFzc2VydChyZXMubXNncy5sZW5ndGggPT0gMik7DQogCWFzc2VydChyZXMubXNnc1swXS5k
biA9PSBzNC5kbigiY249WCIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENhdGVnb3J5
ID09ICJ4Iik7DQorCWFzc2VydChyZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9PSAieCIpOw0KIAlh
c3NlcnQocmVzLm1zZ3NbMF0ubGFzdExvZ29uID09ICJ4Iik7DQogCWFzc2VydChyZXMubXNnc1sw
XS5vYmplY3RDbGFzcyAhPSB1bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0ub2JqZWN0
Q2xhc3NbM10gPT0gInVzZXIiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJj
bj1BIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVk
KTsNCisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFz
c2VydChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFd
Lm9iamVjdENsYXNzICE9IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1sxXS5vYmplY3RD
bGFzc1swXSA9PSAidXNlciIpOw0KQEAgLTQ5NCwxOSArNDk0LDE5IEBADQogCWFzc2VydChyZXMu
ZXJyb3IgPT0gMCk7DQogCWFzc2VydChyZXMubXNncy5sZW5ndGggPT0gMyk7DQogCWFzc2VydChy
ZXMubXNnc1swXS5kbiA9PSBzNC5kbigiY249QiIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9i
amVjdENhdGVnb3J5ID09IHVuZGVmaW5lZCk7DQorCWFzc2VydChyZXMubXNnc1swXS5kbnNIb3N0
TmFtZSA9PSB1bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0ubGFzdExvZ29uID09ICJ5
Iik7DQogCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RDbGFzcyAhPSB1bmRlZmluZWQpOw0KIAlm
b3IgKGk9MDtpPHJlcy5tc2dzWzBdLm9iamVjdENsYXNzLmxlbmd0aDtpKyspIHsNCiAJCWFzc2Vy
dChyZXMubXNnc1swXS5vYmplY3RDbGFzc1tpXSAhPSAidXNlciIpOw0KIAl9DQogCWFzc2VydChy
ZXMubXNnc1sxXS5kbiA9PSBzNC5kbigiY249WCIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzFdLm9i
amVjdENhdGVnb3J5ID09ICJ4Iik7DQorCWFzc2VydChyZXMubXNnc1sxXS5kbnNIb3N0TmFtZSA9
PSAieCIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0ubGFzdExvZ29uID09ICJ4Iik7DQogCWFzc2Vy
dChyZXMubXNnc1sxXS5vYmplY3RDbGFzcyAhPSB1bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1z
Z3NbMV0ub2JqZWN0Q2xhc3NbM10gPT0gInVzZXIiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmRu
ID09IHM0LmRuKCJjbj1BIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMl0ub2JqZWN0Q2F0ZWdvcnkg
PT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzJdLmRuc0hvc3ROYW1lID09IHVuZGVm
aW5lZCk7DQogCWFzc2VydChyZXMubXNnc1syXS5sYXN0TG9nb24gPT0gIngiKTsNCiAJYXNzZXJ0
KHJlcy5tc2dzWzJdLm9iamVjdENsYXNzICE9IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNn
c1syXS5vYmplY3RDbGFzc1swXSA9PSAidXNlciIpOw0KQEAgLTUxNCw0MyArNTE0LDQzIEBADQog
CXByaW50bG4oIlRlc3Rpbmcgc2VhcmNoIGJ5IHBhcnNlIHRyZWUiKTsNCiANCiAJLyogU2VhcmNo
IGJ5IGNvbmp1bmN0aW9uIG9mIGxvY2FsIGF0dHJpYnV0ZXMgKi8NCi0JYXR0cnMgPSBuZXcgQXJy
YXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0KKwlhdHRycyA9IG5ldyBBcnJheSgi
ZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9IGxkYi5zZWFyY2goIigmKGNvZGVQ
YWdlPXgpKHJldmlzaW9uPXgpKSIsIE5VTEwsIGxkYi5TQ09QRV9ERUZBVUxULCBhdHRycyk7DQog
CWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFzc2VydChyZXMubXNncy5sZW5ndGggPT0gMik7
DQogCWFzc2VydChyZXMubXNnc1swXS5kbiA9PSBzNC5kbigiY249WSIpKTsNCi0JYXNzZXJ0KHJl
cy5tc2dzWzBdLm9iamVjdENhdGVnb3J5ID09ICJ5Iik7DQorCWFzc2VydChyZXMubXNnc1swXS5k
bnNIb3N0TmFtZSA9PSAieSIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0ubGFzdExvZ29uID09ICJ5
Iik7DQogCWFzc2VydChyZXMubXNnc1sxXS5kbiA9PSBzNC5kbigiY249WCIpKTsNCi0JYXNzZXJ0
KHJlcy5tc2dzWzFdLm9iamVjdENhdGVnb3J5ID09ICJ4Iik7DQorCWFzc2VydChyZXMubXNnc1sx
XS5kbnNIb3N0TmFtZSA9PSAieCIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0ubGFzdExvZ29uID09
ICJ4Iik7DQogDQogCS8qIFNlYXJjaCBieSBjb25qdW5jdGlvbiBvZiByZW1vdGUgYXR0cmlidXRl
cyAqLw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFzdExvZ29uIik7
DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24iKTsNCiAJcmVz
ID0gbGRiLnNlYXJjaCgiKCYobGFzdExvZ29uPXgpKGRlc2NyaXB0aW9uPXgpKSIsIE5VTEwsIGxk
Yi5TQ09QRV9ERUZBVUxULCBhdHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFz
c2VydChyZXMubXNncy5sZW5ndGggPT0gMik7DQogCWFzc2VydChyZXMubXNnc1swXS5kbiA9PSBz
NC5kbigiY249WCIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENhdGVnb3J5ID09ICJ4
Iik7DQorCWFzc2VydChyZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9PSAieCIpOw0KIAlhc3NlcnQo
cmVzLm1zZ3NbMF0ubGFzdExvZ29uID09ICJ4Iik7DQogCWFzc2VydChyZXMubXNnc1sxXS5kbiA9
PSBzNC5kbigiY249QSIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzFdLm9iamVjdENhdGVnb3J5ID09
IHVuZGVmaW5lZCk7DQorCWFzc2VydChyZXMubXNnc1sxXS5kbnNIb3N0TmFtZSA9PSB1bmRlZmlu
ZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0ubGFzdExvZ29uID09ICJ4Iik7DQogCQ0KIAkvKiBT
ZWFyY2ggYnkgY29uanVuY3Rpb24gb2YgbG9jYWwgYW5kIHJlbW90ZSBhdHRyaWJ1dGUgKi8NCi0J
YXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0KKwlhdHRy
cyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9IGxkYi5z
ZWFyY2goIigmKGNvZGVQYWdlPXgpKGRlc2NyaXB0aW9uPXgpKSIsIE5VTEwsIGxkYi5TQ09QRV9E
RUZBVUxULCBhdHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFzc2VydChyZXMu
bXNncy5sZW5ndGggPT0gMik7DQogCWFzc2VydChyZXMubXNnc1swXS5kbiA9PSBzNC5kbigiY249
WSIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENhdGVnb3J5ID09ICJ5Iik7DQorCWFz
c2VydChyZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9PSAieSIpOw0KIAlhc3NlcnQocmVzLm1zZ3Nb
MF0ubGFzdExvZ29uID09ICJ5Iik7DQogCWFzc2VydChyZXMubXNnc1sxXS5kbiA9PSBzNC5kbigi
Y249WCIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzFdLm9iamVjdENhdGVnb3J5ID09ICJ4Iik7DQor
CWFzc2VydChyZXMubXNnc1sxXS5kbnNIb3N0TmFtZSA9PSAieCIpOw0KIAlhc3NlcnQocmVzLm1z
Z3NbMV0ubGFzdExvZ29uID09ICJ4Iik7DQogDQogCS8qIFNlYXJjaCBieSBjb25qdW5jdGlvbiBv
ZiBsb2NhbCBhbmQgcmVtb3RlIGF0dHJpYnV0ZSB3L28gbWF0Y2ggKi8NCi0JYXR0cnMgPSBuZXcg
QXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0KKwlhdHRycyA9IG5ldyBBcnJh
eSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9IGxkYi5zZWFyY2goIigmKGNv
ZGVQYWdlPXgpKG5leHRSaWQ9eCkpIiwgTlVMTCwgbGRiLlNDT1BFX0RFRkFVTFQsIGF0dHJzKTsN
CiAJYXNzZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSAw
KTsNCkBAIC01NTksMjAzICs1NTksMjAzIEBADQogCWFzc2VydChyZXMubXNncy5sZW5ndGggPT0g
MCk7DQogDQogCS8qIFNlYXJjaCBieSBkaXNqdW5jdGlvbiBvZiBsb2NhbCBhdHRyaWJ1dGVzICov
DQotCWF0dHJzID0gbmV3IEFycmF5KCJvYmplY3RDYXRlZ29yeSIsICJsYXN0TG9nb24iKTsNCi0J
cmVzID0gbGRiLnNlYXJjaCgiKHwocmV2aXNpb249eCkob2JqZWN0Q2F0ZWdvcnk9eCkpIiwgTlVM
TCwgbGRiLlNDT1BFX0RFRkFVTFQsIGF0dHJzKTsNCisJYXR0cnMgPSBuZXcgQXJyYXkoImRuc0hv
c3ROYW1lIiwgImxhc3RMb2dvbiIpOw0KKwlyZXMgPSBsZGIuc2VhcmNoKCIofChyZXZpc2lvbj14
KShkbnNIb3N0TmFtZT14KSkiLCBOVUxMLCBsZGIuU0NPUEVfREVGQVVMVCwgYXR0cnMpOw0KIAlh
c3NlcnQocmVzLmVycm9yID09IDApOw0KIAlhc3NlcnQocmVzLm1zZ3MubGVuZ3RoID09IDIpOw0K
IAlhc3NlcnQocmVzLm1zZ3NbMF0uZG4gPT0gczQuZG4oImNuPVkiKSk7DQotCWFzc2VydChyZXMu
bXNnc1swXS5vYmplY3RDYXRlZ29yeSA9PSAieSIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMF0uZG5z
SG9zdE5hbWUgPT0gInkiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmxhc3RMb2dvbiA9PSAieSIp
Ow0KIAlhc3NlcnQocmVzLm1zZ3NbMV0uZG4gPT0gczQuZG4oImNuPVgiKSk7DQotCWFzc2VydChy
ZXMubXNnc1sxXS5vYmplY3RDYXRlZ29yeSA9PSAieCIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0u
ZG5zSG9zdE5hbWUgPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAi
eCIpOw0KIA0KIAkvKiBTZWFyY2ggYnkgZGlzanVuY3Rpb24gb2YgcmVtb3RlIGF0dHJpYnV0ZXMg
Ki8NCi0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0K
KwlhdHRycyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9
IGxkYi5zZWFyY2goIih8KGJhZFB3ZENvdW50PXgpKGxhc3RMb2dvbj14KSkiLCBOVUxMLCBsZGIu
U0NPUEVfREVGQVVMVCwgYXR0cnMpOw0KIAlhc3NlcnQocmVzLmVycm9yID09IDApOw0KIAlhc3Nl
cnQocmVzLm1zZ3MubGVuZ3RoID09IDMpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0uZG4gPT0gczQu
ZG4oImNuPUIiKSk7DQotCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RDYXRlZ29yeSA9PSB1bmRl
ZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMF0uZG5zSG9zdE5hbWUgPT0gdW5kZWZpbmVkKTsN
CiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlhc3NlcnQocmVzLm1z
Z3NbMV0uZG4gPT0gczQuZG4oImNuPVgiKSk7DQotCWFzc2VydChyZXMubXNnc1sxXS5vYmplY3RD
YXRlZ29yeSA9PSAieCIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0uZG5zSG9zdE5hbWUgPT0gIngi
KTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAieCIpOw0KIAlhc3NlcnQocmVz
Lm1zZ3NbMl0uZG4gPT0gczQuZG4oImNuPUEiKSk7DQotCWFzc2VydChyZXMubXNnc1syXS5vYmpl
Y3RDYXRlZ29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMl0uZG5zSG9zdE5h
bWUgPT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmxhc3RMb2dvbiA9PSAieCIp
Ow0KIA0KIAkvKiBTZWFyY2ggYnkgZGlzanVuY3Rpb24gb2YgbG9jYWwgYW5kIHJlbW90ZSBhdHRy
aWJ1dGUgKi8NCi0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dv
biIpOw0KKwlhdHRycyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQog
CXJlcyA9IGxkYi5zZWFyY2goIih8KHJldmlzaW9uPXgpKGxhc3RMb2dvbj15KSkiLCBOVUxMLCBs
ZGIuU0NPUEVfREVGQVVMVCwgYXR0cnMpOw0KIAlhc3NlcnQocmVzLmVycm9yID09IDApOw0KIAlh
c3NlcnQocmVzLm1zZ3MubGVuZ3RoID09IDMpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0uZG4gPT0g
czQuZG4oImNuPVkiKSk7DQotCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RDYXRlZ29yeSA9PSAi
eSIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMF0uZG5zSG9zdE5hbWUgPT0gInkiKTsNCiAJYXNzZXJ0
KHJlcy5tc2dzWzBdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0uZG4g
PT0gczQuZG4oImNuPUIiKSk7DQotCWFzc2VydChyZXMubXNnc1sxXS5vYmplY3RDYXRlZ29yeSA9
PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0uZG5zSG9zdE5hbWUgPT0gdW5kZWZp
bmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlhc3NlcnQo
cmVzLm1zZ3NbMl0uZG4gPT0gczQuZG4oImNuPVgiKSk7DQotCWFzc2VydChyZXMubXNnc1syXS5v
YmplY3RDYXRlZ29yeSA9PSAieCIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMl0uZG5zSG9zdE5hbWUg
PT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmxhc3RMb2dvbiA9PSAieCIpOw0KIA0KIAkv
KiBTZWFyY2ggYnkgZGlzanVuY3Rpb24gb2YgbG9jYWwgYW5kIHJlbW90ZSBhdHRyaWJ1dGUgdy9v
IG1hdGNoICovDQotCWF0dHJzID0gbmV3IEFycmF5KCJvYmplY3RDYXRlZ29yeSIsICJsYXN0TG9n
b24iKTsNCisJYXR0cnMgPSBuZXcgQXJyYXkoImRuc0hvc3ROYW1lIiwgImxhc3RMb2dvbiIpOw0K
IAlyZXMgPSBsZGIuc2VhcmNoKCIofChjb2RlUGFnZT15KShuZXh0UmlkPXopKSIsIE5VTEwsIGxk
Yi5TQ09QRV9ERUZBVUxULCBhdHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQogCWFz
c2VydChyZXMubXNncy5sZW5ndGggPT0gMCk7DQogDQogCS8qIFNlYXJjaCBieSBuZWdhdGVkIGxv
Y2FsIGF0dHJpYnV0ZSAqLw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAi
bGFzdExvZ29uIik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9n
b24iKTsNCiAJcmVzID0gbGRiLnNlYXJjaCgiKCEocmV2aXNpb249eCkpIiwgTlVMTCwgbGRiLlND
T1BFX0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0
KHJlcy5tc2dzLmxlbmd0aCA9PSA0KTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRu
KCJjbj1CIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMF0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZp
bmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQog
CWFzc2VydChyZXMubXNnc1swXS5sYXN0TG9nb24gPT0gInkiKTsNCiAJYXNzZXJ0KHJlcy5tc2dz
WzFdLmRuID09IHM0LmRuKCJjbj1BIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0Q2F0
ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hvc3ROYW1lID09
IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0gIngiKTsNCiAJ
YXNzZXJ0KHJlcy5tc2dzWzJdLmRuID09IHM0LmRuKCJjbj1aIikpOw0KLQlhc3NlcnQocmVzLm1z
Z3NbMl0ub2JqZWN0Q2F0ZWdvcnkgPT0gInoiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzJdLmRuc0hv
c3ROYW1lID09ICJ6Iik7DQogCWFzc2VydChyZXMubXNnc1syXS5sYXN0TG9nb24gPT0gInoiKTsN
CiAJYXNzZXJ0KHJlcy5tc2dzWzNdLmRuID09IHM0LmRuKCJjbj1DIikpOw0KLQlhc3NlcnQocmVz
Lm1zZ3NbM10ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dz
WzNdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1szXS5sYXN0
TG9nb24gPT0gInoiKTsNCiANCiAJLyogU2VhcmNoIGJ5IG5lZ2F0ZWQgcmVtb3RlIGF0dHJpYnV0
ZSAqLw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFzdExvZ29uIik7
DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24iKTsNCiAJcmVz
ID0gbGRiLnNlYXJjaCgiKCEoZGVzY3JpcHRpb249eCkpIiwgTlVMTCwgbGRiLlNDT1BFX0RFRkFV
TFQsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dz
Lmxlbmd0aCA9PSAyKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1aIikp
Ow0KLQlhc3NlcnQocmVzLm1zZ3NbMF0ub2JqZWN0Q2F0ZWdvcnkgPT0gInoiKTsNCisJYXNzZXJ0
KHJlcy5tc2dzWzBdLmRuc0hvc3ROYW1lID09ICJ6Iik7DQogCWFzc2VydChyZXMubXNnc1swXS5s
YXN0TG9nb24gPT0gInoiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJjbj1D
IikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsN
CisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2Vy
dChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0gInoiKTsNCiANCiAJLyogU2VhcmNoIGJ5IG5lZ2F0
ZWQgY29uanVuY3Rpb24gb2YgbG9jYWwgYXR0cmlidXRlcyAqLw0KLQlhdHRycyA9IG5ldyBBcnJh
eSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFzdExvZ29uIik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJk
bnNIb3N0TmFtZSIsICJsYXN0TG9nb24iKTsNCiAJcmVzID0gbGRiLnNlYXJjaCgiKCEoJihjb2Rl
UGFnZT14KShyZXZpc2lvbj14KSkpIiwgTlVMTCwgbGRiLlNDT1BFX0RFRkFVTFQsIGF0dHJzKTsN
CiAJYXNzZXJ0KHJlcy5lcnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSA0
KTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1CIikpOw0KLQlhc3NlcnQo
cmVzLm1zZ3NbMF0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5t
c2dzWzBdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1swXS5s
YXN0TG9nb24gPT0gInkiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJjbj1B
IikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsN
CisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2Vy
dChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmRu
ID09IHM0LmRuKCJjbj1aIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMl0ub2JqZWN0Q2F0ZWdvcnkg
PT0gInoiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzJdLmRuc0hvc3ROYW1lID09ICJ6Iik7DQogCWFz
c2VydChyZXMubXNnc1syXS5sYXN0TG9nb24gPT0gInoiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzNd
LmRuID09IHM0LmRuKCJjbj1DIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbM10ub2JqZWN0Q2F0ZWdv
cnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzNdLmRuc0hvc3ROYW1lID09IHVu
ZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1szXS5sYXN0TG9nb24gPT0gInoiKTsNCiANCiAJ
LyogU2VhcmNoIGJ5IG5lZ2F0ZWQgY29uanVuY3Rpb24gb2YgcmVtb3RlIGF0dHJpYnV0ZXMgKi8N
Ci0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0KKwlh
dHRycyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQogCXJlcyA9IGxk
Yi5zZWFyY2goIighKCYobGFzdExvZ29uPXgpKGRlc2NyaXB0aW9uPXgpKSkiLCBOVUxMLCBsZGIu
U0NPUEVfREVGQVVMVCwgYXR0cnMpOw0KIAlhc3NlcnQocmVzLmVycm9yID09IDApOw0KIAlhc3Nl
cnQocmVzLm1zZ3MubGVuZ3RoID09IDQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0uZG4gPT0gczQu
ZG4oImNuPVkiKSk7DQotCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RDYXRlZ29yeSA9PSAieSIp
Ow0KKwlhc3NlcnQocmVzLm1zZ3NbMF0uZG5zSG9zdE5hbWUgPT0gInkiKTsNCiAJYXNzZXJ0KHJl
cy5tc2dzWzBdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0uZG4gPT0g
czQuZG4oImNuPUIiKSk7DQotCWFzc2VydChyZXMubXNnc1sxXS5vYmplY3RDYXRlZ29yeSA9PSB1
bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0uZG5zSG9zdE5hbWUgPT0gdW5kZWZpbmVk
KTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlhc3NlcnQocmVz
Lm1zZ3NbMl0uZG4gPT0gczQuZG4oImNuPVoiKSk7DQotCWFzc2VydChyZXMubXNnc1syXS5vYmpl
Y3RDYXRlZ29yeSA9PSAieiIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMl0uZG5zSG9zdE5hbWUgPT0g
InoiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmxhc3RMb2dvbiA9PSAieiIpOw0KIAlhc3NlcnQo
cmVzLm1zZ3NbM10uZG4gPT0gczQuZG4oImNuPUMiKSk7DQotCWFzc2VydChyZXMubXNnc1szXS5v
YmplY3RDYXRlZ29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbM10uZG5zSG9z
dE5hbWUgPT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzNdLmxhc3RMb2dvbiA9PSAi
eiIpOw0KIA0KIAkvKiBTZWFyY2ggYnkgbmVnYXRlZCBjb25qdW5jdGlvbiBvZiBsb2NhbCBhbmQg
cmVtb3RlIGF0dHJpYnV0ZSAqLw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnki
LCAibGFzdExvZ29uIik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0
TG9nb24iKTsNCiAJcmVzID0gbGRiLnNlYXJjaCgiKCEoJihjb2RlUGFnZT14KShkZXNjcmlwdGlv
bj14KSkpIiwgTlVMTCwgbGRiLlNDT1BFX0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5l
cnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCA9PSA0KTsNCiAJYXNzZXJ0KHJl
cy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1CIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMF0ub2Jq
ZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3RO
YW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1swXS5sYXN0TG9nb24gPT0gInki
KTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0LmRuKCJjbj1BIikpOw0KLQlhc3NlcnQo
cmVzLm1zZ3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5t
c2dzWzFdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1sxXS5s
YXN0TG9nb24gPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmRuID09IHM0LmRuKCJjbj1a
IikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMl0ub2JqZWN0Q2F0ZWdvcnkgPT0gInoiKTsNCisJYXNz
ZXJ0KHJlcy5tc2dzWzJdLmRuc0hvc3ROYW1lID09ICJ6Iik7DQogCWFzc2VydChyZXMubXNnc1sy
XS5sYXN0TG9nb24gPT0gInoiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzNdLmRuID09IHM0LmRuKCJj
bj1DIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbM10ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVk
KTsNCisJYXNzZXJ0KHJlcy5tc2dzWzNdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFz
c2VydChyZXMubXNnc1szXS5sYXN0TG9nb24gPT0gInoiKTsNCiANCiAJLyogU2VhcmNoIGJ5IG5l
Z2F0ZWQgZGlzanVuY3Rpb24gb2YgbG9jYWwgYXR0cmlidXRlcyAqLw0KLQlhdHRycyA9IG5ldyBB
cnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFzdExvZ29uIik7DQotCXJlcyA9IGxkYi5zZWFyY2go
IighKHwocmV2aXNpb249eCkob2JqZWN0Q2F0ZWdvcnk9eCkpKSIsIE5VTEwsIGxkYi5TQ09QRV9E
RUZBVUxULCBhdHRycyk7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0
TG9nb24iKTsNCisJcmVzID0gbGRiLnNlYXJjaCgiKCEofChyZXZpc2lvbj14KShkbnNIb3N0TmFt
ZT14KSkpIiwgTlVMTCwgbGRiLlNDT1BFX0RFRkFVTFQsIGF0dHJzKTsNCiAJYXNzZXJ0KHJlcy5l
cnJvciA9PSAwKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmRuID09IHM0LmRuKCJjbj1CIikpOw0K
LQlhc3NlcnQocmVzLm1zZ3NbMF0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNz
ZXJ0KHJlcy5tc2dzWzBdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMu
bXNnc1swXS5sYXN0TG9nb24gPT0gInkiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuID09IHM0
LmRuKCJjbj1BIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMV0ub2JqZWN0Q2F0ZWdvcnkgPT0gdW5k
ZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzFdLmRuc0hvc3ROYW1lID09IHVuZGVmaW5lZCk7
DQogCWFzc2VydChyZXMubXNnc1sxXS5sYXN0TG9nb24gPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5t
c2dzWzJdLmRuID09IHM0LmRuKCJjbj1aIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbMl0ub2JqZWN0
Q2F0ZWdvcnkgPT0gInoiKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzJdLmRuc0hvc3ROYW1lID09ICJ6
Iik7DQogCWFzc2VydChyZXMubXNnc1syXS5sYXN0TG9nb24gPT0gInoiKTsNCiAJYXNzZXJ0KHJl
cy5tc2dzWzNdLmRuID09IHM0LmRuKCJjbj1DIikpOw0KLQlhc3NlcnQocmVzLm1zZ3NbM10ub2Jq
ZWN0Q2F0ZWdvcnkgPT0gdW5kZWZpbmVkKTsNCisJYXNzZXJ0KHJlcy5tc2dzWzNdLmRuc0hvc3RO
YW1lID09IHVuZGVmaW5lZCk7DQogCWFzc2VydChyZXMubXNnc1szXS5sYXN0TG9nb24gPT0gInoi
KTsNCiANCiAJLyogU2VhcmNoIGJ5IG5lZ2F0ZWQgZGlzanVuY3Rpb24gb2YgcmVtb3RlIGF0dHJp
YnV0ZXMgKi8NCi0JYXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dv
biIpOw0KKwlhdHRycyA9IG5ldyBBcnJheSgiZG5zSG9zdE5hbWUiLCAibGFzdExvZ29uIik7DQog
CXJlcyA9IGxkYi5zZWFyY2goIighKHwoYmFkUHdkQ291bnQ9eCkobGFzdExvZ29uPXgpKSkiLCBO
VUxMLCBsZGIuU0NPUEVfREVGQVVMVCwgYXR0cnMpOw0KIAlhc3NlcnQocmVzLmVycm9yID09IDAp
Ow0KIAlhc3NlcnQocmVzLm1zZ3MubGVuZ3RoID09IDMpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0u
ZG4gPT0gczQuZG4oImNuPVkiKSk7DQotCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RDYXRlZ29y
eSA9PSAieSIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMF0uZG5zSG9zdE5hbWUgPT0gInkiKTsNCiAJ
YXNzZXJ0KHJlcy5tc2dzWzBdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlhc3NlcnQocmVzLm1zZ3Nb
MV0uZG4gPT0gczQuZG4oImNuPVoiKSk7DQotCWFzc2VydChyZXMubXNnc1sxXS5vYmplY3RDYXRl
Z29yeSA9PSAieiIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0uZG5zSG9zdE5hbWUgPT0gInoiKTsN
CiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAieiIpOw0KIAlhc3NlcnQocmVzLm1z
Z3NbMl0uZG4gPT0gczQuZG4oImNuPUMiKSk7DQotCWFzc2VydChyZXMubXNnc1syXS5vYmplY3RD
YXRlZ29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMl0uZG5zSG9zdE5hbWUg
PT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmxhc3RMb2dvbiA9PSAieiIpOw0K
IA0KIAkvKiBTZWFyY2ggYnkgbmVnYXRlZCBkaXNqdW5jdGlvbiBvZiBsb2NhbCBhbmQgcmVtb3Rl
IGF0dHJpYnV0ZSAqLw0KLQlhdHRycyA9IG5ldyBBcnJheSgib2JqZWN0Q2F0ZWdvcnkiLCAibGFz
dExvZ29uIik7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJsYXN0TG9nb24i
KTsNCiAJcmVzID0gbGRiLnNlYXJjaCgiKCEofChyZXZpc2lvbj14KShsYXN0TG9nb249eSkpKSIs
IE5VTEwsIGxkYi5TQ09QRV9ERUZBVUxULCBhdHRycyk7DQogCWFzc2VydChyZXMuZXJyb3IgPT0g
MCk7DQogCWFzc2VydChyZXMubXNncy5sZW5ndGggPT0gMyk7DQogCWFzc2VydChyZXMubXNnc1sw
XS5kbiA9PSBzNC5kbigiY249QSIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dzWzBdLm9iamVjdENhdGVn
b3J5ID09IHVuZGVmaW5lZCk7DQorCWFzc2VydChyZXMubXNnc1swXS5kbnNIb3N0TmFtZSA9PSB1
bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMF0ubGFzdExvZ29uID09ICJ4Iik7DQogCWFz
c2VydChyZXMubXNnc1sxXS5kbiA9PSBzNC5kbigiY249WiIpKTsNCi0JYXNzZXJ0KHJlcy5tc2dz
WzFdLm9iamVjdENhdGVnb3J5ID09ICJ6Iik7DQorCWFzc2VydChyZXMubXNnc1sxXS5kbnNIb3N0
TmFtZSA9PSAieiIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMV0ubGFzdExvZ29uID09ICJ6Iik7DQog
CWFzc2VydChyZXMubXNnc1syXS5kbiA9PSBzNC5kbigiY249QyIpKTsNCi0JYXNzZXJ0KHJlcy5t
c2dzWzJdLm9iamVjdENhdGVnb3J5ID09IHVuZGVmaW5lZCk7DQorCWFzc2VydChyZXMubXNnc1sy
XS5kbnNIb3N0TmFtZSA9PSB1bmRlZmluZWQpOw0KIAlhc3NlcnQocmVzLm1zZ3NbMl0ubGFzdExv
Z29uID09ICJ6Iik7DQogDQogCS8qIFNlYXJjaCBieSBjb21wbGV4IHBhcnNlIHRyZWUgKi8NCi0J
YXR0cnMgPSBuZXcgQXJyYXkoIm9iamVjdENhdGVnb3J5IiwgImxhc3RMb2dvbiIpOw0KLQlyZXMg
PSBsZGIuc2VhcmNoKCIofCgmKHJldmlzaW9uPXgpKG9iamVjdENhdGVnb3J5PXgpKSghKCYoZGVz
Y3JpcHRpb249eCkobmV4dFJpZD15KSkpKGJhZFB3ZENvdW50PXkpKSIsIE5VTEwsIGxkYi5TQ09Q
RV9ERUZBVUxULCBhdHRycyk7DQorCWF0dHJzID0gbmV3IEFycmF5KCJkbnNIb3N0TmFtZSIsICJs
YXN0TG9nb24iKTsNCisJcmVzID0gbGRiLnNlYXJjaCgiKHwoJihyZXZpc2lvbj14KShkbnNIb3N0
TmFtZT14KSkoISgmKGRlc2NyaXB0aW9uPXgpKG5leHRSaWQ9eSkpKShiYWRQd2RDb3VudD15KSki
LCBOVUxMLCBsZGIuU0NPUEVfREVGQVVMVCwgYXR0cnMpOw0KIAlhc3NlcnQocmVzLmVycm9yID09
IDApOw0KIAlhc3NlcnQocmVzLm1zZ3MubGVuZ3RoID09IDUpOw0KIAlhc3NlcnQocmVzLm1zZ3Nb
MF0uZG4gPT0gczQuZG4oImNuPUIiKSk7DQotCWFzc2VydChyZXMubXNnc1swXS5vYmplY3RDYXRl
Z29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMF0uZG5zSG9zdE5hbWUgPT0g
dW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzBdLmxhc3RMb2dvbiA9PSAieSIpOw0KIAlh
c3NlcnQocmVzLm1zZ3NbMV0uZG4gPT0gczQuZG4oImNuPVgiKSk7DQotCWFzc2VydChyZXMubXNn
c1sxXS5vYmplY3RDYXRlZ29yeSA9PSAieCIpOw0KKwlhc3NlcnQocmVzLm1zZ3NbMV0uZG5zSG9z
dE5hbWUgPT0gIngiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzFdLmxhc3RMb2dvbiA9PSAieCIpOw0K
IAlhc3NlcnQocmVzLm1zZ3NbMl0uZG4gPT0gczQuZG4oImNuPUEiKSk7DQotCWFzc2VydChyZXMu
bXNnc1syXS5vYmplY3RDYXRlZ29yeSA9PSB1bmRlZmluZWQpOw0KKwlhc3NlcnQocmVzLm1zZ3Nb
Ml0uZG5zSG9zdE5hbWUgPT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzJdLmxhc3RM
b2dvbiA9PSAieCIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbM10uZG4gPT0gczQuZG4oImNuPVoiKSk7
DQotCWFzc2VydChyZXMubXNnc1szXS5vYmplY3RDYXRlZ29yeSA9PSAieiIpOw0KKwlhc3NlcnQo
cmVzLm1zZ3NbM10uZG5zSG9zdE5hbWUgPT0gInoiKTsNCiAJYXNzZXJ0KHJlcy5tc2dzWzNdLmxh
c3RMb2dvbiA9PSAieiIpOw0KIAlhc3NlcnQocmVzLm1zZ3NbNF0uZG4gPT0gczQuZG4oImNuPUMi
KSk7DQotCWFzc2VydChyZXMubXNnc1s0XS5vYmplY3RDYXRlZ29yeSA9PSB1bmRlZmluZWQpOw0K
Kwlhc3NlcnQocmVzLm1zZ3NbNF0uZG5zSG9zdE5hbWUgPT0gdW5kZWZpbmVkKTsNCiAJYXNzZXJ0
KHJlcy5tc2dzWzRdLmxhc3RMb2dvbiA9PSAieiIpOw0KIA0KIAkvKiBDbGVhbiB1cCAqLw0KSW5k
ZXg6IHRlc3Rwcm9ncy9lanMvbGRhcC5qcw0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIHRlc3Rwcm9ncy9lanMv
bGRhcC5qcwkocmV2aXNpb24gMjM1NTApDQorKysgdGVzdHByb2dzL2Vqcy9sZGFwLmpzCSh3b3Jr
aW5nIGNvcHkpDQpAQCAtMjUsNyArMjUsNyBAQA0KIA0KIHZhciBob3N0ID0gb3B0aW9ucy5BUkdW
WzBdOw0KIA0KLWZ1bmN0aW9uIGJhc2ljX3Rlc3RzKGxkYiwgZ2NfbGRiLCBiYXNlX2RuLCBjb25m
aWd1cmF0aW9uX2RuKQ0KK2Z1bmN0aW9uIGJhc2ljX3Rlc3RzKGxkYiwgZ2NfbGRiLCBiYXNlX2Ru
LCBjb25maWd1cmF0aW9uX2RuLCBzY2hlbWFfZG4pDQogew0KIAlwcmludGxuKCJSdW5uaW5nIGJh
c2ljIHRlc3RzIik7DQogDQpAQCAtNDczLDYgKzQ3MywyNCBAQA0KIAlhc3NlcnQocmVzLmVycm9y
ID09IDApOw0KIAlhc3NlcnQgKHJlcy5tc2dzLmxlbmd0aCA+IDApOw0KIA0KKwlwcmludGxuKCJU
ZXN0aW5nIG9iamVjdENhdGVnb3J5IGNhbm9uYWNvbGlzYXRpb24iKTsNCisJdmFyIGF0dHJzID0g
bmV3IEFycmF5KCJjbiIpOw0KKwl2YXIgcmVzID0gbGRiLnNlYXJjaCgib2JqZWN0Q2F0ZWdvcnk9
bnREc0RTQSIsIGNvbmZpZ3VyYXRpb25fZG4sIGxkYi5TQ09QRV9TVUJUUkVFLCBhdHRycyk7DQor
CWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQorCWlmIChyZXMubXNncy5sZW5ndGggPT0gMCkgew0K
KwkJcHJpbnRsbigiRGlkbid0IGZpbmQgYW55IHJlY29yZHMgd2l0aCBvYmplY3RDYXRlZ29yeT1u
dERzRFNBIik7DQorCX0NCisJYXNzZXJ0KHJlcy5tc2dzLmxlbmd0aCAhPSAwKTsNCisJDQorCXZh
ciBhdHRycyA9IG5ldyBBcnJheSgiY24iKTsNCisJdmFyIHJlcyA9IGxkYi5zZWFyY2goIm9iamVj
dENhdGVnb3J5PUNOPW50RHMtRFNBLCIgKyBzY2hlbWFfZG4sIGNvbmZpZ3VyYXRpb25fZG4sIGxk
Yi5TQ09QRV9TVUJUUkVFLCBhdHRycyk7DQorCWFzc2VydChyZXMuZXJyb3IgPT0gMCk7DQorCWlm
IChyZXMubXNncy5sZW5ndGggPT0gMCkgew0KKwkJcHJpbnRsbigiRGlkbid0IGZpbmQgYW55IHJl
Y29yZHMgd2l0aCBvYmplY3RDYXRlZ29yeT1DTj1udERzLURTQSwiICsgc2NoZW1hX2RuKTsNCisJ
fQ0KKwlhc3NlcnQocmVzLm1zZ3MubGVuZ3RoICE9IDApOw0KKwkNCisNCiB9DQogDQogZnVuY3Rp
b24gYmFzZWRuX3Rlc3RzKGxkYiwgZ2NfbGRiKQ0KQEAgLTUyMiw2ICs1NDAsMTUgQEANCiAgICAg
cmV0dXJuIHJlcy5tc2dzWzBdLmNvbmZpZ3VyYXRpb25OYW1pbmdDb250ZXh0Ow0KIH0NCiANCitm
dW5jdGlvbiBmaW5kX3NjaGVtYWRuKGxkYikNCit7DQorICAgIHZhciBhdHRycyA9IG5ldyBBcnJh
eSgic2NoZW1hTmFtaW5nQ29udGV4dCIpOw0KKyAgICB2YXIgcmVzID0gbGRiLnNlYXJjaCgiIiwg
IiIsIGxkYi5TQ09QRV9CQVNFLCBhdHRycyk7DQorICAgIGFzc2VydChyZXMuZXJyb3IgPT0gMCk7
DQorICAgIGFzc2VydChyZXMubXNncy5sZW5ndGggPT0gMSk7DQorICAgIHJldHVybiByZXMubXNn
c1swXS5zY2hlbWFOYW1pbmdDb250ZXh0Ow0KK30NCisNCiAvKiB1c2UgY29tbWFuZCBsaW5lIGNy
ZWRzIGlmIGF2YWlsYWJsZSAqLw0KIGxkYi5jcmVkZW50aWFscyA9IG9wdGlvbnMuZ2V0X2NyZWRl
bnRpYWxzKCk7DQogZ2NfbGRiLmNyZWRlbnRpYWxzID0gb3B0aW9ucy5nZXRfY3JlZGVudGlhbHMo
KTsNCkBAIC01MjksNiArNTU2LDcgQEANCiB2YXIgb2sgPSBsZGIuY29ubmVjdCgibGRhcDovLyIg
KyBob3N0KTsNCiB2YXIgYmFzZV9kbiA9IGZpbmRfYmFzZWRuKGxkYik7DQogdmFyIGNvbmZpZ3Vy
YXRpb25fZG4gPSBmaW5kX2NvbmZpZ3VyYXRpb25kbihsZGIpOw0KK3ZhciBzY2hlbWFfZG4gPSBm
aW5kX3NjaGVtYWRuKGxkYik7DQogDQogcHJpbnRmKCJiYXNlRE46ICVzXG4iLCBiYXNlX2RuKTsN
CiANCkBAIC01MzcsNyArNTY1LDcgQEANCiAJZ2NfbGRiID0gdW5kZWZpbmVkOw0KIH0NCiANCi1i
YXNpY190ZXN0cyhsZGIsIGdjX2xkYiwgYmFzZV9kbiwgY29uZmlndXJhdGlvbl9kbikNCitiYXNp
Y190ZXN0cyhsZGIsIGdjX2xkYiwgYmFzZV9kbiwgY29uZmlndXJhdGlvbl9kbiwgc2NoZW1hX2Ru
KQ0KIA0KIGJhc2Vkbl90ZXN0cyhsZGIsIGdjX2xkYikNCiANCkluZGV4OiB0ZXN0cHJvZ3MvYmxh
Y2tib3gvdGVzdF9raW5pdC5zaA0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIHRlc3Rwcm9ncy9ibGFja2JveC90
ZXN0X2tpbml0LnNoCShyZXZpc2lvbiAyMzU1MCkNCisrKyB0ZXN0cHJvZ3MvYmxhY2tib3gvdGVz
dF9raW5pdC5zaAkod29ya2luZyBjb3B5KQ0KQEAgLTM0LDEyICszNCwzMCBAQA0KIGV4cG9ydCBL
UkI1Q0NOQU1FDQogDQogZWNobyAkUEFTU1dPUkQgPiAuL3RtcHBhc3NmaWxlDQotdGVzdGl0ICJr
aW5pdCB3aXRoIHBhc3N3b3JkIiBzYW1iYTRraW5pdCAtLXBhc3N3b3JkLWZpbGU9Li90bXBwYXNz
ZmlsZSAtLXJlcXVlc3QtcGFjICRVU0VSTkFNRUAkUkVBTE0gICB8fCBmYWlsZWQ9YGV4cHIgJGZh
aWxlZCArIDFgDQotdGVzdGl0ICJraW5pdCB3aXRoIHBraW5pdCIgc2FtYmE0a2luaXQgLS1yZXF1
ZXN0LXBhYyAtLXBrLXVzZXI9RklMRTokUFJFRklYL2RjL3ByaXZhdGUvdGxzL2FkbWluY2VydC5w
ZW0sJFBSRUZJWC9kYy9wcml2YXRlL3Rscy9hZG1pbmtleS5wZW0gJFVTRVJOQU1FQCRSRUFMTSB8
fCBmYWlsZWQ9YGV4cHIgJGZhaWxlZCArIDFgDQordGVzdGl0ICJraW5pdCB3aXRoIHBhc3N3b3Jk
IiBiaW4vc2FtYmE0a2luaXQgLS1wYXNzd29yZC1maWxlPS4vdG1wcGFzc2ZpbGUgLS1yZXF1ZXN0
LXBhYyAkVVNFUk5BTUVAJFJFQUxNICAgfHwgZmFpbGVkPWBleHByICRmYWlsZWQgKyAxYA0KK3Rl
c3RpdCAia2luaXQgd2l0aCBwa2luaXQiIGJpbi9zYW1iYTRraW5pdCAtLXJlcXVlc3QtcGFjIC0t
cGstdXNlcj1GSUxFOiRQUkVGSVgvZGMvcHJpdmF0ZS90bHMvYWRtaW5jZXJ0LnBlbSwkUFJFRklY
L2RjL3ByaXZhdGUvdGxzL2FkbWlua2V5LnBlbSAkVVNFUk5BTUVAJFJFQUxNIHx8IGZhaWxlZD1g
ZXhwciAkZmFpbGVkICsgMWANCiANCiBlY2hvIGxzIHwgdGVzdGl0ICJUZXN0IGxvZ2luIHdpdGgg
a2VyYmVyb3MgY2NhY2hlIiAkVkFMR1JJTkQgYmluL3NtYmNsaWVudCAkQ09ORklHVVJBVElPTiAv
LyRTRVJWRVIvdG1wIC1rIHllcyB8fCBmYWlsZWQ9YGV4cHIgJGZhaWxlZCArIDFgDQogDQotdGVz
dGl0ICJkb21haW4gam9pbiB3aXRoIGtlcmJlcm9zIGNjYWNoZSIgJFZBTEdSSU5EIGJpbi9uZXQg
am9pbiAkRE9NQUlOICRDT05GSUdVUkFUSU9OICAtVyAiJERPTUFJTiIgLWsgeWVzICRADQordGVz
dGl0ICJkb21haW4gam9pbiB3aXRoIGtlcmJlcm9zIGNjYWNoZSIgJFZBTEdSSU5EIGJpbi9uZXQg
am9pbiAkRE9NQUlOICRDT05GSUdVUkFUSU9OICAtVyAiJERPTUFJTiIgLWsgeWVzICRAIHx8IGZh
aWxlZD1gZXhwciAkZmFpbGVkICsgMWANCiANCi1ybSAtZiB0bXBjY2ZpbGUgdG1wcGFzc2ZpbGUN
Cit0ZXN0aXQgImFkZCB1c2VyIHdpdGgga2VyYmVyb3MgY2NhY2hlIiAkVkFMR1JJTkQgYmluL25l
dCB1c2VyIGFkZCBuZXR0ZXN0dXNlciAkQ09ORklHVVJBVElPTiAgLWsgeWVzICRAIHx8IGZhaWxl
ZD1gZXhwciAkZmFpbGVkICsgMWANCitVU0VSUEFTUz10ZXN0UGFzc0AxMiUNCisNCitLUkI1Q0NO
QU1FPWBwd2RgL3RtcHVzZXJjY2FjaGUNCitleHBvcnQgS1JCNUNDTkFNRQ0KKw0KK3Rlc3RpdCAi
c2V0IHVzZXIgcGFzc3dvcmQgd2l0aCBrZXJiZXJvcyBjY2FjaGUiICRWQUxHUklORCBiaW4vbmV0
IHBhc3N3b3JkIHNldCAkUkVBTE1cXG5ldHRlc3R1c2VyICRVU0VSUEFTUyAkQ09ORklHVVJBVElP
TiAgLWsgeWVzICRAIHx8IGZhaWxlZD1gZXhwciAkZmFpbGVkICsgMWANCisNCitLUkI1Q0NOQU1F
PWBwd2RgL3RtcHVzZXJjY2FjaGUNCitleHBvcnQgS1JCNUNDTkFNRQ0KKw0KK3Rlc3RpdCAia2lu
aXQgd2l0aCB1c2VyIHBhc3N3b3JkIiBiaW4vc2FtYmE0a2luaXQgLS1wYXNzd29yZC1maWxlPS4v
dG1wdXNlcnBhc3NmaWxlIC0tcmVxdWVzdC1wYWMgbmV0dGVzdHVzZXJAJFJFQUxNICAgfHwgZmFp
bGVkPWBleHByICRmYWlsZWQgKyAxYA0KKw0KK0tSQjVDQ05BTUU9YHB3ZGAvdG1wY2NhY2hlDQor
ZXhwb3J0IEtSQjVDQ05BTUUNCisNCit0ZXN0aXQgImRlbCB1c2VyIHdpdGgga2VyYmVyb3MgY2Nh
Y2hlIiAkVkFMR1JJTkQgYmluL25ldCB1c2VyIGRlbGV0ZSBuZXR0ZXN0dXNlciAkQ09ORklHVVJB
VElPTiAgLWsgeWVzICRAIHx8IGZhaWxlZD1gZXhwciAkZmFpbGVkICsgMWANCisNCitybSAtZiB0
bXBjY2ZpbGUgdG1wcGFzc2ZpbGUgdG1wdXNlcmNjYWNoZQ0KIGV4aXQgJGZhaWxlZA0KSW5kZXg6
IHNvdXJjZS9zY3JpcHRpbmcvbGlianMvcHJvdmlzaW9uLmpzDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0gc291
cmNlL3NjcmlwdGluZy9saWJqcy9wcm92aXNpb24uanMJKHJldmlzaW9uIDIzNTUxKQ0KKysrIHNv
dXJjZS9zY3JpcHRpbmcvbGlianMvcHJvdmlzaW9uLmpzCSh3b3JraW5nIGNvcHkpDQpAQCAtNjEx
LDcgKzYxMSw3IEBADQogCXZhciBtb2RpZnlfb2sgPSBzZXR1cF9sZGJfbW9kaWZ5KCJwcm92aXNp
b25fc2NoZW1hX2Jhc2Vkbl9tb2RpZnkubGRpZiIsIGluZm8sIHNhbWRiKTsNCiAJaWYgKCFtb2Rp
Znlfb2spIHsNCiAJCWlmICghYWRkX29rKSB7DQotCQkJbWVzc2FnZSgiRmFpbGVkIHRvIGJvdGgg
YWRkIGFuZCBtb2RpZnkgc2NoZW1hIGRuOiArIHNhbWRiLmVycnN0cmluZygpICsgIlxuIik7DQor
CQkJbWVzc2FnZSgiRmFpbGVkIHRvIGJvdGggYWRkIGFuZCBtb2RpZnkgc2NoZW1hIGRuOiIgKyBz
YW1kYi5lcnJzdHJpbmcoKSArICJcbiIpOw0KIAkJCW1lc3NhZ2UoIlBlcmhhcHMgeW91IG5lZWQg
dG8gcnVuIHRoZSBwcm92aXNpb24gc2NyaXB0IHdpdGggdGhlIC0tbGRhcC1iYXNlLWRuIG9wdGlv
biwgYW5kIGFkZCB0aGlzIHJlY29yZCB0byB0aGUgYmFja2VuZCBtYW51YWxseVxuIik7IA0KIAkJ
CWFzc2VydChtb2RpZnlfb2spOw0KIAkJfQ0KQEAgLTc0NCw3ICs3NDQsNyBAQA0KIAl2YXIgbW9k
aWZ5X29rID0gc2V0dXBfbGRiX21vZGlmeSgicHJvdmlzaW9uX3NjaGVtYV9iYXNlZG5fbW9kaWZ5
LmxkaWYiLCBpbmZvLCBzYW1kYik7DQogCWlmICghbW9kaWZ5X29rKSB7DQogCQlpZiAoIWFkZF9v
aykgew0KLQkJCW1lc3NhZ2UoIkZhaWxlZCB0byBib3RoIGFkZCBhbmQgbW9kaWZ5IHNjaGVtYSBk
bjogKyBzYW1kYi5lcnJzdHJpbmcoKSArICJcbiIpOw0KKwkJCW1lc3NhZ2UoIkZhaWxlZCB0byBi
b3RoIGFkZCBhbmQgbW9kaWZ5IHNjaGVtYSBkbjogIiArIHNhbWRiLmVycnN0cmluZygpICsgIlxu
Iik7DQogCQkJbWVzc2FnZSgiUGVyaGFwcyB5b3UgbmVlZCB0byBydW4gdGhlIHByb3Zpc2lvbiBz
Y3JpcHQgd2l0aCB0aGUgLS1sZGFwLWJhc2UtZG4gb3B0aW9uLCBhbmQgYWRkIHRoaXMgcmVjb3Jk
IHRvIHRoZSBiYWNrZW5kIG1hbnVhbGx5XG4iKTsgDQogCQkJYXNzZXJ0KG1vZGlmeV9vayk7DQog
CQl9DQpAQCAtODgyLDE2ICs4ODIsMTggQEANCiAJCQkJCSJleHRlbmRlZF9kbiIsDQogCQkJCQki
YXNxIiwNCiAJCQkJCSJzYW1sZGIiLA0KLQkJCQkJInBhc3N3b3JkX2hhc2giLA0KIAkJCQkJIm9w
ZXJhdGlvbmFsIiwNCiAJCQkJCSJvYmplY3RjbGFzcyIsDQogCQkJCQkicmRuX25hbWUiLA0KIAkJ
CQkJInNob3dfZGVsZXRlZCIsDQogCQkJCQkicGFydGl0aW9uIik7DQogCXN1Ym9iai5NT0RVTEVT
X0xJU1QgPSBqb2luKCIsIiwgbW9kdWxlc19saXN0KTsNCi0Jc3Vib2JqLkRPTUFJTkROX01PRCA9
ICJvYmplY3RndWlkIjsNCi0Jc3Vib2JqLkNPTkZJR0ROX01PRCA9ICJvYmplY3RndWlkIjsNCi0J
c3Vib2JqLlNDSEVNQUROX01PRCA9ICJvYmplY3RndWlkIjsNCisJc3Vib2JqLkRPTUFJTkROX01P
RCA9ICJwZGNfZnNtbyxwYXNzd29yZF9oYXNoIjsNCisJc3Vib2JqLkNPTkZJR0ROX01PRCA9ICJu
YW1pbmdfZnNtbyI7DQorCXN1Ym9iai5TQ0hFTUFETl9NT0QgPSAic2NoZW1hX2ZzbW8iOw0KKwlz
dWJvYmouRE9NQUlORE5fTU9EMiA9ICIsb2JqZWN0Z3VpZCI7DQorCXN1Ym9iai5DT05GSUdETl9N
T0QyID0gIixvYmplY3RndWlkIjsNCisJc3Vib2JqLlNDSEVNQUROX01PRDIgPSAiLG9iamVjdGd1
aWQiOw0KIA0KIAlzdWJvYmouRVhURU5TSUJMRU9CSkVDVCA9ICIjIG5vIG9iamVjdENsYXNzOiBl
eHRlbnNpYmxlT2JqZWN0IGZvciBsb2NhbCBsZGIiOw0KIAlzdWJvYmouQUNJCQk9ICIjIG5vIGFj
aSBmb3IgbG9jYWwgbGRiIjsNCkluZGV4OiBzb3VyY2UvbGliL2RiX3dyYXAuYw0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KLS0tIHNvdXJjZS9saWIvZGJfd3JhcC5jCShyZXZpc2lvbiAyMzU1MSkNCisrKyBzb3VyY2Uv
bGliL2RiX3dyYXAuYwkod29ya2luZyBjb3B5KQ0KQEAgLTM1LDYgKzM1LDcgQEANCiAjaW5jbHVk
ZSAibGliL2xkYi9pbmNsdWRlL2xkYl9lcnJvcnMuaCINCiAjaW5jbHVkZSAibGliL2xkYi9zYW1i
YS9sZGlmX2hhbmRsZXJzLmgiDQogI2luY2x1ZGUgImRiX3dyYXAuaCINCisjaW5jbHVkZSAiZHNk
Yi9zYW1kYi9zYW1kYi5oIg0KIA0KIHN0YXRpYyBzdHJ1Y3QgdGRiX3dyYXAgKnRkYl9saXN0Ow0K
IA0KQEAgLTEyNiw2ICsxMjcsMTAgQEANCiAJCXRhbGxvY19mcmVlKGxkYik7DQogCQlyZXR1cm4g
TlVMTDsNCiAJfQ0KKwkNCisJaWYgKHN0cmNtcChscF9zYW1fdXJsKCksIHVybCkgPT0gMCkgew0K
KwkgIGRzZGJfc2V0X2dsb2JhbF9zY2hlbWEobGRiKTsNCisJfQ0KIA0KIAlyZXQgPSBsZGJfcmVn
aXN0ZXJfc2FtYmFfaGFuZGxlcnMobGRiKTsNCiAJaWYgKHJldCA9PSAtMSkgew0KSW5kZXg6IHNv
dXJjZS9saWIvbGRiL3NhbWJhL2xkaWZfaGFuZGxlcnMuYw0KPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIHNvdXJj
ZS9saWIvbGRiL3NhbWJhL2xkaWZfaGFuZGxlcnMuYwkocmV2aXNpb24gMjM1NTEpDQorKysgc291
cmNlL2xpYi9sZGIvc2FtYmEvbGRpZl9oYW5kbGVycy5jCSh3b3JraW5nIGNvcHkpDQpAQCAtMjk5
LDY2ICsyOTksNTMgQEANCiAJCQkJCSAgICBjb25zdCBzdHJ1Y3QgbGRiX3ZhbCAqaW4sIHN0cnVj
dCBsZGJfdmFsICpvdXQpDQogew0KIAlzdHJ1Y3QgbGRiX2RuICpkbjEgPSBOVUxMOw0KLQljaGFy
ICpvYzEsICpvYzI7DQorCWNvbnN0IHN0cnVjdCBkc2RiX3NjaGVtYSAqc2NoZW1hID0gZHNkYl9n
ZXRfc2NoZW1hKGxkYik7DQorCWNvbnN0IHN0cnVjdCBkc2RiX2NsYXNzICpjbGFzczsNCiANCisJ
aWYgKCFzY2hlbWEpIHsNCisJCSpvdXQgPSBkYXRhX2Jsb2JfdGFsbG9jKG1lbV9jdHgsIGluLT5k
YXRhLCBpbi0+bGVuZ3RoKTsNCisJCXJldHVybiBMREJfU1VDQ0VTUzsNCisJfQ0KIAlkbjEgPSBs
ZGJfZG5fbmV3KG1lbV9jdHgsIGxkYiwgKGNoYXIgKilpbi0+ZGF0YSk7DQogCWlmICggISBsZGJf
ZG5fdmFsaWRhdGUoZG4xKSkgew0KLQkJb2MxID0gdGFsbG9jX3N0cm5kdXAobWVtX2N0eCwgKGNo
YXIgKilpbi0+ZGF0YSwgaW4tPmxlbmd0aCk7DQotCX0gZWxzZSBpZiAobGRiX2RuX2dldF9jb21w
X251bShkbjEpID49IDEgJiYgc3RyY2FzZWNtcChsZGJfZG5fZ2V0X3Jkbl9uYW1lKGRuMSksICJj
biIpID09IDApIHsNCisJCWNvbnN0IGNoYXIgKmxEQVBEaXNwbGF5TmFtZSA9IHRhbGxvY19zdHJu
ZHVwKG1lbV9jdHgsIChjaGFyICopaW4tPmRhdGEsIGluLT5sZW5ndGgpOw0KKwkJY2xhc3MgPSBk
c2RiX2NsYXNzX2J5X2xEQVBEaXNwbGF5TmFtZShzY2hlbWEsIGxEQVBEaXNwbGF5TmFtZSk7DQor
CQl0YWxsb2NfZnJlZShsREFQRGlzcGxheU5hbWUpOw0KKwl9IGVsc2UgaWYgKGxkYl9kbl9nZXRf
Y29tcF9udW0oZG4xKSA+PSAxICYmIGxkYl9hdHRyX2NtcChsZGJfZG5fZ2V0X3Jkbl9uYW1lKGRu
MSksICJjbiIpID09IDApIHsNCiAJCWNvbnN0IHN0cnVjdCBsZGJfdmFsICp2YWwgPSBsZGJfZG5f
Z2V0X3Jkbl92YWwoZG4xKTsNCi0JCW9jMSA9IHRhbGxvY19zdHJuZHVwKG1lbV9jdHgsIChjaGFy
ICopdmFsLT5kYXRhLCB2YWwtPmxlbmd0aCk7DQorCQljb25zdCBjaGFyICpjbiA9IHRhbGxvY19z
dHJuZHVwKG1lbV9jdHgsIChjaGFyICopdmFsLT5kYXRhLCB2YWwtPmxlbmd0aCk7DQorCQljbGFz
cyA9IGRzZGJfY2xhc3NfYnlfY24oc2NoZW1hLCBjbik7DQorCQl0YWxsb2NfZnJlZShjbik7DQog
CX0gZWxzZSB7DQorCQl0YWxsb2NfZnJlZShkbjEpOw0KIAkJcmV0dXJuIC0xOw0KIAl9DQotDQot
CW9jMiA9IGxkYl9jYXNlZm9sZChsZGIsIG1lbV9jdHgsIG9jMSk7DQotCW91dC0+ZGF0YSA9ICh2
b2lkICopb2MyOw0KLQlvdXQtPmxlbmd0aCA9IHN0cmxlbihvYzIpOw0KLQl0YWxsb2NfZnJlZShv
YzEpOw0KIAl0YWxsb2NfZnJlZShkbjEpOw0KLQlyZXR1cm4gMDsNCisNCisJaWYgKCFjbGFzcykg
ew0KKwkJcmV0dXJuIC0xOw0KKwl9DQorCQ0KKwkqb3V0ID0gZGF0YV9ibG9iX3N0cmluZ19jb25z
dCh0YWxsb2Nfc3RyZHVwKG1lbV9jdHgsIGNsYXNzLT5sREFQRGlzcGxheU5hbWUpKTsNCisNCisJ
cmV0dXJuIExEQl9TVUNDRVNTOw0KIH0NCiANCiBzdGF0aWMgaW50IGxkaWZfY29tcGFyaXNvbl9v
YmplY3RDYXRlZ29yeShzdHJ1Y3QgbGRiX2NvbnRleHQgKmxkYiwgdm9pZCAqbWVtX2N0eCwNCiAJ
CQkJCSAgY29uc3Qgc3RydWN0IGxkYl92YWwgKnYxLA0KIAkJCQkJICBjb25zdCBzdHJ1Y3QgbGRi
X3ZhbCAqdjIpDQogew0KLQlzdHJ1Y3QgbGRiX2RuICpkbjEgPSBOVUxMLCAqZG4yID0gTlVMTDsN
Ci0JY29uc3QgY2hhciAqb2MxLCAqb2MyOw0KIA0KLQlkbjEgPSBsZGJfZG5fbmV3KG1lbV9jdHgs
IGxkYiwgKGNoYXIgKil2MS0+ZGF0YSk7DQotCWlmICggISBsZGJfZG5fdmFsaWRhdGUoZG4xKSkg
ew0KLQkJb2MxID0gdGFsbG9jX3N0cm5kdXAobWVtX2N0eCwgKGNoYXIgKil2MS0+ZGF0YSwgdjEt
Pmxlbmd0aCk7DQotCX0gZWxzZSBpZiAobGRiX2RuX2dldF9jb21wX251bShkbjEpID49IDEgJiYg
c3RyY2FzZWNtcChsZGJfZG5fZ2V0X3Jkbl9uYW1lKGRuMSksICJjbiIpID09IDApIHsNCi0JCWNv
bnN0IHN0cnVjdCBsZGJfdmFsICp2YWwgPSBsZGJfZG5fZ2V0X3Jkbl92YWwoZG4xKTsNCi0JCW9j
MSA9IHRhbGxvY19zdHJuZHVwKG1lbV9jdHgsIChjaGFyICopdmFsLT5kYXRhLCB2YWwtPmxlbmd0
aCk7DQotCX0gZWxzZSB7DQotCQlvYzEgPSBOVUxMOw0KLQl9DQorCWludCByZXQxLCByZXQyOw0K
KwlzdHJ1Y3QgbGRiX3ZhbCB2MV9jYW5vbiwgdjJfY2Fub247DQorCXJldDEgPSBsZGlmX2Nhbm9u
aWNhbGlzZV9vYmplY3RDYXRlZ29yeShsZGIsIG1lbV9jdHgsIHYxLCAmdjFfY2Fub24pOw0KKwly
ZXQyID0gbGRpZl9jYW5vbmljYWxpc2Vfb2JqZWN0Q2F0ZWdvcnkobGRiLCBtZW1fY3R4LCB2Miwg
JnYyX2Nhbm9uKTsNCiANCi0JZG4yID0gbGRiX2RuX25ldyhtZW1fY3R4LCBsZGIsIChjaGFyICop
djItPmRhdGEpOw0KLQlpZiAoICEgbGRiX2RuX3ZhbGlkYXRlKGRuMikpIHsNCi0JCW9jMiA9IHRh
bGxvY19zdHJuZHVwKG1lbV9jdHgsIChjaGFyICopdjItPmRhdGEsIHYyLT5sZW5ndGgpOw0KLQl9
IGVsc2UgaWYgKGxkYl9kbl9nZXRfY29tcF9udW0oZG4yKSA+PSAyICYmIHN0cmNhc2VjbXAobGRi
X2RuX2dldF9yZG5fbmFtZShkbjIpLCAiY24iKSA9PSAwKSB7DQotCQljb25zdCBzdHJ1Y3QgbGRi
X3ZhbCAqdmFsID0gbGRiX2RuX2dldF9yZG5fdmFsKGRuMik7DQotCQlvYzIgPSB0YWxsb2Nfc3Ry
bmR1cChtZW1fY3R4LCAoY2hhciAqKXZhbC0+ZGF0YSwgdmFsLT5sZW5ndGgpOw0KKwlpZiAocmV0
MSA9PSBMREJfU1VDQ0VTUyAmJiByZXQyID09IExEQl9TVUNDRVNTKSB7DQorCQlyZXR1cm4gbGRi
X2F0dHJfY21wKHYxX2Nhbm9uLmRhdGEsIHYyX2Nhbm9uLmRhdGEpOw0KIAl9IGVsc2Ugew0KLQkJ
b2MyID0gTlVMTDsNCisJCXJldHVybiBzdHJjYXNlY21wKHYxLT5kYXRhLCB2Mi0+ZGF0YSk7DQog
CX0NCi0NCi0Jb2MxID0gbGRiX2Nhc2Vmb2xkKGxkYiwgbWVtX2N0eCwgb2MxKTsNCi0Jb2MyID0g
bGRiX2Nhc2Vmb2xkKGxkYiwgbWVtX2N0eCwgb2MyKTsNCi0JaWYgKCFvYzEgJiYgb2MyKSB7DQot
CQlyZXR1cm4gLTE7DQotCX0gDQotCWlmIChvYzEgJiYgIW9jMikgew0KLQkJcmV0dXJuIDE7DQot
CX0JDQotCWlmICghb2MxICYmICFvYzIpIHsNCi0JCXJldHVybiAtMTsNCi0JfQ0KLQ0KLQlyZXR1
cm4gc3RyY21wKG9jMSwgb2MyKTsNCiB9DQogDQogI2RlZmluZSBMREJfU1lOVEFYX1NBTUJBX1NJ
RAkJCSJMREJfU1lOVEFYX1NBTUJBX1NJRCINCkluZGV4OiBzb3VyY2UvbGliL2xkYi9jb21tb24v
bGRiX21zZy5jDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQotLS0gc291cmNlL2xpYi9sZGIvY29tbW9uL2xkYl9tc2cu
YwkocmV2aXNpb24gMjM1NTEpDQorKysgc291cmNlL2xpYi9sZGIvY29tbW9uL2xkYl9tc2cuYwko
d29ya2luZyBjb3B5KQ0KQEAgLTY2Niw3ICs2NjYsMTUgQEANCiB7DQogCWNvbnN0IGNoYXIgKipy
ZXQ7DQogCWludCBpOw0KLQlmb3IgKGk9MDthdHRyc1tpXTtpKyspIC8qIG5vb3AgKi8gOw0KKwli
b29sIGZvdW5kID0gZmFsc2U7DQorCWZvciAoaT0wO2F0dHJzW2ldO2krKykgew0KKwkJaWYgKGxk
Yl9hdHRyX2NtcChhdHRyc1tpXSwgbmV3X2F0dHIpID09IDApIHsNCisJCQlmb3VuZCA9IHRydWU7
DQorCQl9DQorCX0NCisJaWYgKGZvdW5kKSB7DQorCQlyZXR1cm4gbGRiX2F0dHJfbGlzdF9jb3B5
KG1lbV9jdHgsIGF0dHJzKTsNCisJfQ0KIAlyZXQgPSB0YWxsb2NfYXJyYXkobWVtX2N0eCwgY29u
c3QgY2hhciAqLCBpKzIpOw0KIAlpZiAocmV0ID09IE5VTEwpIHsNCiAJCXJldHVybiBOVUxMOw0K
QEAgLTY4Niw3ICs2OTQsNyBAQA0KIGludCBsZGJfYXR0cl9pbl9saXN0KGNvbnN0IGNoYXIgKiBj
b25zdCAqYXR0cnMsIGNvbnN0IGNoYXIgKmF0dHIpDQogew0KIAlpbnQgaTsNCi0JZm9yIChpPTA7
YXR0cnNbaV07aSsrKSB7DQorCWZvciAoaT0wO2F0dHJzICYmIGF0dHJzW2ldO2krKykgew0KIAkJ
aWYgKGxkYl9hdHRyX2NtcChhdHRyc1tpXSwgYXR0cikgPT0gMCkgew0KIAkJCXJldHVybiAxOw0K
IAkJfQ0KSW5kZXg6IHNvdXJjZS9kc2RiL3NjaGVtYS9zY2hlbWFfaW5pdC5jDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQotLS0gc291cmNlL2RzZGIvc2NoZW1hL3NjaGVtYV9pbml0LmMJKHJldmlzaW9uIDIzNTUxKQ0K
KysrIHNvdXJjZS9kc2RiL3NjaGVtYS9zY2hlbWFfaW5pdC5jCSh3b3JraW5nIGNvcHkpDQpAQCAt
MzIzLDYgKzMyMywzNCBAQA0KIAl0YWxsb2Nfc3RlYWwobWVtX2N0eCwgKHApLT5lbGVtKTsgXA0K
IH0gd2hpbGUgKDApDQogDQorI2RlZmluZSBHRVRfU1RSSU5HX0xJU1RfTERCKG1zZywgYXR0ciwg
bWVtX2N0eCwgcCwgZWxlbSwgc3RyaWN0KSBkbyB7CVwNCisJaW50IGdldF9zdHJpbmdfbGlzdF9j
b3VudGVyOwkJCQkJXA0KKwlzdHJ1Y3QgbGRiX21lc3NhZ2VfZWxlbWVudCAqZ2V0X3N0cmluZ19s
aXN0X2VsID0gbGRiX21zZ19maW5kX2VsZW1lbnQobXNnLCBhdHRyKTsgXA0KKwlpZiAoZ2V0X3N0
cmluZ19saXN0X2VsID09IE5VTEwpIHsJCQkJXA0KKwkJaWYgKHN0cmljdCkgewkJCQkJCVwNCisJ
CQlkX3ByaW50ZigiJXM6ICVzID09IE5VTExcbiIsIF9fbG9jYXRpb25fXywgYXR0cik7IFwNCisJ
CQlyZXR1cm4gV0VSUl9JTlZBTElEX1BBUkFNOwkJCVwNCisJCX0gZWxzZSB7CQkJCQkJXA0KKwkJ
CShwKS0+ZWxlbSA9IE5VTEw7CQkJCVwNCisJCQlicmVhazsJCQkJCQlcDQorCQl9CQkJCQkJCVwN
CisJfQkJCQkJCQkJXA0KKwkocCktPmVsZW0gPSB0YWxsb2NfYXJyYXkobWVtX2N0eCwgY29uc3Qg
Y2hhciAqLCBnZXRfc3RyaW5nX2xpc3RfZWwtPm51bV92YWx1ZXMgKyAxKTsgXA0KKyAgICAgICAg
Zm9yIChnZXRfc3RyaW5nX2xpc3RfY291bnRlcj0wOwkJCQkJXA0KKwkgICAgIGdldF9zdHJpbmdf
bGlzdF9jb3VudGVyIDwgZ2V0X3N0cmluZ19saXN0X2VsLT5udW1fdmFsdWVzOwlcDQorCSAgICAg
Z2V0X3N0cmluZ19saXN0X2NvdW50ZXIrKykgewkJCQlcDQorCQkocCktPmVsZW1bZ2V0X3N0cmlu
Z19saXN0X2NvdW50ZXJdID0gdGFsbG9jX3N0cm5kdXAoKHApLT5lbGVtLCBcDQorCQkJCQkJCQkg
ICAgKGNvbnN0IGNoYXIgKilnZXRfc3RyaW5nX2xpc3RfZWwtPnZhbHVlc1tnZXRfc3RyaW5nX2xp
c3RfY291bnRlcl0uZGF0YSwgXA0KKwkJCQkJCQkJICAgIGdldF9zdHJpbmdfbGlzdF9lbC0+dmFs
dWVzW2dldF9zdHJpbmdfbGlzdF9jb3VudGVyXS5sZW5ndGgpOyBcDQorCQlpZiAoIShwKS0+ZWxl
bVtnZXRfc3RyaW5nX2xpc3RfY291bnRlcl0pIHsJCVwNCisJCQlkX3ByaW50ZigiJXM6IHRhbGxv
Y19zdHJuZHVwIGZhaWxlZCBmb3IgJXNcbiIsIF9fbG9jYXRpb25fXywgYXR0cik7IFwNCisJCQly
ZXR1cm4gV0VSUl9OT01FTTsJCQkJXA0KKwkJfQkJCQkJCQlcDQorCQkocCktPmVsZW1bZ2V0X3N0
cmluZ19saXN0X2NvdW50ZXIrMV0gPSBOVUxMOwkJXA0KKwl9CQkJCQkJCQlcDQorCXRhbGxvY19z
dGVhbChtZW1fY3R4LCAocCktPmVsZW0pOwkJCQlcDQorfSB3aGlsZSAoMCkNCisNCiAjZGVmaW5l
IEdFVF9CT09MX0xEQihtc2csIGF0dHIsIHAsIGVsZW0sIHN0cmljdCkgZG8geyBcDQogCWNvbnN0
IGNoYXIgKnN0cjsgXA0KIAlzdHIgPSBzYW1kYl9yZXN1bHRfc3RyaW5nKG1zZywgYXR0ciwgTlVM
TCk7XA0KQEAgLTQ2NiwxNCArNDk0LDE1IEBADQogDQogCW9iai0+c3lzdGVtQXV4aWxpYXJ5Q2xh
c3MJPSBOVUxMOw0KIAlvYmotPnN5c3RlbVBvc3NTdXBlcmlvcnMJPSBOVUxMOw0KLQlvYmotPnN5
c3RlbU11c3RDb250YWluCQk9IE5VTEw7DQotCW9iai0+c3lzdGVtTWF5Q29udGFpbgkJPSBOVUxM
Ow0KIA0KIAlvYmotPmF1eGlsaWFyeUNsYXNzCQk9IE5VTEw7DQogCW9iai0+cG9zc1N1cGVyaW9y
cwkJPSBOVUxMOw0KLQlvYmotPm11c3RDb250YWluCQk9IE5VTEw7DQotCW9iai0+bWF5Q29udGFp
bgkJCT0gTlVMTDsNCiANCisJR0VUX1NUUklOR19MSVNUX0xEQihtc2csICJzeXN0ZW1NdXN0Q29u
dGFpbiIsIG1lbV9jdHgsIG9iaiwgc3lzdGVtTXVzdENvbnRhaW4sIEZhbHNlKTsNCisJR0VUX1NU
UklOR19MSVNUX0xEQihtc2csICJzeXN0ZW1NYXlDb250YWluIiwgbWVtX2N0eCwgb2JqLCBzeXN0
ZW1NYXlDb250YWluLCBGYWxzZSk7DQorCUdFVF9TVFJJTkdfTElTVF9MREIobXNnLCAibXVzdENv
bnRhaW4iLCBtZW1fY3R4LCBvYmosIG11c3RDb250YWluLCBGYWxzZSk7DQorCUdFVF9TVFJJTkdf
TElTVF9MREIobXNnLCAibWF5Q29udGFpbiIsIG1lbV9jdHgsIG9iaiwgbWF5Q29udGFpbiwgRmFs
c2UpOw0KKw0KIAlHRVRfU1RSSU5HX0xEQihtc2csICJkZWZhdWx0U2VjdXJpdHlEZXNjcmlwdG9y
IiwgbWVtX2N0eCwgb2JqLCBkZWZhdWx0U2VjdXJpdHlEZXNjcmlwdG9yLCBGYWxzZSk7DQogDQog
CUdFVF9VSU5UMzJfTERCKG1zZywgInNjaGVtYUZsYWdzRXgiLCBvYmosIHNjaGVtYUZsYWdzRXgp
Ow0KQEAgLTkzMCw2ICs5NTksMjMgQEANCiAJcmV0dXJuIE5VTEw7DQogfQ0KIA0KK2NvbnN0IHN0
cnVjdCBkc2RiX2NsYXNzICpkc2RiX2NsYXNzX2J5X2NuKGNvbnN0IHN0cnVjdCBkc2RiX3NjaGVt
YSAqc2NoZW1hLA0KKwkJCQkJICBjb25zdCBjaGFyICpjbikNCit7DQorCXN0cnVjdCBkc2RiX2Ns
YXNzICpjdXI7DQorDQorCWlmICghY24pIHJldHVybiBOVUxMOw0KKw0KKwkvKiBUT0RPOiBhZGQg
YmluYXJ5IHNlYXJjaCAqLw0KKwlmb3IgKGN1ciA9IHNjaGVtYS0+Y2xhc3NlczsgY3VyOyBjdXIg
PSBjdXItPm5leHQpIHsNCisJCWlmIChzdHJjYXNlY21wKGN1ci0+Y24sIGNuKSAhPSAwKSBjb250
aW51ZTsNCisNCisJCXJldHVybiBjdXI7DQorCX0NCisNCisJcmV0dXJuIE5VTEw7DQorfQ0KKw0K
IGNvbnN0IGNoYXIgKmRzZGJfbERBUERpc3BsYXlOYW1lX2J5X2lkKGNvbnN0IHN0cnVjdCBkc2Ri
X3NjaGVtYSAqc2NoZW1hLA0KIAkJCQkgICAgICAgdWludDMyX3QgaWQpDQogew0KQEAgLTk2NCw2
ICsxMDEwLDIyIEBADQogCXJldHVybiBMREJfU1VDQ0VTUzsNCiB9DQogDQorc3RhdGljIHN0cnVj
dCBkc2RiX3NjaGVtYSAqZ2xvYmFsX3NjaGVtYTsNCisNCitpbnQgZHNkYl9zZXRfZ2xvYmFsX3Nj
aGVtYShzdHJ1Y3QgbGRiX2NvbnRleHQgKmxkYikNCit7DQorCWludCByZXQ7DQorCWlmICghZ2xv
YmFsX3NjaGVtYSkgew0KKwkgIHJldHVybiBMREJfU1VDQ0VTUzsNCisJfQ0KKwlyZXQgPSBsZGJf
c2V0X29wYXF1ZShsZGIsICJkc2RiX3NjaGVtYSIsIGdsb2JhbF9zY2hlbWEpOw0KKwlpZiAocmV0
ICE9IExEQl9TVUNDRVNTKSB7DQorCQlyZXR1cm4gcmV0Ow0KKwl9DQorDQorCXJldHVybiBMREJf
U1VDQ0VTUzsNCit9DQorDQogY29uc3Qgc3RydWN0IGRzZGJfc2NoZW1hICpkc2RiX2dldF9zY2hl
bWEoc3RydWN0IGxkYl9jb250ZXh0ICpsZGIpDQogew0KIAljb25zdCB2b2lkICpwOw0KQEAgLTk4
Myw2ICsxMDQ1LDI2IEBADQogCXJldHVybiBzY2hlbWE7DQogfQ0KIA0KK3ZvaWQgZHNkYl9tYWtl
X3NjaGVtYV9nbG9iYWwoc3RydWN0IGxkYl9jb250ZXh0ICpsZGIpDQorew0KKwljb25zdCB2b2lk
ICpwOw0KKwljb25zdCBzdHJ1Y3QgZHNkYl9zY2hlbWEgKnNjaGVtYTsNCisNCisJLyogc2VlIGlm
IHdlIGhhdmUgYSBjYWNoZWQgY29weSAqLw0KKwlwID0gbGRiX2dldF9vcGFxdWUobGRiLCAiZHNk
Yl9zY2hlbWEiKTsNCisJaWYgKCFwKSB7DQorCQlyZXR1cm47DQorCX0NCisNCisJc2NoZW1hID0g
dGFsbG9jX2dldF90eXBlKHAsIHN0cnVjdCBkc2RiX3NjaGVtYSk7DQorCWlmICghc2NoZW1hKSB7
DQorCQlyZXR1cm47DQorCX0NCisNCisJdGFsbG9jX3N0ZWFsKE5VTEwsIHNjaGVtYSk7DQorCWds
b2JhbF9zY2hlbWEgPSBzY2hlbWE7DQorfQ0KKw0KIFdFUlJPUiBkc2RiX2F0dGFjaF9zY2hlbWFf
ZnJvbV9sZGlmX2ZpbGUoc3RydWN0IGxkYl9jb250ZXh0ICpsZGIsIGNvbnN0IGNoYXIgKnBmLCBj
b25zdCBjaGFyICpkZikNCiB7DQogCXN0cnVjdCBsZGJfbGRpZiAqbGRpZjsNCkluZGV4OiBzb3Vy
Y2UvZHNkYi9zYW1kYi9zYW1kYi5jDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0gc291cmNlL2RzZGIvc2FtZGIv
c2FtZGIuYwkocmV2aXNpb24gMjM1NTEpDQorKysgc291cmNlL2RzZGIvc2FtZGIvc2FtZGIuYwko
d29ya2luZyBjb3B5KQ0KQEAgLTUwLDYgKzUwLDcgQEANCiAJaWYgKCFsZGIpIHsNCiAJCXJldHVy
biBOVUxMOw0KIAl9DQorCWRzZGJfbWFrZV9zY2hlbWFfZ2xvYmFsKGxkYik7DQogCXJldHVybiBs
ZGI7DQogfQ0KIA0KSW5kZXg6IHNvdXJjZS9kc2RiL3NhbWRiL2xkYl9tb2R1bGVzL3NjaGVtYV9m
c21vLmMNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NCi0tLSBzb3VyY2UvZHNkYi9zYW1kYi9sZGJfbW9kdWxlcy9zY2hl
bWFfZnNtby5jCShyZXZpc2lvbiAyMzU1MSkNCisrKyBzb3VyY2UvZHNkYi9zYW1kYi9sZGJfbW9k
dWxlcy9zY2hlbWFfZnNtby5jCSh3b3JraW5nIGNvcHkpDQpAQCAtNTQsNiArNTQsMTAgQEANCiAJ
CU5VTEwNCiAJfTsNCiANCisJaWYgKGRzZGJfZ2V0X3NjaGVtYShtb2R1bGUtPmxkYikpIHsNCisJ
ICByZXR1cm4gbGRiX25leHRfaW5pdChtb2R1bGUpOw0KKwl9DQorDQogCXNjaGVtYV9kbiA9IHNh
bWRiX3NjaGVtYV9kbihtb2R1bGUtPmxkYik7DQogCWlmICghc2NoZW1hX2RuKSB7DQogCQlsZGJf
ZGVidWcobW9kdWxlLT5sZGIsIExEQl9ERUJVR19XQVJOSU5HLA0KSW5kZXg6IHNvdXJjZS9kc2Ri
L3NhbWRiL2xkYl9tb2R1bGVzL2tsdWRnZV9hY2wuYw0KPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIHNvdXJjZS9k
c2RiL3NhbWRiL2xkYl9tb2R1bGVzL2tsdWRnZV9hY2wuYwkocmV2aXNpb24gMjM1NTEpDQorKysg
c291cmNlL2RzZGIvc2FtZGIvbGRiX21vZHVsZXMva2x1ZGdlX2FjbC5jCSh3b3JraW5nIGNvcHkp
DQpAQCAtMzcsNiArMzcsNyBAQA0KICNpbmNsdWRlICJsZGIvaW5jbHVkZS9sZGJfcHJpdmF0ZS5o
Ig0KICNpbmNsdWRlICJhdXRoL2F1dGguaCINCiAjaW5jbHVkZSAibGliY2xpL3NlY3VyaXR5L3Nl
Y3VyaXR5LmgiDQorI2luY2x1ZGUgImRzZGIvc2FtZGIvc2FtZGIuaCINCiANCiAvKiBLbHVkZ2Ug
QUNMIHJ1bGVzOg0KICAqDQpAQCAtMTA1LDEzICsxMDYsNzQgQEANCiAJaW50ICgqdXBfY2FsbGJh
Y2spKHN0cnVjdCBsZGJfY29udGV4dCAqLCB2b2lkICosIHN0cnVjdCBsZGJfcmVwbHkgKik7DQog
DQogCWVudW0gdXNlcl9pcyB1c2VyX3R5cGU7DQorCWJvb2wgYWxsb3dlZEF0dHJpYnV0ZXM7DQor
CWJvb2wgYWxsb3dlZEF0dHJpYnV0ZXNFZmZlY3RpdmU7DQorCWNvbnN0IGNoYXIgKiphdHRyczsN
CiB9Ow0KIA0KKy8qIHJlYWQgYWxsIG9iamVjdENsYXNzZXMgKi8NCisNCitzdGF0aWMgaW50IGts
dWRnZV9hY2xfYWxsb3dlZEF0dHJpYnV0ZXMoc3RydWN0IGxkYl9jb250ZXh0ICpsZGIsIHN0cnVj
dCBsZGJfbWVzc2FnZSAqbXNnLA0KKwkJCQkJCQkgY29uc3QgY2hhciAqYXR0ck5hbWUpIA0KK3sN
CisJc3RydWN0IGxkYl9tZXNzYWdlX2VsZW1lbnQgKm9jX2VsID0gbGRiX21zZ19maW5kX2VsZW1l
bnQobXNnLCAib2JqZWN0Q2xhc3MiKTsNCisJc3RydWN0IGxkYl9tZXNzYWdlX2VsZW1lbnQgKmFs
bG93ZWRBdHRyaWJ1dGVzOw0KKwljb25zdCBzdHJ1Y3QgZHNkYl9zY2hlbWEgKnNjaGVtYSA9IGRz
ZGJfZ2V0X3NjaGVtYShsZGIpOw0KKwljb25zdCBzdHJ1Y3QgZHNkYl9jbGFzcyAqY2xhc3M7DQor
CWludCBpLCBqLCByZXQ7DQorCXJldCA9IGxkYl9tc2dfYWRkX2VtcHR5KG1zZywgYXR0ck5hbWUs
IDAsICZhbGxvd2VkQXR0cmlidXRlcyk7DQorCWlmIChyZXQgIT0gTERCX1NVQ0NFU1MpIHsNCisJ
CXJldHVybiByZXQ7DQorCX0NCisJDQorCWZvciAoaT0wOyBpIDwgb2NfZWwtPm51bV92YWx1ZXM7
IGkrKykgew0KKwkJY2xhc3MgPSBkc2RiX2NsYXNzX2J5X2xEQVBEaXNwbGF5TmFtZShzY2hlbWEs
IChjb25zdCBjaGFyICopb2NfZWwtPnZhbHVlc1tpXS5kYXRhKTsNCisJCWlmICghY2xhc3MpIHsN
CisJCQkvKiBXZSBkb24ndCBrbm93IHRoaXMgY2xhc3M/ICB3aGF0IGlzIGdvaW5nIG9uPyAqLw0K
KwkJCWNvbnRpbnVlOw0KKwkJfQ0KKwkJZm9yIChqPTA7IGNsYXNzLT5tYXlDb250YWluICYmIGNs
YXNzLT5tYXlDb250YWluW2pdOyBqKyspIHsNCisJCQlsZGJfbXNnX2FkZF9zdHJpbmcobXNnLCBh
dHRyTmFtZSwgY2xhc3MtPm1heUNvbnRhaW5bal0pOw0KKwkJfQ0KKwkJZm9yIChqPTA7IGNsYXNz
LT5tdXN0Q29udGFpbiAmJiBjbGFzcy0+bXVzdENvbnRhaW5bal07IGorKykgew0KKwkJCWxkYl9t
c2dfYWRkX3N0cmluZyhtc2csIGF0dHJOYW1lLCBjbGFzcy0+bXVzdENvbnRhaW5bal0pOw0KKwkJ
fQ0KKwkJZm9yIChqPTA7IGNsYXNzLT5zeXN0ZW1NYXlDb250YWluICYmIGNsYXNzLT5zeXN0ZW1N
YXlDb250YWluW2pdOyBqKyspIHsNCisJCQlsZGJfbXNnX2FkZF9zdHJpbmcobXNnLCBhdHRyTmFt
ZSwgY2xhc3MtPnN5c3RlbU1heUNvbnRhaW5bal0pOw0KKwkJfQ0KKwkJZm9yIChqPTA7IGNsYXNz
LT5zeXN0ZW1NdXN0Q29udGFpbiAmJiBjbGFzcy0+c3lzdGVtTXVzdENvbnRhaW5bal07IGorKykg
ew0KKwkJCWxkYl9tc2dfYWRkX3N0cmluZyhtc2csIGF0dHJOYW1lLCBjbGFzcy0+c3lzdGVtTXVz
dENvbnRhaW5bal0pOw0KKwkJfQ0KKwl9DQorCQkNCisJaWYgKGFsbG93ZWRBdHRyaWJ1dGVzLT5u
dW1fdmFsdWVzID4gMSkgew0KKwkJcXNvcnQoYWxsb3dlZEF0dHJpYnV0ZXMtPnZhbHVlcywgDQor
CQkgICAgICBhbGxvd2VkQXR0cmlidXRlcy0+bnVtX3ZhbHVlcywgDQorCQkgICAgICBzaXplb2Yo
KmFsbG93ZWRBdHRyaWJ1dGVzLT52YWx1ZXMpLA0KKwkJICAgICAgZGF0YV9ibG9iX2NtcCk7DQor
CQ0KKwkJZm9yIChpPTEgOyBpIDwgYWxsb3dlZEF0dHJpYnV0ZXMtPm51bV92YWx1ZXM7IGkrKykg
ew0KKwkJCXN0cnVjdCBsZGJfdmFsICp2YWwxID0gJmFsbG93ZWRBdHRyaWJ1dGVzLT52YWx1ZXNb
aS0xXTsNCisJCQlzdHJ1Y3QgbGRiX3ZhbCAqdmFsMiA9ICZhbGxvd2VkQXR0cmlidXRlcy0+dmFs
dWVzW2ldOw0KKwkJCWlmIChkYXRhX2Jsb2JfY21wKHZhbDEsIHZhbDIpID09IDApIHsNCisJCQkJ
bWVtbW92ZSh2YWwxLCB2YWwyLCAoYWxsb3dlZEF0dHJpYnV0ZXMtPm51bV92YWx1ZXMgLSBpKSAq
IHNpemVvZiggc3RydWN0IGxkYl92YWwpKTsgDQorCQkJCWFsbG93ZWRBdHRyaWJ1dGVzLT5udW1f
dmFsdWVzLS07DQorCQkJCWktLTsNCisJCQl9DQorCQl9DQorCX0NCisNCisJcmV0dXJuIDA7DQor
DQorfQ0KKw0KKy8qIGZpbmQgYWxsIGF0dHJpYnV0ZXMgYWxsb3dlZCBieSBhbGwgdGhlc2Ugb2Jq
ZWN0Q2xhc3NlcyAqLw0KKw0KIHN0YXRpYyBpbnQga2x1ZGdlX2FjbF9jYWxsYmFjayhzdHJ1Y3Qg
bGRiX2NvbnRleHQgKmxkYiwgdm9pZCAqY29udGV4dCwgc3RydWN0IGxkYl9yZXBseSAqYXJlcykN
CiB7DQogCXN0cnVjdCBrbHVkZ2VfYWNsX2NvbnRleHQgKmFjOw0KIAlzdHJ1Y3Qga2x1ZGdlX3By
aXZhdGVfZGF0YSAqZGF0YTsNCi0JaW50IGk7DQorCWludCBpLCByZXQ7DQogDQogCWlmICghY29u
dGV4dCB8fCAhYXJlcykgew0KIAkJbGRiX3NldF9lcnJzdHJpbmcobGRiLCAiTlVMTCBDb250ZXh0
IG9yIFJlc3VsdCBpbiBjYWxsYmFjayIpOw0KQEAgLTEyMSwxMiArMTgzLDI4IEBADQogCWFjID0g
dGFsbG9jX2dldF90eXBlKGNvbnRleHQsIHN0cnVjdCBrbHVkZ2VfYWNsX2NvbnRleHQpOw0KIAlk
YXRhID0gdGFsbG9jX2dldF90eXBlKGFjLT5tb2R1bGUtPnByaXZhdGVfZGF0YSwgc3RydWN0IGts
dWRnZV9wcml2YXRlX2RhdGEpOw0KIA0KLQlpZiAoYXJlcy0+dHlwZSA9PSBMREJfUkVQTFlfRU5U
UlkNCi0JICAgICYmIGRhdGEgJiYgZGF0YS0+cGFzc3dvcmRfYXR0cnMpIC8qIGlmIHdlIGFyZSBu
b3QgaW5pdGlhbGl6ZWQganVzdCBnZXQgdGhyb3VnaCAqLw0KKwlpZiAoYXJlcy0+dHlwZSAhPSBM
REJfUkVQTFlfRU5UUlkpIHsNCisJCXJldHVybiBhYy0+dXBfY2FsbGJhY2sobGRiLCBhYy0+dXBf
Y29udGV4dCwgYXJlcyk7DQorCX0NCisNCisJaWYgKGFjLT5hbGxvd2VkQXR0cmlidXRlcykgew0K
KwkJcmV0ID0ga2x1ZGdlX2FjbF9hbGxvd2VkQXR0cmlidXRlcyhsZGIsIGFyZXMtPm1lc3NhZ2Us
ICJhbGxvd2VkQXR0cmlidXRlcyIpOw0KKwkJaWYgKHJldCAhPSBMREJfU1VDQ0VTUykgew0KKwkJ
CXJldHVybiByZXQ7DQorCQl9DQorCX0NCisNCisJaWYgKGRhdGEgJiYgZGF0YS0+cGFzc3dvcmRf
YXR0cnMpIC8qIGlmIHdlIGFyZSBub3QgaW5pdGlhbGl6ZWQganVzdCBnZXQgdGhyb3VnaCAqLw0K
IAl7DQogCQlzd2l0Y2ggKGFjLT51c2VyX3R5cGUpIHsNCiAJCWNhc2UgU1lTVEVNOg0KIAkJY2Fz
ZSBBRE1JTklTVFJBVE9SOg0KKwkJCWlmIChhYy0+YWxsb3dlZEF0dHJpYnV0ZXNFZmZlY3RpdmUp
IHsNCisJCQkJcmV0ID0ga2x1ZGdlX2FjbF9hbGxvd2VkQXR0cmlidXRlcyhsZGIsIGFyZXMtPm1l
c3NhZ2UsICJhbGxvd2VkQXR0cmlidXRlc0VmZmVjdGl2ZSIpOw0KKwkJCQlpZiAocmV0ICE9IExE
Ql9TVUNDRVNTKSB7DQorCQkJCQlyZXR1cm4gcmV0Ow0KKwkJCQl9DQorCQkJfQ0KIAkJCWJyZWFr
Ow0KIAkJZGVmYXVsdDoNCiAJCQkvKiByZW1vdmUgcGFzc3dvcmQgYXR0cmlidXRlcyAqLw0KQEAg
LTEzNiw2ICsyMTQsMTIgQEANCiAJCX0NCiAJfQ0KIA0KKwlpZiAoKGFjLT5hbGxvd2VkQXR0cmli
dXRlcyB8fCBhYy0+YWxsb3dlZEF0dHJpYnV0ZXNFZmZlY3RpdmUpICYmIA0KKwkgICAgKCFsZGJf
YXR0cl9pbl9saXN0KGFjLT5hdHRycywgIm9iamVjdENsYXNzIikgJiYgDQorCSAgICAgIWxkYl9h
dHRyX2luX2xpc3QoYWMtPmF0dHJzLCAiKiIpKSkgew0KKwkJbGRiX21zZ19yZW1vdmVfYXR0cihh
cmVzLT5tZXNzYWdlLCAib2JqZWN0Q2xhc3MiKTsNCisJfQ0KKw0KIAlyZXR1cm4gYWMtPnVwX2Nh
bGxiYWNrKGxkYiwgYWMtPnVwX2NvbnRleHQsIGFyZXMpOw0KIA0KIGVycm9yOg0KQEAgLTE2Myw2
ICsyNDcsNyBAQA0KIAlhYy0+dXBfY29udGV4dCA9IHJlcS0+Y29udGV4dDsNCiAJYWMtPnVwX2Nh
bGxiYWNrID0gcmVxLT5jYWxsYmFjazsNCiAJYWMtPnVzZXJfdHlwZSA9IHdoYXRfaXNfdXNlciht
b2R1bGUpOw0KKwlhYy0+YXR0cnMgPSByZXEtPm9wLnNlYXJjaC5hdHRyczsNCiANCiAJZG93bl9y
ZXEgPSB0YWxsb2NfemVybyhyZXEsIHN0cnVjdCBsZGJfcmVxdWVzdCk7DQogCWlmIChkb3duX3Jl
cSA9PSBOVUxMKSB7DQpAQCAtMTc0LDggKzI1OSwxNiBAQA0KIAlkb3duX3JlcS0+b3Auc2VhcmNo
LnNjb3BlID0gcmVxLT5vcC5zZWFyY2guc2NvcGU7DQogCWRvd25fcmVxLT5vcC5zZWFyY2gudHJl
ZSA9IHJlcS0+b3Auc2VhcmNoLnRyZWU7DQogCWRvd25fcmVxLT5vcC5zZWFyY2guYXR0cnMgPSBy
ZXEtPm9wLnNlYXJjaC5hdHRyczsNCi0JDQogDQorCWFjLT5hbGxvd2VkQXR0cmlidXRlcyA9IGxk
Yl9hdHRyX2luX2xpc3QocmVxLT5vcC5zZWFyY2guYXR0cnMsICJhbGxvd2VkQXR0cmlidXRlcyIp
Ow0KKw0KKwlhYy0+YWxsb3dlZEF0dHJpYnV0ZXNFZmZlY3RpdmUgPSBsZGJfYXR0cl9pbl9saXN0
KHJlcS0+b3Auc2VhcmNoLmF0dHJzLCAiYWxsb3dlZEF0dHJpYnV0ZXNFZmZlY3RpdmUiKTsNCisN
CisJaWYgKGFjLT5hbGxvd2VkQXR0cmlidXRlcyB8fCBhYy0+YWxsb3dlZEF0dHJpYnV0ZXNFZmZl
Y3RpdmUpIHsNCisJCWRvd25fcmVxLT5vcC5zZWFyY2guYXR0cnMNCisJCQk9IGxkYl9hdHRyX2xp
c3RfY29weV9hZGQoZG93bl9yZXEsIGRvd25fcmVxLT5vcC5zZWFyY2guYXR0cnMsICJvYmplY3RD
bGFzcyIpOw0KKwl9DQorDQogCS8qICBGSVhNRTogSSBoaW5rIHdlIHNob3VsZCBjb3B5IHRoZSB0
cmVlIGFuZCBrZWVwIHRoZSBvcmlnaW5hbA0KIAkgKiAgdW5tb2RpZmllZC4gU1NTICovDQogCS8q
IHJlcGxhY2UgYW55IGF0dHJpYnV0ZXMgaW4gdGhlIHBhcnNlIHRyZWUgdGhhdCBhcmUgcHJpdmF0
ZSwNCkluZGV4OiBzb3VyY2Uvc2V0dXAvcHJvdmlzaW9uX3BhcnRpdGlvbnMubGRpZg0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KLS0tIHNvdXJjZS9zZXR1cC9wcm92aXNpb25fcGFydGl0aW9ucy5sZGlmCShyZXZpc2lv
biAyMzU1MSkNCisrKyBzb3VyY2Uvc2V0dXAvcHJvdmlzaW9uX3BhcnRpdGlvbnMubGRpZgkod29y
a2luZyBjb3B5KQ0KQEAgLTUsOSArNSw5IEBADQogcmVwbGljYXRlRW50cmllczogQFNVQkNMQVNT
RVMNCiByZXBsaWNhdGVFbnRyaWVzOiBAQVRUUklCVVRFUw0KIHJlcGxpY2F0ZUVudHJpZXM6IEBJ
TkRFWExJU1QNCi1tb2R1bGVzOiR7U0NIRU1BRE59OiR7U0NIRU1BRE5fTU9EfQ0KLW1vZHVsZXM6
JHtDT05GSUdETn06JHtDT05GSUdETl9NT0R9DQotbW9kdWxlczoke0RPTUFJTkROfToke0RPTUFJ
TkROX01PRH0NCittb2R1bGVzOiR7U0NIRU1BRE59OiR7U0NIRU1BRE5fTU9EfSR7U0NIRU1BRE5f
TU9EMn0NCittb2R1bGVzOiR7Q09ORklHRE59OiR7Q09ORklHRE5fTU9EfSR7Q09ORklHRE5fTU9E
Mn0NCittb2R1bGVzOiR7RE9NQUlORE59OiR7RE9NQUlORE5fTU9EfSR7RE9NQUlORE5fTU9EMn0N
CiANCiBkbjogQE1PRFVMRVMNCiBATElTVDogJHtNT0RVTEVTX0xJU1R9DQpJbmRleDogc291cmNl
L3NldHVwL3Byb3Zpc2lvbg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIHNvdXJjZS9zZXR1cC9wcm92aXNpb24J
KHJldmlzaW9uIDIzNTUxKQ0KKysrIHNvdXJjZS9zZXR1cC9wcm92aXNpb24JKHdvcmtpbmcgY29w
eSkNCkBAIC0xMzIsMTEgKzEzMiwxMSBAQA0KIAkJc3Vib2JqWyJMREFQTU9EVUxFIl0gPSAiZW50
cnlVVUlEIjsNCiAJfQ0KIAlzdWJvYmpbIkRPTUFJTkROX0xEQiJdID0gc3Vib2JqWyJMREFQQkFD
S0VORCJdOw0KLQlzdWJvYmpbIkRPTUFJTkROX01PRCJdID0gc3Vib2JqWyJMREFQTU9EVUxFIl0g
KyAiLHBhZ2VkX3NlYXJjaGVzIjsNCisJc3Vib2JqWyJET01BSU5ETl9NT0QyIl0gPSBzdWJvYmpb
IkxEQVBNT0RVTEUiXSArICIscGFnZWRfc2VhcmNoZXMiOw0KIAlzdWJvYmpbIkNPTkZJR0ROX0xE
QiJdID0gc3Vib2JqWyJMREFQQkFDS0VORCJdOw0KLQlzdWJvYmpbIkNPTkZJR0ROX01PRCJdID0g
c3Vib2JqWyJMREFQTU9EVUxFIl0gKyAiLHBhZ2VkX3NlYXJjaGVzIjsNCisJc3Vib2JqWyJDT05G
SUdETl9NT0QyIl0gPSBzdWJvYmpbIkxEQVBNT0RVTEUiXSArICIscGFnZWRfc2VhcmNoZXMiOw0K
IAlzdWJvYmpbIlNDSEVNQUROX0xEQiJdID0gc3Vib2JqWyJMREFQQkFDS0VORCJdOw0KLQlzdWJv
YmpbIlNDSEVNQUROX01PRCJdID0gc3Vib2JqWyJMREFQTU9EVUxFIl0gKyAiLHBhZ2VkX3NlYXJj
aGVzIjsNCisJc3Vib2JqWyJTQ0hFTUFETl9NT0QyIl0gPSBzdWJvYmpbIkxEQVBNT0RVTEUiXSAr
ICIscGFnZWRfc2VhcmNoZXMiOw0KIH0NCiANCiBpZiAoIXByb3Zpc2lvbl92YWxpZGF0ZShzdWJv
YmosIG1lc3NhZ2UpKSB7DQpJbmRleDogc291cmNlL3NldHVwL3Byb3Zpc2lvbl9zY2hlbWFfYmFz
ZWRuX21vZGlmeS5sZGlmDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0gc291cmNlL3NldHVwL3Byb3Zpc2lvbl9z
Y2hlbWFfYmFzZWRuX21vZGlmeS5sZGlmCShyZXZpc2lvbiAyMzU1MSkNCisrKyBzb3VyY2Uvc2V0
dXAvcHJvdmlzaW9uX3NjaGVtYV9iYXNlZG5fbW9kaWZ5LmxkaWYJKHdvcmtpbmcgY29weSkNCkBA
IC0yMywzICsyMywyMSBAQA0KIC0NCiByZXBsYWNlOiBvYmplY3RWZXJzaW9uDQogb2JqZWN0VmVy
c2lvbjogMzANCistDQorcmVwbGFjZTogcHJlZml4TWFwDQorcHJlZml4TWFwOjogUWtSVFJBQUFB
QUFpQUFBQUFBQUNBQ0lBQUFBQUFBQUFBZ0FBQUFRQUFnQUJBQUFBQWdBQUFBZ0FBZ0FDQUFBQUNB
DQorIEFBQUF3QUFnQURBQUFBQ0FBQUFCQUFBZ0FFQUFBQUNBQUFBQlFBQWdBRkFBQUFDQUFBQUJn
QUFnQUdBQUFBQ0FBQUFCd0FBZ0FIQUFBDQorIEFDQUFBQUNBQUFnQUlBQUFBQWdBQUFDUUFBZ0FK
QUFBQUNBQUFBQ2dBQWdBS0FBQUFDQUFBQUN3QUFnQVRBQUFBQ0FBQUFEQUFBZ0FVDQorIEFBQUFD
QUFBQURRQUFnQVZBQUFBQ1FBQUFEZ0FBZ0FXQUFBQUNRQUFBRHdBQWdBWEFBQUFDZ0FBQUVBQUFn
QVlBQUFBQWdBQUFFUUFBDQorIGdBWkFBQUFBZ0FBQUVnQUFnQWFBQUFBQWdBQUFFd0FBZ0FMQUFB
QUNnQUFBRkFBQWdBTUFBQUFDUUFBQUZRQUFnQU5BQUFBQ2dBQUFGDQorIGdBQWdBT0FBQUFDUUFB
QUZ3QUFnQVBBQUFBQ2dBQUFHQUFBZ0FRQUFBQUNRQUFBR1FBQWdBUkFBQUFDUUFBQUdnQUFnQVNB
QUFBQ2dBDQorIEFBR3dBQWdBYkFBQUFDUUFBQUhBQUFnQWNBQUFBQ1FBQUFIUUFBZ0FkQUFBQUNB
QUFBSGdBQWdBZUFBQUFDQUFBQUh3QUFnQWZBQUFBDQorIENRQUFBSUFBQWdBZ0FBQUFDUUFBQUlR
QUFnQWhBQUFBQ1FBQUFJZ0FBZ0FDQUFBQVZRUUFBQUlBQUFCVkJnQUFDQUFBQUNxR1NJYjNGDQor
IEFFQ0NBQUFBQ3FHU0liM0ZBRURDQUFBQUdDR1NBRmxBZ0lCQ0FBQUFHQ0dTQUZsQWdJRENBQUFB
R0NHU0FGbEFnRUZDQUFBQUdDR1NBDQorIEZsQWdFRUFnQUFBRlVGQUFBSUFBQUFLb1pJaHZjVUFR
UUlBQUFBS29aSWh2Y1VBUVVJQUFBQUNaSW1pWlB5TEdRSUFBQUFZSVpJQVliDQorIDRRZ01KQUFB
QUNaSW1pWlB5TEdRQkFBQUFDUUFBQUdDR1NBR0crRUlEQVFBQUFBb0FBQUFxaGtpRzl4UUJCYlpZ
QUFBQ0FBQUFWUlVBDQorIEFBSUFBQUJWRWdBQUFnQUFBRlVVQUFBS0FBQUFLb1pJaHZjVUFRU0NC
QUFBQ1FBQUFDcUdTSWIzRkFFRk9BQUFBQW9BQUFBcWhraUc5DQorIHhRQkJJSUdBQUFKQUFBQUtv
WklodmNVQVFVNUFBQUFDZ0FBQUNxR1NJYjNGQUVFZ2djQUFBa0FBQUFxaGtpRzl4UUJCVG9BQUFB
SkFBDQorIEFBS29aSWh2Y1VBUVZKQUFBQUNnQUFBQ3FHU0liM0ZBRUVnakVBQUFrQUFBQXJCZ0VF
QVlzNlpYY0FBQUFKQUFBQVlJWklBWWI0UWdNDQorIENBQUFBQ0FBQUFDc0dBUVFCZ1hvQkNBQUFB
Q3FHU0liM0RRRUpDUUFBQUFtU0pvbVQ4aXhrQkFBQUFBa0FBQUFyQmdFRUFiZDlCQUVBDQorIEFB
QUpBQUFBS3dZQkJBRzNmUVFDDQpJbmRleDogc291cmNlL3NjcmlwdC9nZGJfcnVuDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQotLS0gc291cmNlL3NjcmlwdC9nZGJfcnVuCShyZXZpc2lvbiAyMzU1MSkNCisrKyBzb3Vy
Y2Uvc2NyaXB0L2dkYl9ydW4JKHdvcmtpbmcgY29weSkNCkBAIC04LDcgKzgsNiBAQA0KIGNhdCA8
PCBFT0YgID4gJFRNUEZJTEUNCiBydW4NCiBidA0KLXF1aXQNCiBFT0YNCiANCiB0cmFwICIvYmlu
L3JtIC1mICRUTVBGSUxFIiBFWElUDQo=


--=-Xu+UeoZxpaKYYMSk2jl8--

--=-AaTA4gCTi+HOXOljM4xk
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQBGeSj3z4A8Wyi0NrsRAlmPAJ9GQ8GOq/IKUEK8JGHM7EQ6Da1Q0gCePPln
XbRrM4mc76zDjH7Ij2VlF1c=
=N8N0
-----END PGP SIGNATURE-----

--=-AaTA4gCTi+HOXOljM4xk--

