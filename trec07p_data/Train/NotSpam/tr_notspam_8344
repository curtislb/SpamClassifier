From beginners-return-91398-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May  7 17:57:37 2007
Return-Path: <beginners-return-91398-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l47LvaqD003791
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 7 May 2007 17:57:36 -0400
Received: (qmail 3066 invoked by uid 514); 7 May 2007 21:57:31 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3057 invoked from network); 7 May 2007 21:57:31 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 7 May 2007 21:57:31 -0000
Received: (qmail 19661 invoked by uid 225); 7 May 2007 21:57:31 -0000
Delivered-To: beginners@perl.org
Received: (qmail 19656 invoked by alias); 7 May 2007 21:57:30 -0000
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.229 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.229)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 07 May 2007 14:57:28 -0700
Received: by nz-out-0506.google.com with SMTP id 12so1756406nzp
        for <beginners@perl.org>; Mon, 07 May 2007 14:57:24 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=knfFtYBjK3xkLSx+ok79inCj9xRpi0GGkKmUi4xR4Chwwi+xs8dqjDHSoiQbQ+sXZf6j2rads1K1OTpy9TfYGujbykOGzmhXVnvIdluoA/m3ITPMzz9nIDxmW9MIqMpbQjghdM7s9gUMwYX7cLXDTb6I7Ug6bA5/OioWrg97qaE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=PzFCB6X38aPuhHxlVi5sm08VG78BmLYhJkkkm+J5Ub9RinLgBL1fxfFHCC56ZG9Fj6iUmvXdchJ1NGV+1NMNfARPw64LE0MN5PoJtXA7iBfto8AMoJLWOtBRaTIwf8RpeJdJzCO7wIWcRfA/888gBYa/XgLxQCov8opGXpM5B7I=
Received: by 10.114.134.1 with SMTP id h1mr2341221wad.1178575044104;
        Mon, 07 May 2007 14:57:24 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Mon, 7 May 2007 14:57:23 -0700 (PDT)
Message-ID: <58ce48dc0705071457u3c4fbdb7r212b75989cdbb9eb@mail.gmail.com>
Date: Mon, 7 May 2007 17:57:23 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: sigzero@gmail.com
Subject: Re: looping through a file
Cc: beginners@perl.org
In-Reply-To: <20070507213039.21278.qmail@lists.develooper.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <20070507182211.25376.qmail@lists.develooper.com>
	 <58ce48dc0705071330g4f9e9396of1ce8b9e50a778bf@mail.gmail.com>
	 <20070507213039.21278.qmail@lists.develooper.com>

On 5/7/07, Robert Hicks <sigzero@gmail.com> wrote:
snip
> I think part of the problem is the 'shift'ing that I was doing. I am
> looking into that. Basically I was shift'ing the @log out of existence
> after the first pass.
snip

That sounds like a viable candidate for the warning as well.


snip
> > Also, you should never use a straight string in a regex; it should
> > aways be quoted.
> >
> > $line = shift @log until $line =~ /\Q$prime_id\E/;
>
> What does that give you? I have never heard of that and have never had a
> problem the way I have shown. Just curious...
snip

The \Q turns off meta-characters until the \E.  If your substr returns
"foo.id" then /$prime_id/ will match "foolid" as well as as "foo.id".
Worse yet if substr returns "abc+de" then /$prime_id/ won't match
against "abc+de" only "abcde", "abccde", etc.  And the worst is
unmatched open/close characters.  Try this

perl -le '$smiley = ":)"; print $1 if $smiley =~ /($smiley)/;'

versus this

perl -le '$smiley = ":)"; print $1 if $smiley =~ /(\Q$smiley\E)/;'

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


