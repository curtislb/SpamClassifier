From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon May 14 23:01:27 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4F31RqD030661
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 14 May 2007 23:01:27 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 2E121163833
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 15 May 2007 03:01:25 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id 11FFB162AC2; Tue, 15 May 2007 03:00:59 +0000 (GMT)
To: samba-cvs@samba.org
From: tridge@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070515030059.11FFB162AC2@lists.samba.org>
Date: Tue, 15 May 2007 03:00:59 +0000 (GMT)
Subject: svn commit: samba r22876 - in
	branches/SAMBA_4_0/source/torture/raw: .
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: tridge
Date: 2007-05-15 03:00:58 +0000 (Tue, 15 May 2007)
New Revision: 22876

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22876

Log:

- try to reconnect once per second, not continously
- patch from ronnie to fix the lock offset on reconnect

Modified:
   branches/SAMBA_4_0/source/torture/raw/lockbench.c


Changeset:
Modified: branches/SAMBA_4_0/source/torture/raw/lockbench.c
===================================================================
--- branches/SAMBA_4_0/source/torture/raw/lockbench.c	2007-05-15 01:57:21 UTC (rev 22875)
+++ branches/SAMBA_4_0/source/torture/raw/lockbench.c	2007-05-15 03:00:58 UTC (rev 22876)
@@ -88,7 +88,8 @@
 	state->offset = (state->offset+1)%nprocs;
 }
 
-static void reopen_connection(struct benchlock_state *state);
+static void reopen_connection(struct event_context *ev, struct timed_event *te, 
+			      struct timeval t, void *private_data);
 
 
 static void reopen_file(struct event_context *ev, struct timed_event *te, 
@@ -114,7 +115,6 @@
 	}
 	state->req->async.private = state;
 	state->req->async.fn      = lock_completion;
-	state->offset = (state->offset+1)%nprocs;
 }
 
 /*
@@ -128,7 +128,9 @@
 
 	status = smb_composite_connect_recv(ctx, state->mem_ctx);
 	if (!NT_STATUS_IS_OK(status)) {
-		reopen_connection(state);
+		event_add_timed(state->ev, state->mem_ctx, 
+				timeval_current_ofs(1,0), 
+				reopen_connection, state);
 		return;
 	}
 
@@ -142,10 +144,12 @@
 	
 
 /*
-  reopen dead connections
+  reopen a connection
  */
-static void reopen_connection(struct benchlock_state *state)
+static void reopen_connection(struct event_context *ev, struct timed_event *te, 
+			      struct timeval t, void *private_data)
 {
+	struct benchlock_state *state = (struct benchlock_state *)private_data;
 	struct composite_context *ctx;
 	struct smb_composite_connect *io = &state->reconnect;
 	char *host, *share;
@@ -191,7 +195,9 @@
 	state->req = NULL;
 	if (!NT_STATUS_IS_OK(status)) {
 		if (NT_STATUS_EQUAL(status, NT_STATUS_END_OF_FILE)) {
-			reopen_connection(state);
+			event_add_timed(state->ev, state->mem_ctx, 
+					timeval_current_ofs(1,0), 
+					reopen_connection, state);
 		} else {
 			DEBUG(0,("Lock failed - %s\n", nt_errstr(status)));
 			lock_failed++;

