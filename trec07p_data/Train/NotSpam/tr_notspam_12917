From perl6-all-return-81555-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 23 17:47:44 2007
Return-Path: <perl6-all-return-81555-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4NLlhqD030227
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 23 May 2007 17:47:43 -0400
Received: (qmail 2943 invoked by uid 514); 23 May 2007 21:47:38 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 2938 invoked from network); 23 May 2007 21:47:38 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
From: Leopold Toetsch <lt@toetsch.at>
To: perl6-internals@perl.org
Subject: Re: PMC architecture discussion
Date: Wed, 23 May 2007 23:47:02 +0200
User-Agent: KMail/1.9.1
Cc: "Patrick R. Michaud" <pmichaud@pobox.com>,
   Allison Randal <allison@perl.org>
References: <46524BE9.7030808@perl.org> <46537FD7.6080004@perl.org> <20070523020539.GB25819@host.pmichaud.com>
In-Reply-To: <20070523020539.GB25819@host.pmichaud.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Disposition: inline
Message-Id: <200705232347.02916.lt@toetsch.at>
X-Scan-Signature: 0842590f0fcc298d58ae8d6dd41f05c9
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l4NLlhqD030227

Am Mittwoch, 23. Mai 2007 04:05 schrieb Patrick R. Michaud:
> Here's the perl 6 code:
>
>     my $a = sub { ... };      # $a is a subroutine reference
>     my $b := $a;
>     # ...;
>     $a = 4;                   # $a is now an Int
>
> How to do the above in PIR if we can't morph a Sub?

I may be not totally uptodate with the recent implementation changes. But I've 
repeatedly urged a clear separation between variables and values. Obviously 
the mixture of these is still the current way to go. Anyway: I'd translate 
above code to the following pseudocode:

  .var '$a' = .value '.sub ... '
  .var '$b' = .var '$a'
  .var '$a' = .value '4'

There is no need for any morph or such operation. Sometimes the implementation 
needs an additional indirection though, but there are already a lot of these 
indirections (think of the pmc_ext or even data pointers in the PMC). 

All values can be shared and are readonly, well, variables are changing. Thx 
to listening.

leo

