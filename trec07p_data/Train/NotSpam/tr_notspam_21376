From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Thu Jun 21 18:19:32 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5LMJWL9030164
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 21 Jun 2007 18:19:32 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id DB67F162AD2
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 21 Jun 2007 22:19:29 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.2 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 1017)
	id AE334162AD2; Thu, 21 Jun 2007 22:18:42 +0000 (GMT)
To: samba-cvs@samba.org
From: obnox@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070621221842.AE334162AD2@lists.samba.org>
Date: Thu, 21 Jun 2007 22:18:42 +0000 (GMT)
Subject: svn commit: samba r23578 - in branches: SAMBA_3_0/source/registry
	SAMBA_3_0_26/source/registry
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: obnox
Date: 2007-06-21 22:18:42 +0000 (Thu, 21 Jun 2007)
New Revision: 23578

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23578

Log:
When calling DeleteKey for a key that has subkey(s), Windows
returns WERR_ACCESS_DENIED. This adapts reg_deletekey to behave 
the same way. 

Michael


Modified:
   branches/SAMBA_3_0/source/registry/reg_api.c
   branches/SAMBA_3_0_26/source/registry/reg_api.c


Changeset:
Modified: branches/SAMBA_3_0/source/registry/reg_api.c
===================================================================
--- branches/SAMBA_3_0/source/registry/reg_api.c	2007-06-21 22:10:41 UTC (rev 23577)
+++ branches/SAMBA_3_0/source/registry/reg_api.c	2007-06-21 22:18:42 UTC (rev 23578)
@@ -386,6 +386,7 @@
 	TALLOC_CTX *mem_ctx;
 	char *name, *end;
 	int num_subkeys;
+	struct registry_key *tmp_key;
 
 	if (!(mem_ctx = talloc_init("reg_createkey"))) return WERR_NOMEM;
 
@@ -394,18 +395,30 @@
 		goto error;
 	}
 
+	/* check if the key has subkeys */
+	err = reg_openkey(mem_ctx, parent, name, REG_KEY_READ, &tmp_key);
+	if (!W_ERROR_IS_OK(err)) {
+		goto error;
+	}
+	if (!W_ERROR_IS_OK(err = fill_subkey_cache(tmp_key))) {
+		goto error;
+	}
+	if (tmp_key->subkeys->num_subkeys > 0) {
+		err = WERR_ACCESS_DENIED;
+		goto error;
+	}
+
+	/* no subkeys - proceed with delete */
 	if ((end = strrchr(name, '\\')) != NULL) {
-		struct registry_key *tmp;
-
 		*end = '\0';
 
 		err = reg_openkey(mem_ctx, parent, name,
-				  SEC_RIGHTS_CREATE_SUBKEY, &tmp);
+				  SEC_RIGHTS_CREATE_SUBKEY, &tmp_key);
 		if (!W_ERROR_IS_OK(err)) {
 			goto error;
 		}
 
-		parent = tmp;
+		parent = tmp_key;
 		name = end+1;
 	}
 

Modified: branches/SAMBA_3_0_26/source/registry/reg_api.c
===================================================================
--- branches/SAMBA_3_0_26/source/registry/reg_api.c	2007-06-21 22:10:41 UTC (rev 23577)
+++ branches/SAMBA_3_0_26/source/registry/reg_api.c	2007-06-21 22:18:42 UTC (rev 23578)
@@ -386,6 +386,7 @@
 	TALLOC_CTX *mem_ctx;
 	char *name, *end;
 	int num_subkeys;
+	struct registry_key *tmp_key;
 
 	if (!(mem_ctx = talloc_init("reg_createkey"))) return WERR_NOMEM;
 
@@ -394,18 +395,30 @@
 		goto error;
 	}
 
+	/* check if the key has subkeys */
+	err = reg_openkey(mem_ctx, parent, name, REG_KEY_READ, &tmp_key);
+	if (!W_ERROR_IS_OK(err)) {
+		goto error;
+	}
+	if (!W_ERROR_IS_OK(err = fill_subkey_cache(tmp_key))) {
+		goto error;
+	}
+	if (tmp_key->subkeys->num_subkeys > 0) {
+		err = WERR_ACCESS_DENIED;
+		goto error;
+	}
+
+	/* no subkeys - proceed with delete */
 	if ((end = strrchr(name, '\\')) != NULL) {
-		struct registry_key *tmp;
-
 		*end = '\0';
 
 		err = reg_openkey(mem_ctx, parent, name,
-				  SEC_RIGHTS_CREATE_SUBKEY, &tmp);
+				  SEC_RIGHTS_CREATE_SUBKEY, &tmp_key);
 		if (!W_ERROR_IS_OK(err)) {
 			goto error;
 		}
 
-		parent = tmp;
+		parent = tmp_key;
 		name = end+1;
 	}
 

