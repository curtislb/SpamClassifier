From perl6-all-return-80590-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Apr 14 16:19:59 2007
Return-Path: <perl6-all-return-80590-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3EKJw0I005112
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 14 Apr 2007 16:19:58 -0400
Received: (qmail 24664 invoked by uid 514); 14 Apr 2007 20:19:34 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 24659 invoked from network); 14 Apr 2007 20:19:33 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-users-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-users
List-Id: <perl6-users.perl.org>
Delivered-To: mailing list perl6-users@perl.org
Delivered-To: moderator for perl6-users@perl.org
Delivered-To: perl6-users@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Message-ID: <20070414162200.27141.qmail@lists.develooper.com>
To: perl6-users@perl.org
Date: Sat, 14 Apr 2007 18:22:03 +0200
From: gabriele renzi <surrender_it@rc.europe.yahoo-eu1.akadns.net>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
Subject: Regexp: s/<at($pos)>/$str/ should replace or add?
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 83.181.225.165
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-4.2 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME,DNS_FROM_RFC_ABUSE
Status: O
Content-Length: 670
Lines: 24

Hello,

sorry about the dumb question but I'm not sure I understand the 
<at($pos)> assertion.

If I write something like
  my $s="hello"
  s/<at(1)>/a/
I expected it to give me
  "hallo"
whereas it give ms
  "haello".

Does it mean that basically the assertion is a character/string property 
instead of the character/string itself?

Also, what is the correct way to replace the i-th character in a Str ?
I can do (well, I can't cause pugs doesn't have subst, it seems)
  "str".subst(/<at($i)>./,$other)

but it seem unnecessarily verbose.
Is there something else builtin?
If not, wouldn't it be better if Str.subst could accept Ints and Ranges 
as the first argument?

