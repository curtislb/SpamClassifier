From beginners-return-92514-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 18 08:48:34 2007
Return-Path: <beginners-return-92514-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5ICmYL9017572
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 18 Jun 2007 08:48:34 -0400
Received: (qmail 2493 invoked by uid 514); 18 Jun 2007 12:48:27 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 2482 invoked from network); 18 Jun 2007 12:48:27 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 18 Jun 2007 12:48:27 -0000
Received: (qmail 14029 invoked by uid 225); 18 Jun 2007 12:48:26 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14022 invoked by alias); 18 Jun 2007 12:48:26 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of numberwhun@gmail.com designates 209.85.132.250 as permitted sender)
Received: from an-out-0708.google.com (HELO an-out-0708.google.com) (209.85.132.250)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 18 Jun 2007 05:48:23 -0700
Received: by an-out-0708.google.com with SMTP id c25so303116ana
        for <beginners@perl.org>; Mon, 18 Jun 2007 05:48:19 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
        b=EE/DcNvSi4Wf5d/+gHuIa7VGFreu7nyFveu/m8ocumtMHJPKjnKZrgJ8R2yUUCYP/gEHF8wo3Q/KVBMKmpmJzPFXcnhh0dKmtSvsYcydhKNdMSajV1z05yWtgIIH0W/mkgK5lTz2UA5gVEA1WBRmRQt2ssFjxMxPpWc80kwnR5Y=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type;
        b=bpPYKN6XvggAYQvwlnWFkp8qPsn2EG/9/AjW7pipkCxzPFVf7GjqbCeZOWXZKvNxntDLBqgGiR/JBanQNEF0mK6PJcnDh/sn0JdzGSOt3X4G42XOFNTuxVHB+w8De4OzLx8i7PPW/A1mygvbeHikwyjd+1lDEfasXGDFViTv7/c=
Received: by 10.100.94.3 with SMTP id r3mr1506690anb.1182170898980;
        Mon, 18 Jun 2007 05:48:18 -0700 (PDT)
Received: by 10.100.164.3 with HTTP; Mon, 18 Jun 2007 05:48:18 -0700 (PDT)
Message-ID: <36ce56240706180548y6203935esc8e37635aa8e5f1c@mail.gmail.com>
Date: Mon, 18 Jun 2007 08:48:18 -0400
From: "Jefferson Kirkland" <numberwhun@gmail.com>
To: beginners@perl.org
Subject: Why must I chomp a variable set in a script?
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_57453_6780621.1182170898850"
X-Virus-Checked: Checked

------=_Part_57453_6780621.1182170898850
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hello everyone!  I would really appreciate it if someone could shed some
light on this situation for me.

I have a script that I am writing that looks on a server to see if there are
files in certain directories.  When files are found in a directory, the
script sends an email to the appropriate distribution list for that
directory to let people know files are available.

In the script I have a variable that contains the name of the file that will
hold the body of the email. ( I have to do this because there is an internal
program that sends the email, but that is not in question here.)  The
variable is set like this:

    my $emailBody = $prefix . "emailbody";

where $prefix is a variable set to part of the directory name and it has
"emailbody" concatenated on to it.  So, when the variable is constructed, it
will have the format:

    directoryemailbody

After creating the variable, the script then checks to see if the file
exists from the previous run and deletes it then touches it and opens a file
handle to enable it to be written to.  This part works absolutely perfectly,
with no issues.

The problem is when I get down to the part after the emailbody files are
populated ( they are only populated if files exist) that checks to see if
the files are of zero size.  If they are of zero size, it is supposed to put
a message into the log file saying there are no files for that directory.
If they have size (which means they have a message for the distribution
list, it is supposed to trigger the email program to notify the users.  Here
is the code that wasn't working:

    if(-z $emailBody)
    {
        print LOGFILE ("No files found in $dir \n");
    }
    else
    {
        print LOGFILE ("Files found in $dir.  Sending email to distribution
list. \n");

        $subject = "Files To Retrieve In Directory: $dir \n";
        $recipients = $prefix . "Emails.txt";

        `email program trigger`;
    }

I know that I said "wasn't" in my last statement.  One of my colleagues
discovered that if he puts a "chomp($emailBody);" right before this
statement that it seems to work just fine instead of failing.   Now, as I
mentioned the code before this that checks if the file exists, using THE
SAME variable works fine.  Why would I now, at this point, only a dozen
lines later, have to "chomp" the variable to get this to work?  It isn't
like the value was supplied from the command line, it is set in the script.
Granted, it is inside of a foreach loop that is cycling through the
different directories and setting the variable per the directory, but it is
all done in the script.

Does anyone have any idea why this would have to be chomped at this stage of
the script?

Thank you in advance for your responses!!

Regards,

Jeff Kirkland

------=_Part_57453_6780621.1182170898850--

