From beginners-return-92069-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun  1 11:18:02 2007
Return-Path: <beginners-return-92069-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l51FI1hB011425
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 1 Jun 2007 11:18:01 -0400
Received: (qmail 21987 invoked by uid 514); 1 Jun 2007 15:17:49 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 21976 invoked from network); 1 Jun 2007 15:17:48 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 15:17:48 -0000
Received: (qmail 31623 invoked by uid 225); 1 Jun 2007 15:17:48 -0000
Delivered-To: beginners@perl.org
Received: (qmail 31613 invoked by alias); 1 Jun 2007 15:17:48 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.232 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.232)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 01 Jun 2007 08:15:24 -0700
Received: by nz-out-0506.google.com with SMTP id x7so579083nzc
        for <beginners@perl.org>; Fri, 01 Jun 2007 08:15:20 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=rJvYLns50yPtgKRGX6ceWUvWhulZiSCJJgWzAf5RP9JhwgBrNQGjHXQUauNyaPhKvAV1UFY2yg6psqagnp/lrSgnjWSTR7GoIJcCIGJ+1XI0n9xHhBFxPBmJSwpmSprNkMWaKkzDyL8yarOCNx/egvem19FOAG08z3o25WSf53Y=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=f04mX/XXdfJjUM1ziBzcXHSpsxiMd/0t3WNFfCkBuv+dBrrYGwfotP+MeNu1cljWrIr/LSQ31Dm/iAkBT+Jglrg5RUl+Ng9wMcMRXpTJKfjoK5Fg01fXmWZNWtn7gC9Zh8EltS/JdRRWWZenoBlcOwxlD94aqAuAvoq4iX+O1fs=
Received: by 10.114.170.1 with SMTP id s1mr1903045wae.1180710920419;
        Fri, 01 Jun 2007 08:15:20 -0700 (PDT)
Received: by 10.115.54.13 with HTTP; Fri, 1 Jun 2007 08:15:20 -0700 (PDT)
Message-ID: <58ce48dc0706010815j783ef475x9a235dcb1e4f30c5@mail.gmail.com>
Date: Fri, 1 Jun 2007 11:15:20 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Nath, Alok (STSD)" <alok.nath@hp.com>
Subject: Re: Simplest hash initialization with no value
Cc: "Paul Lalli" <mritty@gmail.com>, beginners@perl.org,
   perl-beginners@moderators.isc.org
In-Reply-To: <C4A55E6959ED6F498EA07FFB09DAB2E00725272A@bgeexc04.asiapacific.cpqcorp.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <C4A55E6959ED6F498EA07FFB09DAB2E007252726@bgeexc04.asiapacific.cpqcorp.net>
	 <465FEBE8.6020004@earthlink.net>
	 <C4A55E6959ED6F498EA07FFB09DAB2E007252728@bgeexc04.asiapacific.cpqcorp.net>
	 <1180696114.138700.158500@g4g2000hsf.googlegroups.com>
	 <C4A55E6959ED6F498EA07FFB09DAB2E00725272A@bgeexc04.asiapacific.cpqcorp.net>

On 6/1/07, Nath, Alok (STSD) <alok.nath@hp.com> wrote:
>  But when decalared this way it gives a warning message :"Use of
> uninitialized value in concatenation (.) or string at"
>
> in a print statement which is something like this :
>
>                 my %myhash = map { $_ => undef } qw/A B C D E F G H I J
> K/;
>                 foreach my $key (%myhash){
>                         print $myhash{$key}
>                 }

A hash in list context returns a list of keys _and_ values.  You need
to use the keys function to get only the keys.  You also probably want
to sort the keys since they are returned in an unspecified order.
Also, if you don't want undef warnings for values that have not been
set yet then use the empty string instead of undef (this really
depends on what you are planning to do).

my %h  = map { $_ => '' } qw<A B C D E F G H I J K>;

for my $key (sort keys %h) {
    print "$key is [$h{$key}]\n";
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


