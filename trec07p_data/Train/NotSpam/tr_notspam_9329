From r-help-bounces@stat.math.ethz.ch  Thu May 10 20:51:40 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4B0pdqD016526
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 10 May 2007 20:51:39 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4B0oEsa021139;
	Fri, 11 May 2007 02:50:29 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.2 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.168])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4B0o9NP021113
	for <r-help@stat.math.ethz.ch>; Fri, 11 May 2007 02:50:09 +0200
Received: by ug-out-1314.google.com with SMTP id p37so598278ugc
	for <r-help@stat.math.ethz.ch>; Thu, 10 May 2007 17:50:09 -0700 (PDT)
Received: by 10.67.88.20 with SMTP id q20mr2447775ugl.1178844608929;
	Thu, 10 May 2007 17:50:08 -0700 (PDT)
Received: by 10.66.236.7 with HTTP; Thu, 10 May 2007 17:50:08 -0700 (PDT)
Message-ID: <644e1f320705101750y295bb77y52123a8102640268@mail.gmail.com>
Date: Thu, 10 May 2007 20:50:08 -0400
From: "jim holtman" <jholtman@gmail.com>
To: "new ruser" <newruser@yahoo.com>
In-Reply-To: <94968.81244.qm@web63902.mail.re1.yahoo.com>
MIME-Version: 1.0
Content-Disposition: inline
References: <94968.81244.qm@web63902.mail.re1.yahoo.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] how to pass "arguments" to a function within a function?
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

You weren't passing in any 'x' and 'y' arguments to the 'fun'.

Try this:

vars.in = data.frame(x='sample1',y='sample2')


examplefun  <- function(fun, vars=vars.in, ...) {

       for(v in 1: ncol(vars) ) {
           assign( names(vars)[v]  , vars[1,v]  , env=.GlobalEnv)
       }
       fun(x=as.character(vars[1,1]), y=as.character(vars[1,2]))
}

examplefun(fun=minus, vars = vars.in)


On 5/10/07, new ruser <newruser@yahoo.com> wrote:
> I have searched the r-help files but have not been able to find an answer to this question.  I apologize if this questions has been asked previously.
>
> (Please excuse the ludicrousness of this example, as I have simplified my task for the purposes of this help inquiry.  Please trust me that something like this will in fact be useful what I am trying to accomplish. I am using R 2.4.1 in Windows XP.)
>
> I have created two functions:
>
> 1. minus <- function(x,y) {get(x)-get(y)}
>
> a. note: x and y are of type character and represent the names of numerical objects)
>
>
> 2. examplefun  <- function(fun, vars=vars.in, ...) {
>
>        for(v in 1: ncol(vars) ) {
>            assign( names(vars)[v]  , vars[1,v]  , env=.GlobalEnv)
>                                        }
>
> fun(...) }
>
> a. FUN = another function (e.g. minus() that takes as its inputs variables of type chatrcater
> b. vars = (a data.frame with the names of variables that will be passed to "FUN"
>
> My problem: various inputs for "FUN" will require different arguments.  These arguments will be contained in the column names of "vars".  How do I pass these arguments to FUN()?
>
>
> My example and my attempt:
>
> what I am trying to do, successfully accomplished without a function:
> x='sample1'
> y='sample2'
>
> sample1=c(222,333,444)
> sample2=c(100,200,300)
>
> minus <- function(x,y) {get(x)-get(y)}
> minus(x,y)
>
> #########################################################
>
> #My so-far failing attempt to write a function to do the same thing:
>
> vars.in = data.frame(x='sample1',y='sample2')
>
>
> examplefun  <- function(fun, vars=vars.in, ...) {
>
>        for(v in 1: ncol(vars) ) {
>            assign( names(vars)[v]  , vars[1,v]  , env=.GlobalEnv)
>                                        }
>
> fun(...) }
>
> examplefun(fun=minus, vars = vars.in)
>
>
> ---------------------------------
> Now that's room service! Choose from over 150,000 hotels
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


-- 
Jim Holtman
Cincinnati, OH
+1 513 646 9390

What is the problem you are trying to solve?

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

