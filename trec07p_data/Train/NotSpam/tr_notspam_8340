From beginners-return-91396-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May  7 17:39:07 2007
Return-Path: <beginners-return-91396-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l47Ld5qD003654
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 7 May 2007 17:39:06 -0400
Received: (qmail 27903 invoked by uid 514); 7 May 2007 21:39:00 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 27894 invoked from network); 7 May 2007 21:39:00 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 7 May 2007 21:39:00 -0000
Received: (qmail 14795 invoked by uid 225); 7 May 2007 21:39:00 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14788 invoked by alias); 7 May 2007 21:38:59 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of anexpert@gmail.com designates 64.233.162.237 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.237)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 07 May 2007 14:38:51 -0700
Received: by nz-out-0506.google.com with SMTP id 12so1750725nzp
        for <beginners@perl.org>; Mon, 07 May 2007 14:38:46 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=m2Kqq2X+Od5I/nwxsIgyiH/SQIYF/KmneGGOQAqihCXc7iaf+BuoET9HpmTMcb2OnudLwbuWUtI0iwg8/AJNiptqLInOViAsPwUlMQCq8/9QaJ3g+qhh6W8J2NuRUwfh5kyFBwbqJhh/DfDNPQPaMyxgEDLsOJ4ZZXSM042yD2o=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=U0llyhRmhHA1n3jvj2/uYMkiwx1qClDU3gEQN97jPBhnDAxTrxXzpbN20Rl7LsblzQ7k4Q5srpvbIvUu4xiM4VgXL8PSH1skXZIeqSkwnztdwBQVLFxgNdMIbq5M5gMQyaG7JCowNxeGZ7ZT6DeCUljPXM9vaPmLD1L25h1zO5A=
Received: by 10.65.253.6 with SMTP id f6mr10804519qbs.1178573925875;
        Mon, 07 May 2007 14:38:45 -0700 (PDT)
Received: by 10.64.193.16 with HTTP; Mon, 7 May 2007 14:38:45 -0700 (PDT)
Message-ID: <ca5781c80705071438w35b37477ncc5b8c6dd0471599@mail.gmail.com>
Date: Mon, 7 May 2007 17:38:45 -0400
From: yitzle <yitzle@users.sourceforge.net>
Sender: anexpert@gmail.com
To: "Nisse Tuta" <nissetuta@gmail.com>
Subject: Re: complex sort
Cc: beginners@perl.org
In-Reply-To: <463F97F8.8070508@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=WINDOWS-1252; format=flowed
Content-Disposition: inline
References: <463F97F8.8070508@gmail.com>
X-Google-Sender-Auth: f58bf996c9727aaa
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l47Ld5qD003654

I don't understand what you want to do with duplicates. The example
input and output don't seem to match.

You likely want to use a hash.
You can do something like this (untested code):
my %hash;
foreach (@array) {
  my ($run, $in, $out) = split / /; # Split the array element by spaces
  # Count the number of times you have each in and out for each run
  $hash{$run}{'in'}{$in}++;
  $hash{$run}{'out'}{$out}++;
}
foreach my $run (sort {$a <=> $b} keys %hash) { # Loop through the
runs in ascending order
  foreach (sort {$a <=> $b} keys %($hash{$run}{'in'}) {
    print "Run $run, in: $_. count: $hash{$run}{'in'}{$_}\n";
  }
}

On 5/7/07, Nisse Tuta <nissetuta@gmail.com> wrote:
> Hi All,
>
> I am having big problems solving this sorting issue and would really
> appreciate any help on this.
>
> I have a list with each row containing 3 numbers(Run In Out).
>
> For example,
> R01 13 19
> R01 25 30
> R01 23 47
> R01 2 14
> R02 2 45
> R02 55 60
> R01 1 17
> R03 45 66
> R03 20 35
> and so on......
>
> I would like to go through these and check for any overlapping numbers
> at both In and Out and replacing either the in out or both if
> overlapped. And any cuts/breaks in each run will add a count.
>
> To create a list like
>
> Run Count In Out
> R01 1 1 19
> 2 25 47
> R02 1 2 45
> 2 55 60
>
> And so on…..
>
> I hope this make any sense.
>
> Thank you in advance.
>
> Regards,
> Nisse
>

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/



