From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed May 30 09:41:54 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4UDfshB014314
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 30 May 2007 09:41:54 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 652C3163881
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 30 May 2007 13:41:49 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 605)
	id 0F54B162AFD; Wed, 30 May 2007 13:41:39 +0000 (GMT)
To: samba-cvs@samba.org
From: vlendec@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070530134139.0F54B162AFD@lists.samba.org>
Date: Wed, 30 May 2007 13:41:39 +0000 (GMT)
Subject: svn commit: samba r23241 - in branches: SAMBA_3_0/source/smbd
	SAMBA_3_0_26/source/smbd
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: vlendec
Date: 2007-05-30 13:41:38 +0000 (Wed, 30 May 2007)
New Revision: 23241

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23241

Log:
In preparation for the cluster messaging import the parent smbd needs to
respond to events.c style events.

Modified:
   branches/SAMBA_3_0/source/smbd/server.c
   branches/SAMBA_3_0_26/source/smbd/server.c


Changeset:
Modified: branches/SAMBA_3_0/source/smbd/server.c
===================================================================
--- branches/SAMBA_3_0/source/smbd/server.c	2007-05-30 10:24:40 UTC (rev 23240)
+++ branches/SAMBA_3_0/source/smbd/server.c	2007-05-30 13:41:38 UTC (rev 23241)
@@ -386,7 +386,8 @@
 	   for each incoming connection */
 	DEBUG(2,("waiting for a connection\n"));
 	while (1) {
-		fd_set lfds;
+		struct timeval now;
+		fd_set r_fds, w_fds;
 		int num;
 		
 		/* Free up temporary memory from the main smbd. */
@@ -404,13 +405,21 @@
 			}
 		}
 
-		memcpy((char *)&lfds, (char *)&listen_set, 
+		memcpy((char *)&r_fds, (char *)&listen_set, 
 		       sizeof(listen_set));
+		FD_ZERO(&w_fds);
+		GetTimeOfDay(&now);
 
-		num = sys_select(maxfd+1,&lfds,NULL,NULL,
+		event_add_to_select_args(smbd_event_context(), &now,
+					 &r_fds, &w_fds, &idle_timeout,
+					 &maxfd);
+
+		num = sys_select(maxfd+1,&r_fds,&w_fds,NULL,
 				 timeval_is_zero(&idle_timeout) ?
 				 NULL : &idle_timeout);
 		
+		run_events(smbd_event_context(), num, &r_fds, &w_fds);
+
 		if (num == -1 && errno == EINTR) {
 			if (got_sig_term) {
 				exit_server_cleanly(NULL);
@@ -427,6 +436,10 @@
 			continue;
 		}
 
+#if 0
+		Deactivated for now, this needs to become a timed event
+		vl
+
 		/* If the idle timeout fired and we don't have any connected
 		 * users, exit gracefully. We should be running under a process
 		 * controller that will restart us if necessry.
@@ -434,6 +447,7 @@
 		if (num == 0 && count_all_current_connections() == 0) {
 			exit_server_cleanly("idle timeout");
 		}
+#endif
 
 		/* check if we need to reload services */
 		check_reload(time(NULL));
@@ -447,11 +461,11 @@
 
 			s = -1;
 			for(i = 0; i < num_sockets; i++) {
-				if(FD_ISSET(fd_listenset[i],&lfds)) {
+				if(FD_ISSET(fd_listenset[i],&r_fds)) {
 					s = fd_listenset[i];
 					/* Clear this so we don't look
 					   at it again. */
-					FD_CLR(fd_listenset[i],&lfds);
+					FD_CLR(fd_listenset[i],&r_fds);
 					break;
 				}
 			}

Modified: branches/SAMBA_3_0_26/source/smbd/server.c
===================================================================
--- branches/SAMBA_3_0_26/source/smbd/server.c	2007-05-30 10:24:40 UTC (rev 23240)
+++ branches/SAMBA_3_0_26/source/smbd/server.c	2007-05-30 13:41:38 UTC (rev 23241)
@@ -482,7 +482,8 @@
 	   for each incoming connection */
 	DEBUG(2,("waiting for a connection\n"));
 	while (1) {
-		fd_set lfds;
+		struct timeval now, idle_timeout;
+		fd_set r_fds, w_fds;
 		int num;
 		
 		/* Free up temporary memory from the main smbd. */
@@ -500,11 +501,23 @@
 			}
 		}
 
-		memcpy((char *)&lfds, (char *)&listen_set, 
+		idle_timeout = timeval_zero();
+
+		memcpy((char *)&r_fds, (char *)&listen_set, 
 		       sizeof(listen_set));
-		
-		num = sys_select(maxfd+1,&lfds,NULL,NULL,NULL);
-		
+		FD_ZERO(&w_fds);
+		GetTimeOfDay(&now);
+
+		event_add_to_select_args(smbd_event_context(), &now,
+					 &r_fds, &w_fds, &idle_timeout,
+					 &maxfd);
+
+		num = sys_select(maxfd+1,&r_fds,&w_fds,NULL,
+				 timeval_is_zero(&idle_timeout) ?
+				 NULL : &idle_timeout);
+
+		run_events(smbd_event_context(), num, &r_fds, &w_fds);
+
 		if (num == -1 && errno == EINTR) {
 			if (got_sig_term) {
 				exit_server_cleanly(NULL);
@@ -533,11 +546,11 @@
 
 			s = -1;
 			for(i = 0; i < num_sockets; i++) {
-				if(FD_ISSET(fd_listenset[i],&lfds)) {
+				if(FD_ISSET(fd_listenset[i],&r_fds)) {
 					s = fd_listenset[i];
 					/* Clear this so we don't look
 					   at it again. */
-					FD_CLR(fd_listenset[i],&lfds);
+					FD_CLR(fd_listenset[i],&r_fds);
 					break;
 				}
 			}

