From perl6-all-return-80920-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 27 11:46:27 2007
Return-Path: <perl6-all-return-80920-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3RFkQ6w027500
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 11:46:26 -0400
Received: (qmail 23120 invoked by uid 514); 27 Apr 2007 15:46:24 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 23114 invoked from network); 27 Apr 2007 15:46:23 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-1.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,NO_REAL_NAME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: larry@cvs.develooper.com
To: perl6-language@perl.org
Subject: [svn:perl6-synopsis] r14385 - doc/trunk/design/syn
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Message-Id: <20070427154604.DC8CBCB9B8@x12.develooper.com>
Date: Fri, 27 Apr 2007 08:46:04 -0700 (PDT)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-3.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME,NO_REAL_NAME
Status: O
Content-Length: 2206
Lines: 61

Author: larry
Date: Fri Apr 27 08:46:01 2007
New Revision: 14385

Modified:
   doc/trunk/design/syn/S05.pod

Log:
Correction noted by bsb++


Modified: doc/trunk/design/syn/S05.pod
==============================================================================
--- doc/trunk/design/syn/S05.pod	(original)
+++ doc/trunk/design/syn/S05.pod	Fri Apr 27 08:46:01 2007
@@ -14,9 +14,9 @@
    Maintainer: Patrick Michaud <pmichaud@pobox.com> and
                Larry Wall <larry@wall.org>
    Date: 24 Jun 2002
-   Last Modified: 17 Apr 2007
+   Last Modified: 27 Apr 2007
    Number: 5
-   Version: 57
+   Version: 58
 
 This document summarizes Apocalypse 5, which is about the new regex
 syntax.  We now try to call them I<regex> rather than "regular
@@ -375,6 +375,8 @@
 match at all possible character positions (including overlapping)
 and return all matches in a list context, or a disjunction of matches
 in a scalar context.  The first match at any position is returned.
+The matches are guaranteed to be returned in left-to-right order with
+respect to the starting positions.
 
      $str = "abracadabra";
 
@@ -384,13 +386,20 @@
 
 =item *
 
-With the new C<:ex> (C<:exhaustive>) modifier, the current regex will match
-every possible way (including overlapping) and return all matches in a list
-context, or a disjunction of matches in a scalar context.
+With the new C<:ex> (C<:exhaustive>) modifier, the current regex will
+match every possible way (including overlapping) and return all matches
+in a list context, or a disjunction of matches in a scalar context.
+The matches are guaranteed to be returned in left-to-right order with
+respect to the starting positions.  The order within each starting
+position is not guaranteed and may depend on the nature of both the
+pattern and the matching engine.  (Conjecture: or we could enforce
+backtracking engine semantics.  Or we could guarantee no order at all
+unless the pattern starts with "::" or some such to suppress DFAish
+solutions.)
 
      $str = "abracadabra";
 
-     if $str ~~ m:exhaustive/ a (.*) a / {
+     if $str ~~ m:exhaustive/ a (.*?) a / {
          say "@()";    # br brac bracad bracadabr c cad cadabr d dabr br
      }
 

