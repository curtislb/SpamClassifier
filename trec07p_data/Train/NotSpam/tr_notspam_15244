From beginners-return-92048-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun  1 07:19:40 2007
Return-Path: <beginners-return-92048-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l51BJchB008904
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 1 Jun 2007 07:19:39 -0400
Received: (qmail 8150 invoked by uid 514); 1 Jun 2007 11:19:26 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 8141 invoked from network); 1 Jun 2007 11:19:26 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 11:19:26 -0000
Received: (qmail 3355 invoked by uid 225); 1 Jun 2007 11:19:26 -0000
Delivered-To: beginners@perl.org
Received: (qmail 3347 invoked by alias); 1 Jun 2007 11:19:25 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of mritty@gmail.com)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Fri, 01 Jun 2007 04:19:09 -0700
Received: (qmail 7676 invoked by uid 515); 1 Jun 2007 11:18:48 -0000
To: beginners@perl.org, perl-beginners@moderators.isc.org
MBOX-Line: From news@google.com Fri Jun 01 11:18:47 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Received: (qmail 7516 invoked from network); 1 Jun 2007 11:18:47 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 11:18:47 -0000
Received: (qmail 2970 invoked by uid 225); 1 Jun 2007 11:18:47 -0000
Delivered-To: news-moderator-perl.beginners@perl.org
Received: (qmail 2952 invoked by alias); 1 Jun 2007 11:18:45 -0000
Received-SPF: neutral (x1.develooper.com: 216.168.1.22 is neither permitted nor denied by domain of news@google.com)
Received: from trinity.supernews.net (HELO trinity.supernews.net) (216.168.1.22)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 01 Jun 2007 04:16:31 -0700
Received: from proxy.google.com ([64.233.167.4]:6361)
	by trinity.supernews.net with esmtps (TLSv1:AES256-SHA:256)
	(Exim 4.66 (FreeBSD))
	(envelope-from <news@google.com>)
	id 1Hu57L-0004E7-83
	for perl-beginners@moderators.isc.org; Fri, 01 Jun 2007 11:16:27 +0000
Received: from AR020007
	by proxy.google.com with ESMTP id l51BGFcc012898
	for <perl-beginners@moderators.isc.org>; Fri, 1 Jun 2007 04:16:15 -0700
Received: (from news@localhost)
	by Google Production id l51BGFAk028976
	for perl-beginners@moderators.isc.org; Fri, 1 Jun 2007 04:16:15 -0700
From: Paul Lalli <mritty@gmail.com>
Subject: Re: /s, /g and /m modifiers
Date: Fri, 01 Jun 2007 04:16:14 -0700
Organization: http://groups.google.com
Lines: 60
Message-ID: <1180696574.821519.113550@o5g2000hsb.googlegroups.com>
References: <8a31202a0706010154g49b56edbyeeeb5efad5098bcb@mail.gmail.com>
NNTP-Posting-Host: 74.70.185.44
Mime-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
X-Trace: posting.google.com 1180696575 28975 127.0.0.1 (1 Jun 2007 11:16:15 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Fri, 1 Jun 2007 11:16:15 +0000 (UTC)
In-Reply-To: <8a31202a0706010154g49b56edbyeeeb5efad5098bcb@mail.gmail.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1),gzip(gfe),gzip(gfe)
Complaints-To: groups-abuse@google.com
Injection-Info: o5g2000hsb.googlegroups.com; posting-host=74.70.185.44;
   posting-account=p3DCbw0AAAAc32agNMy1mXKInuw5KHP_
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Jun 1, 4:54 am, sharan.basa...@gmail.com (Sharan Basappa) wrote:
> I have a script as follows  :
>
> $str = "once upon a time
>         once upon a time";
> @store = $str =~ m/(once)/g;
> print @store ;
>
> This outputs "onceonce"
> How come regex is searching beyond newline. I thought the search will
> stop after first once.

What led you to believe that?  There is nothing in that regex that
says "stop after the first newline"

> When I replace /g with /m, the output I get is "once", but I thought /m will
> tell regex at multiple lines for match.

That is the mnemonic device, yes, but what it actually does is allow
the ^ token to match after a newline and the $ character to match
before a newline, rather than just the beginning and end of string.
So effectively, ^ and $ match the beggining/ending of lines, rather
than strings.

Your regexp does not involve ^ or $, so /m is completely irrelevent.

If you remove the /g modifier, your pattern matches only once.
Regardless of any other modifiers, if you want to search for more than
one occurrence of the pattern, you need the /g modifier.

> Also when I replace /g with /s, I still get output "once"

Again, without the /g modifier, the pattern matches only once.  /s is
also irrelevant.  While the mnemonic for this one is "single line",
what it actually does is allow the . wildcard to match any character
including the newline.  Normally it matches any character except the
newline.  Again, you have no . in your pattern, so /s is irrelevant.

> Can someone demystify this for me ?
> Is my assumption that regex will stop after encountering first newline is
> applicable only when dot* type of regex is used ?

Ah.  Now I understand your confusion.  It is not the regexp that stops
matching.  It is the . wildcard.  The . does not match a newline
character, unless you provide the /s modifier.  Therefore, the string
"onex\ntwox" will match /o(.*)x/ by setting $1 to 'on'.  This is what
you've interpreted by "stopping after the first newline".  The regexp
engine didn't stop.  It's just that the . ran out of sequential
characters that it could match.  If you add the /s modifier, then $1
will become "nex\ntwo", because now the . wildcard will match the
newline.

For more info:
perldoc perlretut
perldoc perlre
perldoc perlreref

Hope this helps,
Paul Lalli


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


