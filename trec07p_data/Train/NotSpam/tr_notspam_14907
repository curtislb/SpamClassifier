From beginners-return-92007-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 31 10:24:22 2007
Return-Path: <beginners-return-92007-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4VEOLhB028908
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 10:24:21 -0400
Received: (qmail 9246 invoked by uid 514); 31 May 2007 14:24:10 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 9237 invoked from network); 31 May 2007 14:24:09 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 31 May 2007 14:24:09 -0000
Received: (qmail 27732 invoked by uid 225); 31 May 2007 14:24:09 -0000
Delivered-To: beginners@perl.org
Received: (qmail 27723 invoked by alias); 31 May 2007 14:24:08 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of anexpert@gmail.com designates 64.233.166.177 as permitted sender)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.177)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 31 May 2007 07:24:00 -0700
Received: by py-out-1112.google.com with SMTP id f47so347595pye
        for <beginners@perl.org>; Thu, 31 May 2007 07:23:55 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=uNYO/Q8UPEe5HY4dUXPUnAFLXsOv8bKL4siMJWLwkiOeMKJmIVJzapAwjOatFW0d1MD29iUKtVIy5aGWFt1e2DXbOG6vE/tvoU8mVC7zNcmBL2IFH6UqarsuhBKwYM4/0Zm2f6zK4L4XsyN5hul8bQnxctxLKurvRuLD1r0hdF0=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=TsrEG47DDGwNr7A2T6nR3Q10FinX1zHl/bPy9ItELsdO7mw9EpgaSHlUfzyaXpa+zJSQVfq/AnHNuf8Dw4rUy96fxkiJbmtW+drgc+1Yl8WS4cU2w0XS18LAq3uPvKHjS20pltVCT6LUzLahiWkMSW5p7Y+eXUD87Q4zFN7gfhA=
Received: by 10.65.132.13 with SMTP id j13mr1110985qbn.1180621435137;
        Thu, 31 May 2007 07:23:55 -0700 (PDT)
Received: by 10.64.193.14 with HTTP; Thu, 31 May 2007 07:23:55 -0700 (PDT)
Message-ID: <ca5781c80705310723oe752fd1td84028d8f6e36d36@mail.gmail.com>
Date: Thu, 31 May 2007 10:23:55 -0400
From: yitzle <yitzle@users.sourceforge.net>
Sender: anexpert@gmail.com
To: "Sharan Basappa" <sharan.basappa@gmail.com>
Subject: Re: did I get greedy quantifiers wrong ?
Cc: beginners@perl.org, perl-beginners@moderators.isc.org
In-Reply-To: <8a31202a0705310715w65f052d0kf80bd6412255ba09@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <8a31202a0705310302y1822ca58y9507522e3b9a262d@mail.gmail.com>
	 <1180617105.122078.145280@p77g2000hsh.googlegroups.com>
	 <8a31202a0705310715w65f052d0kf80bd6412255ba09@mail.gmail.com>
X-Google-Sender-Auth: 4f44102193b5f767

Untested code.

$str = mississippi;
$str =~ m/m(.*i)/;
print $1; # Should output mississippi

$str = mississippi;
$str =~ m/m(.*i)(.*pi)/;
This requires $2 to have .*pi in it. Since this is a greedy RegEx, $1
will grab mississi (must end by an i) and leave as little as possible
for $2 - ie ppi.

Um. Hope this post helped!

On 5/31/07, Sharan Basappa <sharan.basappa@gmail.com> wrote:
> Thanks a lot Paul ..
>
> For this rule :
> $str = mississippi;
> $str =~ m/m(.*i)(.*pi)/;
>
> My initial understanding was that .*i would match all the way till last char i.
> This would indeed be true if .*i was not followed by .*pi.
> Do you agree ?

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


