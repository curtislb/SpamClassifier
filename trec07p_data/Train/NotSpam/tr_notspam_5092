From beginners-return-91059-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 20:42:42 2007
Return-Path: <beginners-return-91059-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3Q0gf6w005904
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 20:42:41 -0400
Received: (qmail 8243 invoked by uid 514); 26 Apr 2007 00:42:36 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 8234 invoked from network); 26 Apr 2007 00:42:36 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Apr 2007 00:42:36 -0000
Received: (qmail 6718 invoked by uid 225); 26 Apr 2007 00:42:35 -0000
Delivered-To: beginners@perl.org
Received: (qmail 6711 invoked by alias); 26 Apr 2007 00:42:35 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from grant.njpservices.com (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 17:42:32 -0700
Received: from [85.92.179.189] (85-92-179-189.eurisp.net [85.92.179.189] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l3Q0eja14827;
	Thu, 26 Apr 2007 01:40:45 +0100
Message-ID: <462FF511.20502@350.com>
Date: Thu, 26 Apr 2007 01:40:49 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: yitzle <yitzle@users.sourceforge.net>
CC: Beginners Perl <beginners@perl.org>
Subject: Re: Code Comments/Tips - Can this code be better?
References: <ca5781c80704251555i4f44d215qb6028b8db80f6aaa@mail.gmail.com>
In-Reply-To: <ca5781c80704251555i4f44d215qb6028b8db80f6aaa@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1340
Lines: 63

yitzle wrote:
>
> I got an input source that got records of fixed number of lines, eg
> Name, Address, Age, Phone, Cell
> I'm not interested in Age or Cell.
> I'm doing something along the lines of the following. Can I do better?
> 
> my @lines = qw/name address age phone cell end/;
> my %process = {name=>1, address=>1, phone=>1, end=>1};
> my $i = 0;
> my $name;
> my %hash;
> while(<INPUT>) {
>     $name = $_ if($lines[$i] eq 'name');
>     next unless($process{$lines[$i]});
>     $hash{$name}{$lines[$i]} = $_;
> } continue {
>     $i = ($i++) % (#$lines + 1);
> }
> 
> One part that really irks me is the hash for listing what lines get 
> processed.
> I suppose I can process everything and have a qw// list of what parts
> of the hash I want to use at a later point of the code...

I would put all of the data into the hash for completeness, and I would do
it like this:

  use strict;
  use warnings;

  my @lines = qw/name address age phone cell end/;

  my %hash;

  my @data;

  while (<INPUT>) {

    chomp;
    push @data, $_;

    if (@data == @lines) {

      my %record;
      @record{@lines} = @data;

      $hash{$record{name}} = \%record;

      undef @data;
    }
  }




Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


