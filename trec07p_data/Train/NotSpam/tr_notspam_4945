From beginners-return-91042-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 11:53:19 2007
Return-Path: <beginners-return-91042-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PFrI6w032559
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 11:53:18 -0400
Received: (qmail 1920 invoked by uid 514); 25 Apr 2007 15:53:12 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 1911 invoked from network); 25 Apr 2007 15:53:12 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Apr 2007 15:53:12 -0000
Received: (qmail 6014 invoked by uid 225); 25 Apr 2007 15:53:12 -0000
Delivered-To: Beginners@perl.org
Received: (qmail 6009 invoked by alias); 25 Apr 2007 15:53:11 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.fast4.net (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 08:53:09 -0700
Received: from [85.92.179.189] (85-92-179-189.eurisp.net [85.92.179.189] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l3PFqwa24777;
	Wed, 25 Apr 2007 16:52:58 +0100
Message-ID: <462F7959.3070500@350.com>
Date: Wed, 25 Apr 2007 16:52:57 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Beginners@perl.org
CC: som.ctc@gmail.com
Subject: Re: Math::BigFloat
References: <e9a6a7e60704242100h228f2b68na272ee8ff20ee23d@mail.gmail.com>	 <31086b240704242115x3cc8f2b6o21b5c3d0151660f1@mail.gmail.com> <e9a6a7e60704250531ga3cc9efu4b9851178d2c2fea@mail.gmail.com>
In-Reply-To: <e9a6a7e60704250531ga3cc9efu4b9851178d2c2fea@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1454
Lines: 57

Somu wrote:
> On 4/25/07, Tom Phoenix <tom@stonehenge.com> wrote:
>>
>> On 4/24/07, Somu <som.ctc@gmail.com> wrote:
>>>
>>> I'm unable to compare numbers using the module. Actually i can only
>>> use it to create numbers like 0 or inf or 1 or their negatives. But i
>>> dont know how to use their methods. Bcoz the examples in the doc
>>> aren't working. Can i get some simple examples?
>>
>> What are you doing that isn't working? "Because" if the documentation
>> examples don't work for you, why should this work?
>>
>> #!/usr/bin/perl
>>
>> use strict;
>> use warnings;
>>
>> use Math::BigFloat;
>>
>> my $$big = Math::BigFloat->new(200);
>> my $$other = Math::BigFloat->new(100);
>>
>> if ($$big > $$other) {
>>   print "It seems that $$big is bigger than $$other. ";
>> } else {
>>   print "Actually $$other is at least as large as $$big. ";
>> }
> 
> Actually the following isnt working:
> 
> use Math::BigFloat;
> $n = 0;
> if ($n->is_zero()) {print 'you entered zero'}

This isn't working because 0 is an integer, not a Math::BigFloat object. You
can get Perl to represent all your /floating-point/ constants as Math::BigFloat
objects by changing the use line to

  use Math::BigFloat ':constant';

which makes

  $n = 0.0;
  if ($n->is_zero) {print 'you entered zero'}

work as you expected.

HTH,

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


