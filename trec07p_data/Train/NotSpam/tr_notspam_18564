From perl6-all-return-81920-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun 12 16:14:22 2007
Return-Path: <perl6-all-return-81920-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5CKELL9031369
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 12 Jun 2007 16:14:21 -0400
Received: (qmail 29356 invoked by uid 514); 12 Jun 2007 20:14:19 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29351 invoked from network); 12 Jun 2007 20:14:19 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of mark@glines.org designates 72.36.206.66 as permitted sender)
Date: Tue, 12 Jun 2007 13:13:44 -0700
From: Mark Glines <mark@glines.org>
To: Allison Randal <allison@perl.org>
Cc: jerry gay <jerry.gay@gmail.com>,
   Perl 6 Internals
 <perl6-internals@perl.org>
Subject: Re: Removing #pragma
Message-ID: <20070612131344.4455a056@chirp>
In-Reply-To: <466EE867.6060601@perl.org>
References: <9F00A4F2-6AF4-429C-97D4-53B543738069@petdance.com>
	<1d9a3f400706120738q4f1c7132q5c2db61522b2ffab@mail.gmail.com>
	<466EE867.6060601@perl.org>
Organization: Glines.org
X-Mailer: Claws Mail 2.9.0 (GTK+ 2.10.12; i686-pc-linux-gnu)
X-Useless-Header: yay!
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

On Tue, 12 Jun 2007 11:39:35 -0700
Allison Randal <allison@perl.org> wrote:

> jerry gay wrote:
> > On 6/12/07, Andy Lester <andy@petdance.com> wrote:
> >>
> >> I'm very uncomfortable with removing #pragma once from our header
> >> files.  It is perfectly valid C89 code, and I think bowing to a
> >> broken compiler is unhealthy precedent.
> >>
> > to add some context, in r18884 andy committed a patch (after my
> > suggestion) to put C<#pragma once> in every c header file, after
> > reading that it should speed up compilation with msvc. i consulted
> > my copy of k&r, which states that unrecognized pragmas should be
> > ignored, so it should have no ill effects on other platforms.
> 
> Do we have any proof that it does speed up compilation with msvc? 
> Littering our code with "optimizations" for odd compilers is also an 
> unhealthy precedent.

Note that some versions of gcc also support it, for instance, later
compilers in the 3.4.x series support it.  (At least, I see it in their
changelog, not sure exactly which release they added it in.)

I just came up with an artificial benchmark and found that gcc-3.4.6
runs slightly faster with #pragma once protecting a header that includes
lots of other headers. (a chain of 200 other headers, in my test.)  By
"slightly", I mean "compare a 0.86 second average to a 0.92 second
average, for 10 runs each".

For a more realistic benchmark, parrot r18883 compiles in 3m29.363s,
parrot r18884 compiles in 3m29.190s.  So, for gcc-3.4.6 at least, I
think the difference might be lost in the noise.

On the other hand, will #pragma once allow us to get rid of all of
those ugly header guard macros?  If so, I would argue to keep it for
maintenance reasons, regardless of any performance benefits.

Mark

