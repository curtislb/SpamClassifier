From perl6-all-return-81691-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 31 19:55:18 2007
Return-Path: <perl6-all-return-81691-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4VNtHhB002255
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 19:55:17 -0400
Received: (qmail 16347 invoked by uid 514); 31 May 2007 23:55:11 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 16342 invoked from network); 31 May 2007 23:55:11 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Mime-Version: 1.0
Message-Id: <p06240800c2850f0efce6@[192.168.1.101]>
In-Reply-To: <a06230903c2841742ecc0@[172.27.1.7]>
References: <20070529211829.A0A6ECB9B8@x12.develooper.com>
 <f60fe000705291546h15604024ib3d3476e51ceda99@mail.gmail.com>
 <20070529234058.GB18458@wall.org> <a06230903c2841742ecc0@[172.27.1.7]>
Date: Thu, 31 May 2007 16:54:29 -0700
To: perl6-language@perl.org
From: Darren Duncan <darren@DarrenDuncan.net>
Subject: Re: [svn:perl6-synopsis] r14407 - doc/trunk/design/syn
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Scanned-By: MIMEDefang 2.36
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

At 5:36 PM -0600 5/31/07, David Green wrote:
>On 5/29/07, Larry Wall wrote:
>>In any case, the Huffman coding is probably right because you want
>>to declare Any parameters more often than you want to talk about any
>>possible kind of Object, I suspect.
>
>Are Objects really Everything?  What about native types like int -- 
>or (thanks to autoboxing) should I really be thinking of them as 
>Objects with built-in optimiser hints?  Not that I have a good 
>example of why you'd want to specify a native-only type; I'm only 
>asking out of pedantic curiosity.

If that's true, then it would probably reinforce my argument for 
renaming Object to Universal.

I said before that it is better for type names, or at least the most 
important or root part of the name of a type, should describe what it 
represents rather than how it is implemented; Object smacks more of 
an implementation detail.

If it is true that int et al (ignoring autoboxing) is not conceived 
of as an object by users, that reinforces the idea that Universal 
sounds more like "everything" than Object does.

-- Darren Duncan

