From beginners-return-91781-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 17 16:40:02 2007
Return-Path: <beginners-return-91781-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4HKdvqD004374
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 16:39:58 -0400
Received: (qmail 5114 invoked by uid 514); 17 May 2007 20:39:46 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 5105 invoked from network); 17 May 2007 20:39:45 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 May 2007 20:39:45 -0000
Received: (qmail 21262 invoked by uid 225); 17 May 2007 20:39:45 -0000
Delivered-To: beginners@perl.org
Received: (qmail 21254 invoked by alias); 17 May 2007 20:39:44 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from out1.smtp.messagingengine.com (HELO out1.smtp.messagingengine.com) (66.111.4.25)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 17 May 2007 13:39:27 -0700
Received: from compute1.internal (compute1.internal [10.202.2.41])
	by out1.messagingengine.com (Postfix) with ESMTP id 9B08C21FF22
	for <beginners@perl.org>; Thu, 17 May 2007 16:40:58 -0400 (EDT)
Received: from web7.messagingengine.com ([10.202.2.216])
  by compute1.internal (MEProxy); Thu, 17 May 2007 16:39:22 -0400
Received: by web7.messagingengine.com (Postfix, from userid 99)
	id D2E05F574; Thu, 17 May 2007 16:39:22 -0400 (EDT)
Message-Id: <1179434362.26665.1190416031@webmail.messagingengine.com>
X-Sasl-Enc: IvLRea47RGkWzW/XYK24HvimgsOSB1MO1JBL/z99yNMl 1179434362
From: "Romeo Theriault" <romeotheriault@fastmail.fm>
To: beginners@perl.org
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset="iso-8859-1"
MIME-Version: 1.0
X-Mailer: MessagingEngine.com Webmail Interface
Subject: Store contents of array in a variable?
Date: Thu, 17 May 2007 16:39:22 -0400

This is probably a dumb question but is it possible to store the
contents of an array into a variable?

Something like this:

$variable = foreach $array_ref7 (@rowstash7) {
       return "@$array_ref7\n";
    }

I have this script below in which I am trying to send the contents of an
array within an email and don't quite know how to deal with getting the
contents of the array's into the email message. Suggestions are very
welcome.

Thanks,

Romeo


#!/usr/bin/perl

use warnings;
use strict;
use DBI;
use Net::SMTP;


my @rowstash7;
my @rowstash30;
my @rowstash365;
my $array_ref7;
my $array_ref30;
my $array_ref365;
my $somevariable = "test";


## Connect to the database.
my $dbh = DBI->connect( "DBI:mysql:database=antivirus;host=localhost",
    "user", "password", { 'RaiseError' => 1 } );

&success_querie(7);
&success_querie(30);
&success_querie(365);

&sendmail('antivirus_downloads@umfk.maine.edu',
'romeo.theriault@maine.edu', "Antivirus Downloads", 'mail.maine.edu',
'romeo.theriault@maine.edu', "Download Activity for the last
Week:\n$somevariable\n\nDownload Activity for the last
Month:\n$somevariable\n\nDownload Activity for the last
Year:\n$somevariable");



## Function to query the database for the info.
sub success_querie {
    my ($searchlength) = @_;
    my $select_handle =
      $dbh->prepare_cached(
'SELECT name,COUNT(*) FROM success WHERE datetime > SUBDATE(NOW(),
INTERVAL ? DAY) GROUP BY name;'
      );

    die "Couldn't prepare queries; aborting"
      unless defined $select_handle;

    $select_handle->execute($searchlength) or return 0;
    my ( $name, $count );
    $select_handle->bind_columns( \$name, \$count );

    if ( $searchlength == 7 ) {
        while ( $array_ref7 = $select_handle->fetchrow_arrayref() ) {
            push @rowstash7, [@$array_ref7];

            #print "$name, $count\n";
        }
    }
    elsif ( $searchlength == 30 ) {
        while ( $array_ref30 = $select_handle->fetchrow_arrayref() ) {
            push @rowstash30, [@$array_ref30];

            #print "$name, $count\n";
        }
    }
    else {
        while ( $array_ref365 = $select_handle->fetchrow_arrayref() ) {
            push @rowstash365, [@$array_ref365];

            #print "$name, $count\n";
        }
    }

    $select_handle->finish();

    return 1;    # Success

    ## Disconnect from the database.
    $dbh->disconnect();

}

## Function to send the mail.
sub sendmail {
    my ( $from, $to, $subject, $server, $replyto, $message ) = @_;
    my $smtp = Net::SMTP->new($server);
    $smtp->mail($from);
    $smtp->to($to);

    #$smtp->bcc($bcc, $bcc1);
    $smtp->data();
    $smtp->datasend("To: $to\n");
    $smtp->datasend("Subject: $subject\n");
    $smtp->datasend("Reply-To: $replyto\n");
    $smtp->datasend("$message");
    $smtp->dataend();

    $smtp->quit;
}

#sub messagebody {
#       Print "Download Activity for the last Week:\n";
#       foreach $array_ref7 (@rowstash7) {
#          return "@$array_ref7\n";
#       }
#       print "Download Activity for the last Month:\n";
#       foreach $array_ref30 (@rowstash30) {
#          return "@$array_ref30\n";
#       }
#       print "Download Activity for the last Year:\n";
#       foreach $array_ref365 (@rowstash365) {
#               return "@$array_ref365\n";
#       }
#}


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


