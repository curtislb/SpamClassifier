From perl6-all-return-81913-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun 12 10:59:25 2007
Return-Path: <perl6-all-return-81913-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5CExOL9027591
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 12 Jun 2007 10:59:24 -0400
Received: (qmail 15226 invoked by uid 514); 12 Jun 2007 14:59:23 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 15221 invoked from network); 12 Jun 2007 14:59:22 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of jerry.gay@gmail.com designates 64.233.184.236 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=PvXDsnjuMkJRSwB4Qb+HxV0A5q4tpeUPKrBo6u0TWPa/NXzFuWrllQ1TOo/xG7cDiETG9R1PWLLaGWkhcxuCvKFj+6DAFvNkBU/qQRjC2DTT094bc6R0N4CZoNFsBW9dZBF6nuffNoKH5tTk673P+y9XvdpBFPRzS2yggHK+e98=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=giPVwL7XTDZpf2Nwi2WOGsM1qwrsuPGHEoRrK65vuTblXjFw/cD/4JFEoVO5jVcQ0SzXr9FyTcw5iCcv5u6GAs5+yK+jT2te9bNVIYTUf6rfJSSCA3r2tbMiRN+goAdyclexxm6WD4oVge9mEBQ/9FjkWzvUnFzk1iId0VlvRt8=
Message-ID: <1d9a3f400706120738q4f1c7132q5c2db61522b2ffab@mail.gmail.com>
Date: Tue, 12 Jun 2007 07:38:39 -0700
From: "jerry gay" <jerry.gay@gmail.com>
To: "Andy Lester" <andy@petdance.com>
Subject: Re: Removing #pragma
Cc: "perl6-internals List" <perl6-internals@perl.org>
In-Reply-To: <9F00A4F2-6AF4-429C-97D4-53B543738069@petdance.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <9F00A4F2-6AF4-429C-97D4-53B543738069@petdance.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS

On 6/12/07, Andy Lester <andy@petdance.com> wrote:
>
> I'm very uncomfortable with removing #pragma once from our header
> files.  It is perfectly valid C89 code, and I think bowing to a
> broken compiler is unhealthy precedent.
>
to add some context, in r18884 andy committed a patch (after my
suggestion) to put C<#pragma once> in every c header file, after
reading that it should speed up compilation with msvc. i consulted my
copy of k&r, which states that unrecognized pragmas should be ignored,
so it should have no ill effects on other platforms.

as it turns out, this pragma causes mingw gcc 3.4.2 to segfault. this
is a bug in the compiler, not in the parrot code. after googling, it
seems this bug is fixed in mingw gcc 3.4.6 (perhaps earlier.)

in r18945, fperrad reverted andy's patch, after noticing the mingw gcc
problems. andy's message is in response to this commit.

i apologize for not announcing the addition of C<#pragma once> and
knowing about the problem with mingw gcc 3.4.2. it was discussed on
irc, but should have been announced on the list as that's our primary
form of communication.

now, to the matter at hand: i agree with andy. we shouldn't revert
this because one broken compiler doesn't like it. however, we should
make it clear in the documentation that the particular version of that
compiler has trouble compiling valid C89, will not compile parrot, and
upgrading to a version with the proper patch is required.

~jerry

