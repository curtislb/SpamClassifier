From perl6-all-return-81889-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 11 00:09:24 2007
Return-Path: <perl6-all-return-81889-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5B49NL9009601
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 11 Jun 2007 00:09:23 -0400
Received: (qmail 11953 invoked by uid 514); 11 Jun 2007 04:09:21 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 11948 invoked from network); 11 Jun 2007 04:09:21 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-1.2 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,PLING_QUERY,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
X-MHO-User: U2FsdGVkX18R2e8Lk6RGhy200wmBhCu9iu5uqzUKB3c=
X-Mail-Handler: MailHop Outbound by DynDNS
X-Originating-IP: 59.120.203.34
X-Report-Abuse-To: abuse@dyndns.com (see http://www.mailhop.org/outbound/abuse.html for abuse reporting information)
X-MHO-User: U2FsdGVkX1+9iYBO4iiq0Q6XbZwrC4P2886VKsUsl+0=
In-Reply-To: <ef30550b0706101410l44485919m472e675a700a1daf@mail.gmail.com>
References: <ef30550b0706101410l44485919m472e675a700a1daf@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Type: text/plain; charset=BIG5; format=flowed
Message-Id: <83F5E0A4-3320-46F2-9319-35DEF2E79584@audreyt.org>
Cc: p6l <perl6-language@perl.org>
From: Audrey Tang <audreyt@audreyt.org>
Subject: Re: Generalizing ?? !!
Date: Mon, 11 Jun 2007 12:08:48 +0800
To: Jonathan Lang <dataweaver@gmail.com>
X-Mailer: Apple Mail (2.752.3)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.3 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,PLING_QUERY,SPF_HELO_PASS,SPF_PASS
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l5B49NL9009601


¦b Jun 11, 2007 5:10 AM ®É¡AJonathan Lang ¼g¨ì¡G
> A variation of chaining associativity gets
> used, with the "chaining rule" being '$v1 op1 $v2 // $v1 op2 $v3'
> instead of '$v1 op1 $v2 && $v2 op2 $v3', as is the case for comparison
> chaining.

But wouldn't that make:

   True ?? undef !! Moose;

evaluate to Moose, instead of undef as we wanted?

Cheers,
Audrey


