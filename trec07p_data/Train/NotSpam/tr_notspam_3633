From beginners-return-90969-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 20 13:53:29 2007
Return-Path: <beginners-return-90969-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3KHrS0I009292
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 13:53:28 -0400
Received: (qmail 11328 invoked by uid 514); 20 Apr 2007 17:52:59 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 11319 invoked from network); 20 Apr 2007 17:52:59 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2007 17:52:59 -0000
Received: (qmail 11315 invoked by uid 225); 20 Apr 2007 17:52:58 -0000
Delivered-To: beginners@perl.org
Received: (qmail 11310 invoked by alias); 20 Apr 2007 17:52:58 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.132.251 as permitted sender)
Received: from an-out-0708.google.com (HELO an-out-0708.google.com) (209.85.132.251)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 20 Apr 2007 10:52:56 -0700
Received: by an-out-0708.google.com with SMTP id b8so967497ana
        for <beginners@perl.org>; Fri, 20 Apr 2007 10:52:52 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Mj9t7sLaKcAsuVi8LAPJ3v+uN2536pV41LsPjUxz06A4a7HBBPVU7PiQJsolI/Nn89owmir/rdcf2o3u4wFbePEGB8DW7XA/WinJnnvEoMOIoSXKygCow4nOJLkzOztPkZMEyjSjb7liNJKnEoL0PvrVXHJ81OehtB1jb6uxo6Q=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=r90e9uio7jrw6t+klqRdbEUGpxLKEDUjjUjcBhXIBjIdSlkeXOk323vFSupzN3y6YSPbCNo7UfB/vBJWBqywT6JZ2X95zu1f8qRgCCqJ7M13viCmqLTlhbsXsd7fN+/pOh7QGvTrqQfS5czYb4Q8Z5X+MtSyOQM44B25hl3FARA=
Received: by 10.114.173.15 with SMTP id v15mr1358850wae.1177091570132;
        Fri, 20 Apr 2007 10:52:50 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Fri, 20 Apr 2007 10:52:50 -0700 (PDT)
Message-ID: <58ce48dc0704201052of9e6673v659cd09c5e5e9086@mail.gmail.com>
Date: Fri, 20 Apr 2007 13:52:50 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "John W. Krahn" <krahnj@telus.net>
Subject: Re: Nested loop
Cc: "Perl Beginners" <beginners@perl.org>
In-Reply-To: <4628EF5A.5020402@telus.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <ca5781c80704180957w72c92fbbq2e083368ed9339e9@mail.gmail.com>
	 <58ce48dc0704181057q79262a61q6d5e1370d8c99245@mail.gmail.com>
	 <46276441.7213.2471F368@Jenda.Krynicky.cz>
	 <58ce48dc0704190807i14627a5bh53a356b664ffdd9a@mail.gmail.com>
	 <46279515.9080603@telus.net>
	 <58ce48dc0704192129r3112ddb8m62d05075b5dd966b@mail.gmail.com>
	 <4628EF5A.5020402@telus.net>
Status: O
Content-Length: 711
Lines: 28

On 4/20/07, John W. Krahn <krahnj@telus.net> wrote:
snip
> I see nothing about backwards compatibility in there?  ;-)
snip

Nope, I could not find any proof.  I did find a merlyn quote on
perlmonks that states for and foreach have always been aliased, but
that is not how I remember it.  But who am I to argue with Randal?

snip
> > my $continue = 1;
> > $SIG{__TERM__} = sub { $continue = 0 };
> > while ($continue} {
> > }
>
> my $continue = 1;
> $SIG{ __TERM__ } = sub { $continue = 0 };
> for ( ;$continue; } {
> }
snip

Yes, it can be done, but which looks better?

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


