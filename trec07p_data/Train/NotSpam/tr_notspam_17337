From beginners-return-92220-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Jun  7 16:15:35 2007
Return-Path: <beginners-return-92220-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l57KFXhB006529
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 7 Jun 2007 16:15:34 -0400
Received: (qmail 1786 invoked by uid 514); 7 Jun 2007 20:15:21 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 1777 invoked from network); 7 Jun 2007 20:15:21 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 7 Jun 2007 20:15:21 -0000
Received: (qmail 19444 invoked by uid 225); 7 Jun 2007 20:15:21 -0000
Delivered-To: beginners@perl.org
Received: (qmail 19437 invoked by alias); 7 Jun 2007 20:15:20 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.230 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.230)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 07 Jun 2007 12:53:25 -0700
Received: by nz-out-0506.google.com with SMTP id x7so607401nzc
        for <beginners@perl.org>; Thu, 07 Jun 2007 12:51:55 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=J0yLiALtsgjo4LJXLPzE6DIIWtuPrL4LLl1+GQoY55QXFgvvGSP8pa3ehyjNoMvaYFLNKTMVjT+VjGILrN2nUVi5/ym5nPySliMUaTkfyB5Ku5UI07pn9Bdhvsm38wcDQ6R0xpr/9CD2i09XzTT5RKqhoLod/eBoKx8JU6dql/Y=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=B/ZiOoDgOjaW0FTK06dZBWVy9WXFk+pgpoyUUTGyrwoDhmXprn47yzwiP5BdTmEayZtV4mCHaxoXfuFIfoPTksKLSumXBs8QCEVKGeTT9WuAY729OuCgJuT6wOBUTQvbBTDPF+M7zRRe1177snLH0ms2Lgf/MX5qgFOGHekHlwY=
Received: by 10.114.175.16 with SMTP id x16mr1802551wae.1181245915437;
        Thu, 07 Jun 2007 12:51:55 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Thu, 7 Jun 2007 12:51:55 -0700 (PDT)
Message-ID: <58ce48dc0706071251j53e5f00dgbd11472a6ce2c4b1@mail.gmail.com>
Date: Thu, 7 Jun 2007 15:51:55 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Tom Phoenix" <tom@stonehenge.com>
Subject: Re: Ram disk filling up - File::COPY
Cc: beginners@perl.org
In-Reply-To: <31086b240706071209t7e0c967amb4f1fbf28ee215bb@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <20070607094140.GE22115@foobar.in.scarlet.be>
	 <31086b240706071209t7e0c967amb4f1fbf28ee215bb@mail.gmail.com>

On 6/7/07, Tom Phoenix <tom@stonehenge.com> wrote:
> On 6/7/07, Perl WANNABE <perl@rocteur.cc> wrote:
>
> > I'm trying to copy a couple of DBM files from a disk to a RAM disk,
> > one of the files is 500M the other quite small.
>
> Some DBM implementations, if the filesystem supports doing so, will
> create files with "holes" in them; that is, the file may have
> arbitrarily long gaps in which there's no data. You can even have a
> file that seems larger than the disk it's stored upon.
>
> > Whether I use File::Copy or I roll my own copy by reading and writing the
> > file the filesystem fills up... If I use system (cp from to) I don't have a
> > problem.
>
> It sounds as if your cp knows how to handle the holes, but File::Copy
> isn't so smart. It may be worth filing a bug report over this; even if
> File::Copy isn't fixed, its documentation should mention this.
>
> Cheers!
>
> --Tom Phoenix
> Stonehenge Perl Training

#create a sparse file
perl -e '
    open my $f, ">", "sparse.txt";
    seek $f, 1024*1024 - 3, 0;
    print $f "foo";
    close $f
'

#copy it with File::Copy
perl -MFile::Copy -e 'copy("sparse.txt", "sparse.fc")'

#copy it with cp
cp sparse.txt sparse.cp

#copy it with SparseCopy*
sparsecopy.pl sparse.txt sparse.scp

#look at the sizes
du -sh sparse.*
8.0K    sparse.cp
1.1M    sparse.fc
8.0K    sparse.scp
8.0K    sparse.txt

#make sure they are all have the same contents
md5sum sparse.*
8d7e9e80e3724b84decdfc7f9b772b41  sparse.cp
8d7e9e80e3724b84decdfc7f9b772b41  sparse.fc
8d7e9e80e3724b84decdfc7f9b772b41  sparse.scp
8d7e9e80e3724b84decdfc7f9b772b41  sparse.txt

#rejoice

* Here is the program**
#!/usr/bin/perl

use strict;
use warnings;

sparsecopy(@ARGV);

sub sparsecopy {
        my ($orig, $new) = @_;

        open my $o, '<', $orig
                or die "could not open $orig: $!";

        open my $n, '>', $new
                or die "could not open $new: $!";

        select $o;

        local $/ = \4096;

        while (defined (my $block = <$o>)) {
                for my $chunk (split /(\0+)/, $block) {
                        if ($chunk =~ /\0/) {
                                seek $n, length($chunk), 1;
                                next;
                        }
                        print $n $chunk;
                }
        }
}

** patents and trademark pending***
*** yeah, right

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


