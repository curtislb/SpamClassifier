From beginners-return-90950-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 20 02:36:08 2007
Return-Path: <beginners-return-90950-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3K6a60I002367
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 02:36:07 -0400
Received: (qmail 32080 invoked by uid 514); 20 Apr 2007 06:35:37 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 32070 invoked from network); 20 Apr 2007 06:35:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2007 06:35:37 -0000
Received: (qmail 18968 invoked by uid 225); 20 Apr 2007 06:35:37 -0000
Delivered-To: beginners@perl.org
Received: (qmail 18958 invoked by alias); 20 Apr 2007 06:35:36 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.235 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.235)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 19 Apr 2007 23:35:34 -0700
Received: by nz-out-0506.google.com with SMTP id s1so625700nze
        for <beginners@perl.org>; Thu, 19 Apr 2007 23:35:30 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=TBUIgUKPXR72nCyiNq728OKPia6cHnfmuwn6JTevtJIYz8jGvRYwCkQziXN6uG/X4gOSCa1zi7UdLO73ZEaxzdpWwtfxrt/JXIjDC6OKXJR1NXiy/EAukK8qnUuqdIHa4h6zGGJJ5+8zqOqAcD5QyU2/0iKG9DA0kRUrTudmiSk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=D2ojOcobkVuTcW0VHkInX+dpYorSEK73sZ1ukhQ6Zw9HNfL7+YiVYaiNAxEUEfgAgi14GgtxExFVxoYiYXwIq5E2Mi17ha78cI45TsKK75HneE40X2efDJb1djYZIkaOfMoRJPMrZJ+81Pcw9RadjUS908FV5n924twgz0+iiSY=
Received: by 10.114.171.1 with SMTP id t1mr1097275wae.1177050925777;
        Thu, 19 Apr 2007 23:35:25 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Thu, 19 Apr 2007 23:35:25 -0700 (PDT)
Message-ID: <58ce48dc0704192335h30e78af4h6ea8e86b7415b9c4@mail.gmail.com>
Date: Fri, 20 Apr 2007 02:35:25 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Rodrick Brown" <rodrick.brown@gmail.com>
Subject: Re: Regex Matching & Grouping
Cc: beginners@perl.org
In-Reply-To: <bb075cdf0704192300m235f0f09y8aa0aa69ed5792e7@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <bb075cdf0704192300m235f0f09y8aa0aa69ed5792e7@mail.gmail.com>
Status: O
Content-Length: 2481
Lines: 100

On 4/20/07, Rodrick Brown <rodrick.brown@gmail.com> wrote:
> I'm testing a regex with the sample data
>
> Chicago Bulls 55 66
> Miami Heat 13 44
> Alpha Dogs 22 48
> Hornets 84 22
> Celtics 22 24
>
> while($line = <FH>)
> {
>     $line =~ m/((\w+\s+)?\w+)\s+(\d+)\s+(\d+)/;
>     ($team,$wins,$losses) = ($1, $3, $4);
>     print $team;
> }
>
> I came up with the following regex to map team names, wins and losses into 3
> varibles
> I'm having a hard time understanding how regex capture matches work ie.
> which exactly group is grabbing $1
>
> Thanks in advance.
>
> --
> Rodrick R. Brown
> http://www.rodrickbrown.com
>

I believe it is left to right, outer before inner

$_ = "abcdefghijk";
/((.)((.)(.)))(.)/;
print "$1 -- $2 -- $3 -- $4 -- $5 -- $6\n";

prints abc -- a -- bc -- b -- c -- d

But it looks like you don't really need non-capturing grouping.  This
is done by putting ?: at the start of the group: (?:pattern).  Also,
you need to check whether $line is defined in your while loop, you
should be declaring your variables with my, and you need to check to
see if your regex matched.

#!/usr/bin/perl

use strict;
use warnings;

while(defined (my $line = <DATA>)) {
        unless ($line =~ m{
                (                   #capture $1
                        (?:\w+\s+)? #optional word followed by spaces
                        \w+         #required word
                )
                \s+                 #space sparator
                (\d+)               #capture $2 an integer
                \s+                 #space sparator
                (\d+)               #capture $3 an integer
        }x) {
                warn "could not match";
                next;
        }

        my ($team,$wins,$losses) = ($1, $2, $3);
        print "team $team wins $wins losses $losses\n";
}

__DATA__
Chicago Bulls 55 66
Miami Heat 13 44
Alpha Dogs 22 48
Malformed foo bar baz
Hornets 84 22
Celtics 22 24

or the more compact

#!/usr/bin/perl

use strict;
use warnings;

while(defined (my $line = <DATA>)) {
        my ($team,$wins,$losses) = $line =~ /((?:\w+\s+)?\w+)\s+(\d+)\s+(\d+)/
                or do { warn "could not match"; next; };
        print "team $team wins $wins losses $losses\n";
}

__DATA__
Chicago Bulls 55 66
Miami Heat 13 44
Alpha Dogs 22 48
Malformed foo bar baz
Hornets 84 22
Celtics 22 24

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


