From beginners-return-92564-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 07:27:03 2007
Return-Path: <beginners-return-92564-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5KBR1L9009250
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 07:27:02 -0400
Received: (qmail 22711 invoked by uid 514); 20 Jun 2007 11:26:53 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 22687 invoked from network); 20 Jun 2007 11:26:52 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Jun 2007 11:26:52 -0000
Received: (qmail 8882 invoked by uid 225); 20 Jun 2007 11:26:52 -0000
Delivered-To: beginners@perl.org
Received: (qmail 8874 invoked by alias); 20 Jun 2007 11:26:51 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from elasmtp-masked.atl.sa.earthlink.net (HELO elasmtp-masked.atl.sa.earthlink.net) (209.86.89.68)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 20 Jun 2007 04:26:49 -0700
Received: from [63.26.80.59] (helo=[63.26.80.59])
	by elasmtp-masked.atl.sa.earthlink.net with asmtp (Exim 4.34)
	id 1I0yKi-0003fS-Va
	for beginners@perl.org; Wed, 20 Jun 2007 07:26:45 -0400
Message-ID: <467909AE.8080404@earthlink.net>
Date: Wed, 20 Jun 2007 06:04:14 -0500
From: "Mumia W." <mumia.w.18.spam+nospam@earthlink.net>
User-Agent: Thunderbird 1.5.0.10 (X11/20070221)
MIME-Version: 1.0
To: Beginners List <beginners@perl.org>
Subject: Re: Alternatives to highly nested hashes
References: <4678F4A4.30909@yahoo.com> <46790419.7020708@yahoo.com>
In-Reply-To: <46790419.7020708@yahoo.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-ELNK-Trace: 5d730262a02eef364886dd14879fb8dbda7403c53f5cc7e274bf435c0eb9d478eee15ddb228a014a8167af813b48f48120aa33bec10d583c350badd9bab72f9c
X-Originating-IP: 63.26.80.59

On 06/20/2007 05:40 AM, Mathew Snyder wrote:
> It looks like an object is what I want.  Am I correct?  

As always, it depends.

> Suppose I need to work
> with a bit of data that actually has 11 attributes.  This would be an object of
> another type.  However, I need to manipulate pieces of it differently.  So I'm
> guessing I would create an object thusly:
> 
> sub objectname {
>     my %hashOfAttribs {
> 	attrib1 => undef,
> 	attrib2 => undef,
> 	attrib3 => undef
>     }
> }
> 

No.

> I would then create an instance of that object
> 
> my $instance = new objectname();
> 
> I'm not certain though, how to populate the elements.  would it actually be
> my $instance = new objectname(attrib1 => value, attrib2 => value, attrib3 =>
> value)?  Or would I create the instance as above and then populate it by some
> other means?  For instance
> $instance->hashOfAttribs {
>     attrib1 => value,
>     attrib2 => value,
>     attrib3 => value
> };
> 
> Am I at least on the right track?
> 

Not really. First, it hasn't been conclusively established that you need 
objects. You haven't described the data and what you want to do with it.

Second, objects are created using the methods described in "perldoc 
perlboot," "perldoc perltoot" and "perldoc perltooc."

However, you can simplify things considerably by using Class::Struct, e.g.:

use Class::Struct ObjectName => [
     attrib1 => '$',
     attrib2 => '$',
     attrib3 => '$',
     children => '$',
     ];

  ...

my $instance = ObjectName->new(
     attrib1 => '10',
     attrib2 => [1, 20, 1943],
     attrib3 => 'Hello',
     children => []);




-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


