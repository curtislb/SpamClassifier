From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Fri Jun 22 07:42:30 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5MBgUL9005723
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 22 Jun 2007 07:42:30 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 3A10916381A
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 22 Jun 2007 11:42:28 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 1017)
	id E67FA162AC7; Fri, 22 Jun 2007 11:42:17 +0000 (GMT)
To: samba-cvs@samba.org
From: obnox@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070622114217.E67FA162AC7@lists.samba.org>
Date: Fri, 22 Jun 2007 11:42:17 +0000 (GMT)
Subject: svn commit: samba r23584 - in branches: SAMBA_3_0/source/registry
	SAMBA_3_0_26/source/registry
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: obnox
Date: 2007-06-22 11:42:17 +0000 (Fri, 22 Jun 2007)
New Revision: 23584

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23584

Log:
Use a while loop instead of a for loop without increment... :-)

Michael


Modified:
   branches/SAMBA_3_0/source/registry/reg_api.c
   branches/SAMBA_3_0_26/source/registry/reg_api.c


Changeset:
Modified: branches/SAMBA_3_0/source/registry/reg_api.c
===================================================================
--- branches/SAMBA_3_0/source/registry/reg_api.c	2007-06-22 11:21:59 UTC (rev 23583)
+++ branches/SAMBA_3_0/source/registry/reg_api.c	2007-06-22 11:42:17 UTC (rev 23584)
@@ -691,7 +691,6 @@
 	TALLOC_CTX *mem_ctx = NULL;
 	WERROR werr = WERR_OK;
 	struct registry_key *key;
-	uint32 idx = 0;
 	char *subkey_name = NULL;
 
 	mem_ctx = talloc_new(ctx);
@@ -706,14 +705,8 @@
 		goto done;
 	}
 
-	/* NOTE: we *must not* increment idx in this loop since
-	 * the list of subkeys shrinks with each loop body. 
-	 * so this way, we repeatedly delete the *first* entry
-	 * of a shrinking list. */
-	for (idx = 0;
-	     W_ERROR_IS_OK(werr = reg_enumkey(mem_ctx, key, idx,
-			     		      &subkey_name, NULL));
-	    ) 
+	while (W_ERROR_IS_OK(werr = reg_enumkey(mem_ctx, key, 0,
+						&subkey_name, NULL))) 
 	{
 		werr = reg_deletekey_recursive(mem_ctx, key, subkey_name);
 		if (!W_ERROR_IS_OK(werr)) {

Modified: branches/SAMBA_3_0_26/source/registry/reg_api.c
===================================================================
--- branches/SAMBA_3_0_26/source/registry/reg_api.c	2007-06-22 11:21:59 UTC (rev 23583)
+++ branches/SAMBA_3_0_26/source/registry/reg_api.c	2007-06-22 11:42:17 UTC (rev 23584)
@@ -691,7 +691,6 @@
 	TALLOC_CTX *mem_ctx = NULL;
 	WERROR werr = WERR_OK;
 	struct registry_key *key;
-	uint32 idx = 0;
 	char *subkey_name = NULL;
 
 	mem_ctx = talloc_new(ctx);
@@ -706,14 +705,8 @@
 		goto done;
 	}
 
-	/* NOTE: we *must not* increment idx in this loop since
-	 * the list of subkeys shrinks with each loop body. 
-	 * so this way, we repeatedly delete the *first* entry
-	 * of a shrinking list. */
-	for (idx = 0;
-	     W_ERROR_IS_OK(werr = reg_enumkey(mem_ctx, key, idx,
-			     		      &subkey_name, NULL));
-	    ) 
+	while (W_ERROR_IS_OK(werr = reg_enumkey(mem_ctx, key, 0,
+						&subkey_name, NULL))) 
 	{
 		werr = reg_deletekey_recursive(mem_ctx, key, subkey_name);
 		if (!W_ERROR_IS_OK(werr)) {

