From perl6-all-return-80770-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Apr 22 02:57:21 2007
Return-Path: <perl6-all-return-80770-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3M6vJ0I003687
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 22 Apr 2007 02:57:19 -0400
Received: (qmail 32350 invoked by uid 514); 22 Apr 2007 06:56:53 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 32345 invoked from network); 22 Apr 2007 06:56:53 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: Patrick Rutkowski <rutski89@gmail.com>
Subject: Re: I Don't Understand The Context Allocation/Destruction Code
Date: Sat, 21 Apr 2007 23:56:15 -0700
User-Agent: KMail/1.9.5
Cc: perl6-internals@perl.org
References: <200704211824.18554.chromatic@wgz.org> <200704212159.47243.chromatic@wgz.org> <253EEAE7-2E49-4CE7-9186-A6924A0CE688@gmail.com>
In-Reply-To: <253EEAE7-2E49-4CE7-9186-A6924A0CE688@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704212356.15729.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
Status: O
Content-Length: 1248
Lines: 32

On Saturday 21 April 2007 22:49, Patrick Rutkowski wrote:

> I'm not looking at it for any particular reason. My interest in
> helping work on parrot began only yesterday. First I spent last night
> reading a few pdds. Then this morning in an effort to familiarize
> myself with the implementation details I opened up main.c and just
> started reading line by line assuming hello.pasm as
> input. Unfortunately Parrot_alloc_context() is the first non-trivial
> code that one runs into when doing that. The call stack basically
> goes:
>
> main() ->
>    Parrot_new() ->
>      make_interpreter() ->
>        create_initial_context() ->
>          Parrot_alloc_context() ->
>            walk_away_from_computer_in_confusion()

Okay.  (You're lucky you started only yesterday.  src/main.c has only been 
where it is for a few days.)

Assume Parrot_alloc_context() Does Scary Magic To Make Sure the Registers Are 
Sane and skip over it for the time being.  Now you know almost everything I 
do about it.

> In that case I'll keep on digging. If I pinpoint the person who authored
> the confusing bits then I'll forward him a link to this thread on
> nntp.perl.org.

I'm pretty sure Leo or Bob will jump in here if either can help us unravel it.

-- c

