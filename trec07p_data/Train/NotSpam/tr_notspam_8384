From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon May  7 23:40:17 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l483eHqD006421
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 7 May 2007 23:40:17 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id C57DF162C1D
	for <ktwarwic@speedy.uwaterloo.ca>; Tue,  8 May 2007 03:40:15 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.9 required=3.8 tests=AWL, BAYES_00, FORGED_RCVD_HELO,
	NO_REAL_NAME,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-technical@lists.samba.org
Delivered-To: samba-technical@lists.samba.org
Received: from amber.vis-av.com (dsl092-075-243.bos1.dsl.speakeasy.net
	[66.92.75.243]) by lists.samba.org (Postfix) with SMTP id 4D96D162AD9
	for <samba-technical@lists.samba.org>;
	Tue,  8 May 2007 03:39:55 +0000 (GMT)
Received: (qmail 12133 invoked from network); 8 May 2007 03:39:54 -0000
Received: from unknown (HELO oberon-mail.internal) (192.168.1.71)
	by amber.internal with SMTP; 8 May 2007 03:39:54 -0000
Received: (nullmailer pid 11303 invoked by uid 0);
	Tue, 08 May 2007 03:39:54 -0000
From: derrell@samba.org
To: Andrew Bartlett <abartlet@samba.org>
References: <20070507030225.E0925162AD2@lists.samba.org>
	<463ED152.9070405@samba.org> <6474fsc6.fsf@oberon-mail.internal>
	<1178583646.4852.2.camel@thinker> <1whsw17k.fsf@oberon-mail.internal>
	<1178589305.4852.10.camel@thinker> <r6psrr0u.fsf@oberon-mail.internal>
	<1178593712.4852.15.camel@thinker>
Date: Mon, 07 May 2007 23:39:54 -0400
In-Reply-To: <1178593712.4852.15.camel@thinker> (Andrew Bartlett's message of
	"Tue, 08 May 2007 13:08:32 +1000")
Message-ID: <3b28q8z9.fsf@oberon-mail.internal>
User-Agent: Gnus/5.110004 (No Gnus v0.4) XEmacs/21.4.17 (linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: "Stefan \(metze\) Metzmacher" <metze@samba.org>,
   samba-technical@lists.samba.org
Subject: Re: svn commit: samba r22731 - in branches/SAMBA_3_0/source: . tests
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: derrell@samba.org
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Andrew Bartlett <abartlet@samba.org> writes:

> What type of system is this?

It's FreeSpire (the free version of Linspire, formerly Lindows), which is
based on Debian pre-Etch.

>> On systems that provide declarations for all functions, my change will have
>> no effect.  It has an effect only on systems where some system functions
>> are missing declarations in system header files.  If you've succeeded in a
>> developer build and compile immediately prior to this change, you will
>> still succeed with no changes to what configure detects nor to your build.
>> Only those (few?) systems where some functions are missing declarations in
>> system headers are affected, and this change allows them to compile in
>> developer mode whereas immediately prior to this change, they could not
>> compile.
>
> On such systems, the missing prototypes (after extensive tests are made
> for finding the correct prototype header) should be provided by
> libreplace, as it already does for many standard functions (for which a
> reliable prototype is often found in the POSIX standard).

That'd be fine if only the external declaration is provided by libreplace.  My
understanding was that libreplace provided functions that are needed but not
available on the system.  This is a different problem, in that the system
provides the function (which is why the original configure test passed) but no
header file declares the function, so the compile fails.

Are there cases already handled by libreplace where it provides only an
external declaration where one isn't provided by the system?  If so, that'd be
the way to go and could be easily cloned.  The downside of doing it this way
is that it requires adding to libreplace every time any system is found to
have a missing system declaration.

Cheers,

Derrell

