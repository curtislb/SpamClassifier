From beginners-return-92698-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 23 11:09:42 2007
Return-Path: <beginners-return-92698-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5NF96L9020265
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 23 Jun 2007 11:09:06 -0400
Received: (qmail 16068 invoked by uid 514); 23 Jun 2007 15:09:00 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 16059 invoked from network); 23 Jun 2007 15:08:59 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 23 Jun 2007 15:08:59 -0000
Received: (qmail 15259 invoked by uid 225); 23 Jun 2007 15:08:59 -0000
Delivered-To: beginners@perl.org
Received: (qmail 15255 invoked by alias); 23 Jun 2007 15:08:58 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 66.249.82.239 as permitted sender)
Received: from wx-out-0506.google.com (HELO wx-out-0506.google.com) (66.249.82.239)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 23 Jun 2007 08:08:54 -0700
Received: by wx-out-0506.google.com with SMTP id r21so1139193wxc
        for <beginners@perl.org>; Sat, 23 Jun 2007 08:08:50 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=sJGiIpXsOi//OQLYJ2/gVwM44q0vFhqU9CSXnU9XNc88x5+X6r2z7z/CAc4qcwchKMHJehpkngVvWfRZLR7MJJU6YinOn02CsDh/v3aPsxyyB8kB7k9tjxHkmDhl1QsTPlPAJt2v8uXosV0F3d3V4gAWBpqbdn9NakB9lozHaJ4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=D1k7725Hy6evtj3LHdRueM9WvgEjAEBStXgBc1I1Qwrw+bomLevpp6IzDbGKK1BvFUAm0IqoT7RUAD2AlD5/gYxhzP9i5sJZVen6HdaEKqoU0F9j7jIM8Yqd4UXzgbH6jU2+9GVGaMUQMkaI0ibpqcIEyizk1Ocresge7CEwpqw=
Received: by 10.90.33.16 with SMTP id g16mr3340425agg.1182611330692;
        Sat, 23 Jun 2007 08:08:50 -0700 (PDT)
Received: by 10.90.116.9 with HTTP; Sat, 23 Jun 2007 08:08:50 -0700 (PDT)
Message-ID: <31086b240706230808h2392d0u8108c5850748b807@mail.gmail.com>
Date: Sat, 23 Jun 2007 08:08:50 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Michael Scondo" <michael.scondo@phil.stud.uni-erlangen.de>
Subject: Re: strange unexpected deadlock
Cc: beginners@perl.org
In-Reply-To: <200706231220.37892.michael.scondo@phil.stud.uni-erlangen.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <200706231220.37892.michael.scondo@phil.stud.uni-erlangen.de>
X-Google-Sender-Auth: 346fb96b3670bf02

On 6/23/07, Michael Scondo <michael.scondo@phil.stud.uni-erlangen.de> wrote:

> sub thread1{
>                 print "1\n";
>                 lock $x;
>                 print "locked x: 1\n";
>                 cond_wait $x;

Can't get past here until $x is signalled by another thread, and
unlocked by all other threads.

>                 print "thread1\n";
>                 lock $y;
>                 cond_signal $y;
>                 print "t1\n";
> }
>
> sub thread2{
>                 sleep 1;
>                 lock $y;
> #               {
>                         lock $x;
>                         print "locked x: 2\n";
>                         cond_signal $x;
> #               }

If the curly braces of that naked block were present, the lock on $x
would be released here, at the end of that scope. But it's still
locked, because cond_signal didn't unlock it either. (Did you think it
would?)

>                 print "thread2\n";
>                 sleep 1;
>                 cond_wait $y;

Can't get past here until $y is signalled by another thread, and
unlocked by all other threads.

>                 print "t2\n";
> }

As written, this is the end-of-scope for the lock on $x (as well as
the one on $y). But unless some third thread can rescue these first
two, they seem to be deadlocked, with the first waiting for $x to be
unlocked and the second waiting for $y to be signalled.

As you discovered, using the inner braces will release the lock on $x
soon enough to avoid the deadlock.

By the way, thanks greatly for the detailed, self-contained test case;
it showed exactly what you were doing.

Have fun with Perl!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


