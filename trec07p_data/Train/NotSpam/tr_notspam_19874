From beginners-return-92493-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 16 18:01:19 2007
Return-Path: <beginners-return-92493-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5GM1IL9019943
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 16 Jun 2007 18:01:18 -0400
Received: (qmail 27399 invoked by uid 514); 16 Jun 2007 22:01:12 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 27363 invoked from network); 16 Jun 2007 22:01:12 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 16 Jun 2007 22:01:12 -0000
Received: (qmail 18196 invoked by uid 225); 16 Jun 2007 22:01:12 -0000
Delivered-To: beginners@perl.org
Received: (qmail 18190 invoked by alias); 16 Jun 2007 22:01:11 -0000
X-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from ms-smtp-07.ohiordc.rr.com (HELO ms-smtp-07.ohiordc.rr.com) (65.24.5.141)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 16 Jun 2007 15:01:07 -0700
Received: from janus.tacocat.net (cpe-65-29-101-30.twmi.res.rr.com [65.29.101.30])
	by ms-smtp-07.ohiordc.rr.com (8.13.6/8.13.6) with ESMTP id l5GM11Jf021136;
	Sat, 16 Jun 2007 18:01:01 -0400 (EDT)
Received: from [192.168.1.10] (isengard.tacocat.net [192.168.1.10])
	by janus.tacocat.net (Postfix) with ESMTP id 2BBAC4C064;
	Sat, 16 Jun 2007 18:01:01 -0400 (EDT)
Message-ID: <46745D9C.20402@tacocat.net>
Date: Sat, 16 Jun 2007 18:01:00 -0400
From: Tom Allison <tom@tacocat.net>
User-Agent: Icedove 1.5.0.10 (X11/20070329)
MIME-Version: 1.0
To: "Mumia W." <mumia.w.18.spam+nospam@earthlink.net>
CC: Beginners List <beginners@perl.org>
Subject: Re: character encoding & regex
References: <46743A15.3030206@tacocat.net> <4674505D.3040106@earthlink.net>
In-Reply-To: <4674505D.3040106@earthlink.net>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
X-Virus-Scanned: Symantec AntiVirus Scan Engine

Mumia W. wrote:
> 
> On 06/16/2007 02:29 PM, Tom Allison wrote:
>> I'm trying to do some regular expression on strings in email. They 
>> could be encoded to something.  But I can't tell because I don't have 
>> a utf8 unicode xterm window that will show me anything.  At best I get 
>> ?????a??  and other trash like that.  I think this is typical for 
>> ascii text renderings of two-bit characters.
>>
>> Not be to deterred by the lack of anything this fancy in xterm I 
>> thought I would plug along.
>>
>> I made a character thus:
>> my $string = chr(0x263a);  # reported to be a smiley face...
>>
>> under 'use bytes' this prints as a ':'
>> without bytes this prints to something resembling a, a little box, a 
>> little circle.
>>
>>
>> And with unicode and locales and bytes it all gets extremely ugly.
>>
>>
>> I found something that SpamAssassin uses to convert all this "goo" 
>> into a repeatable set of characters (which is all I'm really after) by 
>> running something that looks like this:
>>
> 
> What do you mean by a "repeatable set of characters"? Unicode characters 
> are repeatable.

The fundamental problem is that this:

$string =~ /(\w\w\w+)/
returns nothing because unicode/utf8/Big5 characters are not considered 'words'.

And I don't really care to get exactly the right character.
I could just as easily use the character ascii values, but the regex for that is 
not something I'm familiar with.

I got this far:
my $string = chr(0x263a);
my @A = unpack "C*", $string;

# @A = ( 226, 152, 186 )

At least this is consistent.
But there are a lot of characters that I want to break on and I don't know that 
I can do this.  The best I can come up with is:

my $string = chr(0x263a);
$string = $string .' '. $string;
print $string,"\n";
foreach my $str (split / / ,$string) {
     my @A = unpack "C*", $str;
     print "FOO: @A\n";
}
exit;

Using the above I can get a consistent array of characters but I don't know if 
this will work for any character encoding.  I guess this is part of my 
question/quandry.

One thing I'm not sure about is if the MIME::Parser is even decoding things 
sanely.  I suspect it isn't because I get '?' a lot.

I installed urxvt from my Debian installation [ :) ] and I get...

Wide character in print at unicode_capture.pl line 5.
âº
Wide character in print at unicode_capture.pl line 9.
âº âº
FOO: 226 152 186
FOO: 226 152 186

However it doesn't print the boxes, which is good.


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


