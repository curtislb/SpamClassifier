From beginners-return-90974-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 20 16:07:07 2007
Return-Path: <beginners-return-90974-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3KK750I010486
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 16:07:06 -0400
Received: (qmail 24674 invoked by uid 514); 20 Apr 2007 20:06:34 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 24665 invoked from network); 20 Apr 2007 20:06:34 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2007 20:06:34 -0000
Received: (qmail 10414 invoked by uid 225); 20 Apr 2007 20:06:33 -0000
Delivered-To: beginners@perl.org
Received: (qmail 10410 invoked by alias); 20 Apr 2007 20:06:33 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from tiger.phpweb.biz (HELO tiger.phpweb.biz) (64.246.62.13)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 20 Apr 2007 13:06:30 -0700
Received: from 84-73-176-38.dclient.hispeed.ch ([84.73.176.38] helo=wesley.pjcj.net)
	by tiger.phpweb.biz with esmtpa (Exim 4.63)
	(envelope-from <paul@pjcj.net>)
	id 1HezN1-0006e3-Pm; Fri, 20 Apr 2007 15:06:16 -0500
Received: from pjcj by wesley.pjcj.net with local (Exim 3.36 #1 (Debian))
	id 1HezN5-0005oK-00; Fri, 20 Apr 2007 22:06:19 +0200
Date: Fri, 20 Apr 2007 22:06:19 +0200
From: Paul Johnson <paul@pjcj.net>
To: Chas Owens <chas.owens@gmail.com>
Cc: yitzle <yitzle@users.sourceforge.net>, oryann9 <oryann9@yahoo.com>,
   Perl List <beginners@perl.org>
Subject: Re: Nested loop
Message-ID: <20070420200618.GT18264@pjcj.net>
References: <58ce48dc0704192129r3112ddb8m62d05075b5dd966b@mail.gmail.com> <999878.79133.qm@web63403.mail.re1.yahoo.com> <ca5781c80704200719q31471a07l93253e96aa7150b3@mail.gmail.com> <58ce48dc0704201047k4116ce36pb56ed6383ad42613@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <58ce48dc0704201047k4116ce36pb56ed6383ad42613@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
Sender: Paul Johnson <paul@pjcj.net>
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - tiger.phpweb.biz
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - pjcj.net
X-Source: 
X-Source-Args: 
X-Source-Dir: 
Status: O
Content-Length: 1595
Lines: 53

On Fri, Apr 20, 2007 at 01:47:18PM -0400, Chas Owens wrote:

>                                                               but you
> should be more concerned with making what you write clearly express
> your intent.  This is why I prefer
> 
> my @a = (0 .. 10);
> my $i = 0;
> for my $elem (grep {not $i++ % 3} @a) {
>       func($elem);
> }
> 
> to
> 
> for (my $i = 0; $i < @a; $i += 3) {
>    func($a[$i]
> }
> 
> The grep clearly states that I am looking for something and its block
> tells me what the criteria are.

There are times where this list needs webcams.  I'd love to have been
able to have seen you as you wrote that since I find it hard to believe
that anyone could have done so whilst keeping a straight face ;-)

I presume that in your second example you should really be comparing
against

  for (my $i = 0; $i < 10; $i += 3) {
      func($i);
  }

which just seems so much clearer to me.

Fortunately, TIMTOWTDI, but with any luck I won't be maintaining your
code ;-)

Anyway, there seems to be a little confusion about whether for or
foreach were going to be removed from the language.  The main point I
wanted to make was that foreach is not going away.  Neither is for.  At
least, not in Perl5, which will still be around for a long time.  They
are still synonyms, and any code written now and using either of these
constructs will continue to work under all Perl5 releases.

-- 
Paul Johnson - paul@pjcj.net
http://www.pjcj.net

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


