From r-help-bounces@stat.math.ethz.ch  Fri Apr 27 14:26:38 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3RIQa6w029280
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 14:26:37 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3RIPi8L005560;
	Fri, 27 Apr 2007 20:25:58 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.5 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from nz-out-0506.google.com (nz-out-0506.google.com [64.233.162.238])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3RIP7tV005450
	for <r-help@stat.math.ethz.ch>; Fri, 27 Apr 2007 20:25:08 +0200
Received: by nz-out-0506.google.com with SMTP id s1so530517nze
	for <r-help@stat.math.ethz.ch>; Fri, 27 Apr 2007 11:25:07 -0700 (PDT)
Received: by 10.115.23.12 with SMTP id a12mr128527waj.1177698307311;
	Fri, 27 Apr 2007 11:25:07 -0700 (PDT)
Received: by 10.114.169.18 with HTTP; Fri, 27 Apr 2007 11:25:07 -0700 (PDT)
Message-ID: <eb555e660704271125m18e48a44xc0bf852230e054@mail.gmail.com>
Date: Fri, 27 Apr 2007 11:25:07 -0700
From: "Deepayan Sarkar" <deepayan.sarkar@gmail.com>
To: "Michael Kubovy" <kubovy@virginia.edu>
In-Reply-To: <F1AB7B6B-A254-4986-8535-48C5BEAC1521@virginia.edu>
MIME-Version: 1.0
Content-Disposition: inline
References: <8315F38A-E543-4A16-AFBD-6080BF65A12E@virginia.edu>
	<4630DBE7.20702@pdf.com>
	<542DDEC0-F607-4095-8DD8-DB34A3D5141A@virginia.edu>
	<eb555e660704261903m32f6021eq83f8f5a37cb3630b@mail.gmail.com>
	<1FB4BA5C-527A-4C7E-9E4A-BD686187AED6@virginia.edu>
	<eb555e660704271042s1816ee25l915f5858ec808076@mail.gmail.com>
	<F1AB7B6B-A254-4986-8535-48C5BEAC1521@virginia.edu>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch, Sundar Dorai-Raj <sundar.dorai-raj@pdf.com>
Subject: Re: [R] xyplot() and controlling panel.polygon()
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2396
Lines: 72

On 4/27/07, Michael Kubovy <kubovy@virginia.edu> wrote:
> Hi Deepayan,
>
> Thanks for your advice. This is moving along, however:
> The following is drawing the same polygons in each panel. I'm trying
> to get a different polygon (confidence band) for each group in each
> panel. That's why I thought I would need to pass groups and
> subscripts to the panel.groups
>
> est <- c(1:4, 3:6, 7, 9, 11, 13, 12, 15, 18, 21)
> cond <- rep(c('a','b'), each = 8)
> grp <- rep(c('I', 'II'), each = 4, 2)
> x <- rep(c(.5, .7, .9, 1.1), 4)
> upper <- est + 1
> lower = est - 1
> data <- data.frame(est = est, x = x, cond = cond, grp = grp, upper =
> upper, lower = lower)
>
> my.panel.polygon <- function(..., font, fontface)
> {
>     panel.polygon(...)
> }
>
> xyplot(est ~ x | cond, group = grp, data = data, type = 'b',
>      panel = function(x, y, ...){
>          panel.superpose(c(x, rev(x)), c(upper, rev(lower)),
>              panel.groups = 'my.panel.polygon', default.units =
> 'native', ...)
>          panel.xyplot(x, y, ...)
>      }
> )
>
> It's pretty clear that panel.superpose is not getting its x and y
> values after they are split by group and panel.

You are not even trying to do that; you have

  panel.superpose(c(x, rev(x)), c(upper, rev(lower)), <...>

so your x=c(x, rev(x)) is not the same length as x (and subscripts), and your
y = c(upper, rev(lower)) is not the same length as anything. Also,
your upper and lower are being taken from the global env, not data
(they happen to be the same, but since your data has them, I assume
you want to use them).

Perhaps you are looking for something like this:


panel.bands <-
    function(x, y, upper, lower,
             subscripts, ..., font, fontface)
{
    upper <- upper[subscripts]
    lower <- lower[subscripts]
    panel.polygon(c(x, rev(x)), c(upper, rev(lower)), ...)
}

xyplot(est ~ x | cond, group = grp, data = data, type = 'b',
       upper = data$upper,
       lower = data$lower,
       panel = function(x, y, ...){
           panel.superpose(x, y, panel.groups = 'panel.bands', ...)
           panel.xyplot(x, y, ...)
       })

-Deepayan

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

