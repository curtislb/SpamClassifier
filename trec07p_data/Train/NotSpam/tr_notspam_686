From beginners-return-90817-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 11 05:16:37 2007
Return-Path: <beginners-return-90817-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3B9GZ0I015145
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 11 Apr 2007 05:16:35 -0400
Received: (qmail 14795 invoked by uid 514); 11 Apr 2007 09:16:07 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 14786 invoked from network); 11 Apr 2007 09:16:07 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 11 Apr 2007 09:16:07 -0000
Received: (qmail 6531 invoked by uid 225); 11 Apr 2007 09:16:06 -0000
Delivered-To: beginners@perl.org
Received: (qmail 6488 invoked by alias); 11 Apr 2007 09:16:03 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of practicalperl@gmail.com designates 66.249.82.229 as permitted sender)
Received: from wx-out-0506.google.com (HELO wx-out-0506.google.com) (66.249.82.229)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 11 Apr 2007 02:16:01 -0700
Received: by wx-out-0506.google.com with SMTP id s8so110253wxc
        for <beginners@perl.org>; Wed, 11 Apr 2007 02:15:57 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=nEEIVHVI5SU0YU34+uQOE7BVOzhXzEtHuhcNoUKX/xOJT5MNsjcAg6l1erpfPu0OuiMfzmjbCv7oq9ccH0qToTA8sknB2AiOclm1NkgD3pTpZml4dJm3+SCkh6cDZL9z+nqQya48zT1JSNFnyviwz4aKqzZN19OPYg/ZKOGK8qk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=qyGQsvEZ+X8dbEjP1H7XuOADd2s463Ster2pNqbhLhcXshSw4FAXANxqm1eV8jpOqyFA+nWRvkXtYlIP4n7WBLCcNHqZtDWfYboYFpiIp189yVFDD2tk2ZcEkCEAJX4/ueGyX23StBVMEvdS6TN3zSk+uJ3wvilDq+1vGeKbUvs=
Received: by 10.90.65.11 with SMTP id n11mr128181aga.1176282957180;
        Wed, 11 Apr 2007 02:15:57 -0700 (PDT)
Received: by 10.90.55.11 with HTTP; Wed, 11 Apr 2007 02:15:57 -0700 (PDT)
Message-ID: <fbe35f750704110215y4633b15y17d8175a862b9b21@mail.gmail.com>
Date: Wed, 11 Apr 2007 17:15:57 +0800
From: "Jen mlists" <practicalperl@gmail.com>
To: "Tom Phoenix" <tom@stonehenge.com>
Subject: Re: CGI Header
Cc: "beginners perl" <beginners@perl.org>
In-Reply-To: <31086b240704102136y5d467bddk53bf77a79e0a5de7@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fbe35f750704102127i6dccef04gadd22ff949d8479b@mail.gmail.com>
	 <31086b240704102136y5d467bddk53bf77a79e0a5de7@mail.gmail.com>
Status: O
Content-Length: 1368
Lines: 45

Thank you.
But my error_report function is located in a package,not the main script.
for example,

package Myfunc;
sub error_report {
    my($q,$msg) = @_;
    print $q->header(); # print or not print it??
    print $msg;
}
1;

Then how to use a global variable for label it?Thanks.


2007/4/11, Tom Phoenix <tom@stonehenge.com>:
> On 4/10/07, Jen mlists <practicalperl@gmail.com> wrote:
>
> > How to judge whether I've output the http header or not where in cgi
> > scripts?Thank you.
>
> I think you're asking how a programmer can know whether or not the
> header has already been output when it's time to produce output (in an
> error-handling subroutine, say). Perhaps you want to use a global flag
> in your program; that's a simple solution. Or your error handler could
> simply output the header in any case, since it's an error message
> anyway.
>
> My preferred solution is to use an eval block that returns (rather
> than outputting) a complete web page. If everything worked, it's
> simple to output the page; otherwise, it's equally simple to output an
> error page. In either case, there's no worry about the headers until
> output time.
>
> Is that what you needed?
>
> --Tom Phoenix
> Stonehenge Perl Training
>

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


