From perl6-all-return-81360-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 14 20:02:00 2007
Return-Path: <perl6-all-return-81360-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4F01xqD028969
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 14 May 2007 20:01:59 -0400
Received: (qmail 13548 invoked by uid 514); 15 May 2007 00:01:56 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 13535 invoked from network); 15 May 2007 00:01:55 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Mime-Version: 1.0
Message-Id: <p06240800c26ea3e05eeb@[192.168.1.101]>
In-Reply-To: <20070514204607.GG2873@c4.convolution.nl>
References: <010520071004503787%brian.d.foy@gmail.com>
 <1584795397.20070503140643@shitov.ru>
 <200705111448.05991.chromatic@wgz.org>
 <20070513224235.28013.qmail@lists.develooper.com>
 <46479C1C.4000305@casella.verplant.org>
 <20070514105154.5648.qmail@lists.develooper.com>
 <20070514120717.2d513956.frank@wiles.org>
 <20070514202047.14038.qmail@lists.develooper.com>
 <20070514204607.GG2873@c4.convolution.nl>
Date: Mon, 14 May 2007 17:00:47 -0700
To: perl6-language@perl.org
From: Darren Duncan <darren@DarrenDuncan.net>
Subject: variable type specific sigils (was Re: Sigils by example)
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Scanned-By: MIMEDefang 2.36
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

Speaking just for my own preferences, I very much like having sigils 
to differentiate variables from routines, that is, a $ prefix versus 
either & or no prefix.  However, I generally do *not* like the @ and 
% prefixes.  They seem somewhat contrived so to cover very specific 
variable types while other very similar types don't have them, eg 
built-in arrays versus some array-like other container type.

And so in my own coding style I use $ for all arrays and hashes too, 
so all my variables are $.  This is done consistently in both Perl 5 
and Perl 6.  The only place a @ or % appears is when I have to say 
@{} or %{}, and even then it is mainly just Perl 5 that requires 
this, such as in foreach or map.  Perl 6 is an improvement over Perl 
5 in that it is easier to use $ for arrays and hashes too without 
making code more verbose as a result.

I would be happy if Perl 6 dropped the @ and % for arrays and hashes, 
using just $ instead; however, I won't necessarily request this as 
the semantics of @ and % can be useful (assignment copy by value 
rather than by reference), and I can choose to not use them if I 
don't want to (TIMTOADY and all that).

On the other hand, unless this steps on something, I could suggest 
dropping the @ and % anyway, so we have $array and $hash, and then we 
could instead use the @ and % sigils as a prefix to indicate in that 
case that we want them to copy by value.  For example:

   my $foo = [23, 434, 6];
   my $bar;
   $bar = $foo; # copy by reference
   @$bar = @$foo; # copy by value

Actually, I think that would be a vast improvement, as we could then 
use the @ prefix with any collection type as short-hand to say that = 
is copy by value.

I also don't think the language would feel any less Perlish with this change.

-- Darren Duncan

