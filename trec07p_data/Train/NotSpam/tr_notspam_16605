From beginners-return-92165-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun  5 13:55:59 2007
Return-Path: <beginners-return-92165-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l55HtwhB011953
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 5 Jun 2007 13:55:58 -0400
Received: (qmail 9595 invoked by uid 514); 5 Jun 2007 17:55:45 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Delivered-To: moderator for beginners@perl.org
Received: (qmail 3510 invoked from network); 5 Jun 2007 15:28:03 -0000
Delivered-To: beginners@perl.org
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of baxter.brad@gmail.com)
To: beginners@perl.org
MBOX-Line: From news@google.com Tue Jun 05 15:27:35 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Delivered-To: news-moderator-perl.beginners@perl.org
Received-SPF: neutral (x1.develooper.com: 216.168.1.22 is neither permitted nor denied by domain of news@google.com)
From: Brad Baxter <baxter.brad@gmail.com>
Subject: Re: Passing arguments to subroutine
Date: Tue, 05 Jun 2007 15:26:25 -0000
Organization: http://groups.google.com
Lines: 88
Message-ID: <1181057185.460896.5650@g4g2000hsf.googlegroups.com>
References: <1180600046.701654.45930@j4g2000prf.googlegroups.com>
   <ca5781c80705310715id79bf45p4f24c332b140c225@mail.gmail.com>
   <1180634334.534436.293150@q75g2000hsh.googlegroups.com>
   <58ce48dc0706010658u3ce21047s45b46667b22839d@mail.gmail.com>
NNTP-Posting-Host: 128.192.246.39
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Trace: posting.google.com 1181057185 22874 127.0.0.1 (5 Jun 2007 15:26:25 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Tue, 5 Jun 2007 15:26:25 +0000 (UTC)
In-Reply-To: <58ce48dc0706010658u3ce21047s45b46667b22839d@mail.gmail.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en-US; rv:1.8.1.4) Gecko/20070515 Firefox/2.0.0.4,gzip(gfe),gzip(gfe)
Complaints-To: groups-abuse@google.com
Injection-Info: g4g2000hsf.googlegroups.com; posting-host=128.192.246.39;
   posting-account=hUvzDg0AAABuZ3O7lZFUX0BFNJiaUzie
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.4 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Jun 1, 9:58 am, chas.ow...@gmail.com (Chas Owens) wrote:
> On 31 May 2007 10:58:54 -0700, Paul Lalli <mri...@gmail.com> wrote:
>
> > On May 31, 10:15 am, yit...@users.sourceforge.net (Yitzle) wrote:
> > > I suspect one of the tutorials that Google or Perl.org points to has
> > > something in it that needs correcting.
>
> > Actually, it's an unfortunate truth that up until Edition 3, the Llama
> > itself recommended that you use the & to call subroutines...
>
> > Paul Lalli
>
> Alright, I am a pedantic jerk, but this struck as wrong.  I learned on
> 2nd edition Llama and Camel, so I dug up my old copies.  Learning Perl
> 2nd Edition says on page 92
>
>     The subname is th name of the subroutine, which is any name like
>     the names we've has for scalar variables, arrays, and hashes.  Once
>     again, these come from a different namespace, so you can have a
>     scalar variable $fred, an array @fred, a hash %fred, and now a
>     subroutine fred*.
>
>     * Technically, the subroutine's name is &fred, but you seldom need
> to call it that.
>
> Also, on page 93 it says
>
>     Invoking a User Function
>     You invoke a subroutine from within any expression by following
> the subroutine
>     name with parentheses, as in:
>
>         say_hello();          # a simple expression
>         $a = 3 + say_hello(); # part of a larger expression
>         for ($x = start_value(); $x < end_value(); $x += increment()) {
>             ...
>         }                     # invoke three subroutines to define values
>
> I checked Programming Perl (2nd Edition), just in case you meant the
> Camel instead of the Llama, and it appears* to talk about subroutines
> in the same was as perlsub currently does with no specific
> recommendations about whether to use & or not (it just explains all of
> the options and their side effects).
>
> The Llama (2nd edition) was published in 1997.  That was ten years
> ago.  You can see why I want to know where these people who are new to
> Perl are being told to use & as part of the subroutine name.  I assume
> there are some old tutorials out there (things live forever on the
> Internet) and they are reading bad, old code at work.
>
> * there may be a recommendation somewhere, but I couldn't find one in
> my cursory glance through it.

One thing I wonder about is that I see anonymous subs called
as &$anon or &$anon() in various places in the docs, e.g., perlipc,
perlmod, perlmodlib, perlref, -q What's a closure, -q How can I
pass/return a Function.  perl5004delta says:

New and changed syntax

$coderef->(PARAMS)
    A subroutine reference may now be suffixed with an
    arrow and a (possibly empty) parameter list.  This
    syntax denotes a call of the referenced subroutine,
    with the given parameters (if any).

    This new syntax follows the pattern of
    "$hashref->{FOO}" and "$aryref->[$foo]": You may now
    write "&$subref($foo)" as "$subref->($foo)".  All
    these arrow terms may be chained; thus,
    "&{$table->{FOO}}($bar)" may now be written
    "$table->{FOO}->($bar)".

so the $anon->() syntax as been around since then.

Apparently, unlike with named subs, both &$anon()
and $anon->() ignore prototypes.  However, like named
subs &$anon gets the caller's @_.  But that is almost
never mentioned afaict at the places in the docs where
the &$anon style call is used.

This isn't intended to be a criticism; I just wonder if some
small number of newcomers reading the docs might
be picking up calling habits from this.

--
Brad


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


