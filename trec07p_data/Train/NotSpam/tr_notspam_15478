From perl6-all-return-81728-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun  1 18:22:39 2007
Return-Path: <perl6-all-return-81728-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l51MMchB015542
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 1 Jun 2007 18:22:38 -0400
Received: (qmail 21484 invoked by uid 514); 1 Jun 2007 22:22:32 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 21479 invoked from network); 1 Jun 2007 22:22:32 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Delivered-To: parrotbug-followup@parrotcode.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: perl6-internals@perl.org
Subject: Re: [perl #43105] [PATCH] function mmd.c::mmd_expand_y: newly allocated memory unitialized
Date: Fri, 1 Jun 2007 15:21:05 -0700
User-Agent: KMail/1.9.6
Cc: "Mehmet Yavuz Selim Soyturk" (via RT) <parrotbug-followup@parrotcode.org>,
   bugs-bitbucket@netlabs.develooper.com
References: <RT-Ticket-43105@perl.org> <1abd9eb20706011338l5ed33ec7s9537dac27a0f873@mail.gmail.com> <rt-3.6.HEAD-1668-1180730372-1019.43105-72-0@perl.org>
In-Reply-To: <rt-3.6.HEAD-1668-1180730372-1019.43105-72-0@perl.org>
MIME-Version: 1.0
Content-Type: Multipart/Mixed;
  boundary="Boundary-00=_RvJYGZv3HEw44u6"
Message-Id: <200706011521.05438.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

--Boundary-00=_RvJYGZv3HEw44u6
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On Friday 01 June 2007 13:39:32 Mehmet Yavuz Selim Soyturk wrote:

> Function mmd_expand_y in src/mmd.c allocates new memory for the mmd
> table, but does not initialize the newy allocated memory to NULL,
> which causes segfaults for some cases. The attached patch solves that
> problem.

I thought that might happen.  I prefer this memset() patch, but if it doesn't 
work everywhere, your patch should work.

-- c


--Boundary-00=_RvJYGZv3HEw44u6
Content-Type: text/x-diff;
  charset="utf-8";
  name="mmd_zero.patch"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="mmd_zero.patch"

=== src/mmd.c
==================================================================
--- src/mmd.c	(revision 3732)
+++ src/mmd.c	(local)
@@ -623,19 +623,22 @@
 static void
 mmd_expand_y(Interp *interp, INTVAL func_nr, INTVAL new_y)
 {
-    funcptr_t *new_table;
-    UINTVAL    new_size;
+    UINTVAL    new_size, i, x, y;
     MMD_table * const table = interp->binop_mmd_funcs + func_nr;
 
     assert(table->x);
 
-    new_size = sizeof (funcptr_t) * table->x * new_y;
+    x        = table->x;
+    y        = table->y;
+    new_size = sizeof (funcptr_t) * x * new_y;
 
     if (table->mmd_funcs)
         table->mmd_funcs = mem_sys_realloc(table->mmd_funcs, new_size);
     else
         table->mmd_funcs = (funcptr_t *)mem_sys_allocate(new_size);
 
+    memset(table->mmd_funcs + x * y, 0, x * (new_y - y));
+
     table->y = new_y;
 }
 

--Boundary-00=_RvJYGZv3HEw44u6--

