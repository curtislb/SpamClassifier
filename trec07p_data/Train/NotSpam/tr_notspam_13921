From r-help-bounces@stat.math.ethz.ch  Mon May 28 00:41:34 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4S4fTqD010045
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 28 May 2007 00:41:34 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4S4ec4O004734;
	Mon, 28 May 2007 06:40:58 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.6 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from nz-out-0506.google.com (nz-out-0506.google.com [64.233.162.238])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4S4eVd0004697
	for <r-help@stat.math.ethz.ch>; Mon, 28 May 2007 06:40:32 +0200
Received: by nz-out-0506.google.com with SMTP id o37so491583nzf
	for <r-help@stat.math.ethz.ch>; Sun, 27 May 2007 21:40:31 -0700 (PDT)
Received: by 10.142.84.3 with SMTP id h3mr152040wfb.1180327230824;
	Sun, 27 May 2007 21:40:30 -0700 (PDT)
Received: by 10.143.18.17 with HTTP; Sun, 27 May 2007 21:40:30 -0700 (PDT)
Message-ID: <38b9f0350705272140m598798c7i9ca5d0d240a6415e@mail.gmail.com>
Date: Mon, 28 May 2007 12:40:30 +0800
From: ronggui <ronggui.huang@gmail.com>
To: "Gabor Grothendieck" <ggrothendieck@gmail.com>
In-Reply-To: <971536df0705272052i528ba6bew384c1e2b64d37e1a@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
References: <38b9f0350705262047n1d943dbak5d137c64cdc40e02@mail.gmail.com>
	<971536df0705262148o747dfd62xb0fecee27e635a43@mail.gmail.com>
	<38b9f0350705271918p656c576ev74cb357a1df46738@mail.gmail.com>
	<971536df0705272052i528ba6bew384c1e2b64d37e1a@mail.gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: R-Help <r-help@stat.math.ethz.ch>
Subject: Re: [R] Question about "evalq"
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

That's great. I got it. Million thanks.

On 5/28/07, Gabor Grothendieck <ggrothendieck@gmail.com> wrote:
> On 5/27/07, ronggui <ronggui.huang@gmail.com> wrote:
> > Hi,Gabor Grothendieck, Thanks very much.
> >
> > On 5/27/07, Gabor Grothendieck <ggrothendieck@gmail.com> wrote:
> > > evalq looks like this:
> > >
> > >    > evalq
> > >    function (expr, envir, enclos)
> > >    eval.parent(substitute(eval(quote(expr), envir, enclos)))
> > >    <environment: namespace:base>
> > >
> > > so it seems the difference is that
> > >
> > > - eval(quote(), envir, enclos) evaluates envir and enclos
> > >   in the current frame but
> > > - evalq evaluates them in the parent.frame.
> > >
> > > This may be easier to see in the following example:
> >
> > Yeah, This example make the question easier to understand.
> >
> > >    x <- "G"
> > >    f1 <- function() eval(quote(x), parent.frame())
> > >    f2 <- function() evalq(x, parent.frame())
> > >    f11 <- function() {
> > >         x <- "a"
> > >         f1()
> > >    }
> > >    f22 <- function() {
> > >         x <- "b"
> > >         f2()
> > >    }
> > >    f11() # a
> > >    f22() # G
> > >
> > > To avoid this problem pass a variable whose value is
> > > to be enclos= rather than an expression to compute it:
> >
> > --This is a good idea.
> > --If "evalq evaluates them in the parent.frame", I expected that if I
> > change parent.frame(2) to parent.frame(1), I will get the answer.But I
> > can not actually. So what's wrong with my understanding?
> >
> >    f1 <- function(x,digits=5) lapply(x, f2)
> >    f2 <- function(x) {
> >       evalq(print(digits), list(x=x), parent.frame(1))
> >    }
> >    f1(list(x1=1)) ##Error in print(digits) : object "digits" not found
>
>
> Good point.  Insert a browser statement where the parent.frame
> call was and when it stops do a traceback.  That will show you
> what the call stack looks like at that point in time.
>
>
> > f1 <- function(x,digits=5) lapply(x, f2)
> > f2 <- function(x) evalq(print(digits), list(x=x), { browser() } )
> > f1(list(x1=1)) ##Error in print(digits) : object "digits" not found
> Called from: eval(quote(print(digits)), list(x = x), {
>     browser()
> })
> Browse[1]> traceback()
> 10: print(digits)
> 9: eval(expr, envir, enclos)
> 8: eval(quote(print(digits)), list(x = x), browser())
> 7: eval(expr, envir, enclos)
> 6: eval(expr, p)
> 5: eval.parent(substitute(eval(quote(expr), envir, enclos)))
> 4: evalq(print(digits), list(x = x), browser())
> 3: FUN(X[[1L]], ...)
> 2: lapply(x, f2)
> 1: f1(list(x1 = 1))
> Browse[1]>
>


-- 
Ronggui Huang
Department of Sociology
Fudan University, Shanghai, China

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

