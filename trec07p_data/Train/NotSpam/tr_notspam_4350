From perl6-all-return-80821-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Apr 23 15:05:45 2007
Return-Path: <perl6-all-return-80821-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3NJ5i0I005210
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 23 Apr 2007 15:05:44 -0400
Received: (qmail 23718 invoked by uid 514); 23 Apr 2007 19:05:18 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 23713 invoked from network); 23 Apr 2007 19:05:17 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Leopold Toetsch <lt@toetsch.at>
To: perl6-internals@perl.org
Subject: Re: [perl #42320] [BUG] Memory leak with String pmc
Date: Mon, 23 Apr 2007 21:04:51 +0200
User-Agent: KMail/1.9.1
Cc: chromatic <chromatic@wgz.org>
References: <RT-Ticket-42320@perl.org> <rt-3.6.HEAD-30557-1175817387-1673.42320-72-0@perl.org> <200704231123.15215.chromatic@wgz.org>
In-Reply-To: <200704231123.15215.chromatic@wgz.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704232104.52084.lt@toetsch.at>
X-Scan-Signature: 63fb4d616f6de0b67668222d3dea4bb5
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 913
Lines: 32

Am Montag, 23. April 2007 20:23 schrieb chromatic:
> On Thursday 05 April 2007 16:56, Mehmet Yavuz Selim Soyturk wrote:
> > The next program causes a memory leak for me.
> >
> > .sub main :main
> > loop:
> >     $P0 = new .String
> >     goto loop
> > .end

That's an endless loop. How does one measure, if it's leaking memory?

Anway:

> I can't explain that, but here's some suspicious code in
> Parrot_allocate_string() in src/resources.c:

[ ... ]

> If I identify and read the related freeing code correctly
> (Parrot_dod_sweep() in src/gc/dod.c):
>
>                 else if (PObj_sysmem_TEST(b) && PObj_bufstart(b)) {

These 2 snippets aren't related at all. The latter is dealing with freeing 
sys-malloced memory as the comment is saying. The former is plain string 
memory allocation code.

I'd presume, that the string memory compaction code i.e. 'compact_pool()' is 
never run in the loop above.

leo

