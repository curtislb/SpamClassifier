From perl6-all-return-81454-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 17 14:15:03 2007
Return-Path: <perl6-all-return-81454-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4HIF0qD002982
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 14:15:01 -0400
Received: (qmail 25013 invoked by uid 514); 17 May 2007 18:14:57 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 25008 invoked from network); 17 May 2007 18:14:57 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of jerry.gay@gmail.com)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of jerry.gay@gmail.com designates 64.233.184.232 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=WM7qXo4Lp24hkpHsjbt+/5fPZ0jhwJBWqcLtZwbLw4LEE0PPSsy6qL/6MdBWZ3jIBcJiUh2MRd+0gZyfBDKwalXQeQHkVVGXzKJDYzQirPXuX3cXpk21DiENT7ABA6NZYPR861SFGtM7J+1avIQwVRYc8M9BzehKCIk9bNUfU0I=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=LUfNfAIwkGg2UiR45Gt8t1ofwyh3cwHU9CX4G2fmSRDW6+iLAr+FAgnMudfPAy711NF3tNX9Wsg5wM2Ze8AX2RDKaRKD4UfLTQtOxK31BGurA9kmqxErRBLYkgFaKzENj5gkbYHjh7nFNaJnbLuStfL1XZ2VQgJueAhs5BDk0rw=
Message-ID: <1d9a3f400705171113ya80d32ax84de480a68ed6d5c@mail.gmail.com>
Date: Thu, 17 May 2007 11:13:45 -0700
From: "jerry gay" <jerry.gay@gmail.com>
To: chromatic <chromatic@wgz.org>
Subject: Re: r18572 - trunk/compilers/imcc
Cc: p2 <parrot-porters@perl.org>
In-Reply-To: <200705171000.51790.chromatic@wgz.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1d9a3f400705170932p411c3bdfla6be41b011be4996@mail.gmail.com>
	 <200705171000.51790.chromatic@wgz.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_SIGNED,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_NEUTRAL

On 5/17/07, chromatic <chromatic@wgz.org> wrote:
> On Thursday 17 May 2007 09:32:01 jerry gay wrote:
>
> > this revision breaks parrot on msvc (and i suspect other c89-compliant
> > compilers--sometimes i wonder if there are any others!)
>
> I doubt even MSVC is C89-compliant, to be honest.  It just barfs more often
> than GCC on certain things.
>
> > this situation is *extremely* frustrating. the temporary workaround is
> > to revert this patch until it works everywhere. the solution is to
> > find a way to make gcc (and other) compilers comply with our most
> > important coding standard: C89 compliance.
>
> Unfortunately, our headers (and even some system headers) don't follow C89:
>
then what the heck does c89 compliance mean for parrot, if it's beyond
our control because we can't change system headers? i mean, how do you
enforce that compliance, if the compiler can't do it for you? maybe
this is a case where "almost" is good enough--i don't know.

> $ make parrot
> compilers/imcc/pbc.c
> In file included from ./include/parrot/parrot.h:30,
>                  from compilers/imcc/imc.h:21,
>                  from compilers/imcc/pbc.c:7:
> ./include/parrot/config.h:82: warning: ISO C90 does not support 'long long'
> ./include/parrot/config.h:83: warning: ISO C90 does not support 'long long'
> In file included from ./include/parrot/atomic.h:25,
>                  from ./include/parrot/thread.h:20,
>                  from ./include/parrot/pmc.h:19,
>                  from ./include/parrot/parrot.h:282,
>                  from compilers/imcc/imc.h:21,
>                  from compilers/imcc/pbc.c:7:
> ./include/parrot/atomic/gcc_x86.h:30: error: expected '=', ',', ';', 'asm'
> or '__attribute__' before 'static'
> ./include/parrot/atomic/gcc_x86.h:85: error: expected '=', ',', ';', 'asm'
> or '__attribute__' before 'static
>
> Chasing down that problem is... fun.
>
> Regardless, does this patch fix the problem for you?
>
yes, it does. seems i had blinders on, and missed the assignment
statement on the line above.

@@ -918,7 +918,7 @@
     char     *s  = s_key;
     *s           = 0;

-    SymReg *reg  = key_reg->set == 'K' ? key_reg->nextkey : key_reg;
+    reg          = key_reg->set == 'K' ? key_reg->nextkey : key_reg;

     for (key_length = 0; reg ; reg = reg->nextkey, key_length++) {
         if ((pc - key - 2) >= KEYLEN)

somehow i missed C<*s = 0;>, which made the declaration illegal. i'm
not used to looking at code with '=' sign alignment, maybe that's what
threw me off. anyway, it was a stupid mistake on my part.

however... why is 's' nulled out, directly after it's initialized to
's_key'? that looks funny.
i've applied as r18580, thanks for the fix.
~jerry

