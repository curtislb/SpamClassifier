From beginners-return-92503-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun 17 07:17:02 2007
Return-Path: <beginners-return-92503-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5HBH0L9006378
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 17 Jun 2007 07:17:01 -0400
Received: (qmail 10708 invoked by uid 514); 17 Jun 2007 11:16:54 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 10699 invoked from network); 17 Jun 2007 11:16:54 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 Jun 2007 11:16:54 -0000
Received: (qmail 23274 invoked by uid 225); 17 Jun 2007 11:16:54 -0000
Delivered-To: beginners@perl.org
Received: (qmail 23268 invoked by alias); 17 Jun 2007 11:16:53 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of mritty@gmail.com)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Sun, 17 Jun 2007 04:16:43 -0700
Received: (qmail 10693 invoked by uid 515); 17 Jun 2007 11:16:39 -0000
To: beginners@perl.org
MBOX-Line: From news@google.com Sun Jun 17 11:16:35 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Received: (qmail 10677 invoked from network); 17 Jun 2007 11:16:35 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 Jun 2007 11:16:35 -0000
Received: (qmail 23062 invoked by uid 225); 17 Jun 2007 11:16:35 -0000
Delivered-To: news-moderator-perl.beginners@perl.org
Received: (qmail 23055 invoked by alias); 17 Jun 2007 11:16:34 -0000
Received-SPF: neutral (x1.develooper.com: 130.59.1.10 is neither permitted nor denied by domain of news@google.com)
Received: from pinatubo-2.switch.ch (HELO pinatubo.switch.ch) (130.59.1.10)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 17 Jun 2007 04:16:32 -0700
Received: from [64.233.171.4] (helo=proxy.google.com)
	by pinatubo.switch.ch with esmtp (Exim 4.50)
	id 1Hzsk6-00050n-Mj
	for perl-beginners@moderators.isc.org; Sun, 17 Jun 2007 13:16:26 +0200
Received: from AR019023
	by proxy.google.com with ESMTP id l5HBGQmt027922
	for <perl-beginners@moderators.isc.org>; Sun, 17 Jun 2007 04:16:26 -0700
Received: (from news@localhost)
	by Google Production id l5HBGQG5009734
	for perl-beginners@moderators.isc.org; Sun, 17 Jun 2007 04:16:26 -0700
From: Paul Lalli <mritty@gmail.com>
Subject: Re: Problems referencing variable value in another loop
Date: Sun, 17 Jun 2007 11:16:25 -0000
Organization: http://groups.google.com
Lines: 63
Message-ID: <1182078985.877041.274120@o61g2000hsh.googlegroups.com>
References: <1182024527.575830.6650@o11g2000prd.googlegroups.com>
NNTP-Posting-Host: 74.70.185.44
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Trace: posting.google.com 1182078986 9733 127.0.0.1 (17 Jun 2007 11:16:26 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Sun, 17 Jun 2007 11:16:26 +0000 (UTC)
In-Reply-To: <1182024527.575830.6650@o11g2000prd.googlegroups.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1),gzip(gfe),gzip(gfe)
Complaints-To: groups-abuse@google.com
Injection-Info: o61g2000hsh.googlegroups.com; posting-host=74.70.185.44;
   posting-account=p3DCbw0AAAAc32agNMy1mXKInuw5KHP_
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Jun 16, 4:08 pm, shadke...@hotmail.com wrote:


>  The problem is that when I
> reference a variable in the second while loop that I initialized in
> the first while loop, the script doesn't recognize it. To be more
> clear, there is a number value for $SLPdataSFO[6] that I extracted in
> the first while loop, and I'd like to subtract that value from
> $SLPdataSAC[6], which I extracted in the second while loop. I tried to
> make it a global variable at the beginning by using "our @SLPdataSFO =
> ();" to make it a global variable, but no luck there.

Okay, I'm going to answer your second question first.  In this
example:

our @foo;
while (do_stuff()){
  my @foo = get_values();
  #etc
}
print @foo;

The @foo that gets printed is the global @foo you declared at the
beginning.  It has nothing at all to do with the @foo you declared
inside the while loop.  The lexical @foo in the while loop "masks"
access to the global @foo you declared outside the while loop.[1]
That's why simply adding a 'our @SLPdataSFO;' statement to your
program would have no effect.



> while (my $line = <FH>) { #reads through each line of model data
>
> if ($line =~ m/^ Mean/) { #finds line with sealevel pressure
> print "$line<br>";
> my $SFOdataSLP = $line; #places $line into new string called $data SLP
> my @SLPdataSFO = split(/\s+/, $SFOdataSLP); #splits $data SLP string

You are declaring your variable inside the while loop.  As soon as
this while loop ends, @SLPdataSFO goes out of scope.  It does not
exist anywhere else.  To fix this issue, *declare* the array before
the loop, but *assign* it within the loop:

my @SLPdataSFO;  #declaration
while (my $line = <FH>) {
  if ($line =~ m/^ Mean/) {
      @SLPdataSFO = split(/\s+/, $line);  #assigns values, but does
not redeclare
      #etc
   }
   #etc
}

Now a this point, the @SLPdataSFO you declared will still exist, and
will be populated with the last values put into it in your while loop.

There is no need to use 'our' here.  You simply need to fix the scope
of your lexical variable so that all pieces of code that want to use
the variable are within that scope.

Hope that helps,
Paul Lalli


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


