From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue May 15 21:35:08 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4G1Z8qD012560
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 15 May 2007 21:35:08 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id B0AFB162C40
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 16 May 2007 01:35:05 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 549)
	id 6E7AE162ACB; Wed, 16 May 2007 01:34:24 +0000 (GMT)
To: samba-cvs@samba.org
From: jra@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070516013424.6E7AE162ACB@lists.samba.org>
Date: Wed, 16 May 2007 01:34:24 +0000 (GMT)
Subject: svn commit: samba r22924 - in branches: SAMBA_3_0/source/libsmb
	SAMBA_3_0_26/source/libsmb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: jra
Date: 2007-05-16 01:34:22 +0000 (Wed, 16 May 2007)
New Revision: 22924

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22924

Log:
Fix the build by correctly processing readX
errors in the direct read case.
Jeremy.

Modified:
   branches/SAMBA_3_0/source/libsmb/clientgen.c
   branches/SAMBA_3_0_26/source/libsmb/clientgen.c


Changeset:
Modified: branches/SAMBA_3_0/source/libsmb/clientgen.c
===================================================================
--- branches/SAMBA_3_0/source/libsmb/clientgen.c	2007-05-16 01:13:25 UTC (rev 22923)
+++ branches/SAMBA_3_0/source/libsmb/clientgen.c	2007-05-16 01:34:22 UTC (rev 22924)
@@ -249,30 +249,34 @@
 		}
 	}
 
-	/* Check it's a non-chained readX reply. */
-	if (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||
-		(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||
-		(CVAL(cli->inbuf,smb_com) != SMBreadX)) {
+	/* If it's not the above size it probably was an error packet. */
+
+	if ((len == (smb_size - 4) + 24) && !cli_is_error(cli)) {
+		/* Check it's a non-chained readX reply. */
+		if (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||
+			(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||
+			(CVAL(cli->inbuf,smb_com) != SMBreadX)) {
+			/* 
+			 * We're not coping here with asnyc replies to
+			 * other calls. Punt here - we need async client
+			 * libs for this.
+			 */
+			goto read_err;
+		}
+
 		/* 
-		 * We're not coping here with asnyc replies to
-		 * other calls. Punt here - we need async client
-		 * libs for this.
+		 * We know it's a readX reply - ensure we've read the
+		 * padding bytes also.
 		 */
-		goto read_err;
-	}
 
-	/* 
-	 * We know it's a readX reply - ensure we've read the
-	 * padding bytes also.
-	 */
-
-	offset = SVAL(cli->inbuf,smb_vwv6);
-	if (offset > len) {
-		ssize_t ret;
-		size_t padbytes = offset - len;
-		ret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);
-                if (ret != padbytes) {
-			goto read_err;
+		offset = SVAL(cli->inbuf,smb_vwv6);
+		if (offset > len) {
+			ssize_t ret;
+			size_t padbytes = offset - len;
+			ret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);
+			if (ret != padbytes) {
+				goto read_err;
+			}
 		}
 	}
 

Modified: branches/SAMBA_3_0_26/source/libsmb/clientgen.c
===================================================================
--- branches/SAMBA_3_0_26/source/libsmb/clientgen.c	2007-05-16 01:13:25 UTC (rev 22923)
+++ branches/SAMBA_3_0_26/source/libsmb/clientgen.c	2007-05-16 01:34:22 UTC (rev 22924)
@@ -207,30 +207,34 @@
 		}
 	}
 
-	/* Check it's a non-chained readX reply. */
-	if (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||
-		(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||
-		(CVAL(cli->inbuf,smb_com) != SMBreadX)) {
+	/* If it's not the above size it probably was an error packet. */
+
+	if ((len == (smb_size - 4) + 24) && !cli_is_error(cli)) {
+		/* Check it's a non-chained readX reply. */
+		if (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||
+			(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||
+			(CVAL(cli->inbuf,smb_com) != SMBreadX)) {
+			/* 
+			 * We're not coping here with asnyc replies to
+			 * other calls. Punt here - we need async client
+			 * libs for this.
+			 */
+			goto read_err;
+		}
+
 		/* 
-		 * We're not coping here with asnyc replies to
-		 * other calls. Punt here - we need async client
-		 * libs for this.
+		 * We know it's a readX reply - ensure we've read the
+		 * padding bytes also.
 		 */
-		goto read_err;
-	}
 
-	/* 
-	 * We know it's a readX reply - ensure we've read the
-	 * padding bytes also.
-	 */
-
-	offset = SVAL(cli->inbuf,smb_vwv6);
-	if (offset > len) {
-		ssize_t ret;
-		size_t padbytes = offset - len;
-		ret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);
-                if (ret != padbytes) {
-			goto read_err;
+		offset = SVAL(cli->inbuf,smb_vwv6);
+		if (offset > len) {
+			ssize_t ret;
+			size_t padbytes = offset - len;
+			ret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);
+			if (ret != padbytes) {
+				goto read_err;
+			}
 		}
 	}
 

