From perl6-all-return-80967-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Apr 28 05:55:19 2007
Return-Path: <perl6-all-return-80967-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3S9tH6w005909
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 28 Apr 2007 05:55:18 -0400
Received: (qmail 15402 invoked by uid 514); 28 Apr 2007 09:55:12 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 15397 invoked from network); 28 Apr 2007 09:55:12 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: moderator for perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Shawn M Moore (via RT) <parrotbug-followup@parrotcode.org>
X-RT-NewTicket: yes
To: bugs-bitbucket@netlabs.develooper.com
Resent-To: perl6-internals@perl.org
Mail-Followup-To: perl6-internals@perl.org
Reply-To: perl6-internals@perl.org
Date: Sat, 28 Apr 2007 00:59:48 -0700
Subject: [perl #42781] [PATCH] Improve t/codingstd/linelength.t a little 
In-Reply-To: <e7e9b6ab0704280059m1e1960c4s81f794a5e74e8b3c@mail.gmail.com>
References: <RT-Ticket-42781@perl.org> <e7e9b6ab0704280059m1e1960c4s81f794a5e74e8b3c@mail.gmail.com>
Message-ID: <rt-3.6.HEAD-6655-1177747188-298.42781-72-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #42781
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: sartak@gmail.com
MIME-Version: 1.0
X-RT-Original-Encoding: utf-8
Content-type: multipart/mixed; boundary="----------=_1177747188-6655-26"
Resent-Message-Id: <20070428075949.6AEAF2AFD8@x3.develooper.com>
Resent-Date: Sat, 28 Apr 2007 00:59:49 -0700 (PDT)
Resent-From: rt-sartak=gmail.com@netlabs.develooper.com
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 3082
Lines: 96

------------=_1177747188-6655-26
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

# New Ticket Created by  Shawn M Moore 
# Please include the string:  [perl #42781]
# in the subject line of all future correspondence about this issue. 
# <URL: http://rt.perl.org/rt3/Ticket/Display.html?id=42781 >


Hiya,

This patch firstly expands tabs (assuming tabs are 8-chars wide) using
the following code:

$line =~ s/\t/' ' x (1 + length($`) % 8)/eg;

Even though it uses $`, it's so fast it doesn't much matter. (for
twenty iterations on my machine, it went from 9.72s to 10.78s).
However, this change doesn't affect the actual test output at all, so
could probably be left out entirely.

This patch also improves the output of failing tests in
t/codingstd/linelength.t by including which line number was over the
standard length (which is 100), and how many columns were in the line.
It also adds the standard length to the little blurb before the list
of failing files. Finally, it renames the helper function
"line_too_long" to "first_long_line".

Also it adds me as a cage cleaner to CREDITS. ;)

 CREDITS                  |    4 ++++
 t/codingstd/linelength.t |   11 ++++++-----
 2 files changed, 10 insertions(+), 5 deletions(-)

Shawn M Moore

------------=_1177747188-6655-26
Content-Type: text/plain; charset="ANSI_X3.4-1968"; name="linelength.diff"
Content-Disposition: inline; filename="linelength.diff"
Content-Transfer-Encoding: 7bit
RT-Attachment: 42781/254248/112067

Index: CREDITS
===================================================================
--- CREDITS	(revision 18348)
+++ CREDITS	(working copy)
@@ -501,6 +501,10 @@
 
 N: Sebastian Riedel
 
+N: Shawn M Moore
+D: Cage cleaner
+E: sartak@gmail.com
+
 N: Simon Cozens
 D: Release pumpking for 0.0.1-0.0.4
 
Index: t/codingstd/linelength.t
===================================================================
--- t/codingstd/linelength.t	(revision 18348)
+++ t/codingstd/linelength.t	(working copy)
@@ -72,25 +72,26 @@
 # check all the files and keep a list of those failing
 my @lines_too_long;
 foreach my $file (@files) {
-    push @lines_too_long => "$file\n"
-        if line_too_long($file);
+    my $lineinfo = first_long_line($file) or next;
+    push @lines_too_long => "$lineinfo\n";
 }
 
 ## L<PDD07/Code Formatting/"Source line width is limited to 100 characters">
 ok( !scalar(@lines_too_long), 'Line length ok' )
-    or diag( "Lines longer than coding standard limit in "
+    or diag( "Lines longer than coding standard limit ($columns columns) in "
         . scalar @lines_too_long
         . " files:\n@lines_too_long" );
 
 exit;
 
-sub line_too_long {
+sub first_long_line {
     my $file = shift;
 
     open my $fh, '<', $file or die "Can't open file '$file'";
     while ( my $line = <$fh> ) {
         chomp $line;
-        return 1
+        $line =~ s/\t/' ' x (1 + length($`) % 8)/eg; # expand \t
+        return sprintf '%s:%d: %d cols', $file, $., length($line)
             if length($line) > $columns;
     }
     return;

------------=_1177747188-6655-26--

