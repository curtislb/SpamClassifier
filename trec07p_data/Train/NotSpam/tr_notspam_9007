From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed May  9 19:36:28 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l49NaSqD002683
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 9 May 2007 19:36:28 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 06BBA162C34
	for <ktwarwic@speedy.uwaterloo.ca>; Wed,  9 May 2007 23:36:27 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id BDAB3162ACA; Wed,  9 May 2007 23:35:55 +0000 (GMT)
Date: Thu, 10 May 2007 07:55:47 +1000
To: samba-cvs@samba.org
From: tridge@samba.org
Message-Id: <20070509233555.BDAB3162ACA@lists.samba.org>
Subject: Rev 267: moved the vnn_map initialisation out of the cmdline code
	in http://samba.org/~tridge/ctdb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

------------------------------------------------------------
revno: 267
revision-id: tridge@samba.org-20070509215546-6s0mhsloyilervjf
parent: tridge@samba.org-20070509214318-io4xhj2e6k91eosm
committer: Andrew Tridgell <tridge@samba.org>
branch nick: tridge
timestamp: Thu 2007-05-10 07:55:46 +1000
message:
  moved the vnn_map initialisation out of the cmdline code
modified:
  common/cmdline.c               cmdline.c-20070416041216-w1zvz91bkdsgjckw-1
  common/ctdb.c                  ctdb.c-20061127094323-t50f58d65iaao5of-2
  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1
=== modified file 'common/cmdline.c'
--- a/common/cmdline.c	2007-05-08 23:59:23 +0000
+++ b/common/cmdline.c	2007-05-09 21:55:46 +0000
@@ -89,7 +89,7 @@
 struct ctdb_context *ctdb_cmdline_init(struct event_context *ev)
 {
 	struct ctdb_context *ctdb;
-	int i, ret;
+	int ret;
 
 	if (ctdb_cmdline.nlist == NULL) {
 		printf("You must provide a node list with --nlist\n");
@@ -156,26 +156,6 @@
 		}
 	}
 
-	/* initialize the vnn mapping table */
-/*
-XXX we currently initialize it to the maximum number of nodes to 
-XXX make it behave the same way as previously.  
-XXX Once we have recovery working we should initialize this always to 
-XXX generation==0 (==invalid) and let the recovery tool populate this 
-XXX table for the daemons. 
-*/
-	ctdb->vnn_map = talloc_zero_size(ctdb, offsetof(struct ctdb_vnn_map, map) + 4*ctdb->num_nodes);
-	if (ctdb->vnn_map == NULL) {
-		DEBUG(0,(__location__ " Unable to allocate vnn_map structure\n"));
-		exit(1);
-	}
-	ctdb->vnn_map->generation = 1;
-	ctdb->vnn_map->size = ctdb->num_nodes;
-	for(i=0;i<ctdb->vnn_map->size;i++){
-		ctdb->vnn_map->map[i] = i%ctdb->num_nodes;
-	}
-
-
 	return ctdb;
 }
 

=== modified file 'common/ctdb.c'
--- a/common/ctdb.c	2007-05-06 19:02:48 +0000
+++ b/common/ctdb.c	2007-05-09 21:55:46 +0000
@@ -152,6 +152,25 @@
 			return -1;
 		}
 	}
+
+	/* initialize the vnn mapping table now that we have num_nodes setup */
+/*
+XXX we currently initialize it to the maximum number of nodes to 
+XXX make it behave the same way as previously.  
+XXX Once we have recovery working we should initialize this always to 
+XXX generation==0 (==invalid) and let the recovery tool populate this 
+XXX table for the daemons. 
+*/
+	ctdb->vnn_map = talloc_zero_size(ctdb, offsetof(struct ctdb_vnn_map, map) + 4*ctdb->num_nodes);
+	if (ctdb->vnn_map == NULL) {
+		DEBUG(0,(__location__ " Unable to allocate vnn_map structure\n"));
+		exit(1);
+	}
+	ctdb->vnn_map->generation = 1;
+	ctdb->vnn_map->size = ctdb->num_nodes;
+	for(i=0;i<ctdb->vnn_map->size;i++){
+		ctdb->vnn_map->map[i] = i%ctdb->num_nodes;
+	}
 	
 	talloc_free(lines);
 	return 0;

=== modified file 'common/ctdb_daemon.c'
--- a/common/ctdb_daemon.c	2007-05-09 21:43:18 +0000
+++ b/common/ctdb_daemon.c	2007-05-09 21:55:46 +0000
@@ -721,7 +721,6 @@
 	
 	close(fd[1]);
 
-
 	ctdb->ev = event_context_init(NULL);
 	fde = event_add_fd(ctdb->ev, ctdb, fd[0], EVENT_FD_READ|EVENT_FD_AUTOCLOSE, ctdb_read_from_parent, &fd[0]);
 	fde = event_add_fd(ctdb->ev, ctdb, ctdb->daemon.sd, EVENT_FD_READ|EVENT_FD_AUTOCLOSE, ctdb_accept_client, ctdb);

