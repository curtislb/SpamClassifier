From beginners-return-91711-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May 15 19:22:22 2007
Return-Path: <beginners-return-91711-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4FNMLqD011576
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 15 May 2007 19:22:21 -0400
Received: (qmail 12944 invoked by uid 514); 15 May 2007 23:22:13 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 12934 invoked from network); 15 May 2007 23:22:12 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 15 May 2007 23:22:12 -0000
Received: (qmail 8466 invoked by uid 225); 15 May 2007 23:22:11 -0000
Delivered-To: beginners@perl.org
Received: (qmail 8459 invoked by alias); 15 May 2007 23:22:11 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of anexpert@gmail.com designates 64.233.166.182 as permitted sender)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.182)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 15 May 2007 16:22:03 -0700
Received: by py-out-1112.google.com with SMTP id u52so318395pyb
        for <beginners@perl.org>; Tue, 15 May 2007 16:21:59 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=WowIhjjB2yLGfNjSbOfjxUFhVgd34MACJL4TK1y46yiWFpO83vd+0ARXQ6oOcW34D1/zJ19Z0k2MjKobHXuRBj3MOT8YWhqDJGkCnt8rPZmo+XURrBLeZ7fM83o8epYKUnxcmWUNBGe+Y63Kl6ZsQizNF5BfxWG2mpWB91B5JpA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=os3o7uQ/aqWkOnyKOXZTjCskLNLRgypfbpD5l1juJzBx4QzVYzmjKXt04/gGD0tt7Z99j3XLFn5TiQNUOaJ7n0WMEvZhOBqa2cIjNoYkXpMIXIcPHOwcb6uFmaor4w5dWkIzo8ua9neKWWgnuqCY21qjDjHtM//AufTNoEXwkLE=
Received: by 10.65.93.18 with SMTP id v18mr1943833qbl.1179271318952;
        Tue, 15 May 2007 16:21:58 -0700 (PDT)
Received: by 10.64.193.13 with HTTP; Tue, 15 May 2007 16:21:58 -0700 (PDT)
Message-ID: <ca5781c80705151621t1bd382c9tfaac5a35a9759a3@mail.gmail.com>
Date: Tue, 15 May 2007 19:21:58 -0400
From: yitzle <yitzle@users.sourceforge.net>
Sender: anexpert@gmail.com
To: "Andrej Kastrin" <andrej.kastrin@siol.net>
Subject: Re: transform one2many table
Cc: "beginners perl" <beginners@perl.org>
In-Reply-To: <464A2C43.2050400@siol.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <464A2C43.2050400@siol.net>
X-Google-Sender-Auth: b78fe9723a2debae

Hashes!

Untested code:

while(<>){
    chomp;
    ($id,$name)=split(/\|/,$_);
    push( @($hash{$id}, $name) );
}

You can split the input file into chunks, or process one ID and then
let the variable go out of scope or whatever...

>     chomp;
>     ($id,$name)=split(/\|/,$_);
>     $previous_id=$id;
>     if($id eq $previous_id){
>         push(@array,$name);
>     }


On 5/15/07, Andrej Kastrin <andrej.kastrin@siol.net> wrote:
> Dear all,
> I want to transform one2many like table to one2one table. Original table
> looks as follows:
>
> 1|Michael
> 1|Alex
> 1|Bob
> 1|Pete
> 2|Bob
> 2|Andre
> 2|David
> 2|Alex
> 3|Pete
>
> and the output should be similar to;
> 1|Michael Alex Bob Pete
> 2|Bob Andre David Alex
> 3|Pete
>
> Table is large (4 GB), so I think the best idea is to process first n
> lines with unique id, print the result line and then process further.
> But I have no idea how to do that...
>
> while(<>){
>     chomp;
>     ($id,$name)=split(/\|/,$_);
>     $previous_id=$id;
>     if($id eq $previous_id){
>         push(@array,$name);
>     }
> ### ???
> }
>
>
> Thanks in advance for any suggestion.
>
> Best, Andrej
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>
>

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


