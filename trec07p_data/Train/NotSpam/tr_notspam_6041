From perl6-all-return-80987-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Apr 29 02:53:09 2007
Return-Path: <perl6-all-return-80987-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3T6r86w017552
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 29 Apr 2007 02:53:08 -0400
Received: (qmail 29447 invoked by uid 514); 29 Apr 2007 06:53:06 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29442 invoked from network); 29 Apr 2007 06:53:06 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Delivered-To: parrotbug-followup@parrotcode.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: "jerry gay" <jerry.gay@gmail.com>
Subject: Re: [perl #41975] Makefile is missing dependencies on lib/Parrot/Pmc2c/PMETHODs.pm
Date: Sat, 28 Apr 2007 23:45:32 -0700
User-Agent: KMail/1.9.5
Cc: perl6-internals@perl.org,
   "via RT Andy Spieherty" <parrotbug-followup@parrotcode.org>,
   bugs-bitbucket@netlabs.develooper.com
References: <RT-Ticket-41975@perl.org> <200704271228.53058.chromatic@wgz.org> <1d9a3f400704271233o5d7a8b22leaa3b909676235a@mail.gmail.com>
In-Reply-To: <1d9a3f400704271233o5d7a8b22leaa3b909676235a@mail.gmail.com>
MIME-Version: 1.0
Content-Type: Multipart/Mixed;
  boundary="Boundary-00=_M8DNGc51PhBY0TE"
Message-Id: <200704282345.32144.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
Status: O
Content-Length: 2073
Lines: 95

--Boundary-00=_M8DNGc51PhBY0TE
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On Friday 27 April 2007 12:33, jerry gay wrote:

> On 4/27/07, chromatic <chromatic@wgz.org> wrote:

> > If the inter-PMC dependencies are okay, it looks like we need to set the
> > dependencies appropriately on:
> >
> > $ grep -l PCCMETHOD src/pmc/*.pmc
> > src/pmc/class.pmc
> > src/pmc/exporter.pmc
> > src/pmc/namespace.pmc
> > src/pmc/pccmethod_test.pmc
> > src/pmc/role.pmc
> > src/pmc/smop_attribute.pmc
> > src/pmc/smop_class.pmc
> >
> > Is it worth having a test to see if every PMC with a PCCMETHOD marks the
> > dependency appropriately?
>
> yes! you certainly can't rely us to mark the dependencies on our own,
> given that long list of pmc's.

Here's the barest test file I could make that seems to do the trick.

-- c


--Boundary-00=_M8DNGc51PhBY0TE
Content-Type: text/plain;
  charset="utf-8";
  name="pccmethod_deps.t"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="pccmethod_deps.t"

#! perl
# Copyright (C) 2007, The Perl Foundation.
# $Id$

use strict;
use warnings;

use File::Glob;
use File::Spec;

use Test::More;

my $pmc_dir  = File::Spec->catfile( qw( src pmc *.pmc ) );
my @pmcs     = grep { contains_pccmethod( $_ ) } glob( $pmc_dir );
my $find_pmc = join( '|', map { s/\.pmc/\.dump/; $_ } @pmcs );
my $find_rx  = qr/^($find_pmc) : /;

open( my $fh, '<', 'Makefile' ) or die "Can't read Makefile: $!\n";

plan( tests => scalar @pmcs );

while (<$fh>)
{
    next unless /$find_rx/;
    my ($file) = $1;

    my $has_dep = 0;

    while (<$fh>)
    {
        last unless /\S/;
        next unless /PCCMETHOD\.pm/;
        $has_dep = 1;
        last;
    }
    ok( $has_dep, "$file should mark PCCMETHOD.pm dependency" );
}

sub contains_pccmethod
{
    my $file = shift;
    open( my $fh, '<', $file ) or die "Can't read '$file': $!\n";

    local $_;
    while (<$fh>)
    {
        next unless /PCCMETHOD/;
        return 1;
    }

    return;
}

--Boundary-00=_M8DNGc51PhBY0TE--

