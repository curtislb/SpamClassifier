From perl6-all-return-81089-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May  4 00:02:14 2007
Return-Path: <perl6-all-return-81089-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4442CqD010901
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 4 May 2007 00:02:13 -0400
Received: (qmail 3525 invoked by uid 514); 4 May 2007 04:02:11 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 3520 invoked from network); 4 May 2007 04:02:11 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Delivered-To: parrotbug-followup@parrotcode.org
Received-SPF: neutral (x1.develooper.com: local policy)
X-Virus-Scanned: by both ClamAV and Kaspersky at http://aliencamel.com/
Message-ID: <463AAFEE.8080007@perl.org>
Date: Thu, 03 May 2007 21:00:46 -0700
From: Allison Randal <allison@perl.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: Andy Spieherty <spiehera@lafayette.edu>
CC: James Keenan via RT <parrotbug-followup@parrotcode.org>
Subject: Re: [perl #42412] Configure.pl things =no is true
References: <RT-Ticket-42412@perl.org> <cbcbecbf3fd62ff3f85ce570a34209b5@gmail.com> <rt-3.6.HEAD-1687-1178072394-459.42412-15-0@perl.org> <Pine.LNX.4.62.0705020935560.10270@fractal.phys.lafayette.edu>
In-Reply-To: <Pine.LNX.4.62.0705020935560.10270@fractal.phys.lafayette.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

Andy Spieherty wrote:
> On Tue, 1 May 2007, James Keenan via RT wrote:
> 
>> On Tue Apr 10 01:45:31 2007, jrisom@gmail.com wrote:
>>> Configure should act as though writing --foo=no is false instead of 
>>> true.  Tonight I tried using --execcapable=no to get around a compile 
>>> failure, but then realized that it would probably treat "no" as a true 
>>> value.

I'm okay with having a plain English representation for "false value", 
as long as we have exactly one. Pick 'no', 'none', 'false', or whatever 
but we won't try to support every possible value a user might type in to 
mean false. Whatever we pick will mean false everywhere, on every 
option. And we have to be careful to make sure it's not a value that 
someone might want to use as a string value.

> One thing that is really needed is a consistent vision for what the
> different options expect.  Currently, there are at least four different
> ways in the help menu to turn stuff off:
> 
> 	--nomanicheck
> 	--cgoto=0
> 	--without-gdbm
> 	--icu-config=none
> 
> This means that for undocumented things, like -execcapable, the user has
> to guess.

Agreed, this is in serious need of a cleanup.

>> In short, YAGNI.  What do others think?
> 
> I'm afraid I don't have any idea what YAGNI means.

"You Ain't Gonna Need It" (a.k.a. the philosophy of avoiding 
over-engineering).

> Configure.pl will eventually end up setting many, many variables.  It is
> impossible to predict ahead of time which ones users will want or need
> to override.  Providing separate --foo options for every single one of
> them doesn't scale well at all.  Configure.pl's help screen is already
> 114 lines long.

I'm inclined to keep the plain English --foo names. At first glance it 
does seem simpler to only offer one -D option, but all it does is push 
the complexity down one level (a long list of options under -D, instead 
of a long list of options at the top level). And -D in itself isn't 
particularly meaningful, while choosing some naming conventions like 
--set-foo, --unset-foo --enable-foo, --disable-foo, etc will go a long 
way toward making the configuration system saner to use.

For the implementation, it doesn't particularly matter if you parse 
options first as -D and then dispatch on the remaining text, or just 
dispatch on the full text option. Agreed that the help screen shouldn't 
display every possible option in a long list, but it can break the help 
down into sensible groups whether it uses short options like -D, or long 
options.

Allison

