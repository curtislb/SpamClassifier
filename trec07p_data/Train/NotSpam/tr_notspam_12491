From perl6-all-return-81523-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May 22 09:41:46 2007
Return-Path: <perl6-all-return-81523-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4MDfjqD012829
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 22 May 2007 09:41:45 -0400
Received: (qmail 22794 invoked by uid 514); 22 May 2007 13:41:40 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 22789 invoked from network); 22 May 2007 13:41:40 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Tue, 22 May 2007 08:20:19 -0500
From: "Patrick R. Michaud" <pmichaud@pobox.com>
To: Allison Randal <allison@perl.org>, p2 <parrot-porters@perl.org>
Subject: Re: PMC architecture discussion
Message-ID: <20070522132019.GA16372@host.pmichaud.com>
References: <46524BE9.7030808@perl.org> <20070522122533.GG20876@plum.flirble.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20070522122533.GG20876@plum.flirble.org>
User-Agent: Mutt/1.4.2.1i
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host.pmichaud.com
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [32003 505] / [47 12]
X-AntiAbuse: Sender Address Domain - host.pmichaud.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Tue, May 22, 2007 at 01:25:33PM +0100, Nicholas Clark wrote:
> 
> And how often does the type of a PMC change, such that its internal 
> data layout changes? In Perl 5 this morphing happens everywhere, 
> but in Parrot?

Actually, until/unless we have a "scalar container" or "reference"
PMC of some sort, it appears to occur a lot.  The example I 
keep coming back to is something like (Perl 6):

   my @a = (1, 2, 3);
   my $b := @a[2];

   @a[2] = foo();

In PIR this becomes something like (simplified):

   ##  my @a = (1, 2, 3);
   $P1 = '_buildlist'(1, 2, 3)     # create a list
   .lex '@a', $P1                  # bind as @a

   ##  my $b := @a[2];
   find_lex $P2, '@a'              # look up @a
   set $P3, $P2[2]                 # get reference to @a[2]
   .lex '$b', $P3                  # bind as $b

   ##  @a[2] = foo();
   $P4 = 'foo'()                   # $P4 could be any type
   find_lex $P5, '@a'              # look up @a
   set $P6, $P5[2]                 # get reference to @a[2]
   assign $P6, $P4                 # $P6 (Integer) has to morph 
                                   #   to whatever type $P4 is

If we try to use a set opcode instead, as in:

   ##  @a[2] = foo();
   $P4 = 'foo'()                   # $P4 could be any type
   find_lex $P5, '@a'              # look up @a
   set $P5[2], $P4                 # set @a[2] to $P4

then we end up losing the binding between $b and @a[2] that
was established earlier ($b still refers to the Integer).  

Pm

