From beginners-return-92049-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun  1 07:26:17 2007
Return-Path: <beginners-return-92049-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l51BQFhB008969
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 1 Jun 2007 07:26:16 -0400
Received: (qmail 12236 invoked by uid 514); 1 Jun 2007 11:26:04 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 12227 invoked from network); 1 Jun 2007 11:26:04 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 11:26:04 -0000
Received: (qmail 7314 invoked by uid 225); 1 Jun 2007 11:26:03 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7310 invoked by alias); 1 Jun 2007 11:26:03 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of sharan.basappa@gmail.com designates 64.233.162.229 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.229)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 01 Jun 2007 04:24:40 -0700
Received: by nz-out-0506.google.com with SMTP id x7so500647nzc
        for <beginners@perl.org>; Fri, 01 Jun 2007 04:24:10 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=jl3IYm3LUykaovlqHaQrwtcOLqGUPNJEAWdEaAGT5ucjkpbcOMBlpHEt/XJKe8DTci1YHBqPK87djj8DYO3ehiLELfl4id5Bxt0Qfusvi17zbMLbl2fjnJV3pWhQEp1xXafVoB0esnxezZjGKiti1aJmM4WB2A0YCM+X2m4kJoI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=tRYxVbdyp53yNbGFu4hhi+FdL68gJAGb+lxSbNil/tPV0j45Lx+fR6NQ6jsxcrWYXqiCd+UL+aNAEeE3VHIQLIEXKjXAsdEm099rfuVLDojjn4xS+E0+P4IpQNQrBMJrIlAc4eZTS5QxUfOyGOiCmWX0pZ4PHKIRU+D4/h4OoeQ=
Received: by 10.143.158.16 with SMTP id k16mr79244wfo.1180697049868;
        Fri, 01 Jun 2007 04:24:09 -0700 (PDT)
Received: by 10.143.4.17 with HTTP; Fri, 1 Jun 2007 04:24:09 -0700 (PDT)
Message-ID: <8a31202a0706010424w362f72b2k6c2ccd140cdcceaf@mail.gmail.com>
Date: Fri, 1 Jun 2007 16:54:09 +0530
From: "Sharan Basappa" <sharan.basappa@gmail.com>
To: "Paul Lalli" <mritty@gmail.com>
Subject: Re: /s, /g and /m modifiers
Cc: beginners@perl.org, perl-beginners@moderators.isc.org
In-Reply-To: <1180696574.821519.113550@o5g2000hsb.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <8a31202a0706010154g49b56edbyeeeb5efad5098bcb@mail.gmail.com>
	 <1180696574.821519.113550@o5g2000hsb.googlegroups.com>

Simply great .. thanks

On 6/1/07, Paul Lalli <mritty@gmail.com> wrote:
> On Jun 1, 4:54 am, sharan.basa...@gmail.com (Sharan Basappa) wrote:
> > I have a script as follows  :
> >
> > $str = "once upon a time
> >         once upon a time";
> > @store = $str =~ m/(once)/g;
> > print @store ;
> >
> > This outputs "onceonce"
> > How come regex is searching beyond newline. I thought the search will
> > stop after first once.
>
> What led you to believe that?  There is nothing in that regex that
> says "stop after the first newline"
>
> > When I replace /g with /m, the output I get is "once", but I thought /m will
> > tell regex at multiple lines for match.
>
> That is the mnemonic device, yes, but what it actually does is allow
> the ^ token to match after a newline and the $ character to match
> before a newline, rather than just the beginning and end of string.
> So effectively, ^ and $ match the beggining/ending of lines, rather
> than strings.
>
> Your regexp does not involve ^ or $, so /m is completely irrelevent.
>
> If you remove the /g modifier, your pattern matches only once.
> Regardless of any other modifiers, if you want to search for more than
> one occurrence of the pattern, you need the /g modifier.
>
> > Also when I replace /g with /s, I still get output "once"
>
> Again, without the /g modifier, the pattern matches only once.  /s is
> also irrelevant.  While the mnemonic for this one is "single line",
> what it actually does is allow the . wildcard to match any character
> including the newline.  Normally it matches any character except the
> newline.  Again, you have no . in your pattern, so /s is irrelevant.
>
> > Can someone demystify this for me ?
> > Is my assumption that regex will stop after encountering first newline is
> > applicable only when dot* type of regex is used ?
>
> Ah.  Now I understand your confusion.  It is not the regexp that stops
> matching.  It is the . wildcard.  The . does not match a newline
> character, unless you provide the /s modifier.  Therefore, the string
> "onex\ntwox" will match /o(.*)x/ by setting $1 to 'on'.  This is what
> you've interpreted by "stopping after the first newline".  The regexp
> engine didn't stop.  It's just that the . ran out of sequential
> characters that it could match.  If you add the /s modifier, then $1
> will become "nex\ntwo", because now the . wildcard will match the
> newline.
>
> For more info:
> perldoc perlretut
> perldoc perlre
> perldoc perlreref
>
> Hope this helps,
> Paul Lalli
>
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>
>

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


