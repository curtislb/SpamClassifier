From perl6-all-return-80787-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Apr 22 17:17:49 2007
Return-Path: <perl6-all-return-80787-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3MLHn0I024167
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 22 Apr 2007 17:17:49 -0400
Received: (qmail 616 invoked by uid 514); 22 Apr 2007 21:17:23 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 611 invoked from network); 22 Apr 2007 21:17:23 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Leopold Toetsch <lt@toetsch.at>
To: Patrick Rutkowski <rutski89@gmail.com>
Subject: Re: I Don't Understand The Context Allocation/Destruction Code
Date: Sun, 22 Apr 2007 23:16:57 +0200
User-Agent: KMail/1.9.1
Cc: Joshua Isom <jrisom@gmail.com>, chromatic <chromatic@wgz.org>,
   perl6-internals@perl.org
References: <200704211824.18554.chromatic@wgz.org> <200704221736.35220.lt@toetsch.at> <4394E0C5-9004-4144-8C0B-28BA0EDA3391@gmail.com>
In-Reply-To: <4394E0C5-9004-4144-8C0B-28BA0EDA3391@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704222316.58188.lt@toetsch.at>
X-Scan-Signature: efbabc9c6245e282b997a89e41bb2e26
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 751
Lines: 18

Am Sonntag, 22. April 2007 22:47 schrieb Patrick Rutkowski:
> Yes, I see that now, but that doesn't answer the questions.
>
> Why did you choose reg_alloc/8 as an index into free_list?

A granualrity of 8 is of course arbitratly, could be some bigger power of 2 
too.

> Why does the code need to increase the size of free_list so
> dramatically in the branching into the first if()?

Err. If memory for slots up to 8 is allocated and there's a need for 80, then 
the pointer list is (as you have observed) extended by 72 more slote. Next 
allocation size might be for slot 30 or 50 or some such. As the allocation is 
for register space, there's for sure a good chance that the needed allocation 
size has a freelist after some program runtime.

leo

