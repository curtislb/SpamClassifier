From beginners-return-91988-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 31 03:14:32 2007
Return-Path: <beginners-return-91988-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4V7EVhB024554
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 03:14:31 -0400
Received: (qmail 773 invoked by uid 514); 31 May 2007 07:14:21 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 764 invoked from network); 31 May 2007 07:14:20 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 31 May 2007 07:14:20 -0000
Received: (qmail 11392 invoked by uid 225); 31 May 2007 07:14:20 -0000
Delivered-To: beginners@perl.org
Received: (qmail 11385 invoked by alias); 31 May 2007 07:14:19 -0000
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.238 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.238)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 31 May 2007 00:13:53 -0700
Received: by nz-out-0506.google.com with SMTP id x7so67447nzc
        for <beginners@perl.org>; Thu, 31 May 2007 00:13:48 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=KU6WqBkZ6ZrUir2yn84R0Vrx1tJDzsRmRwTXGWoBU+ogYz6CvWOR9/Yhb4vNJgF4LKXo5zERYdxmJdsCJWU1uFCPDlno1k5+4plhueQZ/EJFgUQcfr4pLGzzcpzptoBzrQKQGyURPVrBvIxG+IVBjZ62E+l57HutV7Q7M5UFWuk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=OizSt7kP49T7DTztNWEYUcgxz+NbjkNZuk87uouOz9McurJwKfAntHUOMSP8Xtm7mhFQ04Eq8Ryh/NLBKNjz02kSY+rAkqYV8dwgow2sjuYmHjj03nYBGavoSFPQ0agbzkbEMu4F9DMRoeqjFtc6ZebqAicPPH0791S+ccGsKYE=
Received: by 10.115.74.1 with SMTP id b1mr296900wal.1180595627986;
        Thu, 31 May 2007 00:13:47 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Thu, 31 May 2007 00:13:47 -0700 (PDT)
Message-ID: <58ce48dc0705310013y44bc92a6j9bed592b384d4ce1@mail.gmail.com>
Date: Thu, 31 May 2007 03:13:47 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "David Unric" <dunric29a@gmail.com>
Subject: Re: Arrow dereference operator question
Cc: beginners@perl.org
In-Reply-To: <ecf3c6dc0705302355v96c7b41vf94b050f0b70eaaa@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <ecf3c6dc0705301143w211ec8dfpef3d4bdeb7d4b0dd@mail.gmail.com>
	 <ecf3c6dc0705302355v96c7b41vf94b050f0b70eaaa@mail.gmail.com>

On 5/31/07, David Unric <dunric29a@gmail.com> wrote:
> Based on perlref documentation arrow operator between brackets subscripts
> may be omitted so the following code is valid:
>
> @array = ( [1, 2], [3, 4] );
> $element = $array[0][0];    #  shorthand for  $element = $array[0]->[0]
>
>
> Could somebody explain why it causes syntax error when the above rule is
> applied to returned value of a subroutine ?
>
> sub mysub {
>     @array = ( [1, 2], [3, 4] );
>
>     return @array;
> }
>
> $element = (&mysub)[0][0];   # $elem = (&mysub)[0]->[0] is valid
> ------------------------------
> syntax error at testarr.pl line 7, near "]["
>

My best guess is that the problem here is that (mysub())* is a list
not an array.  Lists are not multidimensional.  Try

my $element = ([1, 2], [3, 4])[0][0];

Notice how it gets the same error?

The simple solution is to use the arrow, or have the sub return an
arrayref.  Here are some ways to do it:

#!/usr/bin/perl

use strict;
use warnings;

sub list {
        my @array = ( [1, 2], [3, 4] );
        return @array;
}

sub aref {
        my @array = ( [1, 2], [3, 4] );
        return \@array;
}

print (
        (list())[0]->[0], "\n",
        "${[list()]}[0][1]\n",
        "${aref()}[1][0]\n",
        (aref())->[1][1], "\n"
);



* don't use &mysub unless you know why you are doing it, use mysub() instead

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


