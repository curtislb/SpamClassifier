From perl6-all-return-82053-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 18 16:54:02 2007
Return-Path: <perl6-all-return-82053-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5IKs0L9021716
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 18 Jun 2007 16:54:01 -0400
Received: (qmail 9218 invoked by uid 514); 18 Jun 2007 20:53:58 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 9200 invoked from network); 18 Jun 2007 20:53:58 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: moderator for perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Mark Glines (via RT) <parrotbug-followup@parrotcode.org>
X-RT-NewTicket: yes
To: bugs-bitbucket@netlabs.develooper.com
Resent-To: perl6-internals@perl.org
Mail-Followup-To: perl6-internals@perl.org
Reply-To: perl6-internals@perl.org
Date: Mon, 18 Jun 2007 09:28:13 -0700
Subject: [perl #43241] [PATCH] [CAGE] include/parrot/string.h typedefs STRING and String are redundant 
In-Reply-To: <20070618092739.0fd2a2e5@chirp>
References: <RT-Ticket-43241@perl.org> <20070618092739.0fd2a2e5@chirp>
Message-ID: <rt-3.6.HEAD-7948-1182184093-1063.43241-72-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #43241
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: mark@glines.org
MIME-Version: 1.0
X-RT-Original-Encoding: utf-8
Content-type: multipart/mixed; boundary="----------=_1182184094-7948-49"
Resent-Message-Id: <20070618162814.850192AFF6@x3.develooper.com>
Resent-Date: Mon, 18 Jun 2007 09:28:14 -0700 (PDT)
Resent-From: rt-mark=glines.org@netlabs.develooper.com
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

------------=_1182184094-7948-49
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

# New Ticket Created by  Mark Glines 
# Please include the string:  [perl #43241]
# in the subject line of all future correspondence about this issue. 
# <URL: http://rt.perl.org/rt3/Ticket/Display.html?id=43241 >


include/parrot/string.h contains 2 typedefs for the same thing: STRING
and String.  STRING is used everywhere; String is used occasionally.
they are interchangeable.  This confused me at first, because I thought
String was the String PMC, not the STRING C structure.

Here's a patch to consolidate that, and standardize on STRING (based
on the fact that it's used *much* more often than String is).

Mark

------------=_1182184094-7948-49
Content-Type: text/x-patch;
 charset="ascii";
 name="rename_String_to_STRING.diff"
Content-Disposition: inline; filename="rename_String_to_STRING.diff"
Content-Transfer-Encoding: 7bit
RT-Attachment: 43241/263503/115144

Index: src/string.c
===================================================================
--- src/string.c	(revision 19084)
+++ src/string.c	(working copy)
@@ -104,9 +104,9 @@
 */
 
 static void
-copy_string_header(String *dest /*NN*/, const String *src /*NN*/)
+copy_string_header(STRING *dest /*NN*/, const STRING *src /*NN*/)
 {
-    memcpy(dest, src, sizeof (String));
+    memcpy(dest, src, sizeof (STRING));
 }
 
 /*
Index: src/encodings/utf16.c
===================================================================
--- src/encodings/utf16.c	(revision 19084)
+++ src/encodings/utf16.c	(working copy)
@@ -29,7 +29,7 @@
 #define UNIMPL internal_exception(UNIMPLEMENTED, "unimpl utf16")
 
 
-static void iter_init(Interp *, const String *src, String_iter *iter);
+static void iter_init(Interp *, const STRING *src, String_iter *iter);
 
 /*
 
@@ -322,7 +322,7 @@
 
 #endif
 static void
-iter_init(Interp *interp, const String *src, String_iter *iter)
+iter_init(Interp *interp, const STRING *src, String_iter *iter)
 {
     iter->str = src;
     iter->bytepos = iter->charpos = 0;
Index: src/encodings/fixed_8.c
===================================================================
--- src/encodings/fixed_8.c	(revision 19084)
+++ src/encodings/fixed_8.c	(working copy)
@@ -200,7 +200,7 @@
 
 
 static void
-iter_init(Interp *interp, const String *src, String_iter *iter)
+iter_init(Interp *interp, const STRING *src, String_iter *iter)
 {
     iter->str = src;
     iter->bytepos = iter->charpos = 0;
Index: src/encodings/utf8.c
===================================================================
--- src/encodings/utf8.c	(revision 19084)
+++ src/encodings/utf8.c	(working copy)
@@ -45,7 +45,7 @@
 typedef unsigned char utf8_t;
 #endif
 
-static void iter_init(Interp *, const String *src, String_iter *iter);
+static void iter_init(Interp *, const STRING *src, String_iter *iter);
 
 /*
 
@@ -499,7 +499,7 @@
 }
 
 static void
-iter_init(Interp *interp, const String *src, String_iter *iter)
+iter_init(Interp *interp, const STRING *src, String_iter *iter)
 {
     iter->str = src;
     iter->bytepos = iter->charpos = 0;
Index: src/encodings/ucs2.c
===================================================================
--- src/encodings/ucs2.c	(revision 19084)
+++ src/encodings/ucs2.c	(working copy)
@@ -28,7 +28,7 @@
 #define UNIMPL internal_exception(UNIMPLEMENTED, "unimpl ucs2")
 
 
-static void iter_init(Interp *, const String *src, String_iter *iter);
+static void iter_init(Interp *, const STRING *src, String_iter *iter);
 
 
 static STRING *
@@ -215,7 +215,7 @@
 
 #endif
 static void
-iter_init(Interp *interp, const String *src, String_iter *iter)
+iter_init(Interp *interp, const STRING *src, String_iter *iter)
 {
     iter->str = src;
     iter->bytepos = iter->charpos = 0;
Index: src/inter_misc.c
===================================================================
--- src/inter_misc.c	(revision 19084)
+++ src/inter_misc.c	(working copy)
@@ -149,7 +149,7 @@
 
 =item C<PMC *
 Parrot_compile_string(Parrot_Interp interp, STRING *type,
-                      char *code, String **error)>
+                      char *code, STRING **error)>
 
 Compile code string.
 
@@ -179,7 +179,7 @@
 
 =item C<void
 Parrot_compile_file(Parrot_Interp interp, const char *fullname,
-                    String **error)>
+                    STRING **error)>
 
 Compile code file.
 
@@ -189,7 +189,7 @@
 
 void *
 Parrot_compile_file(Parrot_Interp interp, char *fullname,
-                    String **error)
+                    STRING **error)
 {
     return IMCC_compile_file_s(interp, fullname, error);
 }
Index: src/jit/i386/jit_emit.h
===================================================================
--- src/jit/i386/jit_emit.h	(revision 19084)
+++ src/jit/i386/jit_emit.h	(working copy)
@@ -3705,7 +3705,7 @@
  */
 void *
 Parrot_jit_build_call_func(Interp *interp, PMC *pmc_nci,
-        String *signature)
+        STRING *signature)
 {
     Parrot_jit_info_t jit_info;
     char *sig, *pc;
Index: src/stacks.c
===================================================================
--- src/stacks.c	(revision 19084)
+++ src/stacks.c	(working copy)
@@ -248,7 +248,7 @@
             UVal_pmc(entry->entry) = (PMC *)thing;
             break;
         case STACK_ENTRY_STRING:
-            UVal_str(entry->entry) = (String *)thing;
+            UVal_str(entry->entry) = (STRING *)thing;
             break;
         case STACK_ENTRY_POINTER:
         case STACK_ENTRY_DESTINATION:
@@ -305,7 +305,7 @@
         *(PMC **)where     = UVal_pmc(entry->entry);
         break;
     case STACK_ENTRY_STRING:
-        *(String **)where  = UVal_str(entry->entry);
+        *(STRING **)where  = UVal_str(entry->entry);
         break;
     case STACK_ENTRY_POINTER:
     case STACK_ENTRY_DESTINATION:
Index: src/jit.h
===================================================================
--- src/jit.h	(revision 19084)
+++ src/jit.h	(working copy)
@@ -318,7 +318,7 @@
 /*
  * NCI interface
  */
-void *Parrot_jit_build_call_func(Interp *, PMC *, String *);
+void *Parrot_jit_build_call_func(Interp *, PMC *, STRING *);
 
 #endif /* PARROT_JIT_H_GUARD */
 
Index: include/parrot/string.h
===================================================================
--- include/parrot/string.h	(revision 19084)
+++ include/parrot/string.h	(working copy)
@@ -22,7 +22,7 @@
 
 #include "parrot/parrot.h"
 
-typedef struct parrot_string_t String;
+typedef struct parrot_string_t STRING;
 
 typedef enum Forward_flag {
     Buffer_moved_FLAG = 1 << 0
@@ -30,7 +30,7 @@
 
 /* String iterator */
 typedef struct string_iterator_t {
-    const String *str;
+    const STRING *str;
     UINTVAL bytepos;
     UINTVAL charpos;
     UINTVAL (*get_and_advance)(Interp *, struct string_iterator_t *i);
@@ -38,7 +38,7 @@
     void (*set_position)(Interp *, struct string_iterator_t *i, UINTVAL pos);
 } String_iter;
 
-void string_iter_init(Interp *, const String *str, String_iter *);
+void string_iter_init(Interp *, const STRING *str, String_iter *);
 
 /* stringinfo parameters */
 
@@ -52,7 +52,6 @@
 #define STRINGINFO_STRLEN   6
 
 /* &end_gen */
-typedef struct parrot_string_t STRING;
 
 #endif /* PARROT_IN_CORE */
 #endif /* PARROT_STRING_H_GUARD */
Index: include/parrot/interpreter.h
===================================================================
--- include/parrot/interpreter.h	(revision 19084)
+++ include/parrot/interpreter.h	(working copy)
@@ -530,7 +530,7 @@
 PARROT_API PMC *Parrot_compile_string(Parrot_Interp interp,
         STRING *type, char *code, STRING **error);
 PARROT_API void *Parrot_compile_file(Parrot_Interp interp,
-        char *fullname, String **error);
+        char *fullname, STRING **error);
 
 INTVAL sysinfo_i(Interp *interp, INTVAL info_wanted);
 STRING *sysinfo_s(Interp *interp, INTVAL info_wanted);
Index: include/parrot/nci.h
===================================================================
--- include/parrot/nci.h	(revision 19084)
+++ include/parrot/nci.h	(working copy)
@@ -15,7 +15,7 @@
 
 #include "parrot/parrot.h"
 
-void *build_call_func(Interp *, PMC *, String *);
+void *build_call_func(Interp *, PMC *, STRING *);
 
 #endif /* PARROT_NCI_H_GUARD */
 

------------=_1182184094-7948-49--

