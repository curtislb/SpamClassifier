From perl6-all-return-81177-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  8 17:17:41 2007
Return-Path: <perl6-all-return-81177-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l48LHeqD020375
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 8 May 2007 17:17:41 -0400
Received: (qmail 21387 invoked by uid 514); 8 May 2007 21:17:38 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 21382 invoked from network); 8 May 2007 21:17:38 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Tue, 8 May 2007 14:28:26 -0500
From: "Patrick R. Michaud" <pmichaud@pobox.com>
To: Allison Randal <allison@perl.org>
Cc: Klaas-Jan Stol <parrotcode@gmail.com>, perl6-internals@perl.org
Subject: Re: PIR syntax methods ambiguity
Message-ID: <20070508192825.GF30194@host.pmichaud.com>
References: <7b0e52b40705032235q20a0cce9pdd5c80cc6d08e2f4@mail.gmail.com> <4640B856.1020102@perl.org> <20070508183416.GC30194@host.pmichaud.com> <4640CC67.4060606@perl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <4640CC67.4060606@perl.org>
User-Agent: Mutt/1.4.2.1i
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host.pmichaud.com
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [32003 505] / [47 12]
X-AntiAbuse: Sender Address Domain - host.pmichaud.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

On Tue, May 08, 2007 at 12:15:51PM -0700, Allison Randal wrote:
> Patrick R. Michaud wrote:
> >
> >Personally, I would think that the standard approach for going from
> >a String PMC to a method invocation would be via the find_method
> >opcode.  But that's just me.
> 
> That goes back to the philosophical question of "Is PIR a language to be 
> generated by compilers, or is it a language for humans to use?" It's 
> about half-way in between at the moment, and the conflict shows.
> 
> For generated code, it's no problem to require a methodname lookup for 
> every call. For hand-written code it's insanely annoying (which is the 
> reason the syntactic sugar was introduced in the first place).

Well, since I've only come across a single case where the
method I needed to call was in a String PMC, I've never found
it annoying.  But again, perhaps that's just me and it really is
a big annoyance to other PIR programmers.  :-)

There's also the point that find_method isn't sufficient if
we need the method call to use :multi semantics.  But I'm also
unsure about that, because I've yet to run across the need for
that one.

Pm

