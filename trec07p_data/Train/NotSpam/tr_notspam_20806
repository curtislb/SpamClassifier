From beginners-return-92565-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 07:34:12 2007
Return-Path: <beginners-return-92565-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5KBYAL9009300
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 07:34:10 -0400
Received: (qmail 27796 invoked by uid 514); 20 Jun 2007 11:34:04 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 27787 invoked from network); 20 Jun 2007 11:34:04 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Jun 2007 11:34:04 -0000
Received: (qmail 13140 invoked by uid 225); 20 Jun 2007 11:34:04 -0000
Delivered-To: beginners@perl.org
Received: (qmail 13134 invoked by alias); 20 Jun 2007 11:34:03 -0000
X-Spam-Status: No, hits=-0.4 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.njpservices.co.uk (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 20 Jun 2007 04:34:01 -0700
Received: from [85.92.185.116] (85-92-185-116.eurisp.net [85.92.185.116] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l5KBXpF24620;
	Wed, 20 Jun 2007 12:33:52 +0100
Message-ID: <4679109C.4070104@350.com>
Date: Wed, 20 Jun 2007 12:33:48 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.12 (Windows/20070509)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
CC: Mathew Snyder <theillien@yahoo.com>
Subject: Re: Alternatives to highly nested hashes
References: <4678F4A4.30909@yahoo.com> <46790419.7020708@yahoo.com>
In-Reply-To: <46790419.7020708@yahoo.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Mathew Snyder wrote:
> It looks like an object is what I want.  Am I correct?  Suppose I need to work
> with a bit of data that actually has 11 attributes.  This would be an object of
> another type.  However, I need to manipulate pieces of it differently.  So I'm
> guessing I would create an object thusly:
> 
> sub objectname {
>     my %hashOfAttribs {
> 	attrib1 => undef,
> 	attrib2 => undef,
> 	attrib3 => undef
>     }
> }
> 
> I would then create an instance of that object
> 
> my $instance = new objectname();
> 
> I'm not certain though, how to populate the elements.  would it actually be
> my $instance = new objectname(attrib1 => value, attrib2 => value, attrib3 =>
> value)?  Or would I create the instance as above and then populate it by some
> other means?  For instance
> $instance->hashOfAttribs {
>     attrib1 => value,
>     attrib2 => value,
>     attrib3 => value
> };
> 
> Am I at least on the right track?

Well, sort of. Objects are simply intelligent data structures - structures with
code as well as data that know how to perform operations on themselves. So you
still have to decide on your basic data structure first, and we still need to
know more about what the data is that you're trying to represent before we can
help!

What you've written above is pretty much correct expect that Perl classes (types
of objects) are packages not subroutines. But first lets be sure you really need
to create objects.

Rob



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


