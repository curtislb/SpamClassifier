From perl6-all-return-80443-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Apr  9 19:33:42 2007
Return-Path: <perl6-all-return-80443-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l39NXf0I021186
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 9 Apr 2007 19:33:42 -0400
Received: (qmail 9925 invoked by uid 514); 9 Apr 2007 23:33:17 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 9920 invoked from network); 9 Apr 2007 23:33:17 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Message-ID: <461ACD19.10700@jnthn.net>
Date: Tue, 10 Apr 2007 00:32:41 +0100
From: Jonathan Worthington <jonathan@jnthn.net>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: parrot-porters@perl.org
Subject: Class/Role namespace links
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
Status: O
Content-Length: 2362
Lines: 56

Hi,

Tonight I started working on the association between classes and 
namespaces as specified in PDD15. Have some questions.

1) I added a "slot" to the NameSpace PMC to hold a Class or Role PMC a 
while back. However, there is no interface specified for storing/getting 
at this slot. For now I've added "set_class" and "get_class" METHODs to 
the NameSpace PMC. What should these actually be called (if something 
else)? Whatever is decided on should be added to a PDD somewhere - I 
guess the NameSpce PDD.

2) I see that we now just have a .name method and no .namespace method. 
For Class, the description of the name method says:

"The accessor for the name attribute. With no argument, it simply 
returns the current value for name. When passed an argument, it sets the 
name of the class, and also sets the association with a namespace. With 
no argument it only returns the current value of the name attribute."

That is a little unclear to me. What should the name slot be set to - 
the name of the most nested bit of the namespace (e.g. for [ "Animal" ; 
"Monkey" ], name is "Monkey")?

Also, what should it return? Just the name attribute? What if you really 
want to get at the namespace?

Finally, note that Role says something different - I guess these should 
be consistent?

3) For Role (but not Class - mistake?), it says:

"When you associate a class with a namespace, it pulls in all of the 
methods and vtable methods held within that namespace."

At the moment, we do not carry the ":method" adverb on subs through to 
the PBC. Thus while I guess you can iterate a namespace (not tried it 
yet, just assuming you can since it's derived from Hash) and test for 
PMCs to make sure they are Subs. However, beyond that you have no way of 
knowing if it's a method or not (so far as I can see, I'd love to be 
corrected on this if anyone knows otherwise). Should :method be carried 
through to a PBC level?

4) After this it says:

"And when replacing one class with another in the association, it 
removes any methods and vtable methods from the previous class."

Remove methods from what? The class or the namespace? If the class, does 
it remove all methods from the class then pull in ones from the new 
namespace? Or do we look at the old namespace and see what methods it 
has, then remove just ones that appear there?

Thanks,

Jonathan

