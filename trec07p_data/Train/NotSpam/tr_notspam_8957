From perl6-all-return-81231-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  9 16:07:38 2007
Return-Path: <perl6-all-return-81231-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l49K7YqD000779
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 9 May 2007 16:07:35 -0400
Received: (qmail 29709 invoked by uid 514); 9 May 2007 20:07:32 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29703 invoked from network); 9 May 2007 20:07:31 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: perl6-internals@perl.org
Subject: Re: [svn:parrot] r18381 - trunk/include/parrot
Date: Wed, 9 May 2007 13:06:49 -0700
User-Agent: KMail/1.9.6
Cc: Nicholas Clark <nick@ccl4.org>
References: <20070501234157.8CE9ACB9B8@x12.develooper.com> <20070501234122.9F5F8CB9B8@x12.develooper.com> <20070509195357.GJ52711@colon.colondot.net>
In-Reply-To: <20070509195357.GJ52711@colon.colondot.net>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705091306.49336.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS

On Wednesday 09 May 2007 12:53:57 Nicholas Clark wrote:

> On Tue, May 01, 2007 at 04:41:22PM -0700, particle@cvs.perl.org wrote:
> > +
> > +#define STRING_IS_NULL(s) ((s) == NULL)
> > +#define STRING_IS_EMPTY(s) !(int)(s)->strlen

> I'm really not convinced that the first macro brings any benefit.
> I'm not totally sure that the second does either, given that both
> operations are conceptually very simple.
>
> Code is read far more often than it is written, and I don't think that the
> typing savings outweigh the learning curve of two more macros, and the
> memory needed to keep two more in one's head.

Does !(int)(s)->strlen really scan as quickly and easily as STRING_IS_EMPTY?

> Arguably one of the mistakes of Perl 5 was to use too many macros, which
> unintentionally contributes to obfuscating the code.

It's not as if *these* are SvPVNL and SvPVZ, or was that SVpvNL or SvPv 
or....?

> Is it likely that all future use of these two will be paired? If so, its it
> a better idea to abolish them and replace with one macro
> STRING_IS_NULL_OR_EMPTY() ?

That, I could understand.

-- c

