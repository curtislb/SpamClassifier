From beginners-return-91310-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May  3 06:37:43 2007
Return-Path: <beginners-return-91310-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l43Abfb9002074
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 3 May 2007 06:37:42 -0400
Received: (qmail 11537 invoked by uid 514); 3 May 2007 10:37:36 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 11524 invoked from network); 3 May 2007 10:37:35 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 May 2007 10:37:35 -0000
Received: (qmail 26814 invoked by uid 225); 3 May 2007 10:37:35 -0000
Delivered-To: beginners@perl.org
Received: (qmail 26808 invoked by alias); 3 May 2007 10:37:35 -0000
X-Spam-Status: No, hits=-1.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_TESTING,DK_SIGNED,DK_VERIFIED,KARMA_CONTENT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from web60812.mail.yahoo.com (HELO web60812.mail.yahoo.com) (209.73.178.235)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Thu, 03 May 2007 03:37:03 -0700
Received: (qmail 62834 invoked by uid 60001); 3 May 2007 10:36:58 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=X-YMail-OSG:Received:Date:From:Reply-To:Subject:To:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding:Message-ID;
  b=aOyQ8tvCdVqg/XKLmEbSnuo6iX34r9Q3FRnwgV1k2I1kH2smHIz9ezsAR7zCBzigY0UgmDRSJrtn5k/pME+yHaD67dSqqrQoPjZtk6DMIeuEdyKcC5hAYV6/DqSe6XnROczi6Ob4MOWJq8iFWxwLSpxD2rLy1WYgDRova/gVlPs=;
X-YMail-OSG: Wl8B9o8VM1kY6XQu1zGVOrYuZaQbnAct1zw3KRQaLmr0DSnoj5C7LM_7jFg4EJfJVqoQrWNBGpRVl_fK0sJoBFgOSfswr8X1Hfe6J2xRTgdoH0.pNn.P
Received: from [212.241.180.101] by web60812.mail.yahoo.com via HTTP; Thu, 03 May 2007 03:36:57 PDT
Date: Thu, 3 May 2007 03:36:57 -0700 (PDT)
From: Ovid <publiustemp-beginnerscgi3@yahoo.com>
Reply-To: publiustemp-beginnerscgi3@yahoo.com
Subject: Re: New to OO Perl
To: Nigel Peck <nigel@miswebdesign.com>, beginners@perl.org
In-Reply-To: <46391058.8090505@miswebdesign.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <981699.62829.qm@web60812.mail.yahoo.com>

--- Nigel Peck <nigel@miswebdesign.com> wrote:
> A cut down version of my code goes like this...

>
######################################################################
> 
> package MIS::Common::Image_magick;
> 
> use Image::Magick;
> 
> sub new {
> 	
> 	my ( $class, $data ) = @_;
> 	
> 	$data->{image_magick_object} = Image::Magick::new();
> 	
> 	my $error = $data->{image_magick_object}->Read( $data->{path} );
> 	croak $error if $error;
> 	
> 	return bless $data, $class;
> 	
> }
> 
> sub output {
> 	
> 	my ( $self, $args ) = @_;
> 	
> 	my $error = $self->{image_magick_object}->Write( $args->{path} );
> 	croak $error if $error;
> 	
> }
> 
> sub resize {
> 	
> 	my ( $self, $args ) = @_;
> 	
> 	$error = $self->{image_magick_object}->Resize( geometry => 
> $args->{geometry} );
> 	croak $error if $error;
> 	
> }
> 
> sub crop {
> 	
> 	my ( $self, $args ) = @_;
> 	
> 	$error = $self->{image_magick_object}->Crop( geometry => 
> $args->{geometry} );
> 	croak $error if $error;
> 	
> }
> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
> 
> What could I do better?

What you're looking at is delegation and most of your code is
identical.  I'd factor out the common bits.  A first pass (not quite
compatible) looks like this:

  package MIS::Common::Image_magick;

  use strict;
  use warnings;

  use Carp 'croak';
  use Image::Magick;

  BEGIN {
      my %delegate = map { $_ => ucfirst $_ } qw/read resize crop/;
      $delegate{output} = 'Write';

      while ( my ( $method, $delegate ) = each %delegate ) {
          no strict 'refs';
          *$method = sub {
              my $self   = shift;
              my $result = $self->_magick->$delegate(@_);
              croak $result if $result;
              return $self;
          };
      }
  }

  sub new {
      my ( $class, $data ) = @_;
      my $self = bless {} => $class;
      $self->_initialize($data);
  }

  sub _initialize {
    my ( $self, $data ) = @_;
      $self->{image_magick_object} = Image::Magick->new;
      $self->read( $data->{path} );
      return $self;
  }

  sub _magick { shift->{image_magick_object} }

  1;

The problem with this approach is that the delegated methods require
the same same arguments as the target methods and that's not how your
code works.  However, if users of your code realize this, they merely
need to consult the Image::Magick documentation to understand what
arguments are allowed.

If that is not desirable, it's not too hard to change the above code to
do what you want.  You'd need a richer structure in your begin block to
specify how delegate methods arguments map to the the target method
arguments.

Cheers,
Ovid

--

Buy the book -- http://www.oreilly.com/catalog/perlhks/
Perl and CGI -- http://users.easystreet.com/ovid/cgi_course/

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


