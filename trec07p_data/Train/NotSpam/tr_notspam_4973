From perl6-all-return-80872-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 13:00:26 2007
Return-Path: <perl6-all-return-80872-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PH0N6w000757
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 13:00:24 -0400
Received: (qmail 10137 invoked by uid 514); 25 Apr 2007 17:00:22 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 10132 invoked from network); 25 Apr 2007 17:00:22 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Message-ID: <462F893E.5030206@jnthn.net>
Date: Wed, 25 Apr 2007 18:00:46 +0100
From: Jonathan Worthington <jonathan@jnthn.net>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Andy Spieherty <spiehera@lafayette.edu>
CC: chromatic <chromatic@wgz.org>, Perl6 Internals <perl6-internals@perl.org>
Subject: Re: [perl #42620] PGE 'Out of memory' panics.
References: <RT-Ticket-42620@perl.org> <20070424200044.GA28003@host.pmichaud.com> <Pine.LNX.4.62.0704241628410.19105@fractal.phys.lafayette.edu> <200704241442.41493.chromatic@wgz.org> <Pine.LNX.4.62.0704251053090.23058@fractal.phys.lafayette.edu>
In-Reply-To: <Pine.LNX.4.62.0704251053090.23058@fractal.phys.lafayette.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
Status: O
Content-Length: 1174
Lines: 21

Andy Spieherty wrote:
> 2.  Garbage collection really slows the program down (I observed factors of 10 difference in speed with and without -G), and I have a vague unsupported suspicion that the slowdown grows faster than linearly with the allocated memory.
>   
I remember tracing through a load of this code for about an hour. I was 
none the wiser afterwards, but I was trying to work out arenas and 
allocation stuff and so on.

Basically, if you run the program without -G and then break it, it will 
usually break inside the GC routine. What I do remember is that it was 
looping through some kinda memory pool, or arena, or whatever. However, 
the thing it was looping through was *huge* (like, from 0 to a six 
figure number) and I think it maybe was an n^2 algorithm, which 
amplified the effect further.

Recent mentions of a lack of memory pool compaction kinda resonates with 
what I analyzed; I always meant to return to look a bit more, but never 
had time to dig deeper. I think re-discovering where it's spending so 
much time during GC would be a good start, though. And just randomly 
breaking into the program did it for me, usually first time.

Jonathan

