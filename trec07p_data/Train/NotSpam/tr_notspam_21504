From beginners-return-92651-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun 22 04:35:44 2007
Return-Path: <beginners-return-92651-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5M8ZhL9003918
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 22 Jun 2007 04:35:43 -0400
Received: (qmail 32485 invoked by uid 514); 22 Jun 2007 08:35:36 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 32475 invoked from network); 22 Jun 2007 08:35:36 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 22 Jun 2007 08:35:36 -0000
Received: (qmail 7258 invoked by uid 225); 22 Jun 2007 08:35:36 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7252 invoked by alias); 22 Jun 2007 08:35:35 -0000
X-Spam-Status: No, hits=0.5 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,FORGED_YAHOO_RCVD,RDNS_NONE,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from Unknown (HELO mail1.dulles.sv.int) (216.12.128.138)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 22 Jun 2007 01:35:32 -0700
Received: from [192.168.4.118] ([192.168.4.118]) by mail1.dulles.sv.int with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 22 Jun 2007 04:35:26 -0400
Message-ID: <467B89CE.7080106@yahoo.com>
Date: Fri, 22 Jun 2007 04:35:26 -0400
From: Mathew Snyder <theillien@yahoo.com>
User-Agent: Thunderbird 1.5.0.12 (X11/20060911)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Proper class setup?
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 22 Jun 2007 08:35:26.0716 (UTC) FILETIME=[487F5BC0:01C7B4A8]

I'm presently learning OOP as Perl does it using online resources and and
Programming Perl as my tutors.  I'm not certain I have it right though.  Is this
correct for the package:
package Report;

require Exporter;
use strict;

our @ISA       = qw(Exporter);
our @EXPORT    = qw(new);


sub new {
        my ($class) = @_;
        my $self    = {
                _id               => undef,
                _queue    => undef,
                _owner    => undef,
                _priority => undef,
                _worked   => undef,
                _timeLeft => undef,
                _due      => undef,
                _created  => undef,
                _updated  => undef,
                _severity => undef,
                _ccl      => undef
        };
        bless $self, $class;
        return $self;
}

# Accessor method for Reports _id
sub id {
        my ($self, $id) = @_;
        $self->{_id} = $id if defined($id);
        return $self->{_id};
}

# Accessor method for Reports _queue
sub queue {
        my ($self, $queue) = @_;
        $self->{_queue} = $queue if defined($queue);
        return $self->{_queue};
}

# Accessor method for Reports _owner
sub owner {
        my ($self, $owner) = @_;
        $self->{_owner} = $owner if defined($owner);
        return $self->{_owner};
}

# Accessor method for Reports _owner
sub priority {
        my ($self, $priority) = @_;
        $self->{_priority} = $priority if defined($priority);
        return $self->{_priority};
}

# Accessor method for Reports _owner
sub worked {
        my ($self, $worked) = @_;
        $self->{_worked} = $worked if defined($worked);
        return $self->{_worked};
}

# Accessor method for Reports _owner
sub timeLeft {
        my ($self, $timeLeft) = @_;
        $self->{_timeLeft} = $timeLeft if defined($timeLeft);
        return $self->{_timeLeft};
}

# Accessor method for Reports _owner
sub due {
        my ($self, $due) = @_;
        $self->{_due} = $due if defined($due);
        return $self->{_due};
}

# Accessor method for Reports _owner
sub created {
        my ($self, $created) = @_;
        $self->{_created} = $created if defined($created);
        return $self->{_created};
}

# Accessor method for Reports _owner
sub updated {
        my ($self, $updated) = @_;
        $self->{_updated} = $updated if defined($updated);
        return $self->{_updated};
}

# Accessor method for Reports _owner
sub severity {
        my ($self, $severity) = @_;
        $self->{_severity} = $severity if defined($severity);
        return $self->{_severity};
}

# Accessor method for Reports _owner
sub ccl {
        my ($self, $ccl) = @_;
        $self->{_ccl} = $ccl if defined($ccl);
        return $self->{_ccl};
}

sub print {
        my ($self) = @_;

        # Print Report info
        print $self->id . " " . $self->queue . "\n";
}

1;

Mathew
-- 
Keep up with me and what I'm up to: http://theillien.blogspot.com

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


