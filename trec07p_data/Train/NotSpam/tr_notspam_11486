From r-help-bounces@stat.math.ethz.ch  Thu May 17 20:53:04 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4I0qxqD006624
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 20:53:00 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4I0qZc5021825;
	Fri, 18 May 2007 02:52:41 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from alnrmhc15.comcast.net (alnrmhc15.comcast.net [204.127.225.95])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4I0lKXv020186
	for <r-help@stat.math.ethz.ch>; Fri, 18 May 2007 02:47:20 +0200
Received: from [192.168.1.100]
	(c-76-17-205-60.hsd1.mn.comcast.net[76.17.205.60])
	by comcast.net (alnrmhc15) with SMTP
	id <20070518004718b1500sn882e>; Fri, 18 May 2007 00:47:19 +0000
From: Marc Schwartz <marc_schwartz@comcast.net>
To: Patrick Wang <pwang@berkeley.edu>
In-Reply-To: <49779.76.169.69.87.1179447276.squirrel@calmail.berkeley.edu>
References: <49779.76.169.69.87.1179447276.squirrel@calmail.berkeley.edu>
Date: Thu, 17 May 2007 19:47:18 -0500
Message-Id: <1179449238.5214.36.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.3 (2.8.3-2.fc6) 
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Split a vector(list) into 3 list
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
Reply-To: marc_schwartz@comcast.net
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

On Thu, 2007-05-17 at 17:14 -0700, Patrick Wang wrote:
> Hi,
> 
> I have a vector contains values 1,2,3.
> 
> Can I call a function split to split it into 3 vectors with 1 corresponds
> to value ==1, which contain all the indexes for value==1.
> 
> 2 corresponds to value ==2 which contain all the indexes for value=2
> 
> Thanks
> pat


Let's first try with unequal numbers of each value:


set.seed(1)
Vec <- sample(3, 20, replace = TRUE)

> Vec
 [1] 1 2 2 3 1 3 3 2 2 1 1 1 3 2 3 2 3 3 2 3

> sapply(1:3, function(x) which(Vec == x))
[[1]]
[1]  1  5 10 11 12

[[2]]
[1]  2  3  8  9 14 16 19

[[3]]
[1]  4  6  7 13 15 17 18 20



Now let's try with equal counts of each number:

Vec <- sample(rep(1:3, each = 5))

> Vec
 [1] 3 1 2 1 3 1 1 2 2 3 2 1 3 3 2

 > t(sapply(1:3, function(x) which(Vec == x)))
     [,1] [,2] [,3] [,4] [,5]
[1,]    2    4    6    7   12
[2,]    3    8    9   11   15
[3,]    1    5   10   13   14


Note how the result varies in structure depending upon the content of
the source vector. In the first case you get a list, in the second a
matrix.

If you wish you could add code to set names for the list elements or
rownames for the matrix, which can help with comprehension of the result
if you have other, non-sequential values, etc.


Res <- sapply(1:3, function(x) which(Vec == x))

names(Res) <- 1:3

> Res
$`1`
[1]  1  5 10 11 12

$`2`
[1]  2  3  8  9 14 16 19

$`3`
[1]  4  6  7 13 15 17 18 20




mat <- t(sapply(1:3, function(x) which(Vec == x)))
rownames(mat) <- 1:3

> mat
  [,1] [,2] [,3] [,4] [,5]
1    2    4    6    7   12
2    3    8    9   11   15
3    1    5   10   13   14


See ?sapply and ?which


Also, to make the approach more generic, you could use:

  unique(Vec)

to get the unique values in the source vector and then use that result
for the first argument in sapply() and then for the names in the result.

For example:

Vals <- unique(Vec)
Res <- sapply(Vals, function(x) which(Vec == x))
names(Res) <- Vals

See ?unique

HTH,

Marc Schwartz

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

