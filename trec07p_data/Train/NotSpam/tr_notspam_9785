From beginners-return-91599-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat May 12 15:55:45 2007
Return-Path: <beginners-return-91599-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4CJtiqD019405
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 12 May 2007 15:55:44 -0400
Received: (qmail 29729 invoked by uid 514); 12 May 2007 19:55:38 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 29720 invoked from network); 12 May 2007 19:55:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 May 2007 19:55:37 -0000
Received: (qmail 19727 invoked by uid 225); 12 May 2007 19:55:36 -0000
Delivered-To: beginners@perl.org
Received: (qmail 19722 invoked by alias); 12 May 2007 19:55:35 -0000
X-Spam-Status: No, hits=0.5 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.njpservices.co.uk (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 12 May 2007 12:50:59 -0700
Received: from [85.92.161.207] (85-92-161-207.eurisp.net [85.92.161.207] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l4CJoha21242
	for <beginners@perl.org>; Sat, 12 May 2007 20:50:44 +0100
Message-ID: <46461A9B.7050807@350.com>
Date: Sat, 12 May 2007 20:50:51 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: $1 $2 var confusion
References: <4645CD59.3020508@ibctech.ca> <4645D9A7.1050905@earthlink.net> <46460B04.4040100@telus.net>
In-Reply-To: <46460B04.4040100@telus.net>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

John W. Krahn wrote:
> Mumia W. wrote:
>> That happens because the match variables ($1, $2, ...) are only changed
>> when a regular expression matches; otherwise, they are left alone.
>>
>> In the first case, "$2 !~ /domain\.com/" succeeds but does not capture
>> anything, so the numbered match variables are unset.
>>
>> Your situation reinforces the rule that you should always test if the
>> match succeeded before you attempt to use the match variables:
>>
>>     my $email = 'steveb@domain.com';
>>     my @f = (undef, $email =~ /(.*)\@(.*)/);
> 
> Why did you put undef in there?  It serves no useful purpose other than making
> the code harder to understand for beginners.
> 
>       my @f = $email =~ /(.*)\@(.*)/;

Presumably so that $f[1] eq $1 and $f[2] eq $2?

But I agree: unnecessary and confusing.

Rob


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


