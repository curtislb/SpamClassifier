From beginners-return-90971-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 20 14:53:32 2007
Return-Path: <beginners-return-90971-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3KIrV0I009850
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 14:53:31 -0400
Received: (qmail 32545 invoked by uid 514); 20 Apr 2007 18:53:02 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 32536 invoked from network); 20 Apr 2007 18:53:02 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2007 18:53:02 -0000
Received: (qmail 7871 invoked by uid 225); 20 Apr 2007 18:53:01 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7860 invoked by alias); 20 Apr 2007 18:53:00 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 204.209.205.52 as permitted sender)
Received: from mx01.telus.net (HELO defout.telus.net) (204.209.205.52)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 20 Apr 2007 11:52:56 -0700
Received: from priv-edmwaa06.telusplanet.net ([154.20.156.154])
          by priv-edmwes23.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070420185252.VWSN23432.priv-edmwes23.telusplanet.net@priv-edmwaa06.telusplanet.net>
          for <beginners@perl.org>; Fri, 20 Apr 2007 12:52:52 -0600
Received: from [154.20.156.154] (d154-20-156-154.bchsia.telus.net [154.20.156.154])
	by priv-edmwaa06.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 0167J85QJE
	for <beginners@perl.org>; Fri, 20 Apr 2007 12:52:51 -0600 (MDT)
Message-ID: <46290C01.7080201@telus.net>
Date: Fri, 20 Apr 2007 11:52:49 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: Nested loop
References: <58ce48dc0704192129r3112ddb8m62d05075b5dd966b@mail.gmail.com>	 <999878.79133.qm@web63403.mail.re1.yahoo.com>	 <ca5781c80704200719q31471a07l93253e96aa7150b3@mail.gmail.com> <58ce48dc0704201047k4116ce36pb56ed6383ad42613@mail.gmail.com>
In-Reply-To: <58ce48dc0704201047k4116ce36pb56ed6383ad42613@mail.gmail.com>
X-Enigmail-Version: 0.90.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1724
Lines: 49

Chas Owens wrote:
> On 4/20/07, yitzle <yitzle@users.sourceforge.net> wrote:
>> There's been mentions of efficiency.
>> I'm under the impression that for the uses Perl is put to, the
>> efficiency of a loop is sorta irrelevent. If you are doing
>> harddrive/network access, the performance gain of one loop over the
>> other is more of less invisible.
>> Come to think of it, the time for interpretting got to overshadow the
>> performance gain...
> 
> I was trying to address all arguments for the use of C-style for.  In
> general, though, premature optimization is a waste of time.  You
> should be aware of the general cost of the constructs you use (that is
> why I occasionally post benchmarks for alternate algorithms), but you
> should be more concerned with making what you write clearly express
> your intent.  This is why I prefer
> 
> my @a = (0 .. 10);
> my $i = 0;
> for my $elem (grep {not $i++ % 3} @a) {
>       func($elem);
> }
> 
> to
> 
> for (my $i = 0; $i < @a; $i += 3) {
>    func($a[$i]
> }
> 
> The grep clearly states that I am looking for something and its block
> tells me what the criteria are.

You are omitting one critical argument.  For people who are stuck with older
versions of Perl and in your grep() example above the foreach expression
creates its list in memory which may cause the program to die if the list is
large enough while the C style for loop does not have this problem.



John
-- 
Perl isn't a toolbox, but a small machine shop where you can special-order
certain sorts of tools at low cost and in short order.       -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


