From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Fri Jun 22 07:22:26 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5MBMQL9005532
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 22 Jun 2007 07:22:26 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id D75C9162C4C
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 22 Jun 2007 11:22:23 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 1017)
	id AF4C8162C38; Fri, 22 Jun 2007 11:21:59 +0000 (GMT)
To: samba-cvs@samba.org
From: obnox@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070622112159.AF4C8162C38@lists.samba.org>
Date: Fri, 22 Jun 2007 11:21:59 +0000 (GMT)
Subject: svn commit: samba r23583 - in branches: SAMBA_3_0/source/registry
	SAMBA_3_0_26/source/registry
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: obnox
Date: 2007-06-22 11:21:59 +0000 (Fri, 22 Jun 2007)
New Revision: 23583

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23583

Log:
Add a utility function to recursively delete a Registry
key with all its subkeys. (reg_deletekey will refuse to
delete a key with subkeys with WERR_ACCESS_DENIED).

Michael


Modified:
   branches/SAMBA_3_0/source/registry/reg_api.c
   branches/SAMBA_3_0_26/source/registry/reg_api.c


Changeset:
Modified: branches/SAMBA_3_0/source/registry/reg_api.c
===================================================================
--- branches/SAMBA_3_0/source/registry/reg_api.c	2007-06-22 11:20:37 UTC (rev 23582)
+++ branches/SAMBA_3_0/source/registry/reg_api.c	2007-06-22 11:21:59 UTC (rev 23583)
@@ -677,3 +677,59 @@
 	*pkey = key;
 	return WERR_OK;
 }
+
+
+/*
+ * Utility function to delete a registry key with all its subkeys. 
+ * Note that reg_deletekey returns ACCESS_DENIED when called on a 
+ * key that has subkeys.
+ */
+WERROR reg_deletekey_recursive(TALLOC_CTX *ctx,
+			       struct registry_key *parent, 
+			       const char *path)
+{
+	TALLOC_CTX *mem_ctx = NULL;
+	WERROR werr = WERR_OK;
+	struct registry_key *key;
+	uint32 idx = 0;
+	char *subkey_name = NULL;
+
+	mem_ctx = talloc_new(ctx);
+	if (mem_ctx == NULL) {
+		werr = WERR_NOMEM;
+		goto done;
+	}
+
+	/* recurse through subkeys first */
+	werr = reg_openkey(mem_ctx, parent, path, REG_KEY_WRITE, &key);
+	if (!W_ERROR_IS_OK(werr)) {
+		goto done;
+	}
+
+	/* NOTE: we *must not* increment idx in this loop since
+	 * the list of subkeys shrinks with each loop body. 
+	 * so this way, we repeatedly delete the *first* entry
+	 * of a shrinking list. */
+	for (idx = 0;
+	     W_ERROR_IS_OK(werr = reg_enumkey(mem_ctx, key, idx,
+			     		      &subkey_name, NULL));
+	    ) 
+	{
+		werr = reg_deletekey_recursive(mem_ctx, key, subkey_name);
+		if (!W_ERROR_IS_OK(werr)) {
+			goto done;
+		}
+	}
+	if (!W_ERROR_EQUAL(WERR_NO_MORE_ITEMS, werr)) {
+		DEBUG(1, ("reg_deletekey_recursive: Error enumerating "
+			  "subkeys: %s\n", dos_errstr(werr)));
+		goto done;
+	}
+
+	/* now delete the actual key */
+	werr = reg_deletekey(parent, path);
+	
+done:
+	TALLOC_FREE(mem_ctx);
+	return werr;
+}

Modified: branches/SAMBA_3_0_26/source/registry/reg_api.c
===================================================================
--- branches/SAMBA_3_0_26/source/registry/reg_api.c	2007-06-22 11:20:37 UTC (rev 23582)
+++ branches/SAMBA_3_0_26/source/registry/reg_api.c	2007-06-22 11:21:59 UTC (rev 23583)
@@ -677,3 +677,59 @@
 	*pkey = key;
 	return WERR_OK;
 }
+
+
+/*
+ * Utility function to delete a registry key with all its subkeys. 
+ * Note that reg_deletekey returns ACCESS_DENIED when called on a 
+ * key that has subkeys.
+ */
+WERROR reg_deletekey_recursive(TALLOC_CTX *ctx,
+			       struct registry_key *parent, 
+			       const char *path)
+{
+	TALLOC_CTX *mem_ctx = NULL;
+	WERROR werr = WERR_OK;
+	struct registry_key *key;
+	uint32 idx = 0;
+	char *subkey_name = NULL;
+
+	mem_ctx = talloc_new(ctx);
+	if (mem_ctx == NULL) {
+		werr = WERR_NOMEM;
+		goto done;
+	}
+
+	/* recurse through subkeys first */
+	werr = reg_openkey(mem_ctx, parent, path, REG_KEY_WRITE, &key);
+	if (!W_ERROR_IS_OK(werr)) {
+		goto done;
+	}
+
+	/* NOTE: we *must not* increment idx in this loop since
+	 * the list of subkeys shrinks with each loop body. 
+	 * so this way, we repeatedly delete the *first* entry
+	 * of a shrinking list. */
+	for (idx = 0;
+	     W_ERROR_IS_OK(werr = reg_enumkey(mem_ctx, key, idx,
+			     		      &subkey_name, NULL));
+	    ) 
+	{
+		werr = reg_deletekey_recursive(mem_ctx, key, subkey_name);
+		if (!W_ERROR_IS_OK(werr)) {
+			goto done;
+		}
+	}
+	if (!W_ERROR_EQUAL(WERR_NO_MORE_ITEMS, werr)) {
+		DEBUG(1, ("reg_deletekey_recursive: Error enumerating "
+			  "subkeys: %s\n", dos_errstr(werr)));
+		goto done;
+	}
+
+	/* now delete the actual key */
+	werr = reg_deletekey(parent, path);
+	
+done:
+	TALLOC_FREE(mem_ctx);
+	return werr;
+}

