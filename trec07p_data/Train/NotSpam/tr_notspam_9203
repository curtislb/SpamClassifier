From beginners-return-91512-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 10 12:52:42 2007
Return-Path: <beginners-return-91512-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4AGqeqD011938
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 10 May 2007 12:52:41 -0400
Received: (qmail 28523 invoked by uid 514); 10 May 2007 16:52:33 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 28514 invoked from network); 10 May 2007 16:52:33 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 May 2007 16:52:33 -0000
Received: (qmail 5035 invoked by uid 225); 10 May 2007 16:52:33 -0000
Delivered-To: beginners@perl.org
Received: (qmail 5027 invoked by alias); 10 May 2007 16:52:32 -0000
X-Spam-Status: No, hits=-1.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,KARMA_CONTENT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of nissetuta@gmail.com designates 64.233.184.236 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.236)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 10 May 2007 09:51:11 -0700
Received: by wr-out-0506.google.com with SMTP id 57so620734wri
        for <beginners@perl.org>; Thu, 10 May 2007 09:50:35 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:user-agent:mime-version:to:subject:references:in-reply-to:content-type:content-transfer-encoding;
        b=G7V02fXKm4VBUx+24/pZO+ncwjwpcvlSo991XKdpTF017TQTPoh2gcPPPuALXF9LTik2Py6igIOuwLz9ujWwAVZMmvo+pYBc8a3eKb2QDmPYRfsg5gKmc1gnhXo69+c5UzqCK2a2lyWfoIRu0as8kEessjpG7XBGcAISmGq7ddE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:user-agent:mime-version:to:subject:references:in-reply-to:content-type:content-transfer-encoding;
        b=ca85YasomeGbNHUgPDc9ifyuHb6h+R489cJHx6/5cGrDcSxUTtBplhqCLRsX4sAy2rbgUWy2HSSx4vwSyG2ERzH8rwtIMm2xns8VkUUPJ9ZNZDzRG/6iLJkT6n3x544FbrYELANA9eWIrqH2nT04LHhkEAKHcPwQ+NtQJKMbDoE=
Received: by 10.78.118.5 with SMTP id q5mr499293huc.1178814024334;
        Thu, 10 May 2007 09:20:24 -0700 (PDT)
Received: from ?192.168.1.10? ( [82.182.142.103])
        by mx.google.com with ESMTP id 5sm4551073ugc.2007.05.10.09.20.22;
        Thu, 10 May 2007 09:20:23 -0700 (PDT)
Message-ID: <46434644.2020100@gmail.com>
Date: Thu, 10 May 2007 14:20:20 -0200
From: Nisse Tuta <nissetuta@gmail.com>
User-Agent: Thunderbird 2.0.0.0 (Windows/20070326)
MIME-Version: 1.0
To: Chas Owens <chas.owens@gmail.com>, beginners@perl.org
Subject: Re: complex sort
References: <463F97F8.8070508@gmail.com> <58ce48dc0705100813x74f3e7c6i9f617dc71078fafa@mail.gmail.com>
In-Reply-To: <58ce48dc0705100813x74f3e7c6i9f617dc71078fafa@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Hi,

This is exactly what I was looking for.
Thank you very much. You just made my day :)

Regards,
Nisse


Chas Owens wrote:
> On 5/7/07, Nisse Tuta <nissetuta@gmail.com> wrote:
>> Hi All,
>>
>> I am having big problems solving this sorting issue and would really
>> appreciate any help on this.
>>
>> I have a list with each row containing 3 numbers(Run In Out).
>>
>> For example,
>> R01 13 19
>> R01 25 30
>> R01 23 47
>> R01 2 14
>> R02 2 45
>> R02 55 60
>> R01 1 17
>> R03 45 66
>> R03 20 35
>> and so on......
>>
>> I would like to go through these and check for any overlapping numbers
>> at both In and Out and replacing either the in out or both if
>> overlapped. And any cuts/breaks in each run will add a count.
>>
>> To create a list like
>>
>> Run Count In Out
>> R01 1 1 19
>> 2 25 47
>> R02 1 2 45
>> 2 55 60
>>
> snip
>
> If I understand correctly then R03 should look like
>
> R03 1 20 35
> 2 45 46
>
> The sort itself isn't that bad; you are just sorting on three columns,
> column 1 first, column 2 second, and column 3 last:
>
> my @sorted = sort {
>        $a->[0] cmp $b->[0] or #sort on run, if equal then
>        $a->[1] <=> $b->[1] or #sort on in, if equal then
>        $a->[2] <=> $b->[2]    #sort on out
> } @input;
>
> But that doesn't solve your problem.  You then need to loop over the
> sorted values and compress the runs.  Note, if you write the code that
> transforms the data correctly, it is not necessary to sort it first,
> but it does make it easier.
>
> #!/usr/bin/perl
>
> use strict;
> use warnings;
>
> my @input = (
>        [ qw(R01 13 19) ],
>        [ qw(R01 25 30) ],
>        [ qw(R01 23 47) ],
>        [ qw(R01  2 14) ],
>        [ qw(R02  2 45) ],
>        [ qw(R02 55 60) ],
>        [ qw(R01  1 17) ],
>        [ qw(R03 45 66) ],
>        [ qw(R03 20 35) ],
> );
>
> my @sorted = sort {
>        $a->[0] cmp $b->[0] or #sort on run, if equal then
>        $a->[1] <=> $b->[1] or #sort on in, if equal then
>        $a->[2] <=> $b->[2]    #sort on out
> } @input;
>
> #printf "%s %3d %3d\n", @$_ for @sorted;
>
> my %output;
> ROW:
> for my $row (@sorted) {
>        my ($runname, $in, $out) = @$row;
>        for my $run (@{$output{$runname}}) {
>                if ($in < $run->[2]) {
>                        if ($out > $run->[2]) {
>                                $run->[2] = $out;
>                        }
>                        next ROW;
>                }
>        }
>        push @{$output{$runname}}, $row;
> }
>
> for my $runname (sort keys %output) {
>        print "$runname ";
>        my $i   = 0;
>        for my $run (@{$output{$runname}}) {
>                $i++;
>                printf "$i %3d %3d\n", @{$run}[1,2];
>        }
> }
>


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


