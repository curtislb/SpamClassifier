From perl6-all-return-81057-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  1 22:26:32 2007
Return-Path: <perl6-all-return-81057-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l422QVb9016250
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 1 May 2007 22:26:31 -0400
Received: (qmail 21991 invoked by uid 514); 2 May 2007 02:26:30 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 21986 invoked from network); 2 May 2007 02:26:30 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Subject: [perl #41897] [BUG]:  Parrot::Pmc2c::STMRef gets 'subroutine prederef redefined' warning 
From: "James Keenan via RT" <parrotbug-followup@parrotcode.org>
Reply-To: parrotbug-followup@parrotcode.org
In-Reply-To: <2FBF9F9C-B2E4-487B-B9B6-D7A8A0E194B9@verizon.net>
References: <RT-Ticket-41897@perl.org> <2FBF9F9C-B2E4-487B-B9B6-D7A8A0E194B9@verizon.net>
Message-ID: <rt-3.6.HEAD-1687-1178072722-19.41897-15-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #41897
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: jkeen@verizon.net
Cc: perl6-internals@perl.org
To: "OtherRecipients of perl Ticket #41897": ;
MIME-Version: 1.0
X-RT-Original-Encoding: utf-8
Content-type: multipart/mixed; boundary="----------=_1178072724-1687-226"
Date: Tue, 01 May 2007 19:25:24 -0700
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME

------------=_1178072724-1687-226
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

More research.

1.  Here is the output of a recent run in trunk of coverage analysis on the code underlying 
tools/build/pmc2c.pl:

[parrot] 517 $ PERL5OPT=-MDevel::Cover=-db,coverage/pmc2c prove t/tools/pmc2cutils/*.t 
"$@"
t/tools/pmc2cutils/00-qualify........Devel::Cover: Can't open -e for MD5 digest: No such file 
or directory
t/tools/pmc2cutils/00-qualify........ok 1/10Subroutine prederef redefined at /Users/jimk/
work/parrot/t/tools/pmc2cutils/../../../lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/t/tools/pmc2cutils/../../../lib/
Parrot/Pmc2c/STMRef.pm line 34.
t/tools/pmc2cutils/00-qualify........ok                                      
t/tools/pmc2cutils/01-pmc2cutils.....ok 1/26Subroutine prederef redefined at /Users/jimk/
work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/01-pmc2cutils.....ok                                      
t/tools/pmc2cutils/02-find_file......ok 1/7Subroutine prederef redefined at /Users/jimk/
work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/02-find_file......ok                                      
t/tools/pmc2cutils/03-dump_vtable....ok 9/12Subroutine prederef redefined at /Users/jimk/
work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/03-dump_vtable....ok                                      
t/tools/pmc2cutils/04-dump_pmc.......ok 113/117Subroutine prederef redefined at /Users/
jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/04-dump_pmc.......ok                                      
t/tools/pmc2cutils/05-gen_c..........ok 66/68Subroutine prederef redefined at /Users/jimk/
work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/05-gen_c..........ok                                      
t/tools/pmc2cutils/06-print_tree.....ok 33/55Subroutine prederef redefined at /Users/jimk/
work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/06-print_tree.....ok                                      
t/tools/pmc2cutils/07-open_file......ok 1/23Subroutine prederef redefined at /Users/jimk/
work/parrot/lib/Parrot/Pmc2c/STMRef.pm line 10.
Subroutine raw_deref redefined at /Users/jimk/work/parrot/lib/Parrot/Pmc2c/STMRef.pm 
line 34.
t/tools/pmc2cutils/07-open_file......ok                                      
All tests successful.
Files=8, Tests=318, 132 wallclock secs (109.62 cusr +  9.16 csys = 118.78 CPU)

2.  Here is the output of 'ack prederef lib/Parrot/':

lib/Parrot/OpTrans/CGP.pm:11:C<Parrot::OpTrans::CGoto> to provide predereferenced 
register addressing
lib/Parrot/OpTrans/CGP.pm:70:#  define opcode_to_prederef(i, op)   \\
lib/Parrot/OpTrans/CGP.pm:94:   goto **(cur_opcode = opcode_to_prederef(interp, $addr))";
lib/Parrot/OpTrans/CGP.pm:121:    return "goto **(cur_opcode = opcode_to_prederef(interp,
lib/Parrot/OpTrans/CPrederef.pm:12:to provide basic functionality for predereferenced run 
loops (switch,
lib/Parrot/OpTrans/CPrederef.pm:39:#define REL_PC ((size_t)(cur_opcode - interp->code-
>prederef.code))
lib/Parrot/OpTrans/CPrederef.pm:69:    return "opcode_to_prederef(interp, $addr)";
lib/Parrot/OpTrans/CPrederef.pm:79:    return "opcode_to_prederef(interp, pop_dest
(interp))";
lib/Parrot/OpTrans/CSwitch.pm:11:to provide a mixture of predereferenced register 
addressing and a
lib/Parrot/OpTrans/CSwitch.pm:78:#  define opcode_to_prederef(i, op)   (op ? \\
lib/Parrot/OpTrans/CSwitch.pm:112:               cur_opcode = opcode_to_prederef(interp, 
$addr);
lib/Parrot/OpTrans/CSwitch.pm:141:              cur_opcode = opcode_to_prederef(interp, 
dest);
lib/Parrot/OpTrans.pm:86:C<opcode_t>, but the prederef runops core uses an array of 
C<void*> to
lib/Parrot/Pmc2c/Ref.pm:25:=item C<prederef($method)>
lib/Parrot/Pmc2c/Ref.pm:32:sub prederef {
lib/Parrot/Pmc2c/Ref.pm:88:    my $pre        = $self->prederef($method);
lib/Parrot/Pmc2c/SharedRef.pm:13:=item C<prederef($method)>
lib/Parrot/Pmc2c/SharedRef.pm:20:sub prederef {
lib/Parrot/Pmc2c/StmRef.pm:10:sub prederef {

3.  Here is the output of 'ack raw_deref lib/Parrot/':

lib/Parrot/Pmc2c/Ref.pm:47:=item C<raw_deref($method)>
lib/Parrot/Pmc2c/Ref.pm:54:sub raw_deref {
lib/Parrot/Pmc2c/Ref.pm:90:    my $deref      = $self->raw_deref($method);
lib/Parrot/Pmc2c/StmRef.pm:34:sub raw_deref {

Would the warnings emitted while running 'prove' with Devel::Cover be due to the fact that 
both Parrot::Pmc2c::Ref and Parrot::Pmc2c::StmRef define prederef() and raw_deref() -- and 
that the latter inherits from the former?

[parrot] 520 $ rhead lib/Parrot/Pmc2c/StmRef.pm 
package Parrot::Pmc2c::STMRef;
use base 'Parrot::Pmc2c::Ref';

Thank you very much.

kid51

------------=_1178072724-1687-226
Content-Type: text/plain; charset="ascii"; name="ack.prederef.lib.Parrot.txt"
Content-Disposition: inline; filename="ack.prederef.lib.Parrot.txt"
Content-Transfer-Encoding: 7bit
RT-Attachment: 41897/258004/112470

lib/Parrot/OpTrans/CGP.pm:11:C<Parrot::OpTrans::CGoto> to provide predereferenced register addressing
lib/Parrot/OpTrans/CGP.pm:70:#  define opcode_to_prederef(i, op)   \\
lib/Parrot/OpTrans/CGP.pm:94:   goto **(cur_opcode = opcode_to_prederef(interp, $addr))";
lib/Parrot/OpTrans/CGP.pm:121:    return "goto **(cur_opcode = opcode_to_prederef(interp,
lib/Parrot/OpTrans/CPrederef.pm:12:to provide basic functionality for predereferenced run loops (switch,
lib/Parrot/OpTrans/CPrederef.pm:39:#define REL_PC ((size_t)(cur_opcode - interp->code->prederef.code))
lib/Parrot/OpTrans/CPrederef.pm:69:    return "opcode_to_prederef(interp, $addr)";
lib/Parrot/OpTrans/CPrederef.pm:79:    return "opcode_to_prederef(interp, pop_dest(interp))";
lib/Parrot/OpTrans/CSwitch.pm:11:to provide a mixture of predereferenced register addressing and a
lib/Parrot/OpTrans/CSwitch.pm:78:#  define opcode_to_prederef(i, op)   (op ? \\
lib/Parrot/OpTrans/CSwitch.pm:112:               cur_opcode = opcode_to_prederef(interp, $addr);
lib/Parrot/OpTrans/CSwitch.pm:141:              cur_opcode = opcode_to_prederef(interp, dest);
lib/Parrot/OpTrans.pm:86:C<opcode_t>, but the prederef runops core uses an array of C<void*> to
lib/Parrot/Pmc2c/Ref.pm:25:=item C<prederef($method)>
lib/Parrot/Pmc2c/Ref.pm:32:sub prederef {
lib/Parrot/Pmc2c/Ref.pm:88:    my $pre        = $self->prederef($method);
lib/Parrot/Pmc2c/SharedRef.pm:13:=item C<prederef($method)>
lib/Parrot/Pmc2c/SharedRef.pm:20:sub prederef {
lib/Parrot/Pmc2c/StmRef.pm:10:sub prederef {

------------=_1178072724-1687-226--

