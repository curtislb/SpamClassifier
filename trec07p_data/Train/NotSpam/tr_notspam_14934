From beginners-return-92011-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 31 11:55:09 2007
Return-Path: <beginners-return-92011-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4VFt7hB029860
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 11:55:07 -0400
Received: (qmail 12657 invoked by uid 514); 31 May 2007 15:54:53 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 12648 invoked from network); 31 May 2007 15:54:53 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 31 May 2007 15:54:53 -0000
Received: (qmail 8341 invoked by uid 225); 31 May 2007 15:54:53 -0000
Delivered-To: beginners@perl.org
Received: (qmail 8333 invoked by alias); 31 May 2007 15:54:52 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of sharan.basappa@gmail.com designates 64.233.162.237 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.237)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 31 May 2007 08:54:43 -0700
Received: by nz-out-0506.google.com with SMTP id x7so211680nzc
        for <beginners@perl.org>; Thu, 31 May 2007 08:54:38 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=mEMfpduVwIBJjP+pG8pApgHORHHqLlF7F8fwT4z7Ra3mXiL53gmzuCv1HddvY94I+sDielXbEzcDfmg0Jx6cCgn6F1+IZaEPg3gVspBVNgZ+38TLWj4FV9FMx4AiQYKb4wuDm6oelNdFmooK3UFs5moEpbbm3n4s7ZZSTBPBWC8=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=n4BfjKdL0ExnnJV/tjInw3CFcdW1XC0XY8t1axSmySFJ4bVZ9q1kTtgzd36FJV3AhOW5PF5e0d/+VuqqsLT23oPvVAVUzNnUcZ7thWzoUaUgvgARLRbeSoti5XzvcEwNlidGTj9Yn0m/Z/2O7PDaXXFsYaLy8kuZYtKlNOWTrME=
Received: by 10.143.157.10 with SMTP id j10mr38108wfo.1180626878431;
        Thu, 31 May 2007 08:54:38 -0700 (PDT)
Received: by 10.143.2.8 with HTTP; Thu, 31 May 2007 08:54:38 -0700 (PDT)
Message-ID: <8a31202a0705310854j23c910b4i8de3d1c58efa6221@mail.gmail.com>
Date: Thu, 31 May 2007 21:24:38 +0530
From: "Sharan Basappa" <sharan.basappa@gmail.com>
To: "Paul Lalli" <mritty@gmail.com>
Subject: Re: did I get greedy quantifiers wrong ?
Cc: beginners@perl.org, perl-beginners@moderators.isc.org
In-Reply-To: <1180621706.790371.217340@k79g2000hse.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <8a31202a0705310302y1822ca58y9507522e3b9a262d@mail.gmail.com>
	 <1180617105.122078.145280@p77g2000hsh.googlegroups.com>
	 <8a31202a0705310715w65f052d0kf80bd6412255ba09@mail.gmail.com>
	 <1180621706.790371.217340@k79g2000hse.googlegroups.com>

Thanks Paul, Yitzle ..

On 31 May 2007 07:28:26 -0700, Paul Lalli <mritty@gmail.com> wrote:
> On May 31, 10:15 am, sharan.basa...@gmail.com (Sharan Basappa) wrote:
> > Thanks a lot Paul ..
> >
> > For this rule :
> > $str = mississippi;
> > $str =~ m/m(.*i)(.*pi)/;
> >
> > My initial understanding was that .*i would match all the way till last char i.
>
> > This would indeed be true if .*i was not followed by .*pi.
>
> > Do you agree ?
>
> Yes.  Like you said initially - a regexp quantifier will match as much
> as possible WITHOUT PREVENING THE MATCH FROM SUCEEDING.  If the .*i
> matched all the way up until the very last i, then the .*pi would fail
> because there'd be nothing left to match.
>
> FWIW, you can add:
> use re 'debug';
> to the top of your script to see exactly what Perl does when trying to
> match a regexp.  You'll see in this case that it first tries to
> let .*i match all the way to the end, but then finds that .*pi now
> fails, so it backtracks, letting the .* part of .*i match less and
> less until .*pi can also match.
>
> Paul Lalli
>
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>
>

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


