From beginners-return-92182-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun  5 23:58:48 2007
Return-Path: <beginners-return-92182-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l563wlhB017116
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 5 Jun 2007 23:58:47 -0400
Received: (qmail 24615 invoked by uid 514); 6 Jun 2007 03:58:36 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 24606 invoked from network); 6 Jun 2007 03:58:36 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 6 Jun 2007 03:58:36 -0000
Received: (qmail 28413 invoked by uid 225); 6 Jun 2007 03:58:36 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28407 invoked by alias); 6 Jun 2007 03:58:36 -0000
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.237 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.237)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 05 Jun 2007 20:58:33 -0700
Received: by nz-out-0506.google.com with SMTP id x7so16653nzc
        for <beginners@perl.org>; Tue, 05 Jun 2007 20:58:28 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=GqiqMCgXaeQBK747OTRHK6R5o2fLZF+p10AK2HVDWaebUWYNZOqBQ+R5vr7/PNIVAodTZFdoWs/58mwOspvE/Dtqk6CVCyXvyP0L+N6oYyrUanfPwH39RNGhWANrrt7oHA5xuZ9CE7FvjuyUQTdzIQ4bpPul7Vc5fIWl57ONjRs=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=IoYAM7uYH7SAhCWloBj/50QLlEYSYTI8HrgQbYG1fXJEtvGU0DxM1YpKWnmPIRMutiZirOePqKnhzJ2wnVIH/Zse2S0x1oG12JQKgpFUiEqdhKaO184ixkfJ4rh8ooghnhn12WFjLCpmgrFY/T42doMSxz+sbpIAS+UqMpjLXJI=
Received: by 10.115.106.7 with SMTP id i7mr96479wam.1181102308413;
        Tue, 05 Jun 2007 20:58:28 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Tue, 5 Jun 2007 20:58:28 -0700 (PDT)
Message-ID: <58ce48dc0706052058y416c1ce4qd7f5cc2a16693c54@mail.gmail.com>
Date: Tue, 5 Jun 2007 23:58:28 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "aislingbrennan21@gmail.com" <aislingbrennan21@gmail.com>
Subject: Re: PERL arrays
Cc: beginners@perl.org
In-Reply-To: <1181079499.259819.77140@g4g2000hsf.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1181079499.259819.77140@g4g2000hsf.googlegroups.com>

On 6/5/07, aislingbrennan21@gmail.com <aislingbrennan21@gmail.com> wrote:
snip
> how do i declare loop and print a 4 dim array
snip

Arrays in Perl are all one dimensional, but multiple dimensions can be
faked with references.  Given an "multidimensional" array @a, you
would access the first level with $a[0].  The value at this level
would be an arrayref.  You could then dereference and index into that
array like this $a[0]->[0].  This is clunky so Perl lets you remove
the arrow operator between the [] operators like this $a[0][0].  The
value at this level is also an arrayref, so we can say $a[0][0][0] and
so on until you get to a level that is not an array ref (in a four
dimensional array it would be $a[0][0][0][0]).  Now, since each level
is either an array or an arrayref we can iterate over each level like
this

#!/usr/bin/perl

use strict;
use warnings;

my @a = (
        [
                [
                        [ "0,0,0,0", "0,0,0,1" ],
                        [ "0,0,1,0", "0,0,1,1" ],
                        [ "0,0,2,0", "0,0,2,1" ],
                        [ "0,0,3,0", "0,0,3,1" ],
                        [ "0,0,4,0", "0,0,4,1" ],
                ],
                [
                        [ "0,1,0,0", "0,1,0,1" ],
                        [ "0,1,1,0", "0,1,1,1" ],
                ],
        ],
        [
                [
                        [ "1,0,0,0", "1,0,0,1" ],
                ],
                [
                        [ "1,1,0,0", "1,1,0,1" ],
                ]
        ]
);

for my $aref (@a) {
        for my $aref (@$aref) {
                for my $aref (@$aref) {
                        for my $item (@$aref) {
                                print "$item\n";
                        }
                }
        }
}

#or

for my $i (0 .. $#a) {
        for my $j (0 .. $#{$a[$i]}) {
                for my $k (0 .. $#{$a[$i][$j]}) {
                        for my $l (0 .. $#{$a[$i][$j][$k]}) {
                                print "position [$i][$j][$k][$l] is
$a[$i][$j][$k][$l]\n";
                        }
                }
        }
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


