From beginners-return-92525-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 18 12:46:59 2007
Return-Path: <beginners-return-92525-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5IGkwL9019662
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 18 Jun 2007 12:46:58 -0400
Received: (qmail 26514 invoked by uid 514); 18 Jun 2007 16:46:52 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 26503 invoked from network); 18 Jun 2007 16:46:52 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 18 Jun 2007 16:46:52 -0000
Received: (qmail 28996 invoked by uid 225); 18 Jun 2007 16:46:50 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28948 invoked by alias); 18 Jun 2007 16:46:44 -0000
X-Spam-Status: No, hits=0.5 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.fast4.net (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 18 Jun 2007 09:46:42 -0700
Received: from [85.92.185.116] (85-92-185-116.eurisp.net [85.92.185.116] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l5IGkTF10782;
	Mon, 18 Jun 2007 17:46:29 +0100
Message-ID: <4676B6EE.1020304@350.com>
Date: Mon, 18 Jun 2007 17:46:38 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.12 (Windows/20070509)
MIME-Version: 1.0
To: beginners@perl.org
CC: Octavian Rasnita <orasnita@gmail.com>
Subject: Re: [Perl 5.8.8 on WinXP] Command line usage
References: <901883.22178.qm@web35712.mail.mud.yahoo.com> <46769B30.9020803@350.com> <006601c7b1be$98190e70$c2a2b451@teddy>
In-Reply-To: <006601c7b1be$98190e70$c2a2b451@teddy>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Octavian Rasnita wrote:
>
> Rob Dixon wrote:
>>
>> John Degen wrote:
>>>
>>> I'm using Perl 5.8.8 from ActiveState on Windows XP. I'm trying to
>>> accomplish a search and replace in a number of files in the same
>>> directory from the command line (cmd.exe). The problem is that the
>>> command perl -i -e "s/old/new/" * fails silently, i.e. no changes
>>> take place. My question is: does * indicate all files in the current
>>> directory (this did work in the Windows version of sed I tried)? I
>>> cannot find this in the docs or using Google. Or am I making another
>>> mistake?
>>
>> Hi John
>>
>> Three problems here that I can see:
>>
>> - Perl won't do an in-place edit successfully on a Windows system. You
>>  have to specify a name for the old file to be renamed to.
>>
>> - It is the command shell on Unix systems that expands the wildcard
>>  into a list of filenames. On Windows your program sees just the single
>>  argument '*'.
>>
>> - You have written no code to process the arguments passed. You program
>>  is simply
>>
>>    s/old/new/
>>
>>  which will just try to replace 'old' with 'new' in an uninitialised $_
>>  variable (try perl -w -i -e "s/old/new/" * to see the evidence).
>>
>> I suggest you use something like
>>
>>  perl -w -i.bak -p -e "s/old/new/"
>>
>> but I haven't tested this as you already have a directory set up ready to
>> try it on :)
>
> A program in command line that works might be too long under Windows, 
> but if it is necessary it could be made sending the list of files to the 
> program with a pipe, like:
> 
> dir /b | perl -e "print <STDIN>;"
> 
> This command prints the list of filenames on the console, and the dos 
> command dir accepts wildcards, then the perl program could do anything 
> with those files, like opening them, modifying....

(Please bottom-post your replies so that extended threads remain
comprehensible. Thank you.)

That is unnecessary. Just

  perl -e "print qq($_\n) foreach <*>"

will do the same thing.

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


