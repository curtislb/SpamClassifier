From beginners-return-91221-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Apr 30 12:46:43 2007
Return-Path: <beginners-return-91221-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3UGkf6w015060
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 30 Apr 2007 12:46:42 -0400
Received: (qmail 30348 invoked by uid 514); 30 Apr 2007 16:46:36 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 30339 invoked from network); 30 Apr 2007 16:46:35 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 Apr 2007 16:46:35 -0000
Received: (qmail 30604 invoked by uid 225); 30 Apr 2007 16:46:35 -0000
Delivered-To: beginners@perl.org
Received: (qmail 30578 invoked by alias); 30 Apr 2007 16:46:32 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of cfarinella@appropriatesolutions.com designates 63.131.36.2 as permitted sender)
Received: from static-63-131-36-2.man.onecommunications.net (HELO mail.appropriatesolutions.com) (63.131.36.2)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 30 Apr 2007 09:46:25 -0700
Received: from localhost (localhost.appropriatesolutions.com [127.0.0.1])
	by mail.appropriatesolutions.com (Postfix) with ESMTP id 4AE2D3C6AA;
	Mon, 30 Apr 2007 12:46:20 -0400 (EDT)
X-Virus-Scanned: amavisd-new at appropriatesolutions.com
Received: from mail.appropriatesolutions.com ([127.0.0.1])
	by localhost (mail.appropriatesolutions.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 48gQ8mWz5g0Q; Mon, 30 Apr 2007 12:46:11 -0400 (EDT)
Received: from lpc01.corp.appropriatesolutions.com (whiterabbit.appropriatesolutions.com [63.131.36.31])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	(Authenticated sender: cfarinella)
	by mail.appropriatesolutions.com (Postfix) with ESMTP id AB5693C6AE;
	Mon, 30 Apr 2007 12:46:11 -0400 (EDT)
From: charlie farinella <cfarinella@appropriatesolutions.com>
Organization: appropriatesolutions.com
To: "Tom Phoenix" <rootbeer@redcat.com>
Subject: Re: How can I respond to Net::FTP timeouts?
Date: Mon, 30 Apr 2007 12:46:10 -0400
User-Agent: KMail/1.9.5
Cc: "Perl Beginners" <beginners@perl.org>
References: <200704261335.28319.cfarinella@appropriatesolutions.com> <31086b240704261847n37346885wc2dc489b874d23ca@mail.gmail.com>
In-Reply-To: <31086b240704261847n37346885wc2dc489b874d23ca@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704301246.10975.cfarinella@appropriatesolutions.com>
Status: O
Content-Length: 1966
Lines: 59

On Thursday 26 April 2007 21:47, Tom Phoenix wrote:
> On 4/26/07, charlie farinella <cfarinella@appropriatesolutions.com> 
wrote:
> > I have a script which uses Net::FTP to upload a backup file each
> > night. It sends me an email each night if it succeeds and a different
> > email if any of the methods fail.  This all works, but sometimes the
> > ftp connection times out and my script hangs without sending
> > anything.
> >
> > I don't know how to catch the timeout and send the failure message
> > when that happens.
>
> I've never needed to do this, but I think you want to catch it with an
> eval block. The code inside the block can timeout and die, but the
> main program can continue after the block.
>
> > my $ftp = Net::FTP->new( "hostname", Debug => 1, Timeout => 240 )
> >   or send_fail(), die;
> >
> > $ftp->login( "login info" ) or send_fail(), die;
> > $ftp->put( "filename" ) or send_fail(), die;
> > $ftp->quit or send_fail(), die;
> >
> > $send_success;
>
> I think I'd structure it something like this untested code:
>
>   eval {
>     my $ftp = Net::FTP->new( "hostname", Debug => 1, Timeout => 240 )
>       or die "making new FTP connection failed: $!";
>
>     $ftp->login( "login info" ) or die "ftp login failed";
>     $ftp->put( "filename" ) or die "ftp put failed";
>     $ftp->quit or die "ftp quit failed";
>
>     send_success();
>   };  # end of eval block
>   if ($@) {
>     send_fail($@);  # include block's dying words
>     die;  # propagate error, possibly timeout
>   }
>
> Hope this helps!

This worked very well, thanks so much for the help.  :-)

-- 
------------------------------------------------------------------------
Charles Farinella 
Appropriate Solutions, Inc. (www.AppropriateSolutions.com)
cfarinella@AppropriateSolutions.com
voice: 603.924.6079   fax: 603.924.8668


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


