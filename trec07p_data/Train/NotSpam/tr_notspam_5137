From beginners-return-91079-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Apr 26 00:59:21 2007
Return-Path: <beginners-return-91079-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3Q4xK6w007971
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 26 Apr 2007 00:59:21 -0400
Received: (qmail 27536 invoked by uid 514); 26 Apr 2007 04:59:15 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 27527 invoked from network); 26 Apr 2007 04:59:15 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Apr 2007 04:59:15 -0000
Received: (qmail 22538 invoked by uid 225); 26 Apr 2007 04:59:15 -0000
Delivered-To: beginners@perl.org
Received: (qmail 22533 invoked by alias); 26 Apr 2007 04:59:14 -0000
X-Spam-Status: No, hits=-2.2 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_30_40,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of nishiprafull@gmail.com designates 66.249.92.168 as permitted sender)
Received: from ug-out-1314.google.com (HELO ug-out-1314.google.com) (66.249.92.168)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 21:59:13 -0700
Received: by ug-out-1314.google.com with SMTP id s2so478419uge
        for <beginners@perl.org>; Wed, 25 Apr 2007 21:59:08 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=tN1OH3nLDq2vFHCmNE9wCNVTi1dd+TTa5RwjRcnDRrEnio9QaYy+xS74RO8pS6QZDJqhVQ98F/pa0X05A1Dcyl/MmMZKPzYx4FJJsktuQpLhtkDw2p2LlRuxjyTTb21Wf22a3uxt5mwAQW9mwCXlwZwl3hOGj5cjLdTrID3kl/4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=fyGYyo1PFBPaFrXpY4gbxSxmgDNKyx6pXdBnLSqijSNLiowid905a3QjAru7QTndrkHvWxBMe+5QWttwgpgygzCsNqmAM9TM/Dp+7cnOg2ZNpYyDbqxjFBXGxJTnyn2U+KYjan1tQTyoaC8aD01yY4LfPd5TnbXQla7Z56xJ48U=
Received: by 10.66.244.10 with SMTP id r10mr1938422ugh.1177563547994;
        Wed, 25 Apr 2007 21:59:07 -0700 (PDT)
Received: by 10.66.231.20 with HTTP; Wed, 25 Apr 2007 21:59:07 -0700 (PDT)
Message-ID: <c540fe260704252159w40489117gb31a34625d319428@mail.gmail.com>
Date: Wed, 25 Apr 2007 21:59:07 -0700
From: Nishi <nishiprafull@gmail.com>
To: "Rob Dixon" <rob.dixon@350.com>
Subject: Re: basename equivalent?
Cc: "Perl Beginners List" <beginners@perl.org>
In-Reply-To: <462FF725.60200@350.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_246715_9306531.1177563547930"
References: <c540fe260704251734q565bab0bgb8cc7331917f4ea5@mail.gmail.com>
	 <462FF725.60200@350.com>
Status: O
Content-Length: 1270
Lines: 48

------=_Part_246715_9306531.1177563547930
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Rob:


On 4/25/07, Rob Dixon <rob.dixon@350.com> wrote:
>
> Nishi wrote:
> >
> > What is the equivalent of basename? Ie if I dont want to use basename
> > package to get the filename off a path, what reg expr can i use in perl?
> >
> > Would this work --
> > my $fileName=$path =~ /.*\/(.+)$/;
>
> Why don't you try it?!
>
> It wouldn't work because $fileName would end up with either a true or a
> false value depending on whether the regex matched. To get the captured
> string put the regex in list context:
>
>   my ($fileName) = $path =~ /.*\/(.+)$/;
>
> But it would still fail if there was no slash in the $path string. You
> may want to use the slightly simpler
>
>   my ($name) = $path =~ m|([^/]+)$|;


I tried it, but somehow doesnt work for me, printing $name returns me the
entire string such as C:\temp\abc\abc.txt and not abc.txt.
Am I missing something?

which just grabs all the characters at the end of the string that aren't
> slashes, and works whether or not there is a path as well as a file name
> in the string.
>
> Cheers,
>
> Rob
>
>
>

------=_Part_246715_9306531.1177563547930--

