From beginners-return-92581-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 10:37:04 2007
Return-Path: <beginners-return-92581-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5KEb3L9011090
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 10:37:04 -0400
Received: (qmail 1674 invoked by uid 514); 20 Jun 2007 14:36:55 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 1665 invoked from network); 20 Jun 2007 14:36:55 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Jun 2007 14:36:55 -0000
Received: (qmail 20007 invoked by uid 225); 20 Jun 2007 14:36:55 -0000
Delivered-To: beginners@perl.org
Received: (qmail 20002 invoked by alias); 20 Jun 2007 14:36:54 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.179 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.179)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 20 Jun 2007 07:36:52 -0700
Received: by wa-out-1112.google.com with SMTP id v27so138882wah
        for <beginners@perl.org>; Wed, 20 Jun 2007 07:36:48 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=EW3tXzi2xvBvo5c9QTz0iJkB8vs7RAYYoo4essfxp+3v8nt0p0AyogXEA2ZrELOtXwhId7OweCAeWH9V5LYAzXd4giCuS/BNWSo6aZg1UoAIdGbb0PPsIEWzCyw45bfJ3MT8VkdJp3TRzitegfhypOqKwpTKSAHZ4wZKlITYbdU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=ZKb2bSuxUf10up0rSdcUlEyVRZmSZa1ynJFVCOuyCqBI/Qr++EvpoKF11ssqfMWoLI3xVSQyd96qIuSEzj8HGZZhiSPV7gFOwleTqOqct2zbPANsgHudnoZd6n52Qs6huJlwDrgAoqs9wgGuHiozSj7KJwST7DZjviuKXdEvMs8=
Received: by 10.114.89.1 with SMTP id m1mr368752wab.1182350208122;
        Wed, 20 Jun 2007 07:36:48 -0700 (PDT)
Received: by 10.114.102.6 with HTTP; Wed, 20 Jun 2007 07:36:48 -0700 (PDT)
Message-ID: <58ce48dc0706200736w184c73d6yd4642bba5b3ccee8@mail.gmail.com>
Date: Wed, 20 Jun 2007 10:36:48 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: yitzle <yitzle@users.sourceforge.net>
Subject: Re: Simple Encryption - what function/module could I use?
Cc: "Perl List" <beginners@perl.org>
In-Reply-To: <ca5781c80706192110r10db6ff2h978b4e5ac2fa35a5@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <ca5781c80706192110r10db6ff2h978b4e5ac2fa35a5@mail.gmail.com>

On 6/20/07, yitzle <yitzle@users.sourceforge.net> wrote:
> What function/module (I prefer built in functions...) is there that I
> can use to do some simple/basic reversable (opposed to crypt()'s one
> way) encryption?
> I want to be able to encrypt/decrypt a textfile.
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>
>
Without more information about why you want to encrypt something we
can give no good advice; so here's some bad advice

#!/usr/bin/perl

use strict;
use warnings;

my $plaintext = do { local $/ = undef; <> };
my $pad = "X" x length $plaintext;

my $encryptedtext = $plaintext      ^ $pad;
my $decryptedtext = $encryptedtext  ^ $pad;
print "plaintext:\n$plaintext\n\nencryptedtext:\n$encryptedtext\n\n",
        "decryptedtext:\n$decryptedtext\n";

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


