From perl6-all-return-80874-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 13:13:41 2007
Return-Path: <perl6-all-return-80874-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PHDe6w000937
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 13:13:40 -0400
Received: (qmail 15229 invoked by uid 514); 25 Apr 2007 17:13:39 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 15223 invoked from network); 25 Apr 2007 17:13:39 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
X-Virus-Scanned: by both ClamAV and Kaspersky at http://aliencamel.com/
Message-ID: <462F8BF2.6090407@perl.org>
Date: Wed, 25 Apr 2007 10:12:18 -0700
From: Allison Randal <allison@perl.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: Nikolay Ananiev <ananiev@thegdb.com>
CC: perl6-internals@perl.org
Subject: Re: Is Parrot 1.0 too late?
References: <f0m0fu$rhc$1@sea.gmane.org> <462EEE7F.9040207@perl.org> <f0n4kd$eq5$1@sea.gmane.org>
In-Reply-To: <f0n4kd$eq5$1@sea.gmane.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 2202
Lines: 46

Nikolay Ananiev wrote:
> Yes I know about Parrot's great features, but Parrot is still not
> ready for the mainstream and won't be ready in the next two years (maybe?).
> That's a lot of time for commercial projects like CLR and JVM and
> the competition between MS and Sun is quite serious, so I expect
> the dynamic features in their VMs to progress very fast. I'm also afraid
> they have the resources to create compiler tools comparable to PGE and TGE
> (you know that MS can always steal).

That's a possibility, but what are you afraid of? This is how open 
source software works. We develop in the open to promote the greater 
advance of all technology. We don't hoard our advances in the fear that 
others will use them (that's what proprietary companies do).

One of the greatest advantages of the open source model is the fact that 
Parrot isn't tied to a particular company's profit strategy. This gives 
us a much greater flexibility to take bold risks on new technology. I 
expect that this will keep Parrot consistently ahead of the CLR and the 
JVM. They have more resources to throw at it, but they also have strong 
motivations not to radically change their architecture.

But, there's really no way to be certain how the game will play out 
until we play the game. If poker players all threw in their cards as 
soon as they were dealt, it would make for a pretty boring game.

> Maybe we have to search harder for new ways to advertise Parrot to other
> communities and get new developers and supporters to the project.

On that I completely agree, but as a simple matter of practicality, not 
some desperate bid for market dominance. If you want to recruit new C 
developers, you go where C developers hang out. (chromatic and I are 
speaking at a Linux conference this weekend.)

> Currently, Parrot looks too Perlish

On that I completely disagree. Parrot looks very Perlish because it's 
highly dynamic and intended to be easy to use (which happen to also be 
goals of Perl). This is an advantage.

> and is mainly supported by the Perl 
> community.

That's not really an advantage or disadvantage, it's an accident of 
history. And, probably also a sympathy of vision.

Allison

