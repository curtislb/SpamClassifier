From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue Apr 24 13:18:41 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3OHIf6w016622
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 24 Apr 2007 13:18:41 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 2C15416382C
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 24 Apr 2007 17:18:41 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: *
X-Spam-Status: No, score=1.2 required=3.8 tests=AWL,BAYES_50,
	DATE_IN_PAST_12_24,FORGED_RCVD_HELO,RCVD_IN_DSBL autolearn=no 
	version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: from smtp-vbr6.xs4all.nl (smtp-vbr6.xs4all.nl [194.109.24.26])
	by lists.samba.org (Postfix) with ESMTP id 159FF162AD3
	for <samba-cvs@samba.org>; Tue, 24 Apr 2007 17:18:23 +0000 (GMT)
Received: from rhonwyn.vernstok.nl (a62-251-123-16.adsl.xs4all.nl
	[62.251.123.16])
	by smtp-vbr6.xs4all.nl (8.13.8/8.13.8) with ESMTP id l3OHIMcU039741
	for <samba-cvs@samba.org>; Tue, 24 Apr 2007 19:18:23 +0200 (CEST)
	(envelope-from jelmer@vernstok.nl)
Received: from localhost (localhost [127.0.0.1])
	by rhonwyn.vernstok.nl (Postfix) with ESMTP id 19B5C39A5AB
	for <samba-cvs@samba.org>; Tue, 24 Apr 2007 19:18:22 +0200 (CEST)
X-Virus-Scanned: by XS4ALL Virus Scanner
Received: from rhonwyn.vernstok.nl ([127.0.0.1])
	by localhost (rhonwyn.vernstok.nl [127.0.0.1]) (amavisd-new, port 10024)
	with SMTP id IAcCK4V1olzh for <samba-cvs@samba.org>;
	Tue, 24 Apr 2007 19:14:26 +0200 (CEST)
Received: from ganieda.vernstok.nl (localhost [127.0.0.1])
	by rhonwyn.vernstok.nl (Postfix) with ESMTP id 93E7839A5A0
	for <samba-cvs@samba.org>; Tue, 24 Apr 2007 18:40:14 +0200 (CEST)
Received: by ganieda.vernstok.nl (Postfix, from userid 1000)
	id B9DFE5C456B; Mon, 23 Apr 2007 19:05:40 +0200 (CEST)
To: samba-cvs@samba.org
From: Jelmer Vernooij <jelmer@samba.org>
Message-Id: <20070423170540.B9DFE5C456B@ganieda.vernstok.nl>
Date: Mon, 23 Apr 2007 19:05:40 +0200 (CEST)
Subject: Rev 11993: Some more changes to the python build,
	add bzrignore. in file:///home/jelmer/bzr.samba/python/
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 6927
Lines: 243

At file:///home/jelmer/bzr.samba/python/

------------------------------------------------------------
revno: 11993
revision-id: jelmer@samba.org-20070423170515-xp817fo3ft73qhe8
parent: jelmer@samba.org-20070423154116-7kh99mw6jnnk16e9
committer: Jelmer Vernooij <jelmer@samba.org>
branch nick: python
timestamp: Mon 2007-04-23 19:05:15 +0200
message:
  Some more changes to the python build, add bzrignore.
added:
  source/lib/python/pyconfig.h   pyconfig.h-20070423170404-kdpuudzcur4d2s4j-1
modified:
  .bzrignore                     svn-v2:17811@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-.bzrignore
  source/lib/python/config.m4    configure.in-20070423105804-3mrp9flhlt8pjj8v-11
=== added file 'source/lib/python/pyconfig.h'
--- a/source/lib/python/pyconfig.h	1970-01-01 00:00:00 +0000
+++ b/source/lib/python/pyconfig.h	2007-04-23 17:05:15 +0000
@@ -0,0 +1,1 @@
+#include "config.h"

=== modified file '.bzrignore'
--- a/.bzrignore	2007-03-13 21:00:27 +0000
+++ b/.bzrignore	2007-04-23 17:05:15 +0000
@@ -171,3 +171,8 @@
 source/bin/modules/*
 source/tests
 source/torture/unix/proto.h
+source/lib/python/Modules/config.c
+source/lib/python/Modules/Setup.local
+source/lib/python/Modules/Setup.local
+source/lib/python/Modules/Setup
+source/lib/python/Modules/Setup.config

=== modified file 'source/lib/python/config.m4'
--- a/source/lib/python/config.m4	2007-04-23 15:41:16 +0000
+++ b/source/lib/python/config.m4	2007-04-23 17:05:15 +0000
@@ -178,122 +178,6 @@
 CONFIGURE_MACOSX_DEPLOYMENT_TARGET=
 EXPORT_MACOSX_DEPLOYMENT_TARGET='#'
 
-# checks for alternative programs
-
-# compiler flags are generated in two sets, BASECFLAGS and OPT.  OPT is just
-# for debug/optimization stuff.  BASECFLAGS is for flags that are required
-# just to get things to compile and link.  Users are free to override OPT
-# when running configure or make.  The build should not break if they do.
-# BASECFLAGS should generally not be messed with, however.
-
-# XXX shouldn't some/most/all of this code be merged with the stuff later
-# on that fiddles with OPT and BASECFLAGS?
-AC_MSG_CHECKING(for --without-gcc)
-AC_ARG_WITH(gcc,
-            AC_HELP_STRING(--without-gcc,never use gcc),
-[
-	case $withval in
-	no)	CC=cc
-		without_gcc=yes;;
-	yes)	CC=gcc
-		without_gcc=no;;
-	*)	CC=$withval
-		without_gcc=$withval;;
-	esac], [
-	case $ac_sys_system in
-	AIX*)   CC=cc_r
-		without_gcc=;;
-	BeOS*)
-		case $BE_HOST_CPU in
-		ppc)
-			CC=mwcc
-			without_gcc=yes
-			BASECFLAGS="$BASECFLAGS -export pragma"
-			OPT="$OPT -O"
-			LDFLAGS="$LDFLAGS -nodup"
-			;;
-		x86)
-			CC=gcc
-			without_gcc=no
-			OPT="$OPT -O"
-			;;
-		*)
-			AC_MSG_ERROR([Unknown BeOS platform "$BE_HOST_CPU"])
-			;;
-		esac
-		AR="\$(srcdir)/lib/python/Modules/ar_beos"
-		RANLIB=:
-		;;
-    Monterey*)
-        RANLIB=:
-        without_gcc=;;
-	*)	without_gcc=no;;
-	esac])
-AC_MSG_RESULT($without_gcc)
-
-# If the user switches compilers, we can't believe the cache
-if test ! -z "$ac_cv_prog_CC" -a ! -z "$CC" -a "$CC" != "$ac_cv_prog_CC"
-then
-  AC_MSG_ERROR([cached CC is different -- throw away $cache_file
-(it is also a good idea to do 'make clean' before compiling)])
-fi
-
-AC_PROG_CC
-
-AC_SUBST(CXX)
-AC_SUBST(MAINCC)
-AC_MSG_CHECKING(for --with-cxx-main=<compiler>)
-AC_ARG_WITH(cxx_main,
-            AC_HELP_STRING([--with-cxx-main=<compiler>],
-                           [compile main() and link python executable with C++ compiler]),
-[
-	
-	case $withval in
-	no)	with_cxx_main=no
-		MAINCC='$(CC)';;
-	yes)	with_cxx_main=yes
-		MAINCC='$(CXX)';;
-	*)	with_cxx_main=yes
-		MAINCC=$withval
-		if test -z "$CXX"
-		then
-			CXX=$withval
-		fi;;
-	esac], [
-	with_cxx_main=no
-	MAINCC='$(CC)'
-])
-AC_MSG_RESULT($with_cxx_main)
-
-preset_cxx="$CXX"
-if test -z "$CXX"
-then
-        case "$CC" in
-        gcc)    AC_PATH_PROG(CXX, [g++], [g++], [notfound]) ;;
-        cc)     AC_PATH_PROG(CXX, [c++], [c++], [notfound]) ;;
-        esac
-	if test "$CXX" = "notfound"
-	then
-		CXX=""
-	fi
-fi
-if test -z "$CXX"
-then
-	AC_CHECK_PROGS(CXX, $CCC c++ g++ gcc CC cxx cc++ cl, notfound)
-	if test "$CXX" = "notfound"
-	then
-		CXX=""
-	fi
-fi
-if test "$preset_cxx" != "$CXX"
-then
-        AC_MSG_WARN([
-
-  By default, distutils will build C++ extension modules with "$CXX".
-  If this is not intended, then set CXX on the configure command line.
-  ])
-fi
-
 # Check for unsupported systems
 case $ac_sys_system/$ac_sys_release in
 Linux*/1*)
@@ -325,14 +209,6 @@
 esac
 
 
-AC_SUBST(LIBRARY)
-AC_MSG_CHECKING(LIBRARY)
-if test -z "$LIBRARY"
-then
-	LIBRARY='libpython$(VERSION).a'
-fi
-AC_MSG_RESULT($LIBRARY)
-
 # LDLIBRARY is the name of the library to link against (as opposed to the
 # name of the library into which to insert object files). BLDLIBRARY is also
 # the library to link against, usually. On Mac OS X frameworks, BLDLIBRARY
@@ -359,50 +235,8 @@
 LDLIBRARYDIR=''
 RUNSHARED=''
 
-# LINKCC is the command that links the python executable -- default is $(CC).
-# If CXX is set, and if it is needed to link a main function that was
-# compiled with CXX, LINKCC is CXX instead. Always using CXX is undesirable:
-# python might then depend on the C++ runtime
-# This is altered for AIX in order to build the export list before 
-# linking.
-AC_SUBST(LINKCC)
-AC_MSG_CHECKING(LINKCC)
-if test -z "$LINKCC"
-then
-	LINKCC='$(PURIFY) $(MAINCC)'
-	case $ac_sys_system in
-	AIX*)
-	   exp_extra="\"\""
-	   if test $ac_sys_release -ge 5 -o \
-		   $ac_sys_release -eq 4 -a `uname -r` -ge 2 ; then
-	       exp_extra="."
-	   fi
-	   LINKCC="\$(srcdir)/lib/python/Modules/makexp_aix lib/python/Modules/python.exp $exp_extra \$(LIBRARY); $LINKCC";;
-	Monterey64*)
-	   LINKCC="$LINKCC -L/usr/lib/ia64l64";;
-	esac
-fi
-AC_MSG_RESULT($LINKCC)
-
-enable_shared="yes"
-
 AC_MSG_CHECKING(LDLIBRARY)
 
-# MacOSX framework builds need more magic. LDLIBRARY is the dynamic
-# library that we build, but we do not want to link against it (we
-# will find it with a -framework option). For this reason there is an
-# extra variable BLDLIBRARY against which Python and the extension
-# modules are linked, BLDLIBRARY. This is normally the same as
-# LDLIBRARY, but empty for MacOSX framework builds.
-if test "$enable_framework"
-then
-  LDLIBRARY='$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'
-  RUNSHARED=DYLD_FRAMEWORK_PATH="`pwd`:$DYLD_FRAMEWORK_PATH"
-  BLDLIBRARY=''
-else
-  BLDLIBRARY='$(LDLIBRARY)'
-fi  
-
 # Other platforms follow
 if test $enable_shared = "yes"; then
   AC_DEFINE(Py_ENABLE_SHARED, 1, [Defined if Python is built as a shared library.])
@@ -469,15 +303,6 @@
 AC_SUBST(AR)
 AC_CHECK_PROGS(AR, ar aal, ar)
 
-AC_SUBST(SVNVERSION)
-AC_CHECK_PROG(SVNVERSION, svnversion, found, not-found)
-if test $SVNVERSION = found
-then
-	SVNVERSION="svnversion \$(srcdir)"
-else
-	SVNVERSION="echo exported"
-fi
-
 case $MACHDEP in
 bsdos*|hp*|HP*)
 	# install -d does not work on BSDI or HP-UX

