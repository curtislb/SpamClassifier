From perl6-all-return-81499-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 21 11:22:45 2007
Return-Path: <perl6-all-return-81499-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4LFMjqD000470
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 21 May 2007 11:22:45 -0400
Received: (qmail 16590 invoked by uid 514); 21 May 2007 15:22:41 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 16585 invoked from network); 21 May 2007 15:22:40 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: larry@cvs.develooper.com
To: perl6-language@perl.org
Subject: [svn:perl6-synopsis] r14398 - doc/trunk/design/syn
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Message-Id: <20070521152208.D193ECB9B8@x12.develooper.com>
Date: Mon, 21 May 2007 08:22:08 -0700 (PDT)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

Author: larry
Date: Mon May 21 08:22:06 2007
New Revision: 14398

Modified:
   doc/trunk/design/syn/S12.pod

Log:
Dehuffmanized "super" to "nonfinal" for clarity and parsimony.


Modified: doc/trunk/design/syn/S12.pod
==============================================================================
--- doc/trunk/design/syn/S12.pod	(original)
+++ doc/trunk/design/syn/S12.pod	Mon May 21 08:22:06 2007
@@ -12,9 +12,9 @@
 
   Maintainer: Larry Wall <larry@wall.org>
   Date: 27 Oct 2004
-  Last Modified: 19 May 2007
+  Last Modified: 21 May 2007
   Number: 12
-  Version: 51
+  Version: 52
 
 =head1 Overview
 
@@ -1649,7 +1649,7 @@
 
 =head1 Open vs Closed Classes
 
-By default, all classes in Perl are non-final ("super"), which means
+By default, all classes in Perl are non-final, which means
 you can potentially derive from them.  They are also open, which means
 you can add more methods to them, though you have to be explicit that
 that is what you're doing:
@@ -1672,16 +1672,16 @@
 which means that at the end of the main compilation (C<CHECK> time)
 the optimizer is allowed to look for candidate classes to close or
 finalize.  But anyone (including the main application) can request
-that any class stay open or super, and the class closer/finalizer
+that any class stay open or nonfinal, and the class closer/finalizer
 must honor that.
 
-    use class :open<Mammal Insect> :super<Str>
+    use class :open<Mammal Insect> :nonfinal<Str>
 
 These properties may also be specified on the class definition:
 
     class Mammal is open {...}
     class Insect is open {...}
-    class Str is super {...}
+    class Str is nonfinal {...}
 
 or by lexically scoped pragma around the class definition:
 
@@ -1691,7 +1691,7 @@
         class Insect {...}
     }
     {
-        use class :super;
+        use class :nonfinal;
         class Str {...}
     }
 

