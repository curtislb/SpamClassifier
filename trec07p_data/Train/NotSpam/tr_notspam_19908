From beginners-return-92495-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 16 21:58:23 2007
Return-Path: <beginners-return-92495-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5H1wLL9021588
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 16 Jun 2007 21:58:22 -0400
Received: (qmail 3698 invoked by uid 514); 17 Jun 2007 01:58:15 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3689 invoked from network); 17 Jun 2007 01:58:15 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 Jun 2007 01:58:15 -0000
Received: (qmail 18212 invoked by uid 225); 17 Jun 2007 01:58:14 -0000
Delivered-To: beginners@perl.org
Received: (qmail 18207 invoked by alias); 17 Jun 2007 01:58:14 -0000
X-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from ms-smtp-04.ohiordc.rr.com (HELO ms-smtp-04.ohiordc.rr.com) (65.24.5.138)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 16 Jun 2007 18:58:11 -0700
Received: from janus.tacocat.net (cpe-65-29-101-30.twmi.res.rr.com [65.29.101.30])
	by ms-smtp-04.ohiordc.rr.com (8.13.6/8.13.6) with ESMTP id l5H1w5qS011695;
	Sat, 16 Jun 2007 21:58:05 -0400 (EDT)
Received: from [192.168.1.247] (ws247.tacocat.net [192.168.1.247])
	by janus.tacocat.net (Postfix) with ESMTP id 20A5F4C064;
	Sat, 16 Jun 2007 21:58:05 -0400 (EDT)
In-Reply-To: <31086b240706161505t79df4bbcl32e9a16f69073d08@mail.gmail.com>
References: <46743A15.3030206@tacocat.net> <31086b240706161505t79df4bbcl32e9a16f69073d08@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <2D4BF6D2-9113-4803-BF43-98395E3E2A4E@tacocat.net>
Cc: "beginners perl" <beginners@perl.org>
Content-Transfer-Encoding: 7bit
From: Tom Allison <tom@tacocat.net>
Subject: Re: character encoding & regex
Date: Sat, 16 Jun 2007 21:58:03 -0400
To: Tom Phoenix <tom@stonehenge.com>
X-Mailer: Apple Mail (2.752.3)
X-Virus-Scanned: Symantec AntiVirus Scan Engine


On Jun 16, 2007, at 6:05 PM, Tom Phoenix wrote:

>
> On 6/16/07, Tom Allison <tom@tacocat.net> wrote:
>
>> I'm trying to do some regular expression on strings in email. They  
>> could be
>> encoded to something.  But I can't tell because I don't have a  
>> utf8 unicode
>> xterm window that will show me anything.  At best I get ?????a??   
>> and other
>> trash like that.  I think this is typical for ascii text  
>> renderings of two-bit
>> characters.
>
> But, I think what you're saying is, you want to be able to tell
> whether today's ?????a?? is the same mystery word that looked like
> ?????a?? in yesterday's mail, right? That is, you still won't know
> what it is, but at least you'll be able to say you saw it again.

This is exactly what I'm trying to do.  I just want to know if I've  
seen the same string previously.

>
>> I found something that SpamAssassin uses to convert all this "goo"  
>> into a
>> repeatable set of characters (which is all I'm really after) by  
>> running
>> something that looks like this:
>>
>> sub _quote_bytea {
>>      my ($str) = @_;
>>      my $buf = "";
>>      foreach my $char (split(//,$str)) {
>>          my $oct = sprintf ("%lo", ord($char));
>>          if (length( $oct ) < 2 ) { $oct = '0' . $oct; }
>>          if (length( $oct ) < 3 ) { $oct = '0' . $oct; }
>>          $buf .= '\\\\\\\\' . $oct;
>>      }
>>      return $buf;
>> }
>
> So that's somebody else's code, not yours? Does that code have any
> comments that explain what it's doing? What does "_quote_bytea" mean?
>
SpamAssassin.  But they have very few comments and not many of them  
are very clear.
>

> But it sounds to me as if you don't want that particular string; you
> want any function that gives you a lossless, repeatable coding of your
> input string, but unlike the input string, the desired result is
> composed only of printable characters. Yes? And presumably,
> compactness and readability are also desirable features of the encoded
> string.
>
>  # Encode everything except the "normal" ASCII
>  # characters. Normal includes newline and space, but no other
>  # inkless characters. Normal does not include backslash.
>  ###UNPORTABLE### Newline character is machine-dependent
>  $str =~ s{([^\n\x20-\x5b\x5d-\x7e])}{ sprintf "\\{%x}", ord($1) }seg;
>
> By now, I'm sure I must have sufficiently misunderstood either the
> task or Perl's abilities to accomplish it, so I'll leave it at this.
> Hope this helps!


This is about it.
Now I'm not familiar with the \x20.. notations but this gives me  
something to play with.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


