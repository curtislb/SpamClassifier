From perl6-all-return-81429-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 16 12:36:23 2007
Return-Path: <perl6-all-return-81429-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4GGaMqD020971
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 16 May 2007 12:36:22 -0400
Received: (qmail 23061 invoked by uid 514); 16 May 2007 16:36:18 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 23056 invoked from network); 16 May 2007 16:36:18 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of jerry.gay@gmail.com)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of jerry.gay@gmail.com designates 64.233.184.227 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=Eij1FLgoZYxMF4rgP+FRbBGqyxbeHTBrexC+mpWBJ2IEaRV7GJHwpNbWfgM6uis+2XSWZRdHBFKnIFIKISmFJYgyxi360LM5wCpvHIteR7ERVNiN5tzTT2D+8rPexlS0VDFjSfRmRj8aLJLp6sXMTCZH+zNRqUnNeQEvnbKgs2g=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=f3JUWwHCuJtkYR/RjW1YQgW+cwxxSz/0qPUR+HiWdLUavO0B0n9+RwQiNGimLlhBdL47BJjZfu3q39E2nMFeshuBba5ZxlkViURo+p9PEwvOtj/Y96u2g8LxhUTnKVJieRor16yOXlVvpXum6FE7QPzr77gXFwu20yDJ5SYB2wk=
Message-ID: <1d9a3f400705160845w56586b74w36e632f492c3ce5@mail.gmail.com>
Date: Wed, 16 May 2007 08:45:04 -0700
From: "jerry gay" <jerry.gay@gmail.com>
To: p2 <parrot-porters@perl.org>
Subject: FoTW: src/debug.c -- function and macro do the same thing
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_NEUTRAL

here's a macro to move to the next argument (kjs mentioned in an
earlier thread that this isn't a descriptive name)

  /* na(c) [Next Argument (Char pointer)]
   *
   * Moves the pointer to the next argument in the user input.
   */
  #define na(c) { \
      while (*c && !isspace((int) *c)) \
          c++; \
      while (*c && isspace((int) *c)) \
          c++; }

50 lines later, here's a function by a totally different name, which
does exactly the same thing:

  /*

  =item C<static const char* skip_command(const char* str)>

  Returns the pointer past the current debugger command. (This is an
  alternative to the C<na()> macro above.)

  =cut

  */

  static const char*
  skip_command(const char* str)
  {
      while (*str && !isspace((int) *str))
          str++;
      while (*str && isspace((int) *str))
          str++;
      return str;
  }

why, oh why? i suggest we drop the macro, but i'm willing to hear
arguments, because there may be a benefit i don't see.
~jerry

