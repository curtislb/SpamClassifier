From perl6-all-return-81182-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  8 18:14:17 2007
Return-Path: <perl6-all-return-81182-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l48MEGqD020982
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 8 May 2007 18:14:17 -0400
Received: (qmail 22217 invoked by uid 514); 8 May 2007 22:14:15 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 22212 invoked from network); 8 May 2007 22:14:14 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Tue, 8 May 2007 15:38:42 -0500
From: "Patrick R. Michaud" <pmichaud@pobox.com>
To: Allison Randal <allison@perl.org>
Cc: Klaas-Jan Stol <parrotcode@gmail.com>, perl6-internals@perl.org
Subject: Re: PIR syntax methods ambiguity
Message-ID: <20070508203842.GG30194@host.pmichaud.com>
References: <7b0e52b40705032235q20a0cce9pdd5c80cc6d08e2f4@mail.gmail.com> <4640B856.1020102@perl.org> <20070508183416.GC30194@host.pmichaud.com> <4640CC67.4060606@perl.org> <20070508192825.GF30194@host.pmichaud.com> <4640D1C3.9090808@perl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <4640D1C3.9090808@perl.org>
User-Agent: Mutt/1.4.2.1i
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host.pmichaud.com
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [32003 505] / [47 12]
X-AntiAbuse: Sender Address Domain - host.pmichaud.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

On Tue, May 08, 2007 at 12:38:43PM -0700, Allison Randal wrote:
> Patrick R. Michaud wrote:
> >
> >Well, since I've only come across a single case where the
> >method I needed to call was in a String PMC, I've never found
> >it annoying.  But again, perhaps that's just me and it really is
> >a big annoyance to other PIR programmers.  :-)
> 
> Oh, I was talking about a complete solution to the ambiguity: no string 
> method calls at all, only method PMC objects. So, eliminate these too:
> 
> object.methodname()
> object.'methodname'()
> object.$S1()
> 
> I guess your proposal was much more conservative.

Correct, I was only referring to the case where a PMC is a
String holding a method name -- I've not really come across that
as being a common case in the programming that I do.

Of the three cases given above, the only one that really looks 
ambiguous to me is the first one, because methodname could be 
either a bareword string or as a locally defined symbol.  For 
all the PIR code I work with I've been slowly-but-surely 
converting any instances of the first to either explicitly 
use quotes on the method name or (much less frequently) 
explicitly use a $P register.

Based on an informal frequency analysis of the PIR I've written
by hand (as well as the syntax used by other OO languages 
I typically frequent), it would seem that it would be preferable 
to have

   object.methodname()

as always meaning

   object.'methodname'()

and that special syntax characters be used for the case where
we're invoking a method by something other than a constant string
name.

   object.$P0()          # invoke method $P0 on object
   object.$S0()          # invoke method named $S0 on object
   object.??methodname() # left as an exercise for the architect to
                           decide what should go in place of '??'

Pm

