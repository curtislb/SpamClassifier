From beginners-return-91975-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 30 11:04:41 2007
Return-Path: <beginners-return-91975-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4UF4dhB015092
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 30 May 2007 11:04:40 -0400
Received: (qmail 9506 invoked by uid 514); 30 May 2007 15:04:30 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 9489 invoked from network); 30 May 2007 15:04:30 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 May 2007 15:04:30 -0000
Received: (qmail 16838 invoked by uid 225); 30 May 2007 15:04:28 -0000
Delivered-To: beginners@perl.org
Received: (qmail 16812 invoked by alias); 30 May 2007 15:04:25 -0000
X-Spam-Status: No, hits=0.5 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from grant.njpservices.com (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 30 May 2007 08:04:16 -0700
Received: from [85.92.161.130] (85-92-161-130.eurisp.net [85.92.161.130] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l4UF43F04827;
	Wed, 30 May 2007 16:04:04 +0100
Message-ID: <465D925F.30101@350.com>
Date: Wed, 30 May 2007 16:03:59 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: beginners@perl.org
CC: Sharan Basappa <sharan.basappa@gmail.com>
Subject: Re: zero width lookahead match
References: <8a31202a0705300457l38219d07s8a236d11af4e2db0@mail.gmail.com>
In-Reply-To: <8a31202a0705300457l38219d07s8a236d11af4e2db0@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Sharan Basappa wrote:
>
> Hi All,
> 
> I have some background working with scanners built from Flex. And I have
> used lookahead capability of flex many a times. But I dont understand the
> meaning of ZERO in zero lookahead match rule i.e. (?=pattern)
> 
> For example, to capture overlapping 3 digit patterns from string $str =
> 123456
> I use the regex @store = $str =~ m/(?=(\d\d\d))/g;
> So here the regex engine actually looks ahead by chars digits.

As far as lookahead expressions are concerned, Perl functions identically to
Flex. It is called zero-width lookahead because it matches a zero-width
/position/ in the string instead of a sequence of characters. If I write

'123456' =~ /\d\d\d(...)/

then '456' will be captured as the first three characters were consumed by the
preceding pattern. However if I write

'123456' =~ /(?=\d\d\d)(...)/

then '123' will be captured instead because the lookahead pattern has zero width.

> The other question I have is - how does regex engine decide that it has to
> move further its scanner by 1 character everytime since I get output 123 
> 234
> 345 456
> when I run this script ?

The engine moves as far through your target string as it needs to to find a new
match. If I write

'1B3D5F' =~ /(?=(.\d.))/g;

then the engine will find a match at only every second character, and if I use
a much simpler zero-width match, just

'ABCDEF' =~ //g

then the regex will match seven times - at the beginning and end and between
every pair of characters - so the more complex zero-width match you have written
will match at all of the those places as long as there are three digits following.

HTH,

Rob


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


