From perl6-all-return-80779-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Apr 22 11:37:28 2007
Return-Path: <perl6-all-return-80779-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3MFbQ0I021616
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 22 Apr 2007 11:37:27 -0400
Received: (qmail 29528 invoked by uid 514); 22 Apr 2007 15:37:01 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29523 invoked from network); 22 Apr 2007 15:37:00 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Leopold Toetsch <lt@toetsch.at>
To: Patrick Rutkowski <rutski89@gmail.com>
Subject: Re: I Don't Understand The Context Allocation/Destruction Code
Date: Sun, 22 Apr 2007 17:36:34 +0200
User-Agent: KMail/1.9.1
Cc: Joshua Isom <jrisom@gmail.com>, chromatic <chromatic@wgz.org>,
   perl6-internals@perl.org
References: <200704211824.18554.chromatic@wgz.org> <200704221156.34317.lt@toetsch.at> <61275CFA-2D22-4D24-8A50-5E78E7D6FB02@gmail.com>
In-Reply-To: <61275CFA-2D22-4D24-8A50-5E78E7D6FB02@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704221736.35220.lt@toetsch.at>
X-Scan-Signature: a945251e4abe04b6cd850171eb814f55
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 741
Lines: 23

Am Sonntag, 22. April 2007 14:40 schrieb Patrick Rutkowski:
> Ok, so I see now that reg_alloc is rounded up to a multiple of 8 by
> the following two lines:
>
>    /*code*/ const int slot = (reg_alloc + 7) >> 3;
>    /*code*/ reg_alloc = slot << 3;
>
> However, this still begs the question of what the slot variable is
> for. Clearly it's being used as an index into
> interp->ctx_mem.free_list; but its value, which is always set to
> reg_alloc/8, seems to me to be rather arbitrary (either that or it has
> some meaning but I just don't know any better).

Alloc size     slot
  0, 4           0
  8, 12          1
 16, 20          2
 ...

(As this is for registers, the sizes are not more fine grained).

That's all.
leo                 

