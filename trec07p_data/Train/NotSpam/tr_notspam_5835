From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Sat Apr 28 04:01:10 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3S81A6w004675
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 28 Apr 2007 04:01:10 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id A7BC3162C19
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 28 Apr 2007 08:01:09 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.9 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 620)
	id 0A54A162AC1; Sat, 28 Apr 2007 08:00:53 +0000 (GMT)
To: samba-cvs@samba.org
From: metze@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070428080053.0A54A162AC1@lists.samba.org>
Date: Sat, 28 Apr 2007 08:00:53 +0000 (GMT)
Subject: svn commit: samba r22545 - in
	branches/SAMBA_4_0/source/torture/local: .
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: RO
Content-Length: 4997
Lines: 158

Author: metze
Date: 2007-04-28 08:00:51 +0000 (Sat, 28 Apr 2007)
New Revision: 22545

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22545

Log:
fix formating and a compiler warning

metze 
Modified:
   branches/SAMBA_4_0/source/torture/local/share.c


Changeset:
Modified: branches/SAMBA_4_0/source/torture/local/share.c
===================================================================
--- branches/SAMBA_4_0/source/torture/local/share.c	2007-04-28 07:31:19 UTC (rev 22544)
+++ branches/SAMBA_4_0/source/torture/local/share.c	2007-04-28 08:00:51 UTC (rev 22545)
@@ -25,8 +25,8 @@
 #include "torture/torture.h"
 
 static bool test_list_empty(struct torture_context *tctx, 
-							const void *tcase_data, 
-							const void *test_data)
+			    const void *tcase_data, 
+			    const void *test_data)
 {
 	struct share_context *ctx = discard_const(tcase_data);
 	int count;
@@ -39,8 +39,8 @@
 }
 
 static bool test_create(struct torture_context *tctx, 
-							const void *tcase_data, 
-							const void *test_data)
+			const void *tcase_data, 
+			const void *test_data)
 {
 	struct share_context *ctx = discard_const(tcase_data);
 	int count;
@@ -77,8 +77,8 @@
 
 
 static bool test_create_invalid(struct torture_context *tctx, 
-							const void *tcase_data, 
-							const void *test_data)
+				const void *tcase_data, 
+				const void *test_data)
 {
 	struct share_context *ctx = discard_const(tcase_data);
 	NTSTATUS status;
@@ -89,19 +89,19 @@
 		torture_skip(tctx, "Not supported by backend");
 
 	torture_assert_ntstatus_equal(tctx, NT_STATUS_INVALID_PARAMETER, 
-								  status,
-							   "create_share failed");
+				      status,
+				      "create_share failed");
 
 	torture_assert_ntstatus_equal(tctx, NT_STATUS_INVALID_PARAMETER, 
-								  share_create(ctx, NULL, NULL, 0),
-							   "create_share failed");
+				      share_create(ctx, NULL, NULL, 0),
+				      "create_share failed");
 
 	return true;
 }
 
 static bool test_share_remove_invalid(struct torture_context *tctx, 
-							const void *tcase_data, 
-							const void *test_data)
+				      const void *tcase_data, 
+				      const void *test_data)
 {
 	struct share_context *ctx = discard_const(tcase_data);
 	NTSTATUS status;
@@ -111,8 +111,7 @@
 	if (NT_STATUS_EQUAL(status, NT_STATUS_NOT_IMPLEMENTED))
 		torture_skip(tctx, "Not supported by backend");
 
-	torture_assert_ntstatus_equal(ctx, status, NT_STATUS_UNSUCCESSFUL, 
-								  "remove fails");
+	torture_assert_ntstatus_equal(tctx, status, NT_STATUS_UNSUCCESSFUL, "remove fails");
 
 	return true;
 }
@@ -120,8 +119,8 @@
 
 
 static bool test_share_remove(struct torture_context *tctx, 
-							const void *tcase_data, 
-							const void *test_data)
+			      const void *tcase_data, 
+			      const void *test_data)
 {
 	struct share_context *ctx = discard_const(tcase_data);
 	struct share_info inf[] = { 
@@ -135,18 +134,16 @@
 	if (NT_STATUS_EQUAL(status, NT_STATUS_NOT_IMPLEMENTED))
 		torture_skip(tctx, "Not supported by backend");
 
-	torture_assert_ntstatus_ok(tctx, status,
-							   "create_share failed");
+	torture_assert_ntstatus_ok(tctx, status, "create_share failed");
 
-	torture_assert_ntstatus_ok(tctx, share_remove(ctx, "blie"), 
-							   "remove failed");
+	torture_assert_ntstatus_ok(tctx, share_remove(ctx, "blie"), "remove failed");
 
 	return true;
 }
 
 static bool test_double_create(struct torture_context *tctx, 
-							const void *tcase_data, 
-							const void *test_data)
+			       const void *tcase_data, 
+			       const void *test_data)
 {
 	struct share_context *ctx = discard_const(tcase_data);
 	struct share_info inf[] = { 
@@ -160,12 +157,11 @@
 	if (NT_STATUS_EQUAL(status, NT_STATUS_NOT_IMPLEMENTED))
 		torture_skip(tctx, "Not supported by backend");
 
-	torture_assert_ntstatus_ok(tctx, status,
-							   "create_share failed");
+	torture_assert_ntstatus_ok(tctx, status, "create_share failed");
 
 	torture_assert_ntstatus_equal(tctx, NT_STATUS_UNSUCCESSFUL, 
-								  share_create(ctx, "bla", inf, 2),
-							   "create_share failed");
+				      share_create(ctx, "bla", inf, 2),
+				      "create_share failed");
 
 	return true;
 }
@@ -176,8 +172,7 @@
 	torture_tcase_add_test(tcase, "share_create", test_create, NULL);
 	torture_tcase_add_test(tcase, "share_remove", test_share_remove, NULL);
 	torture_tcase_add_test(tcase, "share_remove_invalid", test_share_remove_invalid, NULL);
-	torture_tcase_add_test(tcase, "share_create_invalid", test_create_invalid, 
-						   NULL);
+	torture_tcase_add_test(tcase, "share_create_invalid", test_create_invalid, NULL);
 	torture_tcase_add_test(tcase, "share_double_create", test_double_create, NULL);
 }
 
@@ -199,8 +194,7 @@
 
 struct torture_suite *torture_local_share(TALLOC_CTX *mem_ctx)
 {
-	struct torture_suite *suite = torture_suite_create(mem_ctx, 
-													   "SHARE");
+	struct torture_suite *suite = torture_suite_create(mem_ctx, "SHARE");
 	struct torture_tcase *tcase;
 
 	share_init();

