From beginners-return-90823-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 11 10:51:06 2007
Return-Path: <beginners-return-90823-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3BEp50I018025
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 11 Apr 2007 10:51:05 -0400
Received: (qmail 23671 invoked by uid 514); 11 Apr 2007 14:50:37 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 23662 invoked from network); 11 Apr 2007 14:50:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 11 Apr 2007 14:50:37 -0000
Received: (qmail 17145 invoked by uid 225); 11 Apr 2007 14:50:37 -0000
Delivered-To: beginners@perl.org
Received: (qmail 17139 invoked by alias); 11 Apr 2007 14:50:36 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 66.249.92.172 as permitted sender)
Received: from ug-out-1314.google.com (HELO ug-out-1314.google.com) (66.249.92.172)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 11 Apr 2007 07:50:31 -0700
Received: by ug-out-1314.google.com with SMTP id s2so122042uge
        for <beginners@perl.org>; Wed, 11 Apr 2007 07:50:26 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=Ckh7YKq+POz+Sz20JWZDp4dU2u2TJnb92c6byVpojB7xGcEh5/KdZ3G6fuzHZNezBxG4KqFnl1AZmhgyBueYTXu+gb/ce8aJ6qeCrH4QLSlFOOyI6vEWMKmgEEj3vK0PtwJmvAY29R7tmA9acgLunFbsdFK14w25MeqFolpPYDs=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=pOsGw6SNU9Fe+DL3oWtrDlIyzV0R5RXddH6x6C9cO2ilPqDFct98S69QFeFI5zDloK0eFRm8iz0X576d8IHDN0PKWyrxJbgg3+zTD7OKAYzL2ecZRTHRJN+aAk+u8hDAWUfKBywxf4cLUTN6zY5rGXApvVX232Orl3A2Qpy1l4c=
Received: by 10.82.186.5 with SMTP id j5mr948056buf.1176303025992;
        Wed, 11 Apr 2007 07:50:25 -0700 (PDT)
Received: by 10.82.167.6 with HTTP; Wed, 11 Apr 2007 07:50:25 -0700 (PDT)
Message-ID: <31086b240704110750t6155976amc67eba75add2b572@mail.gmail.com>
Date: Wed, 11 Apr 2007 07:50:25 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Jen mlists" <practicalperl@gmail.com>
Subject: Re: CGI Header
Cc: "beginners perl" <beginners@perl.org>
In-Reply-To: <fbe35f750704110215y4633b15y17d8175a862b9b21@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fbe35f750704102127i6dccef04gadd22ff949d8479b@mail.gmail.com>
	 <31086b240704102136y5d467bddk53bf77a79e0a5de7@mail.gmail.com>
	 <fbe35f750704110215y4633b15y17d8175a862b9b21@mail.gmail.com>
X-Google-Sender-Auth: 5a585bb021f49aad
Status: O
Content-Length: 1093
Lines: 38

On 4/11/07, Jen mlists <practicalperl@gmail.com> wrote:

> But my error_report function is located in a package,not the main script.

> Then how to use a global variable for label it?

You may use a true global by giving its full name, say
$main::header_is_complete, even from another package and under 'use
strict'.

Or you could make a subroutine that you call whenever you need to make
sure that the header is output, something like this:

  my $header_is_complete;  # starts out false

  sub ensure_header {
    return if $header_is_complete;
    my($q) = @_;
    print $q->header();
    $header_is_complete = 1;
  }

Because the 'my' variable is declared outside the subroutine, it
retains its value from one invocation to the next. Its scope continues
until the end of the enclosing file (since there's no enclosing
block), so it's available to some code even though it's not globally
accessible.

Cheers!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


