From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Thu May 10 15:31:31 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4AJVVqD013464
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 10 May 2007 15:31:31 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 6D0DC1638C7
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 10 May 2007 19:31:29 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.9 required=3.8 tests=AWL, BAYES_00, FORGED_RCVD_HELO,
	NO_REAL_NAME,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-technical@lists.samba.org
Delivered-To: samba-technical@lists.samba.org
Received: from amber.vis-av.com (dsl092-075-243.bos1.dsl.speakeasy.net
	[66.92.75.243]) by lists.samba.org (Postfix) with SMTP id 88135162AE9
	for <samba-technical@lists.samba.org>;
	Thu, 10 May 2007 19:31:02 +0000 (GMT)
Received: (qmail 17540 invoked from network); 10 May 2007 19:16:35 -0000
Received: from unknown (HELO oberon-mail.internal) (192.168.1.71)
	by amber.internal with SMTP; 10 May 2007 19:16:35 -0000
Received: (nullmailer pid 21572 invoked by uid 0);
	Thu, 10 May 2007 19:16:35 -0000
From: derrell@samba.org
To: Jeremy Allison <jra@samba.org>
References: <8xbx4g0u.fsf@oberon-mail.internal> <20070510190847.GA19329@samba1>
Date: Thu, 10 May 2007 15:16:35 -0400
In-Reply-To: <20070510190847.GA19329@samba1> (Jeremy Allison's message of
	"Thu, 10 May 2007 12:08:47 -0700")
Message-ID: <abwccwvg.fsf@oberon-mail.internal>
User-Agent: Gnus/5.110004 (No Gnus v0.4) XEmacs/21.4.17 (linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: samba-technical <samba-technical@lists.samba.org>
Subject: Re: readahead() which is Linux-only vs. posix_fadvise()
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: derrell@samba.org
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Jeremy Allison <jra@samba.org> writes:

> On Wed, May 09, 2007 at 09:35:29PM -0400, derrell@samba.org wrote:
>> 
>> The only place that readahead() is used, I think, is in vfs_readahead.c.
>> It might make sense for the maintainer of this module to look into using
>> posix_fadvise() instead of readahead().
>
> Did you look at the code here :-) ? I'm guessing not....

Clearly I hadn't noticed that further down it tries posix_fadvise().  Thanks
for pointing it out.  Based on the fact that there's possibly no reliable
declaration for readahead() and that there is a POSIX-compliant alternative,
would it make sense to swap the order... try to use posix_fadvise() first, and
if it doesn't exist, then look for readahead()?  (Also, since Linux provides
posix_fadvise(), maybe there's no reason for readahead() at all?)

Derrell


> #if defined(HAVE_LINUX_READAHEAD)
>                 int err = readahead(fromfd, offset, (size_t)rhd->len);
>                 DEBUG(10,("readahead_sendfile: readahead on fd %u,
> offset %llu, len %u returned %d\n",
>                         (unsigned int)fromfd,
>                         (unsigned long long)offset,
>                         (unsigned int)rhd->len,
>                         err ));
> #elif defined(HAVE_POSIX_FADVISE)
>                 int err = posix_fadvise(fromfd, offset, (off_t)rhd->len,
> POSIX_FADV_WILLNEED);
>                 DEBUG(10,("readahead_sendfile: posix_fadvise on fd %u,
> offset %llu, len %u returned %d\n",
>                         (unsigned int)fromfd,
>                         (unsigned long long)offset,
>                         (unsigned int)rhd->len,
>                         err ));
> #else
>                 if (!rhd->didmsg) {
>                         DEBUG(0,("readahead_sendfile: no readahead on
> this platform\n"));
>                         rhd->didmsg = True;
>                 }
> #endif
>

-- 

