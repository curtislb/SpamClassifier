From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Thu Apr 19 10:22:53 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3JEMr0I025568
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 10:22:53 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 82402163D2F
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 14:22:28 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 620)
	id 51346162BC1; Thu, 19 Apr 2007 14:21:57 +0000 (GMT)
To: samba-cvs@samba.org
From: metze@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070419142157.51346162BC1@lists.samba.org>
Date: Thu, 19 Apr 2007 14:21:57 +0000 (GMT)
Subject: svn commit: samba r22373 - in branches/SAMBA_4_0/source/lib/util: .
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 2371
Lines: 102

Author: metze
Date: 2007-04-19 14:21:56 +0000 (Thu, 19 Apr 2007)
New Revision: 22373

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22373

Log:
move in_list() to util_strlist.c to remove the dependency
from util.o to next_token() and strcasecmp_m()

with this the pidl tests link better on some hosts

metze
Modified:
   branches/SAMBA_4_0/source/lib/util/util_str.c
   branches/SAMBA_4_0/source/lib/util/util_strlist.c


Changeset:
Modified: branches/SAMBA_4_0/source/lib/util/util_str.c
===================================================================
--- branches/SAMBA_4_0/source/lib/util/util_str.c	2007-04-19 14:14:11 UTC (rev 22372)
+++ branches/SAMBA_4_0/source/lib/util/util_str.c	2007-04-19 14:21:56 UTC (rev 22373)
@@ -25,7 +25,6 @@
 #include "includes.h"
 #include "libcli/raw/smb.h"
 #include "pstring.h"
-#include "lib/ldb/include/ldb.h"
 #include "system/locale.h"
 
 /**
@@ -247,29 +246,6 @@
 }
 
 /**
- Check if a string is part of a list.
-**/
-_PUBLIC_ BOOL in_list(const char *s, const char *list, BOOL casesensitive)
-{
-	pstring tok;
-	const char *p=list;
-
-	if (!list)
-		return(False);
-
-	while (next_token(&p,tok,LIST_SEP,sizeof(tok))) {
-		if (casesensitive) {
-			if (strcmp(tok,s) == 0)
-				return(True);
-		} else {
-			if (strcasecmp_m(tok,s) == 0)
-				return(True);
-		}
-	}
-	return(False);
-}
-
-/**
  Set a string value, allocing the space for the string
 **/
 static BOOL string_init(char **dest,const char *src)

Modified: branches/SAMBA_4_0/source/lib/util/util_strlist.c
===================================================================
--- branches/SAMBA_4_0/source/lib/util/util_strlist.c	2007-04-19 14:14:11 UTC (rev 22372)
+++ branches/SAMBA_4_0/source/lib/util/util_strlist.c	2007-04-19 14:21:56 UTC (rev 22373)
@@ -20,6 +20,8 @@
 */
 
 #include "includes.h"
+#include "pstring.h"
+#include "system/locale.h"
 
 /**
  * @file
@@ -298,3 +300,26 @@
 	}
 	return False;
 }
+
+/**
+ Check if a string is part of a list.
+**/
+_PUBLIC_ BOOL in_list(const char *s, const char *list, BOOL casesensitive)
+{
+	pstring tok;
+	const char *p=list;
+
+	if (!list)
+		return(False);
+
+	while (next_token(&p,tok,LIST_SEP,sizeof(tok))) {
+		if (casesensitive) {
+			if (strcmp(tok,s) == 0)
+				return(True);
+		} else {
+			if (strcasecmp_m(tok,s) == 0)
+				return(True);
+		}
+	}
+	return(False);
+}

