From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon Jun 18 20:16:07 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5J0G7L9023421
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 18 Jun 2007 20:16:07 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 43B77162BDE
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 19 Jun 2007 00:16:05 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.2 required=3.8 tests=ALL_TRUSTED,AWL,BAYES_00,
	RCVD_IN_DSBL,UPPERCASE_25_50 autolearn=ham version=3.1.7
X-Original-To: samba-technical@samba.org
Delivered-To: samba-technical@samba.org
Received: from [127.0.0.1] (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 9A8B8162B6F
	for <samba-technical@samba.org>; Tue, 19 Jun 2007 00:14:54 +0000 (GMT)
From: Andrew Bartlett <abartlet@samba.org>
To: Multiple recipients of list SAMBA-TECHNICAL <samba-technical@samba.org>
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature";
	boundary="=-J+HCy1s1jkJo9rCtom+1"
Date: Tue, 19 Jun 2007 10:14:53 +1000
Message-Id: <1182212093.3538.15.camel@naomi>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.2 (2.10.2-2.fc7) 
Subject: [SAMBA4] Faster schema loading
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org


--=-J+HCy1s1jkJo9rCtom+1
Content-Type: multipart/mixed; boundary="=-Fpsx9mKKkbBiLZ7z4+Oe"


--=-Fpsx9mKKkbBiLZ7z4+Oe
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

Metze posted me a patch (schema-loading-13.diff), to load the schema at
LDB startup, which I hope to use for MMC write support.

The problem, as metze pointed out, is that it is slow.

In the attached patch, for which I would like suggestions as to cleaner
methods, I now keep a global variable, with the loaded schema.=20

How should we better control this?  In particular, we only really want
to do this for smbd - but what is the best way to tell that we are 'in
smbd'?  Likewise, we will at some point need invalidation.

make quickest times:

33sec without
174sec with
39sec with global variable hack

Andrew Bartlett
--=20
Andrew Bartlett
http://samba.org/~abartlet/
Authentication Developer, Samba Team           http://samba.org
Samba Developer, Red Hat Inc.

--=-Fpsx9mKKkbBiLZ7z4+Oe
Content-Disposition: attachment; filename=schema-loading-13-global.diff
Content-Type: text/x-patch; name=schema-loading-13-global.diff; charset=UTF-8
Content-Transfer-Encoding: base64

SW5kZXg6IHNjcmlwdGluZy9saWJqcy9wcm92aXNpb24uanMNCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCi0tLSBzY3Jp
cHRpbmcvbGlianMvcHJvdmlzaW9uLmpzCShyZXZpc2lvbiAyMzUzNikNCisrKyBzY3JpcHRpbmcv
bGlianMvcHJvdmlzaW9uLmpzCSh3b3JraW5nIGNvcHkpDQpAQCAtNjExLDcgKzYxMSw3IEBADQog
CXZhciBtb2RpZnlfb2sgPSBzZXR1cF9sZGJfbW9kaWZ5KCJwcm92aXNpb25fc2NoZW1hX2Jhc2Vk
bl9tb2RpZnkubGRpZiIsIGluZm8sIHNhbWRiKTsNCiAJaWYgKCFtb2RpZnlfb2spIHsNCiAJCWlm
ICghYWRkX29rKSB7DQotCQkJbWVzc2FnZSgiRmFpbGVkIHRvIGJvdGggYWRkIGFuZCBtb2RpZnkg
c2NoZW1hIGRuOiArIHNhbWRiLmVycnN0cmluZygpICsgIlxuIik7DQorCQkJbWVzc2FnZSgiRmFp
bGVkIHRvIGJvdGggYWRkIGFuZCBtb2RpZnkgc2NoZW1hIGRuOiIgKyBzYW1kYi5lcnJzdHJpbmco
KSArICJcbiIpOw0KIAkJCW1lc3NhZ2UoIlBlcmhhcHMgeW91IG5lZWQgdG8gcnVuIHRoZSBwcm92
aXNpb24gc2NyaXB0IHdpdGggdGhlIC0tbGRhcC1iYXNlLWRuIG9wdGlvbiwgYW5kIGFkZCB0aGlz
IHJlY29yZCB0byB0aGUgYmFja2VuZCBtYW51YWxseVxuIik7IA0KIAkJCWFzc2VydChtb2RpZnlf
b2spOw0KIAkJfQ0KQEAgLTc0NCw3ICs3NDQsNyBAQA0KIAl2YXIgbW9kaWZ5X29rID0gc2V0dXBf
bGRiX21vZGlmeSgicHJvdmlzaW9uX3NjaGVtYV9iYXNlZG5fbW9kaWZ5LmxkaWYiLCBpbmZvLCBz
YW1kYik7DQogCWlmICghbW9kaWZ5X29rKSB7DQogCQlpZiAoIWFkZF9vaykgew0KLQkJCW1lc3Nh
Z2UoIkZhaWxlZCB0byBib3RoIGFkZCBhbmQgbW9kaWZ5IHNjaGVtYSBkbjogKyBzYW1kYi5lcnJz
dHJpbmcoKSArICJcbiIpOw0KKwkJCW1lc3NhZ2UoIkZhaWxlZCB0byBib3RoIGFkZCBhbmQgbW9k
aWZ5IHNjaGVtYSBkbjogIiArIHNhbWRiLmVycnN0cmluZygpICsgIlxuIik7DQogCQkJbWVzc2Fn
ZSgiUGVyaGFwcyB5b3UgbmVlZCB0byBydW4gdGhlIHByb3Zpc2lvbiBzY3JpcHQgd2l0aCB0aGUg
LS1sZGFwLWJhc2UtZG4gb3B0aW9uLCBhbmQgYWRkIHRoaXMgcmVjb3JkIHRvIHRoZSBiYWNrZW5k
IG1hbnVhbGx5XG4iKTsgDQogCQkJYXNzZXJ0KG1vZGlmeV9vayk7DQogCQl9DQpAQCAtODgyLDE2
ICs4ODIsMTggQEANCiAJCQkJCSJleHRlbmRlZF9kbiIsDQogCQkJCQkiYXNxIiwNCiAJCQkJCSJz
YW1sZGIiLA0KLQkJCQkJInBhc3N3b3JkX2hhc2giLA0KIAkJCQkJIm9wZXJhdGlvbmFsIiwNCiAJ
CQkJCSJvYmplY3RjbGFzcyIsDQogCQkJCQkicmRuX25hbWUiLA0KIAkJCQkJInNob3dfZGVsZXRl
ZCIsDQogCQkJCQkicGFydGl0aW9uIik7DQogCXN1Ym9iai5NT0RVTEVTX0xJU1QgPSBqb2luKCIs
IiwgbW9kdWxlc19saXN0KTsNCi0Jc3Vib2JqLkRPTUFJTkROX01PRCA9ICJvYmplY3RndWlkIjsN
Ci0Jc3Vib2JqLkNPTkZJR0ROX01PRCA9ICJvYmplY3RndWlkIjsNCi0Jc3Vib2JqLlNDSEVNQURO
X01PRCA9ICJvYmplY3RndWlkIjsNCisJc3Vib2JqLkRPTUFJTkROX01PRCA9ICJwZGNfZnNtbyxw
YXNzd29yZF9oYXNoIjsNCisJc3Vib2JqLkNPTkZJR0ROX01PRCA9ICJuYW1pbmdfZnNtbyI7DQor
CXN1Ym9iai5TQ0hFTUFETl9NT0QgPSAic2NoZW1hX2ZzbW8iOw0KKwlzdWJvYmouRE9NQUlORE5f
TU9EMiA9ICIsb2JqZWN0Z3VpZCI7DQorCXN1Ym9iai5DT05GSUdETl9NT0QyID0gIixvYmplY3Rn
dWlkIjsNCisJc3Vib2JqLlNDSEVNQUROX01PRDIgPSAiLG9iamVjdGd1aWQiOw0KIA0KIAlzdWJv
YmouRVhURU5TSUJMRU9CSkVDVCA9ICIjIG5vIG9iamVjdENsYXNzOiBleHRlbnNpYmxlT2JqZWN0
IGZvciBsb2NhbCBsZGIiOw0KIAlzdWJvYmouQUNJCQk9ICIjIG5vIGFjaSBmb3IgbG9jYWwgbGRi
IjsNCkluZGV4OiBsaWIvZGJfd3JhcC5jDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0gbGliL2RiX3dyYXAuYwko
cmV2aXNpb24gMjM1MzYpDQorKysgbGliL2RiX3dyYXAuYwkod29ya2luZyBjb3B5KQ0KQEAgLTM1
LDYgKzM1LDcgQEANCiAjaW5jbHVkZSAibGliL2xkYi9pbmNsdWRlL2xkYl9lcnJvcnMuaCINCiAj
aW5jbHVkZSAibGliL2xkYi9zYW1iYS9sZGlmX2hhbmRsZXJzLmgiDQogI2luY2x1ZGUgImRiX3dy
YXAuaCINCisjaW5jbHVkZSAiZHNkYi9zYW1kYi9zYW1kYi5oIg0KIA0KIHN0YXRpYyBzdHJ1Y3Qg
dGRiX3dyYXAgKnRkYl9saXN0Ow0KIA0KQEAgLTEyNiw2ICsxMjcsMTAgQEANCiAJCXRhbGxvY19m
cmVlKGxkYik7DQogCQlyZXR1cm4gTlVMTDsNCiAJfQ0KKwkNCisJaWYgKHN0cmNtcChscF9zYW1f
dXJsKCksIHVybCkgPT0gMCkgew0KKwkgIGRzZGJfc2V0X2dsb2JhbF9zY2hlbWEobGRiKTsNCisJ
fQ0KIA0KIAlyZXQgPSBsZGJfcmVnaXN0ZXJfc2FtYmFfaGFuZGxlcnMobGRiKTsNCiAJaWYgKHJl
dCA9PSAtMSkgew0KSW5kZXg6IGRzZGIvc2NoZW1hL3NjaGVtYV9pbml0LmMNCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
Ci0tLSBkc2RiL3NjaGVtYS9zY2hlbWFfaW5pdC5jCShyZXZpc2lvbiAyMzUzNikNCisrKyBkc2Ri
L3NjaGVtYS9zY2hlbWFfaW5pdC5jCSh3b3JraW5nIGNvcHkpDQpAQCAtOTY0LDYgKzk2NCwyMiBA
QA0KIAlyZXR1cm4gTERCX1NVQ0NFU1M7DQogfQ0KIA0KK3N0YXRpYyBzdHJ1Y3QgZHNkYl9zY2hl
bWEgKmdsb2JhbF9zY2hlbWE7DQorDQoraW50IGRzZGJfc2V0X2dsb2JhbF9zY2hlbWEoc3RydWN0
IGxkYl9jb250ZXh0ICpsZGIpDQorew0KKwlpbnQgcmV0Ow0KKwlpZiAoIWdsb2JhbF9zY2hlbWEp
IHsNCisJICByZXR1cm4gTERCX1NVQ0NFU1M7DQorCX0NCisJcmV0ID0gbGRiX3NldF9vcGFxdWUo
bGRiLCAiZHNkYl9zY2hlbWEiLCBnbG9iYWxfc2NoZW1hKTsNCisJaWYgKHJldCAhPSBMREJfU1VD
Q0VTUykgew0KKwkJcmV0dXJuIHJldDsNCisJfQ0KKw0KKwlyZXR1cm4gTERCX1NVQ0NFU1M7DQor
fQ0KKw0KIGNvbnN0IHN0cnVjdCBkc2RiX3NjaGVtYSAqZHNkYl9nZXRfc2NoZW1hKHN0cnVjdCBs
ZGJfY29udGV4dCAqbGRiKQ0KIHsNCiAJY29uc3Qgdm9pZCAqcDsNCkBAIC05ODMsNiArOTk5LDI2
IEBADQogCXJldHVybiBzY2hlbWE7DQogfQ0KIA0KK3ZvaWQgZHNkYl9tYWtlX3NjaGVtYV9nbG9i
YWwoc3RydWN0IGxkYl9jb250ZXh0ICpsZGIpDQorew0KKwljb25zdCB2b2lkICpwOw0KKwljb25z
dCBzdHJ1Y3QgZHNkYl9zY2hlbWEgKnNjaGVtYTsNCisNCisJLyogc2VlIGlmIHdlIGhhdmUgYSBj
YWNoZWQgY29weSAqLw0KKwlwID0gbGRiX2dldF9vcGFxdWUobGRiLCAiZHNkYl9zY2hlbWEiKTsN
CisJaWYgKCFwKSB7DQorCQlyZXR1cm47DQorCX0NCisNCisJc2NoZW1hID0gdGFsbG9jX2dldF90
eXBlKHAsIHN0cnVjdCBkc2RiX3NjaGVtYSk7DQorCWlmICghc2NoZW1hKSB7DQorCQlyZXR1cm47
DQorCX0NCisNCisJdGFsbG9jX3N0ZWFsKE5VTEwsIHNjaGVtYSk7DQorCWdsb2JhbF9zY2hlbWEg
PSBzY2hlbWE7DQorfQ0KKw0KIFdFUlJPUiBkc2RiX2F0dGFjaF9zY2hlbWFfZnJvbV9sZGlmX2Zp
bGUoc3RydWN0IGxkYl9jb250ZXh0ICpsZGIsIGNvbnN0IGNoYXIgKnBmLCBjb25zdCBjaGFyICpk
ZikNCiB7DQogCXN0cnVjdCBsZGJfbGRpZiAqbGRpZjsNCkluZGV4OiBkc2RiL3NhbWRiL3NhbWRi
LmMNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NCi0tLSBkc2RiL3NhbWRiL3NhbWRiLmMJKHJldmlzaW9uIDIzNTM2KQ0K
KysrIGRzZGIvc2FtZGIvc2FtZGIuYwkod29ya2luZyBjb3B5KQ0KQEAgLTUwLDYgKzUwLDcgQEAN
CiAJaWYgKCFsZGIpIHsNCiAJCXJldHVybiBOVUxMOw0KIAl9DQorCWRzZGJfbWFrZV9zY2hlbWFf
Z2xvYmFsKGxkYik7DQogCXJldHVybiBsZGI7DQogfQ0KIA0KSW5kZXg6IGRzZGIvc2FtZGIvbGRi
X21vZHVsZXMvc2NoZW1hX2ZzbW8uYw0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIGRzZGIvc2FtZGIvbGRiX21v
ZHVsZXMvc2NoZW1hX2ZzbW8uYwkocmV2aXNpb24gMjM1MzYpDQorKysgZHNkYi9zYW1kYi9sZGJf
bW9kdWxlcy9zY2hlbWFfZnNtby5jCSh3b3JraW5nIGNvcHkpDQpAQCAtNTQsNiArNTQsMTAgQEAN
CiAJCU5VTEwNCiAJfTsNCiANCisJaWYgKGRzZGJfZ2V0X3NjaGVtYShtb2R1bGUtPmxkYikpIHsN
CisJICByZXR1cm4gbGRiX25leHRfaW5pdChtb2R1bGUpOw0KKwl9DQorDQogCXNjaGVtYV9kbiA9
IHNhbWRiX3NjaGVtYV9kbihtb2R1bGUtPmxkYik7DQogCWlmICghc2NoZW1hX2RuKSB7DQogCQls
ZGJfZGVidWcobW9kdWxlLT5sZGIsIExEQl9ERUJVR19XQVJOSU5HLA0KSW5kZXg6IHNldHVwL3By
b3Zpc2lvbl9wYXJ0aXRpb25zLmxkaWYNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCi0tLSBzZXR1cC9wcm92aXNpb25f
cGFydGl0aW9ucy5sZGlmCShyZXZpc2lvbiAyMzUzNikNCisrKyBzZXR1cC9wcm92aXNpb25fcGFy
dGl0aW9ucy5sZGlmCSh3b3JraW5nIGNvcHkpDQpAQCAtNSw5ICs1LDkgQEANCiByZXBsaWNhdGVF
bnRyaWVzOiBAU1VCQ0xBU1NFUw0KIHJlcGxpY2F0ZUVudHJpZXM6IEBBVFRSSUJVVEVTDQogcmVw
bGljYXRlRW50cmllczogQElOREVYTElTVA0KLW1vZHVsZXM6JHtTQ0hFTUFETn06JHtTQ0hFTUFE
Tl9NT0R9DQotbW9kdWxlczoke0NPTkZJR0ROfToke0NPTkZJR0ROX01PRH0NCi1tb2R1bGVzOiR7
RE9NQUlORE59OiR7RE9NQUlORE5fTU9EfQ0KK21vZHVsZXM6JHtTQ0hFTUFETn06JHtTQ0hFTUFE
Tl9NT0R9JHtTQ0hFTUFETl9NT0QyfQ0KK21vZHVsZXM6JHtDT05GSUdETn06JHtDT05GSUdETl9N
T0R9JHtDT05GSUdETl9NT0QyfQ0KK21vZHVsZXM6JHtET01BSU5ETn06JHtET01BSU5ETl9NT0R9
JHtET01BSU5ETl9NT0QyfQ0KIA0KIGRuOiBATU9EVUxFUw0KIEBMSVNUOiAke01PRFVMRVNfTElT
VH0NCkluZGV4OiBzZXR1cC9wcm92aXNpb24NCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCi0tLSBzZXR1cC9wcm92aXNp
b24JKHJldmlzaW9uIDIzNTM2KQ0KKysrIHNldHVwL3Byb3Zpc2lvbgkod29ya2luZyBjb3B5KQ0K
QEAgLTEzMiwxMSArMTMyLDExIEBADQogCQlzdWJvYmpbIkxEQVBNT0RVTEUiXSA9ICJlbnRyeVVV
SUQiOw0KIAl9DQogCXN1Ym9ialsiRE9NQUlORE5fTERCIl0gPSBzdWJvYmpbIkxEQVBCQUNLRU5E
Il07DQotCXN1Ym9ialsiRE9NQUlORE5fTU9EIl0gPSBzdWJvYmpbIkxEQVBNT0RVTEUiXSArICIs
cGFnZWRfc2VhcmNoZXMiOw0KKwlzdWJvYmpbIkRPTUFJTkROX01PRDIiXSA9IHN1Ym9ialsiTERB
UE1PRFVMRSJdICsgIixwYWdlZF9zZWFyY2hlcyI7DQogCXN1Ym9ialsiQ09ORklHRE5fTERCIl0g
PSBzdWJvYmpbIkxEQVBCQUNLRU5EIl07DQotCXN1Ym9ialsiQ09ORklHRE5fTU9EIl0gPSBzdWJv
YmpbIkxEQVBNT0RVTEUiXSArICIscGFnZWRfc2VhcmNoZXMiOw0KKwlzdWJvYmpbIkNPTkZJR0RO
X01PRDIiXSA9IHN1Ym9ialsiTERBUE1PRFVMRSJdICsgIixwYWdlZF9zZWFyY2hlcyI7DQogCXN1
Ym9ialsiU0NIRU1BRE5fTERCIl0gPSBzdWJvYmpbIkxEQVBCQUNLRU5EIl07DQotCXN1Ym9ialsi
U0NIRU1BRE5fTU9EIl0gPSBzdWJvYmpbIkxEQVBNT0RVTEUiXSArICIscGFnZWRfc2VhcmNoZXMi
Ow0KKwlzdWJvYmpbIlNDSEVNQUROX01PRDIiXSA9IHN1Ym9ialsiTERBUE1PRFVMRSJdICsgIixw
YWdlZF9zZWFyY2hlcyI7DQogfQ0KIA0KIGlmICghcHJvdmlzaW9uX3ZhbGlkYXRlKHN1Ym9iaiwg
bWVzc2FnZSkpIHsNCkluZGV4OiBzZXR1cC9wcm92aXNpb25fc2NoZW1hX2Jhc2Vkbl9tb2RpZnku
bGRpZg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KLS0tIHNldHVwL3Byb3Zpc2lvbl9zY2hlbWFfYmFzZWRuX21vZGlm
eS5sZGlmCShyZXZpc2lvbiAyMzUzNikNCisrKyBzZXR1cC9wcm92aXNpb25fc2NoZW1hX2Jhc2Vk
bl9tb2RpZnkubGRpZgkod29ya2luZyBjb3B5KQ0KQEAgLTIzLDMgKzIzLDIxIEBADQogLQ0KIHJl
cGxhY2U6IG9iamVjdFZlcnNpb24NCiBvYmplY3RWZXJzaW9uOiAzMA0KKy0NCityZXBsYWNlOiBw
cmVmaXhNYXANCitwcmVmaXhNYXA6OiBRa1JUUkFBQUFBQWlBQUFBQUFBQ0FDSUFBQUFBQUFBQUFn
QUFBQVFBQWdBQkFBQUFBZ0FBQUFnQUFnQUNBQUFBQ0ENCisgQUFBQXdBQWdBREFBQUFDQUFBQUJB
QUFnQUVBQUFBQ0FBQUFCUUFBZ0FGQUFBQUNBQUFBQmdBQWdBR0FBQUFDQUFBQUJ3QUFnQUhBQUEN
CisgQUNBQUFBQ0FBQWdBSUFBQUFBZ0FBQUNRQUFnQUpBQUFBQ0FBQUFDZ0FBZ0FLQUFBQUNBQUFB
Q3dBQWdBVEFBQUFDQUFBQURBQUFnQVUNCisgQUFBQUNBQUFBRFFBQWdBVkFBQUFDUUFBQURnQUFn
QVdBQUFBQ1FBQUFEd0FBZ0FYQUFBQUNnQUFBRUFBQWdBWUFBQUFBZ0FBQUVRQUENCisgZ0FaQUFB
QUFnQUFBRWdBQWdBYUFBQUFBZ0FBQUV3QUFnQUxBQUFBQ2dBQUFGQUFBZ0FNQUFBQUNRQUFBRlFB
QWdBTkFBQUFDZ0FBQUYNCisgZ0FBZ0FPQUFBQUNRQUFBRndBQWdBUEFBQUFDZ0FBQUdBQUFnQVFB
QUFBQ1FBQUFHUUFBZ0FSQUFBQUNRQUFBR2dBQWdBU0FBQUFDZ0ENCisgQUFHd0FBZ0FiQUFBQUNR
QUFBSEFBQWdBY0FBQUFDUUFBQUhRQUFnQWRBQUFBQ0FBQUFIZ0FBZ0FlQUFBQUNBQUFBSHdBQWdB
ZkFBQUENCisgQ1FBQUFJQUFBZ0FnQUFBQUNRQUFBSVFBQWdBaEFBQUFDUUFBQUlnQUFnQUNBQUFB
VlFRQUFBSUFBQUJWQmdBQUNBQUFBQ3FHU0liM0YNCisgQUVDQ0FBQUFDcUdTSWIzRkFFRENBQUFB
R0NHU0FGbEFnSUJDQUFBQUdDR1NBRmxBZ0lEQ0FBQUFHQ0dTQUZsQWdFRkNBQUFBR0NHU0ENCisg
RmxBZ0VFQWdBQUFGVUZBQUFJQUFBQUtvWklodmNVQVFRSUFBQUFLb1pJaHZjVUFRVUlBQUFBQ1pJ
bWlaUHlMR1FJQUFBQVlJWklBWWINCisgNFFnTUpBQUFBQ1pJbWlaUHlMR1FCQUFBQUNRQUFBR0NH
U0FHRytFSURBUUFBQUFvQUFBQXFoa2lHOXhRQkJiWllBQUFDQUFBQVZSVUENCisgQUFJQUFBQlZF
Z0FBQWdBQUFGVVVBQUFLQUFBQUtvWklodmNVQVFTQ0JBQUFDUUFBQUNxR1NJYjNGQUVGT0FBQUFB
b0FBQUFxaGtpRzkNCisgeFFCQklJR0FBQUpBQUFBS29aSWh2Y1VBUVU1QUFBQUNnQUFBQ3FHU0li
M0ZBRUVnZ2NBQUFrQUFBQXFoa2lHOXhRQkJUb0FBQUFKQUENCisgQUFLb1pJaHZjVUFRVkpBQUFB
Q2dBQUFDcUdTSWIzRkFFRWdqRUFBQWtBQUFBckJnRUVBWXM2WlhjQUFBQUpBQUFBWUlaSUFZYjRR
Z00NCisgQ0FBQUFDQUFBQUNzR0FRUUJnWG9CQ0FBQUFDcUdTSWIzRFFFSkNRQUFBQW1TSm9tVDhp
eGtCQUFBQUFrQUFBQXJCZ0VFQWJkOUJBRUENCisgQUFBSkFBQUFLd1lCQkFHM2ZRUUMNCg==


--=-Fpsx9mKKkbBiLZ7z4+Oe--

--=-J+HCy1s1jkJo9rCtom+1
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQBGdx/9z4A8Wyi0NrsRAjNJAJ9u6yo2jrADMUC7GhY9TVoYYWM1RACgpN+b
HAk3DWcMgVcys0N8SL3LQFA=
=GifV
-----END PGP SIGNATURE-----

--=-J+HCy1s1jkJo9rCtom+1--

