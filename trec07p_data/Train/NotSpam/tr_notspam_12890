From beginners-return-91871-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 23 16:48:05 2007
Return-Path: <beginners-return-91871-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4NKm3qD029599
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 23 May 2007 16:48:03 -0400
Received: (qmail 14421 invoked by uid 514); 23 May 2007 20:47:53 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 14405 invoked from network); 23 May 2007 20:47:52 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 23 May 2007 20:47:52 -0000
Received: (qmail 32098 invoked by uid 225); 23 May 2007 20:47:52 -0000
Delivered-To: beginners@perl.org
Received: (qmail 32094 invoked by alias); 23 May 2007 20:47:51 -0000
X-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.fast4.net (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 23 May 2007 13:47:44 -0700
Received: from [85.92.161.130] (85-92-161-130.eurisp.net [85.92.161.130] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l4NKlTF15585;
	Wed, 23 May 2007 21:47:30 +0100
Message-ID: <4654A862.1060702@350.com>
Date: Wed, 23 May 2007 21:47:30 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
CC: Ben Edwards <funkytwig@gmail.com>
Subject: Re: Global varables
References: <32b873ff0705231050j230f25e3r6b88a19e03fd2df6@mail.gmail.com>	 <465499A2.70803@350.com> <32b873ff0705231305l4a526c13tf15fe7ce9c2878de@mail.gmail.com>
In-Reply-To: <32b873ff0705231305l4a526c13tf15fe7ce9c2878de@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Ben Edwards wrote:
> On 23/05/07, Rob Dixon <rob.dixon@350.com> wrote:
>> Ben Edwards wrote:
>> >
>> > Ime a bit confused about globals, I know they should be used with care
>> > but....
>> >
>> > Currently I am using $::var witch seems to work.
>>
>> There's no reason to use $::var - it's the same as $main::var so use that
>> if it's what you mean.
>>
>> > 'our var' also seems to work.
>>
>> Work how?
>>
>> > Cant find any documentation with a discussion of this that answerers
>> > my question totally.
>>
>> And that question would be...?
>>
>> > what is the conversion with globals?
>>
>> I can't imagine what you mean by this. There is no conversion.
>>
>> What are you trying to do Ben? It's actually quite unlikely that you need
>> 'global' variables (by which you mean package variables) at all. What 
>> can't
>> you do if you declare everything using 'my'?
> 
> Ime changing some very badly written - almost everything is done in
> callbacks.  We are slowly re-writing it but as it is a production
> system we dont want to take a  bit bang approach yet.  This is partly
> cos there is stuff that we probably dont need but I need to get to
> know the perl better to verify this.
> 
> The main thing that I think is going to be a global (for now) is the
> database connection.
> 
> We have something like
> 
> $dbh = DBI->connect....
> 
> For now I want to make $dbh available throughout the whole script and
> am using $::dbh, but as you said maybe this should be $main::dbh.
> 
> By conventions I mean good practice, if there is such thing for globals;)
> 
> Is this any help?

Yes it is, thank you. But there's still no need for package variables unless
you're using multiple packages or multiple source files and need to share the
same data across more than one. Typically a database handle would be declared
lexically and assigned at the start of your program, and a simple

  my $dbh = DBI->connect($dsn, $user, $pass);

will allow you to access the handle through the rest of the file.

You may need more than this, however, if your script is spread across multiple
source files.

HTH,

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


