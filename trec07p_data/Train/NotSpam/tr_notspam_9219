From sugar-bounces@laptop.org  Thu May 10 14:03:39 2007
Return-Path: <sugar-bounces@laptop.org>
Received: from pedal.laptop.org (pedal.laptop.org [18.85.2.148])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4AI3cqD012632
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 10 May 2007 14:03:38 -0400
Received: from pedal.laptop.org (localhost [127.0.0.1])
	by pedal.laptop.org (Postfix) with ESMTP id A0E2A4F6B6;
	Thu, 10 May 2007 14:03:21 -0400 (EDT)
X-Original-To: sugar@laptop.org
Delivered-To: sugar@laptop.org
Received: from spam.laptop.org (spam.laptop.org [18.85.46.23])
	by pedal.laptop.org (Postfix) with ESMTP id A47F74F6B6
	for <sugar@laptop.org>; Thu, 10 May 2007 14:03:20 -0400 (EDT)
X-ASG-Debug-ID: 1178820213-63a500020000-3Xmyjt
X-Barracuda-URL: http://18.85.46.23:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: mild.rhydd.org[195.10.223.185]
X-Barracuda-Start-Time: 1178820213
X-Barracuda-Encrypted: AES256-SHA
Received: from mild.rhydd.org (mild.rhydd.org [195.10.223.185])
	(using TLSv1 with cipher AES256-SHA (256/256 bits))
	(No client certificate requested)
	by spam.laptop.org (Spam Firewall) with ESMTP id BB5089AE9
	for <sugar@laptop.org>; Thu, 10 May 2007 14:03:34 -0400 (EDT)
Received: from daf by mild.rhydd.org with local (Exim 4.63)
	(envelope-from <daf@rhydd.org>) id 1HmCt5-000339-Uq
	for sugar@laptop.org; Thu, 10 May 2007 18:57:12 +0100
Date: Thu, 10 May 2007 18:57:11 +0100
From: Dafydd Harries <dafydd.harries@collabora.co.uk>
To: sugar@laptop.org
X-ASG-Orig-Subj: Re: [sugar] Obtaining Buddy objects as contacts are
	encountered
Message-ID: <20070510175711.GW5306@mild.rhydd.org>
References: <20070510153235.GA30162@celebrin.pseudorandom.co.uk>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20070510153235.GA30162@celebrin.pseudorandom.co.uk>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Barracuda-Bayes: INNOCENT GLOBAL 0.0002 1.0000 -2.0197
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at laptop.org
X-Barracuda-Spam-Score: -2.02
X-Barracuda-Spam-Status: No, SCORE=-2.02 using global scores of TAG_LEVEL=3.5
	QUARANTINE_LEVEL=1000.0 KILL_LEVEL=5.5 tests=
X-Barracuda-Spam-Report: Code version 3.1, rules version 3.1.16562
	Rule breakdown below
	pts rule name              description
	---- ----------------------
	--------------------------------------------------
Subject: Re: [sugar] Obtaining Buddy objects as contacts are encountered
X-BeenThere: sugar@laptop.org
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Discussion of OLPC design,
	desktop platform and user experience" <sugar.laptop.org>
List-Unsubscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=unsubscribe>
List-Archive: <http://mailman.laptop.org/pipermail/sugar>
List-Post: <mailto:sugar@laptop.org>
List-Help: <mailto:sugar-request@laptop.org?subject=help>
List-Subscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: sugar-bounces@laptop.org
Errors-To: sugar-bounces@laptop.org

Ar 10/05/2007 am 16:32, ysgrifennodd Simon McVittie:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> At the moment the Presence Service API assumes we're subscribed to the
> presence of every contact we'll ever encounter, which obviously can't scale to
> a school.

To elaborate on this a bit:

When thinking about scalability of the networking code, we've been using 1,500
as the biggest number of children we might see in a deployment.

If you are subscribed to everybody on the server, and there are 1,500 children
signed in, then you will receive 1,500 <presence> stanzas when you sign in to
the server. A Jabber scalability analysis[0] assumed 200 bytes per presence
stanza, which gives us a figure of 292KiB for initial presence download.

Furthermore, this entails getting a message whenever anybody in the school:

 - signs on
 - signs off
 - shares an activity
 - joins an activity
 - leaves an activity
 - changes their current activity

Since each child has a TCP connection to the server, these messages are not
broadcast/multicast, but rather each message is sent over 1,500 connections.

Also, if there are 1,500 contacts, it makes the mesh view's job of deciding
which children to show more difficult.

We don't think this will work, which is why we're planning to move to a
solution where laptops query the server for specific subsets of the
presence/activity information. We haven't designed in detail yet, but we think
that:

 - you'll always be subscribed to your friends
 - you'll always be subscribed to people in your groups
 - you'll subscribe oppportunistically to people in activities you're in
 - you'll unsubscribe from people who aren't friends/in your groups if you
   haven't interacted with them for a while
 - the server will respond to questions like "is there anybody doing a
   painting activity?", "give me a list of some people to put in my mesh view"
 - the server-side extensions will be implemented via a Python XMPP
   "component" that talks to ejabberd using XML

[0] http://www.xmpp.org/internet-drafts/draft-saintandre-xmpp-presence-analysis-00.html

-- 
Dafydd
_______________________________________________
Sugar mailing list
Sugar@laptop.org
http://mailman.laptop.org/mailman/listinfo/sugar

