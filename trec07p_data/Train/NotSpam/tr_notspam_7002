From beginners-return-91273-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 13:12:31 2007
Return-Path: <beginners-return-91273-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l42HCUb9024780
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 13:12:30 -0400
Received: (qmail 8772 invoked by uid 514); 2 May 2007 17:12:25 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 8762 invoked from network); 2 May 2007 17:12:24 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 May 2007 17:12:24 -0000
Received: (qmail 29939 invoked by uid 225); 2 May 2007 17:12:24 -0000
Delivered-To: Beginners@perl.org
Received: (qmail 29928 invoked by alias); 2 May 2007 17:12:22 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.njpservices.co.uk (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 10:11:42 -0700
Received: from [85.92.185.92] (85-92-185-92.eurisp.net [85.92.185.92] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l42HBTa27356;
	Wed, 2 May 2007 18:11:30 +0100
Message-ID: <4638C64B.1090003@350.com>
Date: Wed, 02 May 2007 18:11:39 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Beginners@perl.org
CC: som.ctc@gmail.com
Subject: Re: Regexp problem
References: <e9a6a7e60705010920n622f5bb8m5290465be259f458@mail.gmail.com>	 <ed09dcd0705011918g401f4251pf0385e2aeabb68a3@mail.gmail.com> <e9a6a7e60705020940t1aad7f81v977edc24bf5d99@mail.gmail.com>
In-Reply-To: <e9a6a7e60705020940t1aad7f81v977edc24bf5d99@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit

Somu wrote:
>
> Actually thats what i was looking for: l.*o.*r
> 
> So, if the user entered string is to be matched for 'lpt', then i'll
> use l.*p.*t ?
> 
> And to match 'npr' i use .*n.*p.*r ?

Somu you need to tell us exactly what match you want, otherwise we can't
tell you whether something will work or not. Are you simply checking whether
the input string contains all of the match characters? I would forget about
sorting the input string and do it as in the program below. But please
explain what the problem is instead of asking how to implement a solution
which may not be optimal.

HTH,

Rob


use strict;
use warnings;

print "Match\n" if match('orql', 'lor');

sub match {
  
  my ($input, $match) = @_;
  
  foreach (split '', $match) {
    return '' unless $input =~ /\Q$_/;
  }
  
  return 1;
}





-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


