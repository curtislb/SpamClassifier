From perl6-all-return-81666-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 30 10:00:56 2007
Return-Path: <perl6-all-return-81666-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4UE0thB014475
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 30 May 2007 10:00:56 -0400
Received: (qmail 19900 invoked by uid 514); 30 May 2007 14:00:47 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 19895 invoked from network); 30 May 2007 14:00:47 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Message-ID: <20070530133854.87478.qmail@spout.spiders.net>
References: <15235.127.0.0.1.1180490330.squirrel@localhost>
            <20070530130707.81420.qmail@spout.spiders.net>
            <10847.10.2.0.244.1180531039.squirrel@acooke.dyndns.org>
In-Reply-To: <10847.10.2.0.244.1180531039.squirrel@acooke.dyndns.org>
From: "Will Coleda" <will@coleda.com>
To: andrew@acooke.org
Cc: perl6-internals@perl.org
Subject: Re: Intro / Parrot / Functional Lang Imp Q
Date: Wed, 30 May 2007 09:38:54 -0400
Mime-Version: 1.0
Content-Type: text/plain; charset="utf-8"; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

andrew cooke writes: 

>>> Also, am I right in thinking that I can use whatever language I want for
>>> generating the IR?
>>
>> Sure. languages/BASIC used perl, as did tcl some time back. Most are
>> generating PIR with PIR these days, though. (ISTR plumhead is generating
>> PIR multiple ways)
> 
> I will check the languages directory, but this confuses me - do people
> write parsers in PIR?

... I wasn't entirely accurate here. 

Many languages (APL, punie, abc, tcl) use PGE's perl6-like grammars to 
define their parser. I've worked on tcl, so I'll use that as an example. ABC 
is probably better for actually starting out. 

http://svn.perl.org/parrot/trunk/languages/tcl/src/grammar/expr/expression.p 
g 

This is the grammar for tcl, written in a subset of perl6. 

http://svn.perl.org/parrot/trunk/languages/tcl/src/grammar/expr/pge2past.tg 

This is a TGE grammar which, given the input and the PGE grammar, generates 
an AST. The code inside the transforms here is (must be, at the moment) PIR. 

http://svn.perl.org/parrot/trunk/languages/tcl/src/grammar/expr/past2pir.tg 

This takes the AST and transforms it to PIR. (again, the transforms here are 
written in PIR) 

This PIR is then compiled with the PIR compiler available from inside 
parrot, which generates an executable chunk of bytecode. 

FYI, when tcl is built, all the PGE and TGE grammars are themselves compiled 
to PIR, then bytecode. 

This is just a high level overview. I'll try to get this (and any followup 
questions) incorporated into docs/compiler_faq.pod 

Regards.

