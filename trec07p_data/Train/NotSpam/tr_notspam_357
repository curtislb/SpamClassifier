From perl6-all-return-80457-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Apr 10 03:37:07 2007
Return-Path: <perl6-all-return-80457-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3A7b60I025957
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 10 Apr 2007 03:37:07 -0400
Received: (qmail 27333 invoked by uid 514); 10 Apr 2007 07:36:42 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 27328 invoked from network); 10 Apr 2007 07:36:41 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of jrisom@gmail.com designates 64.233.166.181 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:in-reply-to:references:mime-version:content-type:message-id:content-transfer-encoding:cc:from:subject:date:to:x-mailer;
        b=sgfr81SQAhQKqbJVcV8ctqXhQuwuSC72fJap6EjqX0RR0dQWMXxrUZrQMLZNQdXNadEksYQ8xU9aGgCbqeZ79W3WQHsA99qNt8+oJ700vQrNM39SfYQ56BvM/fRu5mQU61x2ehYeKnmbJVQjL1aVCHgS6VEtMvyamf+v0F6Oazw=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:in-reply-to:references:mime-version:content-type:message-id:content-transfer-encoding:cc:from:subject:date:to:x-mailer;
        b=bNwZ59kLgEB5ejKAnPNlsLlv4NzTh0eB7jLo8l16kXtm9xwatNhpJ2qZ0pc1zHtw0cDevW3dtbwEeoU59rADqcflGVIsckDiRWwR6aLSDIMVdjPAVwT/6jNFQHPKYkeVy7kTsbUNir43FYuyvqJXPvB66U+U6cOdL22IGRLWKnE=
In-Reply-To: <461B3751.2020802@perl.org>
References: <46167CF3.2030404@gmail.com> <461B3751.2020802@perl.org>
Mime-Version: 1.0 (Apple Message framework v624)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <c9b347f68838738e23dfbe0cd5d75a69@gmail.com>
Content-Transfer-Encoding: 7bit
Cc: Perl 6 Internals <perl6-internals@perl.org>,
   Klaas-Jan Stol <parrotcode@gmail.com>
From: Joshua Isom <jrisom@gmail.com>
Subject: Re: Minor notes/suggestions on PDD15
Date: Tue, 10 Apr 2007 02:36:29 -0500
To: Allison Randal <allison@perl.org>
X-Mailer: Apple Mail (2.624)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
Status: O
Content-Length: 2302
Lines: 52

On Apr 10, 2007, at 2:05 AM, Allison Randal wrote:

> Klaas-Jan Stol wrote:
>> hi,
>> Some suggestions for PDD15:
>> 1.
>> reading PDD15, I noticed that some methods/ops are named using an 
>> underscore to separate words, others don't, for instance:
>> * get_class (but also "getclass" is used in the examples)
>> * newclass
>> IMO, it'd be nice to be consistent, and stick to 1 style. (My 
>> personal preference is to leave out the underscore)
>
> The get_ standard entered with namespaces, and was itself a 
> modification of the find_ standard from the earlier opcodes for 
> dealing with globals and lexicals. For methods, I'd say the 
> underscores are standard. For opcoess, it's debatable whether 
> underscores or no underscores is standard at this point. I made a note 
> to review it when I get to the Opcodes PDD.
>

I'm a little mixed on this.  Something like get_args probably shouldn't 
be getargs or even getArgs, but if you look through ops.num, it can be 
confusing to know what is what.  Although not for beginners, scanning 
through ops.num can help figure out why your code doesn't compile as 
expected.

>> 2.
>> Another thing; operations such as find_method return a NULL PMC on 
>> failure. It might be nice to have it configurable for the user so 
>> s/he can choose whether an exception will be thrown, or a NULL PMC is 
>> returned. (IIRC, this can already be done for some ops, it'd be nice 
>> to set it for all ops that may return a NULL PMC).
>> (as a detail: in PIR this might be represented by a pragma, like: 
>> ".pragma exceptions 1")
>
> This is the same question we have for I/O, and really for large parts 
> of Parrot. I've temporarily held off on this decision until the new 
> exceptions PDD is implemented (widespread exceptions really aren't 
> practical with the current exceptions implementation).
>

Perhaps a namespace specific code can be used, and maybe applicable for 
nested namespaces such that hll's can easily take advantage, so an hll 
can say in it's root namespace "I want exceptions" and all namespaces 
in that hll default to using exceptions.  A file specific option would 
be bug prone with something like pbc_merge or whatever, and making it 
namespace specific seems simple and clean, even if a little too DWIM 
for parrot.

> Allison
>

