From perl6-all-return-80479-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 11 03:15:50 2007
Return-Path: <perl6-all-return-80479-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3B7Fn0I013891
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 11 Apr 2007 03:15:50 -0400
Received: (qmail 19473 invoked by uid 514); 11 Apr 2007 07:15:22 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 19464 invoked from network); 11 Apr 2007 07:15:21 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Message-ID: <461C8B16.1010409@perl.org>
Date: Wed, 11 Apr 2007 00:15:34 -0700
From: Allison Randal <allison@perl.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: Leopold Toetsch <lt@toetsch.at>
Cc: perl6-internals@perl.org
Subject: Re: modifying classes after they're instantiated
References: <461C0EEF.1010107@perl.org> <200704110105.44897.lt@toetsch.at>
In-Reply-To: <200704110105.44897.lt@toetsch.at>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
Status: O
Content-Length: 1145
Lines: 22

Leopold Toetsch wrote:
> Am Mittwoch, 11. April 2007 00:25 schrieb Allison Randal:
>> 3) Modify the core PMC implementation so it tracks information about
>> which the different containers (registers, temporary variables,
>> namespace entries, etc.) that hold a particular PMC, and which
>> particular container was used to make the method call, so a method call
>> can modify the variable it was called on. Disadvantage: This isn't a
>> generally useful feature. (Not my favorite alternative.)
> 
> I'm just answering 3):
> Another "container" might be (external) C code (incl. the C stack). You can't 
> track that in above terms. This all boils down to the same implications 
> imposed by the conservative GC. You can never be sure, it's a variable (e.g. 
> integer looking like a mem addr) or just a real memory location you were 
> tracking, which means: modifying adjacent (maybe inside the very PMC or not) 
> memory regions could be disastrous.

Mmmmm... did I neglect to mention other Disadvantage?: It's a horrible 
solution. Possible (with additional layers of indirection, containers 
within containers, etc), but horrible.

Allison

