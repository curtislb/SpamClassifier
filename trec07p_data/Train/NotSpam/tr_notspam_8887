From beginners-return-91460-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  9 12:10:44 2007
Return-Path: <beginners-return-91460-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l49GAhqD030954
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 9 May 2007 12:10:43 -0400
Received: (qmail 25753 invoked by uid 514); 9 May 2007 16:10:34 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 25744 invoked from network); 9 May 2007 16:10:34 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 May 2007 16:10:34 -0000
Received: (qmail 1693 invoked by uid 225); 9 May 2007 16:10:33 -0000
Delivered-To: beginners@perl.org
Received: (qmail 1688 invoked by alias); 9 May 2007 16:10:32 -0000
X-Spam-Status: No, hits=3.9 required=8.0
	tests=BAYES_05,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_TESTING,DK_SIGNED,DK_VERIFIED,RCVD_IN_BH_CNKR,RCVD_IN_NERD_CN,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from elasmtp-masked.atl.sa.earthlink.net (HELO elasmtp-masked.atl.sa.earthlink.net) (209.86.89.68)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 09 May 2007 09:09:22 -0700
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=dk20050327; d=earthlink.net;
  b=OIHh6FDAxV/fHRZjB+4li5TU1AK3fHICN4CWskWoyKYzci1fr2VB1tQKJoYEGVKO;
  h=Message-ID:Date:From:Reply-To:To:Subject:Cc:Mime-Version:Content-Type:Content-Transfer-Encoding:X-Mailer:X-ELNK-Trace:X-Originating-IP;
Received: from [209.86.224.53] (helo=elwamui-wigeon.atl.sa.earthlink.net)
	by elasmtp-masked.atl.sa.earthlink.net with asmtp (Exim 4.34)
	id 1Hloj3-0000aL-9N; Wed, 09 May 2007 12:09:14 -0400
Received: from 218.19.68.149 by webmail.pas.earthlink.net with HTTP; Wed, 9 May 2007 12:09:12 -0400
Message-ID: <29172822.1178726953247.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>
Date: Thu, 10 May 2007 00:09:12 +0800 (GMT+08:00)
From: Jeff Pang <pangj@earthlink.net>
Reply-To: Jeff Pang <pangj@earthlink.net>
To: Chas Owens <chas.owens@gmail.com>
Subject: Re: forking problem with dbd::mysql
Cc: beginners-list <beginners@perl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Mailer: EarthLink Zoo Mail 1.0
X-ELNK-Trace: 7070c57df59c6c2974bf435c0eb9d47811eb5c9aa44f2a669fec14d0636b5ead0b6ebe12c126cbb3350badd9bab72f9c350badd9bab72f9c350badd9bab72f9c
X-Originating-IP: 209.86.224.53



-----Original Message-----
>From: Chas Owens <chas.owens@gmail.com>
>Sent: May 10, 2007 12:02 AM
>To: Jeff Pang <pangj@earthlink.net>
>Cc: beginners-list <beginners@perl.org>
>Subject: Re: forking problem with dbd::mysql
>
>On 5/9/07, Jeff Pang <pangj@earthlink.net> wrote:
>snip
>> But still has a question for me.We may see this similiar destroy method on DBI class,
>>
>> sub DESTROY
>> {
>>     my $self = shift;
>>     my $dbh = $self->{'dbh'};
>>     if ($dbh) {
>>         local $SIG{'__WARN__'} = sub {};
>>         $dbh->disconnect();
>>     }
>> }
>>
>> Ok where in child when going out of scope the $dbh should get disconnected.
>> But why this would affect the $dbh in parent?As we know,when forking child get a
>> full copy of $dbh from parent and it's separate to parent's $dbh.
>snip
>
>But the connection information in the $dbh is the same, so when the
>child disconnects it tells the MySQL server to destroy the connection.
> This means that the parent loses its connection unexpectedly.


Yes but I think is this maybe a bug in DBI class?For example,open a file handle and after forking child close that handle,this would not affect parent's handle.
The codes below show the case,

use strict;
use warnings;

open HDW,">","test.txt" or die;
select HDW;$|++;select STDOUT;
my $pid = fork;
die "can't fork" unless defined $pid;

unless ($pid) {
    for (1..10) {
        print HDW "child $_\n";
        sleep 1;
     }
    exit 0;

} else {
    for (1..100) {
        print HDW "parent $_\n";
        sleep 1;
     }
}

__END__

parent would continue to write till end at 100.


--
mailto:pangj@earthlink.net
http://home.arcor.de/jeffpang/

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


