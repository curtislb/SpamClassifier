From perl6-all-return-80862-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 04:49:27 2007
Return-Path: <perl6-all-return-80862-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3P8nP6w028143
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 04:49:26 -0400
Received: (qmail 8916 invoked by uid 514); 25 Apr 2007 08:49:24 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 8911 invoked from network); 25 Apr 2007 08:49:24 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-1.0 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,RCVD_NUMERIC_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of gclppl-perl6-internals@m.gmane.org designates 80.91.229.2 as permitted sender)
X-Injected-Via-Gmane: http://gmane.org/
To: perl6-internals@perl.org
From: "Nikolay Ananiev" <ananiev@thegdb.com>
Subject:  Re: Is Parrot 1.0 too late?
Date:  Wed, 25 Apr 2007 11:48:07 +0300
Message-ID: <f0n4kd$eq5$1@sea.gmane.org>
References:  <f0m0fu$rhc$1@sea.gmane.org> <462EEE7F.9040207@perl.org>
X-Complaints-To: usenet@sea.gmane.org
X-Gmane-NNTP-Posting-Host: 89.215.227.57
X-MSMail-Priority: Normal
X-Newsreader: Microsoft Outlook Express 6.00.2900.3028
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
X-RFC2646: Format=Flowed; Response
Sender: news <news@sea.gmane.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.0 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,RCVD_NUMERIC_HELO,SPF_HELO_PASS,SPF_PASS
Status: O
Content-Length: 3441
Lines: 68

Yes I know about Parrot's great features, but Parrot is still not
ready for the mainstream and won't be ready in the next two years (maybe?).
That's a lot of time for commercial projects like CLR and JVM and
the competition between MS and Sun is quite serious, so I expect
the dynamic features in their VMs to progress very fast. I'm also afraid
they have the resources to create compiler tools comparable to PGE and TGE
(you know that MS can always steal).
I think in 2-3 years CLR and JVM will be a serious competition to Parrot
and I just hope people won't say "uh, another VM for dynamic languages"
about Parrot 1.0.
Maybe we have to search harder for new ways to advertise Parrot to other
communities and get new developers and supporters to the project.
Currently, Parrot looks too Perlish and is mainly supported by the Perl 
community.
I think that has to change.

"Allison Randal" <allison@perl.org> wrote in message 
news:462EEE7F.9040207@perl.org...
> Nikolay Ananiev wrote:
>>
>> So, is one of parrot's biggest strengths gone? Are we too late?
>> Why would the developers use Parrot instead of JVM/CLR/Mono?
>
> We're certainly pleased that we kicked off a revolution in virtual 
> machines, and that others are beginning to catch on to the fact that 
> they'll have to support dynamic languages to compete. But, it would be a 
> little silly to throw in the towel just when others are beginning to 
> follow your lead. (And I do mean beginning. They're making great strides, 
> but I still hear strange comments like "We support all features of dynamic 
> languages. Of course some features, like multiple inheritance, may be 
> slow, but we don't encourage the use of those features." from the JVM 
> team.)
>
> The plan to run Perl, Python, PHP, Ruby, etc. is not the only innovative 
> feature of Parrot. To list a few:
>
> - PGE provides parsing tools that are light years ahead of what's in 
> common use today (what's commonly used today hasn't seen much in the way 
> of technological advances in the past 20 years).
>
> - TGE is a powerful tool for manipulating trees of data, like the output 
> of a parse, or an abstract syntax tree (think of it as XSLT on steroids).
>
> - Those parsing and transformation tools are valuable both for writing 
> compilers and for data processing tasks (handling database output, screen 
> scraping, combination and modification of Atom streams in an AJAXian way, 
> etc.), giving a big boost in ease of use for both areas.
>
> - Parrot is a register-based virtual machine instead of stack-based like 
> .NET, Mono, JVM. Register-based machines require fewer instructions to 
> complete the same operations (no need to push and pop the stack), 
> eliminating some unnecessary overhead. JIT-ed code is also register-based 
> (since the actual machine under the virtual machine is register-based), so 
> the register-based bytecode makes that transformation simpler.
>
> - Parrot moves beyond the fragile stack-based control flow common to 
> virtual machines today, to a continuation-based control flow. (I can 
> recommend a few good books and articles if you're curious.)
>
> While the other VMs are catching up to supporting the features of dynamic 
> languages from 10-40 years ago, we plan to open the way for a whole new 
> breed of dynamic languages. Will others follow our example? I won't 
> complain if they do. "Imitation is the sincerest form of flattery."
>
> Allison
> 



