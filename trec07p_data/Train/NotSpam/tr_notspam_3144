From r-help-bounces@stat.math.ethz.ch  Thu Apr 19 10:08:47 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3JE8j0I025354
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 10:08:46 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JE7AxE013973;
	Thu, 19 Apr 2007 16:07:25 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from mdhost1.centroin.com.br (smtp.centroin.com.br [200.225.63.205])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JDOBqA026673
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Thu, 19 Apr 2007 15:24:13 +0200
Received: from centroin.com.br (trex.centroin.com.br [200.225.63.134])
	by mdhost1.centroin.com.br (8.14.0/8.14.0/CIP SMTP HOST) with ESMTP id
	l3JDO3Dx073724; Thu, 19 Apr 2007 10:24:26 -0300 (BRT)
	(envelope-from albmont@centroin.com.br)
From: "Alberto Monteiro" <albmont@centroin.com.br>
To: ted.harding@manchester.ac.uk, r-help@stat.math.ethz.ch
Date: Thu, 19 Apr 2007 11:24:25 -0200
Message-Id: <20070419131917.M36114@centroin.com.br>
In-Reply-To: <XFMail.070419140156.Ted.Harding@manchester.ac.uk>
References: <10076822.post@talk.nabble.com>
	<XFMail.070419140156.Ted.Harding@manchester.ac.uk>
X-Mailer: CIP WebMail 2.51 20050627
X-OriginatingIP: 200.179.65.110 (albmont)
MIME-Version: 1.0
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: Re: [R] convergence
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 1370
Lines: 43


Ted Harding wrote:
> 
> There are various ways round this, but a 'for' loop with
> a fixed number of iterations is not usully one of them!
> 
> The simplest is to use while(). A possibly strategy is
> 
>   Y.old <- initial.Y
>   while(TRUE){
>     Y <- compute.Y(Y.old, ...)
>     if(abs(Y - Y.old) < small.number) break
>     Y.old <- Y
>   }
> 
> This will loop indefinitely until the convergence criterion
> 
>   abs(Y - Y.old) < small.number
> 
> is met, and then stop.
> 
I guess some precaution must be taken to prevent that the loop
runs forever.

Those algorithms that must optimize something, but run the risk 
of running forever, sound like the "chess playing" engine: we
know that a deterministic solution exists (there is a finite number
of chess positions), but it's not practical to check all of them.

I read somewhere that computer loop problems are treated as if
the computer was "playing chess" agains Murphy: it tries hard to
solve the problem, but sometimes he must give up a path and backtrack
to a less optimum but faster solution.

Do I make any sense?

Alberto Monteiro

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

