From beginners-return-91594-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat May 12 11:26:53 2007
Return-Path: <beginners-return-91594-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4CFQrqD012078
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 12 May 2007 11:26:53 -0400
Received: (qmail 4345 invoked by uid 514); 12 May 2007 15:26:47 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 4336 invoked from network); 12 May 2007 15:26:47 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 May 2007 15:26:47 -0000
Received: (qmail 14447 invoked by uid 225); 12 May 2007 15:26:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14438 invoked by alias); 12 May 2007 15:26:46 -0000
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pearl.ibctech.ca (HELO pearl.ibctech.ca) (208.70.104.210)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 12 May 2007 08:22:03 -0700
Received: (qmail 73188 invoked by uid 1002); 12 May 2007 15:21:31 -0000
Received: from iaccounts@ibctech.ca by pearl.ibctech.ca by uid 89 with qmail-scanner-1.22 
 (spamassassin: 2.64.  Clear:RC:1(208.70.107.100):. 
 Processed in 23.846444 secs); 12 May 2007 15:21:31 -0000
Received: from unknown (HELO ?192.168.1.210?) (steve@ibctech.ca@208.70.107.100)
  by pearl.ibctech.ca with (DHE-RSA-AES256-SHA encrypted) SMTP; 12 May 2007 15:21:07 -0000
Message-ID: <4645DB6C.9060509@ibctech.ca>
Date: Sat, 12 May 2007 11:21:16 -0400
From: Steve Bertrand <iaccounts@ibctech.ca>
User-Agent: Thunderbird 2.0.0.0 (Windows/20070326)
MIME-Version: 1.0
To: beginners@perl.org
Subject: Re: $1 $2 var confusion
References: <4645CD59.3020508@ibctech.ca> <4645D38B.9010802@350.com>
In-Reply-To: <4645D38B.9010802@350.com>
X-Enigmail-Version: 0.95.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit

> From perldoc perlre:
> 
>    The numbered match variables ($1, $2, $3, etc.) and the related
>    punctuation set ($+, $&, $`, $', and $^N) are all dynamically scoped
>    until the end of the enclosing block or until the next successful match,
>    whichever comes first.
> 
> In your first example, $1 is valid until the successful match
> /domain\.com/, when
> it becomes undefined as there are no capturing parentheses. In the
> second example
> $1 retains its value since the match fails.

This makes it crystal clear.

> 
> It's always safer to save captured strings before you use them, and I
> would never
> make a capture variable the target of a regex match as in your $2 !~
> /domain\.com/.

I agree...this was a piece of legacy code I am replacing. I ALWAYS name
my variables prior to doing any work on them, and as such, I've never
used the numbered variables in that manner as to run into such a
'quirk'. RTFM (as quoted) cleared it up for me.

> and also, in this case, the test would be better as
> 
>  unless ($host eq 'domain.com') {
>    print "Host name is bad\n";
>  }
> 
> unless you really want to test whether the host name /contains/ that
> string?

Like I said, legacy stuff I'm replacing.


> Oh, and I think I also prefer
> 
>  my ($name, $host) = split /@/, $email;
> 
> instead of the first regex.

Yes, agreed.

Thanks so much!

Steve

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


