From perl6-all-return-80966-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Apr 28 04:19:04 2007
Return-Path: <perl6-all-return-80966-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3S8J36w005172
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 28 Apr 2007 04:19:03 -0400
Received: (qmail 28105 invoked by uid 514); 28 Apr 2007 08:19:01 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 28100 invoked from network); 28 Apr 2007 08:19:01 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-1.0 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,RCVD_NUMERIC_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of gclppl-perl6-internals@m.gmane.org designates 80.91.229.2 as permitted sender)
X-Injected-Via-Gmane: http://gmane.org/
To: perl6-internals@perl.org
From: "Nikolay Ananiev" <ananiev@thegdb.com>
Subject:  Re: Is Parrot 1.0 too late?
Date:  Sat, 28 Apr 2007 11:18:08 +0300
Message-ID: <f0v00b$ff1$1@sea.gmane.org>
References:  <f0m0fu$rhc$1@sea.gmane.org> <462EEE7F.9040207@perl.org> <f0n4kd$eq5$1@sea.gmane.org> <462F8BF2.6090407@perl.org>
X-Complaints-To: usenet@sea.gmane.org
X-Gmane-NNTP-Posting-Host: 89.215.227.57
X-MSMail-Priority: Normal
X-Newsreader: Microsoft Outlook Express 6.00.2900.3028
X-RFC2646: Format=Flowed; Response
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
Sender: news <news@sea.gmane.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.0 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,RCVD_NUMERIC_HELO,SPF_HELO_PASS,SPF_PASS
Status: RO
Content-Length: 3287
Lines: 80


"Allison Randal" <allison@perl.org> wrote in message 
news:462F8BF2.6090407@perl.org...
> Nikolay Ananiev wrote:
>> Yes I know about Parrot's great features, but Parrot is still not
>> ready for the mainstream and won't be ready in the next two years 
>> (maybe?).
>> That's a lot of time for commercial projects like CLR and JVM and
>> the competition between MS and Sun is quite serious, so I expect
>> the dynamic features in their VMs to progress very fast. I'm also afraid
>> they have the resources to create compiler tools comparable to PGE and 
>> TGE
>> (you know that MS can always steal).
>
> That's a possibility, but what are you afraid of?

I'm afraid these companies have the opportunity to take the niche
that Parrot aims at, before we get there.

> This is how open source software works. We develop in the open to promote 
> the greater advance of all technology. We don't hoard our advances in the 
> fear that others will use them (that's what proprietary companies do).
>

I just want Parrot to "make it" an be successful as a project. I think
this will happen if we manage to make it popular among other
communities, before JVM or CLR become popular as platforms
for dynamic languages.

> One of the greatest advantages of the open source model is the fact that 
> Parrot isn't tied to a particular company's profit strategy. This gives us 
> a much greater flexibility to take bold risks on new technology. I expect 
> that this will keep Parrot consistently ahead of the CLR and the JVM. They 
> have more resources to throw at it, but they also have strong motivations 
> not to radically change their architecture.

New technology doesn't make a popular project. And a big
project like Parrot needs a popularity to survive.

>
> But, there's really no way to be certain how the game will play out until 
> we play the game. If poker players all threw in their cards as soon as 
> they were dealt, it would make for a pretty boring game.
>

But we have to be prepared for the game before it starts.

>> Maybe we have to search harder for new ways to advertise Parrot to other
>> communities and get new developers and supporters to the project.
>
> On that I completely agree, but as a simple matter of practicality, not 
> some desperate bid for market dominance. If you want to recruit new C 
> developers, you go where C developers hang out. (chromatic and I are 
> speaking at a Linux conference this weekend.)
>
>> Currently, Parrot looks too Perlish
>
> On that I completely disagree. Parrot looks very Perlish because it's 
> highly dynamic and intended to be easy to use (which happen to also be 
> goals of Perl). This is an advantage.


By "too Perlish" I mean that not many developers outside the
Perl community have heard of Parrot. If you go to the PHP
community and ask them about this project, they'll tell you
they don't care. And the ones that know something will tell you
"Why to use Parrot? We have Zend 2.0".

Anyway, I expect Zend will never officially support Parrot,
because they are working too closely with Sun.

Maybe the big question here is:
What do you think Parrot needs to get to 1.0?

Does it need the masses from the Perl and other communities?
Is it ready for this?

or it needs just a few more highly motivated developers? 



