From perl6-all-return-81655-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May 29 19:34:37 2007
Return-Path: <perl6-all-return-81655-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4TNYahB005173
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 29 May 2007 19:34:36 -0400
Received: (qmail 20542 invoked by uid 514); 29 May 2007 23:34:31 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 20537 invoked from network); 29 May 2007 23:34:30 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=2.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: moderator for perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Message-ID: <20070529204540.30709.qmail@lists.develooper.com>
To: perl6-language@perl.org
Date: Tue, 29 May 2007 22:45:40 +0200
From: gabriele renzi <surrender_it@rc.europe.yahoo-eu1.akadns.net>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
Subject: Re: [S02] Sigils
References: <ef30550b0705231633u3754f88re752c2c50a0f2f1@mail.gmail.com>
In-Reply-To: <ef30550b0705231633u3754f88re752c2c50a0f2f1@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 83.181.245.22
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

Jonathan Lang wrote:
>  From S02:
> 
> -- 
> 
> Perl 6 includes a system of B<sigils> to mark the fundamental
> structural type of a variable:
> 
>    $   scalar (object)
>    @   ordered array
>    %   unordered hash (associative array)
>    &   code/rule/token/regex
>    ::  package/module/class/role/subset/enum/type/grammar
>    @@  multislice view of @

while we are at it:
:: and & are _really_ sigils for variables?
They seem (to me) more akin to a literal syntax, and I wonder what would 
happen in a case like this:

sub foo {}
sub bar {}
# currently syntax error in pugs, but if is a variable sigil
# why I can't have it on a variable?
my &foo = &bar;
&foo('hello')

I have to understand that
  &foo = &somefunction
is actually redefining the foo() sub?

If not, which gets called in the above case? can I have access again to 
the original &foo sub here?

and in these context

multi foo(Int $i) {...}
multi foo(Str $i) {...}

my &foo = &foo<Int>
&foo('hello')

do I get an error, since we are using the variant defined for Ints or is 
the multiple dispatch called again?

Same for ::
  ::Object = $?GRAMMAR
is guaranteed to explode in my face or is it just a syntactic error (as 
it currently is in pugs) ?

