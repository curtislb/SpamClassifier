From perl6-all-return-80558-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 13 18:05:19 2007
Return-Path: <perl6-all-return-80558-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3DM5I0I027500
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 18:05:19 -0400
Received: (qmail 29216 invoked by uid 514); 13 Apr 2007 22:04:55 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29211 invoked from network); 13 Apr 2007 22:04:54 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of brian.d.foy@gmail.com)
To: perl6-language@perl.org
Subject: File test operators as Pairs
Date: Fri, 13 Apr 2007 16:57:49 -0500
From: brian d foy <brian.d.foy@gmail.com>
Message-ID: <130420071657496270%brian.d.foy@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
User-Agent: Thoth/1.7.2 (Carbon/OS X)
X-Posted-By: 24.148.86.38
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 1941
Lines: 65

So far (eep!), the documentation talks about file test operators as
working with pairs, which will be a weird thing to explain, I guess.
I'm wondering if this matters to the mere user at all, and if we should
even talk about them in terms of "pairs". I don't want a different set
of terms in the docs and Llama6. Even if the current Pugs is different
than what the final answer will be, as long as I know the final answer
I'll be fine. :)

For a directory that exists, using the adverbial form or the fat arrow
form work for true or false things:


   pugs> 'doc' ~~ :d
   "doc"
   pugs> "doc" ~~ d => 1
   "doc"
   pugs> "doc" ~~ d => 0
   Bool::False


The fat arrow doesn't seem to work as I expected with :s though. I
figured that the value of the pair would be the thing to match the 
answer of the test. I expect these all to be expressions of the same
goal (even if they return different things right now):


   pugs> "doc" ~~ :s  # just to show you where I am
   136

   pugs> ( "doc" ~~ :s ) == 136
   Bool::True
   pugs> ( "doc" ~~ :s ) ~~ 136
   Bool::True
   pugs> "doc" ~~ s => 136   # perhaps accidentally fine
   136


So, if I wanted to see if the file had a size of 93 bytes, I'd use 93
as the value of the pair, but that doesn't work. It just returns true
again:


   pugs> "doc" ~~ s => 93  # I want this to fail (return Bool:I:False)
   136


Similarly, if that last form should work, I might want to do something
similar with the file age tests. I want a file 5 days old (let's ignore
fractional days right now):


   "doc" ~~ M => 5;


Which then makes me think I'd want to do something a bit wacky to see
if the modtime is greater than 5:


   "doc" ~~ M => any( 5 ..* );


But, if file tests aren't really meant to be like this and the user
shouldn't ever think like this, do I call it a "pair"? That's the
question I'll have to answer to the newbie reading LLama6, even though
I personally am fine with the term. :)

