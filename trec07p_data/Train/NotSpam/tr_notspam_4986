From perl6-all-return-80878-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 13:36:23 2007
Return-Path: <perl6-all-return-80878-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PHaL6w001165
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 13:36:21 -0400
Received: (qmail 22638 invoked by uid 514); 25 Apr 2007 17:36:20 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 22633 invoked from network); 25 Apr 2007 17:36:20 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: Jonathan Worthington <jonathan@jnthn.net>
Subject: Re: [perl #42620] PGE 'Out of memory' panics.
Date: Wed, 25 Apr 2007 10:35:33 -0700
User-Agent: KMail/1.9.5
Cc: Andy Spieherty <spiehera@lafayette.edu>,
   Perl6 Internals <perl6-internals@perl.org>
References: <RT-Ticket-42620@perl.org> <Pine.LNX.4.62.0704251053090.23058@fractal.phys.lafayette.edu> <462F893E.5030206@jnthn.net>
In-Reply-To: <462F893E.5030206@jnthn.net>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704251035.34020.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=1.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,RCVD_IN_CBL,SPF_PASS
Status: O
Content-Length: 650
Lines: 15

On Wednesday 25 April 2007 10:00, Jonathan Worthington wrote:

> Basically, if you run the program without -G and then break it, it will
> usually break inside the GC routine. What I do remember is that it was
> looping through some kinda memory pool, or arena, or whatever. However,
> the thing it was looping through was *huge* (like, from 0 to a six
> figure number) and I think it maybe was an n^2 algorithm, which
> amplified the effect further.

This reminds me of the subtitle of a terrible Star Trek movie: Generations.

I wonder if we performing smaller collections and compacting only up to a 
certain threshold would perform better.

-- c

