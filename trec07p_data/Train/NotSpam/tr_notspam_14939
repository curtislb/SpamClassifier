From sugar-bounces@lists.laptop.org  Thu May 31 11:58:47 2007
Return-Path: <sugar-bounces@lists.laptop.org>
Received: from mail.laptop.org (pedal.laptop.org [18.85.2.148])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4VFwlhB029911
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 31 May 2007 11:58:47 -0400
Received: from [127.0.1.1] (localhost [127.0.0.1])
	by mail.laptop.org (Postfix) with ESMTP id 0710158BC881;
	Thu, 31 May 2007 11:54:38 -0400 (EDT)
Received: from dhansak.collabora.co.uk (dhansak.collabora.co.uk
	[195.10.223.134])
	(using TLSv1 with cipher ADH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mail.laptop.org (Postfix) with ESMTP id 7118B58BC7BE
	for <sugar@lists.laptop.org>; Thu, 31 May 2007 11:47:25 -0400 (EDT)
Received: by dhansak.collabora.co.uk (Postfix, from userid 1014)
	id 85CC7308DF98; Thu, 31 May 2007 15:53:50 +0100 (BST)
Resent-From: simon.mcvittie@collabora.co.uk
Resent-Date: Thu, 31 May 2007 15:53:41 +0100
Resent-Message-ID: <20070531145341.GB23621@celebrin.pseudorandom.co.uk>
Resent-To: sugar@lists.laptop.org
X-Original-To: simon.mcvittie@collabora.co.uk
Received: by dhansak.collabora.co.uk (Postfix, from userid 1001)
	id E16D0308DF85; Thu, 31 May 2007 14:20:59 +0100 (BST)
Resent-From: morgan@dhansak.collabora.co.uk
Resent-Date: Thu, 31 May 2007 14:20:59 +0100
Resent-Message-ID: <20070531132059.GA12497@dhansak.collabora.co.uk>
Resent-To: simon.mcvittie@collabora.co.uk
Message-ID: <465E8B0E.5030801@collabora.co.uk>
Date: Thu, 31 May 2007 10:45:02 +0200
From: Morgan Collett <morgan@collabora.co.uk>
User-Agent: Thunderbird 1.5.0.10 (X11/20070403)
MIME-Version: 1.0
To: sugar@lists.laptop.org
References: <20070528165911.GA26201@celebrin.pseudorandom.co.uk>
In-Reply-To: <20070528165911.GA26201@celebrin.pseudorandom.co.uk>
Subject: Re: [sugar] [PATCH] services/presence/: identify Buddies by "key
 ID"	(pubkey hash), not whole key.
X-BeenThere: sugar@lists.laptop.org
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Discussion of OLPC design,
	desktop platform and user experience" <sugar.lists.laptop.org>
List-Unsubscribe: <http://lists.laptop.org/listinfo/sugar>,
	<mailto:sugar-request@lists.laptop.org?subject=unsubscribe>
List-Archive: <http://lists.laptop.org/pipermail/sugar>
List-Post: <mailto:sugar@lists.laptop.org>
List-Help: <mailto:sugar-request@lists.laptop.org?subject=help>
List-Subscribe: <http://lists.laptop.org/listinfo/sugar>,
	<mailto:sugar-request@lists.laptop.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: sugar-bounces@lists.laptop.org
Errors-To: sugar-bounces@lists.laptop.org

Simon McVittie wrote:

> services/presence/: identify Buddies by "key ID" (pubkey hash), not whole key.
> 
> This allows us to create Buddy objects as soon as we see a contact on the
> server. For contacts not on trusted servers, or seen in anonymous MUCs, we
> create a Buddy identified by JID instead (so we have some way to talk
> about the anonymous contact within the Sugar API).

Sounds good.

> The concept of "trusted server" means a server which we trust to validate that
> users with a keyID as the username part of their JID do in fact have that key.
> Currently we just pretend that olpc.collabora.co.uk does this - in future, the
> school servers will do this validation by using key rather than password
> authentication.

Security by hand-waving :)

> I'm assuming here that the key-ID is "sufficiently unique" across all
> trusted servers. It's a SHA-1 of the public key, so basically the
> same strength as GnuPG key fingerprints and git object hashes.
> (Actually, for hysterical raisins, it's a SHA-1 of Base64(public_key) -
> we should probably change this before we ship.)

A lot of crypto out there relies on hashes of keys. If the key is random
(enough), then the hash should be good enough not to collide. At least,
not in predictable ways...

Why though is it a hash of the base64? In theory the base64s have the
same entropy as the keys, but the crypto stuff should be happening in
binary land unless we get into XML.

If changing it will break the mesh for everybody at some point "before
we ship", sooner's better than later.

In http://www.nist.gov/sha, NIST states:
"Federal agencies should stop using SHA-1 for digital signatures,
digital time stamping and other applications that require collision
resistance as soon as practical, and must use the SHA-2 family of hash
functions for these applications after 2010."

We probably won't have a NIST-blessed replacement for SHA before 2012.
Nevertheless, we need to allow for changes along the way.

> The actual function used for the key-ID can be changed (if it
> is, old and new versions of Sugar will be incompatible, but that's not
> really a problem yet) so if any crypto gurus want to specify something
> different, now would be a really good time. As currently implemented, its
> output must be short enough to put in the JID (for which a hex SHA-1 is
> somewhat long already).

IMO we need to allow for some algorithm agility here. Breaking the mesh
at any stage is going to be very unpleasant - for the users^Wkids
especially.

For the unique identifier stuff, could we at some future point do a
'keyid2/' (or some other prefix) meaning that this is an identifier in a
different space?

Anyway, the patch looks good.

Morgan

_______________________________________________
Sugar mailing list
Sugar@lists.laptop.org
http://lists.laptop.org/listinfo/sugar

