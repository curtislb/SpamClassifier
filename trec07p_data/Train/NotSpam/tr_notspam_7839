From r-help-bounces@stat.math.ethz.ch  Sat May  5 08:18:38 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l45CIbqD027297
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 5 May 2007 08:18:38 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l45CHnPQ020888;
	Sat, 5 May 2007 14:17:59 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.3 required=5.0 tests=AWL,
	BAYES_40 autolearn=no version=3.1.8
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.171])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l45CHh0c020860
	for <R-help@stat.math.ethz.ch>; Sat, 5 May 2007 14:17:43 +0200
Received: by ug-out-1314.google.com with SMTP id p37so690753ugc
	for <R-help@stat.math.ethz.ch>; Sat, 05 May 2007 05:17:43 -0700 (PDT)
Received: by 10.67.119.9 with SMTP id w9mr3464592ugm.1178367462821;
	Sat, 05 May 2007 05:17:42 -0700 (PDT)
Received: by 10.66.236.7 with HTTP; Sat, 5 May 2007 05:17:42 -0700 (PDT)
Message-ID: <644e1f320705050517s1ff321eci59491699911bd3e1@mail.gmail.com>
Date: Sat, 5 May 2007 08:17:42 -0400
From: "jim holtman" <jholtman@gmail.com>
To: "Weiwei Shi" <helprhelp@gmail.com>
In-Reply-To: <cdf817830705041355h1ed4ce5am2d67157e818a7c96@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
References: <cdf817830705041245s6c47daecu230b5b035db39eeb@mail.gmail.com>
	<20070504201307.GD12822@kati.fz-rossendorf.de>
	<cdf817830705041355h1ed4ce5am2d67157e818a7c96@mail.gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: R Help <R-help@stat.math.ethz.ch>
Subject: Re: [R] save intermediate result
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Break your long running function into two parts.  The first will be
the long running part and it can return a value that you can pass to
the second part.  If the second part fails, you still have the
original value that was returned.

f1.1 <- function(){
    line1 <- f2()
    return(line1)
}

f1.2 <- function(line1){
    .... rest of the original f1
}

origData <- f1.1()
nextData <- f1.2(origData)


On 5/4/07, Weiwei Shi <helprhelp@gmail.com> wrote:
> sorry for my English, staying in US over 7 years makes me think I were
> ok, now :(
>
> anyway, here is an example and why I need that:
>
> suppose I have a function like the following:
>
> f1 <- function(){
>  line1 <- f2() # assume this line takes very long time, like more than 30 min
>  # then I need to save line1 as an object into workspace b/c
>  # the following lines after this might have some bugs
>  # currently I use
>  save(line1, file="line1.robj")
>  # but I am thinking if there is anothe way, like enviroment, instead
> of save it into a file
>
>  # codes as followed might have some bugs
>  # blabla...
> }
>
> if some codes as followed have bugs, my f1 function cannot return
> anything, which means I have to re-run the time-consuming line again.
>
> thanks,
>
> Weiwei
>
> On 5/4/07, Joerg van den Hoff <j.van_den_hoff@fzd.de> wrote:
> > On Fri, May 04, 2007 at 03:45:10PM -0400, Weiwei Shi wrote:
> > > hi,
> > >
> > > is there a way to save a R object into workspace instead of into a
> > > file during a running of function?
> > >
> >
> > if I understand the question correctly you want the 'super-assignment'
> > operator `<<-' as in
> >
> > -------------cut---------------
> > R> f <- function(x) y <<- 2*x
> > R> f(1)
> > R> y
> > [1] 2
> > R> f(10)
> > R> y
> > [1] 20
> > -------------cut---------------
> >
> > i.e. y is assigned a value in the 'workspace'. be careful, though, with
> > this kind of assignment. why not return the object you are interested
> > in as a list component together with other results when the function
> > call finishes?
> >
> >
>
>
> --
> Weiwei Shi, Ph.D
> Research Scientist
> GeneGO, Inc.
>
> "Did you always know?"
> "No, I did not. But I believed..."
> ---Matrix III
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


-- 
Jim Holtman
Cincinnati, OH
+1 513 646 9390

What is the problem you are trying to solve?

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

