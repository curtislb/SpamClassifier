From r-help-bounces@stat.math.ethz.ch  Mon Jun 18 01:02:22 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5I52KL9013887
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 18 Jun 2007 01:02:21 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l5I511vP020048;
	Mon, 18 Jun 2007 07:01:13 +0200
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=AWL, BAYES_50, DEAR_SOMETHING,
	DKIM_POLICY_SIGNSOME autolearn=no version=3.2.0
Received: from smtp1.kolej.mff.cuni.cz (smtp1.kolej.mff.cuni.cz [195.113.24.4])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l5I50tne020027
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Mon, 18 Jun 2007 07:00:55 +0200
X-Envelope-From: klaster@karlin.mff.cuni.cz
Received: from [195.113.26.47] (krtek.kolej.mff.cuni.cz [195.113.26.47])
	by smtp1.kolej.mff.cuni.cz (8.13.8/8.13.8) with ESMTP id l5I50MUO001887;
	Mon, 18 Jun 2007 07:00:56 +0200 (CEST)
	(envelope-from klaster@karlin.mff.cuni.cz)
Message-ID: <4676115F.4010404@karlin.mff.cuni.cz>
Date: Mon, 18 Jun 2007 07:00:15 +0200
From: Petr Klasterecky <klaster@karlin.mff.cuni.cz>
User-Agent: Thunderbird 1.5.0.12 (Windows/20070509)
MIME-Version: 1.0
To: ebi <keisyu@gmail.com>
References: <ed0fd0110706172137h2acb9fdahe0111bcd655ca529@mail.gmail.com>
In-Reply-To: <ed0fd0110706172137h2acb9fdahe0111bcd655ca529@mail.gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] the way to look at all the codings of any functions
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Someone with more experience could certainly provide a more precise 
answer, but basically you came across something called generic functions 
in R. This concept allows mean() to be called on various data structures 
without extra care.

See
?UseMethod
methods(mean)
getAnywhere(mean.default)

For more details see the R language definition manual.

Petr


ebi napsal(a):
> Dear SIr,
> 
> 
> In case of looking at the codes of the fuction, "cov",
> 
> we find all the codings below.  But, incase of "mean", we don't find
> the contents.
> 
> Please show me the way to look at all the codings of any functions.
> 
> Best regards,
> Kei
> -----------------------
> 
>> cov
> function (x, y = NULL, use = "all.obs", method = c("pearson",
>     "kendall", "spearman"))
> {
>     na.method <- pmatch(use, c("all.obs", "complete.obs",
> "pairwise.complete.obs"))
>     method <- match.arg(method)
>     if (is.data.frame(y))
>         y <- as.matrix(y)
>     else stopifnot(is.atomic(y))
>     if (is.data.frame(x))
>         x <- as.matrix(x)
>     else {
>         stopifnot(is.atomic(x))
>         if (!is.matrix(x)) {
>             if (is.null(y))
>                 stop("supply both 'x' and 'y' or a matrix-like 'x'")
>             x <- as.vector(x)
>         }
>     }
>     if (method == "pearson")
>         .Internal(cov(x, y, na.method, method == "kendall"))
>     else if (na.method != 3) {
>         Rank <- function(u) if (is.matrix(u))
>             apply(u, 2, rank, na.last = "keep")
>         else rank(u, na.last = "keep")
>         if (na.method == 2) {
>             ok <- complete.cases(x, y)
>             x <- if (is.matrix(x))
>                 x[ok, ]
>             else x[ok]
>             if (!is.null(y))
>                 y <- if (is.matrix(y))
>                   y[ok, ]
>                 else y[ok]
>         }
>         x <- Rank(x)
>         if (!is.null(y))
>             y <- Rank(y)
>         .Internal(cov(x, y, na.method, method == "kendall"))
>     }
>     else stop("cannot handle 'pairwise.complete.obs'")
> }
> <environment: namespace:stats>
>> mean
> function (x, ...)
> UseMethod("mean")
> <environment: namespace:base>
> 
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
> 

-- 
Petr Klasterecky
Dept. of Probability and Statistics
Charles University in Prague
Czech Republic

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

