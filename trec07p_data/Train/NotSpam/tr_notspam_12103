From r-help-bounces@stat.math.ethz.ch  Mon May 21 07:19:54 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4LBJrqD030618
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 21 May 2007 07:19:54 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4LBIopb012657;
	Mon, 21 May 2007 13:19:13 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.3 required=5.0 tests=AWL, BAYES_50,
	SPF_HELO_PASS autolearn=no version=3.1.8
Received: from kuber.nabble.com (kuber.nabble.com [216.139.236.158])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4LBHWba012233
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Mon, 21 May 2007 13:17:34 +0200
Received: from isper.nabble.com ([192.168.236.156])
	by kuber.nabble.com with esmtp (Exim 4.63)
	(envelope-from <bounces@nabble.com>) id 1Hq5tM-00058r-18
	for r-help@stat.math.ethz.ch; Mon, 21 May 2007 04:17:32 -0700
Message-ID: <10716815.post@talk.nabble.com>
Date: Mon, 21 May 2007 04:17:31 -0700 (PDT)
From: Vladimir Eremeev <wl2776@gmail.com>
To: r-help@stat.math.ethz.ch
In-Reply-To: <04C44D9F040C8A43A18D04F65A8B68BB8A1E8B@spatcex001.spadac.com>
MIME-Version: 1.0
X-Nabble-From: wl2776@gmail.com
References: <04C44D9F040C8A43A18D04F65A8B68BB8A1E8B@spatcex001.spadac.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: Re: [R] using lm() with variable formula
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch


I was solving similar problem some time ago.
Here is my script.
I had a data frame, containing a response and several other variables, which
were assumed predictors.
I was trying to choose the best linear approximation.
This approach now seems to me useless, please, don't blame me for that.
However, the script might be useful to you.

<code>
library(forward)

# dfr is a data.frame, that contains everything.
# The response variable is named med5x
# The following lines construct linear models for all possibe formulas
# of the form 
# med5x~T+a+height
# med5x~a+height+RH
# T, a, RH, etc are the names of possible predictors

inputs<-names(dfr)[c(10:30,1)]  # dfr was a very large data frame,
containing lot of variables.
# here we have chosen only a subset of them.

for(nc in 11:length(inputs)){ # the linear models were assumed to have at
least 11 terms
# now we are generating character vectors containing formulas.

  formulas<-paste("med5x",sep="~",
                 
fwd.combn(inputs,nc,fun=function(x){paste(x,collapse="+")}))

# and then, are trying to fit every

  for(f in formulas){
    lms<-lm(eval(parse(text=f)),data=dfr)

   
cat(file="linear_models.txt",f,sum(residuals(lms)^2),"\n",sep="\t",append=TRUE)
  }
}
</code>

Hmm, looking back, I see that this is rather inefficient script.
For example, the inner cycle can easily be replaced with the apply function.


Chris Elsaesser wrote:
> 
> New to R; please excuse me if this is a dumb question.  I tried to RTFM;
> didn't help.
> 
> I want to do a series of regressions over the columns in a data.frame,
> systematically varying the response variable and the the terms; and not
> necessarily including all the non-response columns.  In my case, the
> columns are time series. I don't know if that makes a difference; it
> does mean I have to call lag() to offset non-response terms. I can not
> assume a specific number of columns in the data.frame; might be 3, might
> be 20. 
> 
> My central problem is that the formula given to lm() is different each
> time.  For example, say a data.frame had columns with the following
> headings:  height, weight, BP (blood pressure), and Cals (calorie intake
> per time frame).  In that case, I'd need something like the following:
> 
> 	lm(height ~ weight + BP + Cals)
> 	lm(height ~ weight + BP)
> 	lm(height ~ weight + Cals)
> 	lm(height ~ BP + Cals)
> 	lm(weight ~ height + BP)
> 	lm(weight ~ height + Cals)
> 	etc.
> 
> In general, I'll have to read the header to get the argument labels.
> 
> Do I have to write several functions, each taking a different number of
> arguments?  I'd like to construct a string or list representing the
> varialbes in the formula and apply lm(), so to say  [I'm mainly a Lisp
> programmer where that part would be very simple. Anyone have a Lisp API
> for R? :-}]
> 
> 

-- 
View this message in context: http://www.nabble.com/using-lm%28%29-with-variable-formula-tf3772540.html#a10716815
Sent from the R help mailing list archive at Nabble.com.

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

