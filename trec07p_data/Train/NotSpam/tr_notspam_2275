From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon Apr 16 21:27:45 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3H1Ri0I021622
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 16 Apr 2007 21:27:45 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id E1A42162BDC
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 17 Apr 2007 01:27:20 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id 49CAA162ABF; Tue, 17 Apr 2007 01:26:48 +0000 (GMT)
Date: Tue, 17 Apr 2007 11:26:59 +1000
To: samba-cvs@samba.org
From: tridge@samba.org
Message-Id: <20070417012648.49CAA162ABF@lists.samba.org>
Subject: Rev 122: partial merge from volker (some overlaps removed) in
	http://samba.org/~tridge/ctdb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 3679
Lines: 149

------------------------------------------------------------
revno: 122
revision-id: tridge@samba.org-20070417012659-f05788b9fd8c5d2e
parent: tridge@samba.org-20070417012000-dd8a85395a077110
committer: Andrew Tridgell <tridge@samba.org>
branch nick: tridge
timestamp: Tue 2007-04-17 11:26:59 +1000
message:
  partial merge from volker (some overlaps removed)
modified:
  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1
  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1
=== modified file 'common/ctdb_daemon.c'
--- a/common/ctdb_daemon.c	2007-04-14 21:41:35 +0000
+++ b/common/ctdb_daemon.c	2007-04-17 01:26:59 +0000
@@ -186,6 +186,24 @@
 	struct client_fetch_lock_data *fl_data;
 
 	ctdb_db = find_ctdb_db(client->ctdb, f->db_id);
+	if (ctdb_db == NULL) {
+		struct ctdb_reply_fetch_lock r;
+
+		ZERO_STRUCT(r);
+		r.hdr.length       = sizeof(r);
+		r.hdr.ctdb_magic   = CTDB_MAGIC;
+		r.hdr.ctdb_version = CTDB_VERSION;
+		r.hdr.operation    = CTDB_REPLY_FETCH_LOCK;
+		r.hdr.reqid        = f->hdr.reqid;
+		r.state            = -1;
+
+		/*
+		 * Ignore the result, there's not much we can do anyway.
+		 */
+		ctdb_queue_send(client->queue, (uint8_t *)&r.hdr,
+				r.hdr.length);
+		return;
+	}
 
 	key.dsize = f->keylen;
 	key.dptr = &f->key[0];
@@ -220,6 +238,12 @@
 	int res;
 
 	ctdb_db = find_ctdb_db(client->ctdb, f->db_id);
+	if (ctdb_db == NULL) {
+		ctdb_set_error(client->ctdb, "Could not find database %i",
+			       f->db_id);
+		res = -1;
+		goto done;
+	}
 
 	/* write the data to ltdb */
 	key.dsize = f->keylen;

=== modified file 'common/ctdb_lockwait.c'
--- a/common/ctdb_lockwait.c	2007-04-16 23:14:52 +0000
+++ b/common/ctdb_lockwait.c	2007-04-17 01:26:59 +0000
@@ -71,48 +71,54 @@
  */
 struct lockwait_handle *ctdb_lockwait(struct ctdb_db_context *ctdb_db,
 				      TDB_DATA key,
-				      void (*callback)(void *), void *private_data)
+				      void (*callback)(void *private_data),
+				      void *private_data)
 {
-	struct lockwait_handle *h;
+	struct lockwait_handle *result;
 	int ret;
 
-	h = talloc_zero(ctdb_db, struct lockwait_handle);
-	if (h == NULL) {
+	if (!(result = talloc_zero(ctdb_db, struct lockwait_handle))) {
 		return NULL;
 	}
 
-	ret = pipe(h->fd);
+	ret = pipe(result->fd);
+
 	if (ret != 0) {
-		talloc_free(h);
-		return NULL;
-	}
-
-	h->child = fork();
-	if (h->child == (pid_t)-1) {
-		close(h->fd[0]);
-		close(h->fd[1]);
-		talloc_free(h);
-		return NULL;
-	}
-
-	h->callback = callback;
-	h->private_data = private_data;
-
-	if (h->child == 0) {
-		struct tdb_context *tdb = ctdb_db->ltdb->tdb;
-		/* in child */
-		tdb_chainlock(tdb, key);
-		_exit(0);
-	}
-
-	close(h->fd[1]);
-	talloc_set_destructor(h, lockwait_destructor);
-
-	h->fde = event_add_fd(ctdb_db->ctdb->ev, h, h->fd[0], EVENT_FD_READ, lockwait_handler, h);
-	if (h->fde == NULL) {
-		talloc_free(h);
-		return NULL;
-	}
-
-	return h;
+		talloc_free(result);
+		return NULL;
+	}
+
+	result->child = fork();
+
+	if (result->child == (pid_t)-1) {
+		close(result->fd[0]);
+		close(result->fd[1]);
+		talloc_free(result);
+		return NULL;
+	}
+
+	result->callback = callback;
+	result->private_data = private_data;
+
+	if (result->child == 0) {
+		close(result->fd[0]);
+		/*
+		 * Do we need a tdb_reopen here?
+		 */
+		tdb_chainlock(ctdb_db->ltdb->tdb, key);
+		exit(0);
+	}
+
+	close(result->fd[1]);
+	talloc_set_destructor(result, lockwait_destructor);
+
+	result->fde = event_add_fd(ctdb_db->ctdb->ev, result, result->fd[0],
+				   EVENT_FD_READ, lockwait_handler,
+				   (void *)result);
+	if (result->fde == NULL) {
+		talloc_free(result);
+		return NULL;
+	}
+
+	return result;
 }

