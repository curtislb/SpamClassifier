From perl6-all-return-80568-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 13 20:43:33 2007
Return-Path: <perl6-all-return-80568-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3E0hW0I028785
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 20:43:32 -0400
Received: (qmail 12707 invoked by uid 514); 14 Apr 2007 00:43:07 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 12638 invoked from network); 14 Apr 2007 00:43:07 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of brian.d.foy@gmail.com)
To: perl6-language@perl.org
Subject: Should a dirhandle be a filehandle-like iterator?
Date: Fri, 13 Apr 2007 19:43:23 -0500
From: brian d foy <brian.d.foy@gmail.com>
Message-ID: <130420071943232288%brian.d.foy@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
User-Agent: Thoth/1.7.2 (Carbon/OS X)
X-Posted-By: 24.148.86.38
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 1335
Lines: 41

As I was playing around with dirhandles, I thought "What if..." (which
is actualy sorta fun to do in Pugs, where Perl 5 has everything
documented somewhere even if nobody has read it).

My goal is modest: explain fewer things in the Llama. If dirhandles
were like filehandles, there's a couple of pages of explanation I don't
need to go through.

Witness:

I can iterate through the elements of a named array with =@array:

   my @a = < 1 2 3 4 5 >;
   for =@a { .say }   # but not =< 1 2 3 4 5 > :(

and I can read lines from a file:

   for =$fh { .say }

Should I be able to go through a directory handle that way too? A "yes"
answer would be very pleasing :)

   my $dh = "doc".opendir;
   for =$dh { .say }    # doesn't work in pugs

And, since we're using objects now, .closedir can really just be
.close, right? 

And, maybe this has been already done, but wrapping a lazy filter
around anything that can return items. I'm not proposing this as a
language feature, but if many things shared the same way of getting the
next item, perhaps I could wrap it in a lazy map-ish thingy:

   my $general_iterator = lazy_mappish_thingy( "doc".opendir ); 

   for =$general_iterator { .say }

   $general_iterator.close;  # or .end, or .whatever

That last part is definetely not Llama material, but maybe I'll at
least hit the haystack.

