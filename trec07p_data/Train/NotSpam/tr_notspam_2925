From perl6-all-return-80705-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 18 17:25:05 2007
Return-Path: <perl6-all-return-80705-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3ILP40I016219
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 18 Apr 2007 17:25:05 -0400
Received: (qmail 6901 invoked by uid 514); 18 Apr 2007 21:24:39 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 6896 invoked from network); 18 Apr 2007 21:24:39 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: "Alek Storm" <alek.storm@gmail.com>
Subject: Re: [perl #42430] [PATCH] make :vtable imply :method
Date: Wed, 18 Apr 2007 14:23:55 -0700
User-Agent: KMail/1.9.5
Cc: "Allison Randal" <allison@perl.org>, perl6-internals@perl.org
References: <RT-Ticket-42430@perl.org> <200704181348.40862.chromatic@wgz.org> <189adbd0704181415q620995b0wc7f846393070dbaa@mail.gmail.com>
In-Reply-To: <189adbd0704181415q620995b0wc7f846393070dbaa@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Disposition: inline
Message-Id: <200704181423.55864.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by speedy.uwaterloo.ca id l3ILP40I016219
Status: O
Content-Length: 1041
Lines: 29

On Wednesday 18 April 2007 14:15, Alek Storm wrote:

> > If that's true, then users have to *know* the implementation details of
> > vtable methods.  Is it in C code or is it in PIR code?
>
> I have no idea why you're saying this.  Why does making vtable methods
> visible expose their implementation details?

Vtable methods written in C are not visible to PIR code.

See the code example I posted.

> I haven't said anything remotely like this.

If vtable methods written in PIR are visible to PIR code, I can draw no other 
conclusion.

If I want to use a PMC and call a vtable method directly from PIR, I can do 
that if and only if that method is a method defined in PIR.  I cannot do that 
if the method is a method defined in C.

Thus for my code to work robustly, I have to know about the internals of the 
method and hope that it does not change.

Again, the only part of :method that :vtable needs to imply is the part that 
sets the invocant in the proper register and makes 'self' available within 
the body of the method.

-- c

