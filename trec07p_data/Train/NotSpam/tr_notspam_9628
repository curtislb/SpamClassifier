From beginners-return-91565-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May 11 20:39:10 2007
Return-Path: <beginners-return-91565-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4C0d9qD003985
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 11 May 2007 20:39:09 -0400
Received: (qmail 3571 invoked by uid 514); 12 May 2007 00:39:03 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3556 invoked from network); 12 May 2007 00:39:02 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 May 2007 00:39:02 -0000
Received: (qmail 17073 invoked by uid 225); 12 May 2007 00:39:02 -0000
Delivered-To: beginners@perl.org
Received: (qmail 17062 invoked by alias); 12 May 2007 00:39:01 -0000
X-Spam-Status: No, hits=-1.1 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.232 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.232)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 11 May 2007 17:34:46 -0700
Received: by wr-out-0506.google.com with SMTP id 57so1066533wri
        for <beginners@perl.org>; Fri, 11 May 2007 17:34:42 -0700 (PDT)
Received: by 10.114.14.1 with SMTP id 1mr28782wan.1178923278653;
        Fri, 11 May 2007 15:41:18 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Fri, 11 May 2007 15:41:18 -0700 (PDT)
Message-ID: <58ce48dc0705111541w3a4e905fk43882f46f9fb95a2@mail.gmail.com>
Date: Fri, 11 May 2007 18:41:18 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Steve Finkelstein" <sf@stevefink.net>
Subject: Re: yet another regex
Cc: "Martin Barth" <martin@senfdax.de>, beginners@perl.org
In-Reply-To: <58ce48dc0705111535r4e806621y90a77d99d9d3e29b@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <4644E531.6000700@stevefink.net>
	 <20070512002026.77ab5d3d@nietzsche> <4644ED0E.7020802@stevefink.net>
	 <58ce48dc0705111534w7fffd903s3d315ced86ed94b2@mail.gmail.com>
	 <58ce48dc0705111535r4e806621y90a77d99d9d3e29b@mail.gmail.com>

On 5/11/07, Chas Owens <chas.owens@gmail.com> wrote:
> On 5/11/07, Chas Owens <chas.owens@gmail.com> wrote:
> > On 5/11/07, Steve Finkelstein <sf@stevefink.net> wrote:
> > > Oh, so it goes through each and every character in the original string
> > > passed. I thought it takes in the string as one entity and just captures
> > > the first digit it can.
> > >
> > > Does -p make it iterate over each character?
> >
> > No, the -ple causes it to write the code like this:
> >
> > $\ = $/;
> > LOOP:
> > WHILE (<>) {
> >     s/|(\d)|length(9 x $1)|eg;
> > }
> >
> > The g on the end of the regex causes it to apply the pattern multiple
> > times.  The e on the end of the regex makes it treat the replacement
> > like code instead of a string.
> >
>
> Whoops, that should be
>
> $\ = $/;
> LOOP:
> WHILE (<>) {
>    chomp;
>    s/|(\d)|length(9 x $1)|eg;
> }
>

Durn it, I will get it right eventually.

$\ = $/;
LOOP:
WHILE (<>) {
   chomp;
   s/|(\d)|length(9 x $1)|eg;
   print;
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


