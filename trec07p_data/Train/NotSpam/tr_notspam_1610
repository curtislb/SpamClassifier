From perl6-all-return-80571-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 13 22:01:31 2007
Return-Path: <perl6-all-return-80571-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3E21U0I029302
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 22:01:30 -0400
Received: (qmail 29036 invoked by uid 514); 14 Apr 2007 02:01:06 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29031 invoked from network); 14 Apr 2007 02:01:05 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of dataweaver@gmail.com designates 209.85.132.242 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=YKPKadmIAZo7ejEKSx46mB97nVYs+I/QJDQEX8B6dS5lGZuKh0hym8EN5KlwvtL9ossVrteWnMShR2zJ7ge1RnQBFUUPbsK7C0IHWHVSvD5lso0eH6d1gIP2idhxOKS/hoTfbMEW2pvlakcmtnmZW3dVSWvUCl7ET3Oh6k5zXtU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=YIBudhCZyf2QivOw2jRCUgi0NOQL05Q3ttCHC7+51HdH9A/RkNlcvNAziiSbahozberVaHsh2QYPPhXRCK2oSVnHsDYoLutoa6SaMMyRIbsf0oBSlqInf8VMW5wX3wyq90x0vzBN7gDuOmwxGaFeWdj1TlWupKb8PP/7Ut3vuq0=
Message-ID: <ef30550b0704131900h47655784h225d629c69754872@mail.gmail.com>
Date: Fri, 13 Apr 2007 19:00:39 -0700
From: "Jonathan Lang" <dataweaver@gmail.com>
To: p6l <perl6-language@perl.org>
Subject: Re: Should a dirhandle be a filehandle-like iterator?
In-Reply-To: <ef30550b0704131808w791c236dp641f6f034d0833d1@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <130420071943232288%brian.d.foy@gmail.com>
	 <ef30550b0704131808w791c236dp641f6f034d0833d1@mail.gmail.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
Status: O
Content-Length: 1393
Lines: 44

brian d foy wrote:
> As I was playing around with dirhandles, I thought "What if..." (which
> is actualy sorta fun to do in Pugs, where Perl 5 has everything
> documented somewhere even if nobody has read it).
>
> My goal is modest: explain fewer things in the Llama. If dirhandles
> were like filehandles, there's a couple of pages of explanation I don't
> need to go through.
>
> Witness:
>
> I can iterate through the elements of a named array with =@array:
>
>    my @a = < 1 2 3 4 5 >;
>    for =@a { .say }   # but not =< 1 2 3 4 5 > :(
>
> and I can read lines from a file:
>
>    for =$fh { .say }
>
> Should I be able to go through a directory handle that way too? A "yes"
> answer would be very pleasing :)
>
>    my $dh = "doc".opendir;
>    for =$dh { .say }    # doesn't work in pugs
>
> And, since we're using objects now, .closedir can really just be
> .close, right?

Please.  I've always found the "opendir ... readdir ... closedir" set
to be clunky.

Also: why distinguish between "open" and "opendir"?  If the string is
the name of a file, 'open' means "open the file"; if it is the name of
a directory, 'open' means "open the directory".  If it's the name of a
pipe, it opens the pipe.  And so on.

Note that the above could be further shorthanded, as long as you don't
need the directory handle after the loop:

    for ="doc".open { .say }

--
Jonathan "Dataweaver" Lang

