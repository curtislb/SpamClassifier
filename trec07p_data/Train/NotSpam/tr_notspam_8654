From perl6-all-return-81185-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  8 18:54:28 2007
Return-Path: <perl6-all-return-81185-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l48MsRqD021317
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 8 May 2007 18:54:27 -0400
Received: (qmail 328 invoked by uid 514); 8 May 2007 22:54:25 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 323 invoked from network); 8 May 2007 22:54:25 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
X-Virus-Scanned: by both ClamAV and Kaspersky at http://aliencamel.com/
Message-ID: <4640CC67.4060606@perl.org>
Date: Tue, 08 May 2007 12:15:51 -0700
From: Allison Randal <allison@perl.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: "Patrick R. Michaud" <pmichaud@pobox.com>
CC: Klaas-Jan Stol <parrotcode@gmail.com>, perl6-internals@perl.org
Subject: Re: PIR syntax methods ambiguity
References: <7b0e52b40705032235q20a0cce9pdd5c80cc6d08e2f4@mail.gmail.com> <4640B856.1020102@perl.org> <20070508183416.GC30194@host.pmichaud.com>
In-Reply-To: <20070508183416.GC30194@host.pmichaud.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

Patrick R. Michaud wrote:
> 
> Personally, I would think that the standard approach for going from
> a String PMC to a method invocation would be via the find_method
> opcode.  But that's just me.

That goes back to the philosophical question of "Is PIR a language to be 
generated by compilers, or is it a language for humans to use?" It's 
about half-way in between at the moment, and the conflict shows.

For generated code, it's no problem to require a methodname lookup for 
every call. For hand-written code it's insanely annoying (which is the 
reason the syntactic sugar was introduced in the first place).

Perhaps PIR's next stage of evolution is to split off into two 
languages, one for generation and one for humans.

Allison

