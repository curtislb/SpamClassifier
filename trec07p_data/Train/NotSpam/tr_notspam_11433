From beginners-return-91783-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 17 16:58:52 2007
Return-Path: <beginners-return-91783-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4HKwpqD004564
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 16:58:52 -0400
Received: (qmail 14062 invoked by uid 514); 17 May 2007 20:58:43 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 14053 invoked from network); 17 May 2007 20:58:43 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 May 2007 20:58:43 -0000
Received: (qmail 26497 invoked by uid 225); 17 May 2007 20:58:42 -0000
Delivered-To: beginners@perl.org
Received: (qmail 26492 invoked by alias); 17 May 2007 20:58:42 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from mta3.brinkster.com (HELO mta3.brinkster.com) (65.182.109.72)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 17 May 2007 13:58:01 -0700
Received: from localhost (localhost.localdomain [127.0.0.1])
	by mta3.brinkster.com (Postfix) with ESMTP id C5C2B3E8094;
	Thu, 17 May 2007 16:57:54 -0400 (EDT)
X-Virus-Scanned: amavisd-new at 
X-Spam-Score: -3.352
X-Spam-Level: 
Received: from mta3.brinkster.com ([127.0.0.1])
	by localhost (mta3.brinkster.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id tABGrXG8TxOm; Thu, 17 May 2007 16:57:52 -0400 (EDT)
Received: from mail2a.brinkster.com (store2a.brinkster.com [10.0.6.152])
	by mta3.brinkster.com (Postfix) with ESMTP id 1AB6A3E810B;
	Thu, 17 May 2007 16:57:52 -0400 (EDT)
Date: Thu, 17 May 2007 16:57:52 -0400 (EDT)
From: yaron@kahanovitch.com
To: Romeo Theriault <romeotheriault@fastmail.fm>
Cc: beginners@perl.org
Message-ID: <21390009.173151179435472183.JavaMail.root@store2a.brinkster.com>
In-Reply-To: <24573164.172931179435203919.JavaMail.root@store2a.brinkster.com>
Subject: Re: Store contents of array in a variable?
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
X-Originating-IP: [80.230.55.113]
X-Old-Spam-Status: No, score=-3.352 tagged_above=-10 required=5
	tests=[ALL_TRUSTED=-1.8, AWL=0.086, BAYES_00=-2.599,
	NO_REAL_NAME=0.961]
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l4HKwpqD004564

i again


A little correction:
my $var = join ("delimiter",@$array_ref);

Yaron Kahanovitch

----- Original Message -----
From: yaron@kahanovitch.com
To: "Romeo Theriault" <romeotheriault@fastmail.fm>
Cc: beginners@perl.org
Sent: 23:53:23 (GMT+0200) Asia/Jerusalem יום חמישי 17 מאי 2007
Subject: Re: Store contents of array in a variable?

Hi,

>From your question I understand that you are looking for the join commang:

my $var = join ("delimiter",$@array_ref);

Hope that helps

Yaron Kahanovitch
----- Original Message -----
From: "Romeo Theriault" <romeotheriault@fastmail.fm>
To: beginners@perl.org
Sent: 23:39:22 (GMT+0200) Asia/Jerusalem יום חמישי 17 מאי 2007
Subject: Store contents of array in a variable?

This is probably a dumb question but is it possible to store the
contents of an array into a variable?

Something like this:

$variable = foreach $array_ref7 (@rowstash7) {
       return "@$array_ref7\n";
    }

I have this script below in which I am trying to send the contents of an
array within an email and don't quite know how to deal with getting the
contents of the array's into the email message. Suggestions are very
welcome.

Thanks,

Romeo


#!/usr/bin/perl

use warnings;
use strict;
use DBI;
use Net::SMTP;


my @rowstash7;
my @rowstash30;
my @rowstash365;
my $array_ref7;
my $array_ref30;
my $array_ref365;
my $somevariable = "test";


## Connect to the database.
my $dbh = DBI->connect( "DBI:mysql:database=antivirus;host=localhost",
    "user", "password", { 'RaiseError' => 1 } );

&success_querie(7);
&success_querie(30);
&success_querie(365);

&sendmail('antivirus_downloads@umfk.maine.edu',
'romeo.theriault@maine.edu', "Antivirus Downloads", 'mail.maine.edu',
'romeo.theriault@maine.edu', "Download Activity for the last
Week:\n$somevariable\n\nDownload Activity for the last
Month:\n$somevariable\n\nDownload Activity for the last
Year:\n$somevariable");



## Function to query the database for the info.
sub success_querie {
    my ($searchlength) = @_;
    my $select_handle =
      $dbh->prepare_cached(
'SELECT name,COUNT(*) FROM success WHERE datetime > SUBDATE(NOW(),
INTERVAL ? DAY) GROUP BY name;'
      );

    die "Couldn't prepare queries; aborting"
      unless defined $select_handle;

    $select_handle->execute($searchlength) or return 0;
    my ( $name, $count );
    $select_handle->bind_columns( \$name, \$count );

    if ( $searchlength == 7 ) {
        while ( $array_ref7 = $select_handle->fetchrow_arrayref() ) {
            push @rowstash7, [@$array_ref7];

            #print "$name, $count\n";
        }
    }
    elsif ( $searchlength == 30 ) {
        while ( $array_ref30 = $select_handle->fetchrow_arrayref() ) {
            push @rowstash30, [@$array_ref30];

            #print "$name, $count\n";
        }
    }
    else {
        while ( $array_ref365 = $select_handle->fetchrow_arrayref() ) {
            push @rowstash365, [@$array_ref365];

            #print "$name, $count\n";
        }
    }

    $select_handle->finish();

    return 1;    # Success

    ## Disconnect from the database.
    $dbh->disconnect();

}

## Function to send the mail.
sub sendmail {
    my ( $from, $to, $subject, $server, $replyto, $message ) = @_;
    my $smtp = Net::SMTP->new($server);
    $smtp->mail($from);
    $smtp->to($to);

    #$smtp->bcc($bcc, $bcc1);
    $smtp->data();
    $smtp->datasend("To: $to\n");
    $smtp->datasend("Subject: $subject\n");
    $smtp->datasend("Reply-To: $replyto\n");
    $smtp->datasend("$message");
    $smtp->dataend();

    $smtp->quit;
}

#sub messagebody {
#       Print "Download Activity for the last Week:\n";
#       foreach $array_ref7 (@rowstash7) {
#          return "@$array_ref7\n";
#       }
#       print "Download Activity for the last Month:\n";
#       foreach $array_ref30 (@rowstash30) {
#          return "@$array_ref30\n";
#       }
#       print "Download Activity for the last Year:\n";
#       foreach $array_ref365 (@rowstash365) {
#               return "@$array_ref365\n";
#       }
#}


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/




-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/



