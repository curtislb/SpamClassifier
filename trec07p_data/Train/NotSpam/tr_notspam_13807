From r-help-bounces@stat.math.ethz.ch  Sun May 27 11:03:59 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4RF3vqD003132
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 27 May 2007 11:03:58 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4RF3Jkg010071;
	Sun, 27 May 2007 17:03:31 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from smtpout.mac.com (smtpout.mac.com [17.250.248.186])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4REx4L3008523
	for <r-help@stat.math.ethz.ch>; Sun, 27 May 2007 16:59:05 +0200
Received: from mac.com (smtpin04-en2 [10.13.10.149])
	by smtpout.mac.com (Xserve/smtpout16/MantshX 4.0) with ESMTP id
	l4REx1SL022060; Sun, 27 May 2007 07:59:01 -0700 (PDT)
Received: from [192.168.1.102] (n218103204030.netvigator.com [218.103.204.30])
	(authenticated bits=0)
	by mac.com (Xserve/smtpin04/MantshX 4.0) with ESMTP id l4REwrMw012060
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NO);
	Sun, 27 May 2007 07:58:59 -0700 (PDT)
In-Reply-To: <971536df0705270748qc9e1b36x1193d94fa39c8bc5@mail.gmail.com>
References: <4FB4B5E2-57E2-4C08-BC54-CA481064D045@mac.com>
	<971536df0705270748qc9e1b36x1193d94fa39c8bc5@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.2)
Message-Id: <408A3E20-F66A-442E-B721-4A013A1D1824@mac.com>
From: Albert Pang <albert.pang@mac.com>
Date: Sun, 27 May 2007 22:58:52 +0800
To: Gabor Grothendieck <ggrothendieck@gmail.com>
X-Mailer: Apple Mail (2.752.2)
X-Brightmail-Tracker: AAAAAA==
X-Brightmail-scanned: yes
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Looking for the first observation within the month
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

I have only just able to dissect Jim's solution and realize I am  
actually not very far away from the answer.  One last step was to use  
"lapply".  Jim, thanks again for the help.

Gabor, thanks for the suggestion.  Let me have a read on what the zoo  
package is about.  Thanks a lot for the pointer!

Albert

On May 27, 2007, at 10:48 PM, Gabor Grothendieck wrote:

> Use the zoo package to represent data like this.
>
> Here time(z) is a vector of the dates and as.yearmon(time(z))
> is the year/month of each date.  With FUN=head1, ave picks out the  
> first
> date in any month and aggregate then aggregates over all
> values in the same year/month choosing the first one.
>
> Lines <- "Date                    Observation
>
> 2007-05-23              20
> 2007-05-22              30
> 2007-05-21              10
>
> 2007-04-10              50
> 2007-04-09              40
> 2007-04-07              30
>
> 2007-03-05              10
> "
>
> library(zoo)
>
> # z <- read.zoo("myfile.dat", header = TRUE)
> z <- read.zoo(textConnection(Lines), header = TRUE)
>
> head1 <- function(x, n = 1) head(x, n)
> aggregate(z, ave(time(z), as.yearmon(time(z)), FUN = head1), head1)
>
>
> For more on zoo try:
>
> library(zoo)
> vignette("zoo")
>
> and also read the Help Desk article in R News 4/1 about dates.
>
>
>
> On 5/27/07, Albert Pang <albert.pang@mac.com> wrote:
>> Hi all, I have a simple data frame, first list is a list of dates (in
>> "%Y-%m-%d" format) and second list an observation on that particular
>> date.  There might not be observations everyday.  Let's just say
>> there are no observations on saturdays and sundays.  Now I want to
>> select the first observation of every month into a list.  Is there an
>> easy way to do that?
>>
>> Date                    Observation
>> ----                    -----------
>> 2007-05-23              20
>> 2007-05-22              30
>> 2007-05-21              10
>>
>> 2007-04-10              50
>> 2007-04-09              40
>> 2007-04-07              30
>>
>> 2007-03-05              10
>>
>> The result I need is the data frame
>>
>> 2007-05-21              10
>> 2007-04-07              30
>> 2007-03-05              10
>>
>> or I am equally happy with just the vector c(10, 30, 10)
>>
>> I am new to R and after going through the manuals and the
>> documentation I can gather, I have come up with a convoluted way of
>> doing it
>>
>> 1)  I first get the Date into a vector.  (I am articificially
>> reproducing this vector below and call it A)
>>
>>  > A<-c( as.Date("2007-05-23"), as.Date("2007-05-22"), as.Date
>> ("2007-05-21"), as.Date("2007-04-10"), as.Date("2007-04-09"), as.Date
>> ("2007-04-07"), as.Date("2007-03-05"))
>>  > A
>> [1] "2007-05-23" "2007-05-22" "2007-05-21" "2007-04-10" "2007-04-09"
>> [6] "2007-04-07" "2007-03-05"
>>
>>
>> 2)  use cut with breaks falling on the months
>>
>>  > B<-cut(A, breaks="month")
>>  > B
>> [1] 2007-05-01 2007-05-01 2007-05-01 2007-04-01 2007-04-01 2007-04-01
>> [7] 2007-03-01
>> Levels: 2007-03-01 2007-04-01 2007-05-01
>>
>>
>> 3)  then split to get a list of vectors group by the boundary of the
>> date
>>
>>  > C<-split(A, B)
>>  > C
>> $`2007-03-01`
>> [1] "2007-03-05"
>>
>> $`2007-04-01`
>> [1] "2007-04-10" "2007-04-09" "2007-04-07"
>>
>> $`2007-05-01`
>> [1] "2007-05-23" "2007-05-22" "2007-05-21"
>>
>>
>> 4)  in a for loop I loop through the elements within the list (the
>> elements are vectors of dates) with each vector I find the minimum
>> and concatentate it to a final vector D
>>
>>  > D<-numeric()
>>  > for ( i in 1:length(C)){ D <- c( D, min(C[[i]]))}
>>  > class(D)<-"Date"
>>  > D
>> [1] "2007-03-05" "2007-04-07" "2007-05-21"
>>
>> Next with D, I then go back and find out the positions of the
>> elements in D within A.  And then use the result as an index vector
>> into the vector of observations (which is not shown here)  I feel
>> sure I am doing it the stupid way (or the procedural way)
>>
>> Is there a more declarative way of doing it?  Any pointers will be
>> greatly appreciated!
>>
>> Thanks a lot in advance,
>>
>> Albert Pang
>>
>>
>>
>>
>>
>>        [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-help@stat.math.ethz.ch mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide http://www.R-project.org/posting- 
>> guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

