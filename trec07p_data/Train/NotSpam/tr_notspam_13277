From perl6-all-return-81585-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 24 18:18:23 2007
Return-Path: <perl6-all-return-81585-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4OMIMqD011436
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 24 May 2007 18:18:23 -0400
Received: (qmail 13985 invoked by uid 514); 24 May 2007 22:18:18 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 13980 invoked from network); 24 May 2007 22:18:18 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Mime-Version: 1.0
Message-Id: <p06240801c27bbde16644@[192.168.1.101]>
In-Reply-To: <20070524203042.GA27547@wall.org>
References: <ef30550b0705231633u3754f88re752c2c50a0f2f1@mail.gmail.com>
 <20070524203042.GA27547@wall.org>
Date: Thu, 24 May 2007 15:17:35 -0700
To: p6l <perl6-language@perl.org>
From: Darren Duncan <darren@DarrenDuncan.net>
Subject: Re: [S02] Sigils
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Scanned-By: MIMEDefang 2.36
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

At 1:30 PM -0700 5/24/07, Larry Wall wrote:
>Yes, provided we consider Junction and Any to both be subtypes of Object.

All this time, I was thinking that "Any" and "Object" were 
synonymous, that Any is a symbolic|syntactic alias for Object, and 
Any is not a subtype of Object.

Object is the maximal type of the type system, such that every type isa Object.

Any is an alias for Object, used to mark parameters or variables that 
are allowed to hold values of any type, because spelling Any rather 
than Object is friendlier for humans.

Afaik, saying Object $foo is the same as Any $foo.

There is no type called Any; that is just a flag for when you accept Object.

Or so I was thinking.

If the actual situation is different, please say how.

-- Darren Duncan

