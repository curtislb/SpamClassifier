From perl6-all-return-80834-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Apr 23 20:13:11 2007
Return-Path: <perl6-all-return-80834-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3O0DA6w003086
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 23 Apr 2007 20:13:10 -0400
Received: (qmail 22434 invoked by uid 514); 24 Apr 2007 00:13:08 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 22426 invoked from network); 24 Apr 2007 00:13:08 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of mddiep@gmail.com)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of mddiep@gmail.com designates 64.233.166.179 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=K4aV1d5fhXXKaw6+Wa6binEeUUF9oXmkmcXETHjDV4fx8/bCTfqYMpC1jh5EAWAWa3+QcG0XIlRdDYVlMrPMKDUSnC5pdkQiiOpJvemLjDCOicOPUmjQeJxS0qEuvkjqiqv991v+5w+PgkdaOPvRRHsnQqJYVoi4+W2J/gLi7xI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=TLaPB6L2K/w09cMvops7UuE30ERGsQljUCwgbXqqHlJ+Kc8N/u1MvupT1gQ0dHglbaUAQrDs7w0vDEhkLPHsrrXUd/H3tH2P1sZYQaV+eV0I91p9LAccqUwJ854S5oyV1P8mI1fOkxJd4mcBAztzdvJoh25Agyofgi7RkAEKQ0c=
Message-ID: <198c87380704231710r7fcb6c1duc82ed351038be17f@mail.gmail.com>
Date: Mon, 23 Apr 2007 20:10:39 -0400
From: "Matt Diephouse" <mddiep@gmail.com>
Reply-To: matt@diephouse.com
To: chromatic <chromatic@wgz.org>
Subject: Re: [PATCH] Re-work Parrot_process_args
Cc: parrot-porters@perl.org
In-Reply-To: <200704230019.17382.chromatic@wgz.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <198c87380704221738v4c87182cyb3b648734f631172@mail.gmail.com>
	 <200704230019.17382.chromatic@wgz.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_SIGNED
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,DK_SIGNED
Status: O
Content-Length: 1771
Lines: 49

chromatic <chromatic@wgz.org> wrote:
> On Sunday 22 April 2007 17:38, Matt Diephouse wrote:
>
> > The attached patch completely reworks Parrot_process_args. The changes
> > are extensive and I think they make the code much clearer. Rather than
> > just check it in, I thought I'd try to get feedback here to make sure
> > that it is clearer to everyone else and not just to myself.
>
> It's a lot clearer.

Good.

> > This patch also fixes a few bugs:
> >     #40490: Flat/Slurpy Named Parameter Passing Errors
>
> Yay!

I thought you might like that. :)

> >     A couple todo'd error condition tests
> >
> > I'm sure there is more that can be done to clean things up, but this
> > is at least a start. I've already spent 15+ hours on this patch, so
> > I'm ready to check things in and leave further improvements for
> > another time.
>
> I only noticed one thing (besides large swaths of removed code, which is
> always nice).  This code occurs multiple times:
>
> +                /* if the :flat arg is empty, just go to the next arg */
> +                if (!st->src.slurp_n) {
> +                    st->src.mode &= ~CALL_STATE_FLATTEN;
> +                    st->src.i++;
> +                }
>
> It's three lines; is it worth extracting somehow?

It could definitely be placed inside start_flatten(), but that would
make the code a little misleading, I think. I'm not sure it's worth
placing it in a function of its own; the transparency may be worth
something in this case. Having said that, I think this section of the
code could be cleaned up more with further refactoring down the road.

There's also a large ~20 line section of code that is repeated in this
patch that I'll move to a function before I commit.

-- 
Matt Diephouse
http://matt.diephouse.com

