From perl6-all-return-82017-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 16 17:18:30 2007
Return-Path: <perl6-all-return-82017-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5GLITL9019591
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 16 Jun 2007 17:18:30 -0400
Received: (qmail 19268 invoked by uid 514); 16 Jun 2007 21:18:27 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 19263 invoked from network); 16 Jun 2007 21:18:27 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Message-ID: <4674536D.5090206@casella.verplant.org>
Date: Sat, 16 Jun 2007 22:17:33 +0100
From: Moritz Lenz <moritz@casella.verplant.org>
User-Agent: Icedove 1.5.0.12 (X11/20070607)
MIME-Version: 1.0
To: perl6-language@perl.org
References: <20070613205525.7ECA0CB9B8@x12.develooper.com>	 <ef30550b0706131429o34838a6es6704e8ec73851b49@mail.gmail.com>	 <467073C4.6020708@conway.org>	 <ef30550b0706140749w6c6290e9qc164901b578a8d5b@mail.gmail.com>	 <832f158a0706141722o5f68cf09l724d4f4520ee146@mail.gmail.com>	 <150620070756055824%brian.d.foy@gmail.com>	 <4673C546.5060806@conway.org>	 <160620070823046479%brian.d.foy@gmail.com>	 <ef30550b0706161306g1f7fe8d6g57185b764cfdcbca@mail.gmail.com> <ef30550b0706161347y32338d5fw4729a25594de84fd@mail.gmail.com>
In-Reply-To: <ef30550b0706161347y32338d5fw4729a25594de84fd@mail.gmail.com>
X-Enigmail-Version: 0.94.3.0
Content-Type: multipart/signed; micalg=pgp-sha1;
 protocol="application/pgp-signature";
 boundary="------------enig23061172CBE4EED15CD8BD4E"
X-SA-Exim-Connect-IP: 80.193.211.68
X-SA-Exim-Mail-From: moritz@casella.verplant.org
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on 
	casella.verplant.org
X-Spam-Level: 
Subject: Re: [svn:perl6-synopsis] r14421 - doc/trunk/design/syn
X-SA-Exim-Version: 4.2.1 (built Tue, 09 Jan 2007 17:23:22 +0000)
X-SA-Exim-Scanned: Yes (on casella.faui2k3.de)
X-Old-Spam-Status: No, score=-3.5 required=5.0 tests=ALL_TRUSTED,AWL,BAYES_00 
	autolearn=ham version=3.1.7-deb
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

--------------enig23061172CBE4EED15CD8BD4E
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Jonathan Lang wrote:
> Jonathan Lang wrote:
>> Which is not to say that there isn't a time and place when ease of
>> implementation should trump ease of programming; taking an extreme
>> example, being able to write a program that consists of the single
>> line:
>>
>>   attend my every wish
>>
>> is the ultimate in terms of ease of programming; it's also impossible
>> to implement, barring the invention of mind-reading hardware and
>> sapient artificial intelligence software.  If a small increase in the
>> programmer's learning curve is the price that must be paid to achieve
>> a massive reduction in the implementor's workload, it may very well be=

>> worthwhile to foist some of the complexity onto the programmer.
>>
>> The question is whether or not this is one of those cases.
>=20
> Addendum: let me note that Perl has a reputation for bending over
> backward to accommodate the programmer; as such, the difference in
> implementation workloads for the two models that Damian referenced is
> going to have to be _very_ severe for "ease of implementation" to win
> out over "ease of programming" - IMHO.  Unfortunately for me, MHO
> doesn't count as much as DHO.  "Help, help!  I'm being oppressed!"

I agree, and I want to make a point for the "ease of programming" point
of view.

If we have any kind of references to code, the POD parser must be able
to parse method/sub signatures. But since default values are allowed for
optional (and iirc named) arguments, it has to parse arbitrary complex
expressions anyway.

Which means that a complete POD parse will likely have to fall back to
STD.pm, and in that case it's ridiculous to argue about a line based
parser for POD anymore - when you can parse perl 6, you can just pick
the POD from the syntax tree.

Moreover part of the Perl philosophy has always been to provide the best
for the programmer, even if it makes implementation of the
interpreter/compiler rather hard - why should we stop with this
philosophy when talking about POD and POD-Parser?


I'd find it very annoying to have lines starting with '=3D' in a heredoc
beeing counted as POD. Humans don't think in terms of lines, but in
terms of visual blocks (at least I do), so if everything in heredoc goes
verbatim into a string, I'd expect _everything_ in that block to go into
that string. Everything else looks like an artificial exception to me.



--=20
Moritz Lenz
http://moritz.faui2k3.org/ |  http://perl-6.de/


--------------enig23061172CBE4EED15CD8BD4E
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGdFNxAAkekJBI0yIRAgULAJoDsurF1EbdWBor2lzjO/y5085TSQCgnY4p
hegvnsFoZ/wdyT1EGNPA7uA=
=2KTR
-----END PGP SIGNATURE-----

--------------enig23061172CBE4EED15CD8BD4E--

