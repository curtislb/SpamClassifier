From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue Jun  5 23:18:44 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l563IihB016818
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 5 Jun 2007 23:18:44 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 1B10A163895
	for <ktwarwic@speedy.uwaterloo.ca>; Wed,  6 Jun 2007 03:18:38 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-technical@lists.samba.org
Delivered-To: samba-technical@lists.samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id 382EE162AC2; Wed,  6 Jun 2007 03:18:13 +0000 (GMT)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <18022.10164.545376.678905@samba.org>
Date: Wed, 6 Jun 2007 13:19:16 +1000
To: "Gerald (Jerry) Carter" <jerry@samba.org>
In-Reply-To: <Pine.LNX.4.64.0706052130040.22014@dolby.south.ad.plainjoe.org>
References: <D4ADD9E4-9613-466E-9618-6DC251575315@samba.org>
	<1180906540.24923.198.camel@localhost.localdomain>
	<46636B0C.2030202@samba.org>
	<1180928372.24923.238.camel@localhost.localdomain>
	<089D1CE1-5D21-4711-918B-48E2C36C5D1D@samba.org>
	<18021.64361.164851.672386@samba.org>
	<5A8F8CFA-D862-4C8D-8134-A88913D85DED@samba.org>
	<Pine.LNX.4.64.0706052130040.22014@dolby.south.ad.plainjoe.org>
X-Mailer: VM 7.19 under Emacs 22.0.95.1
From: tridge@samba.org
Cc: samba-technical@lists.samba.org
Subject: Re: getting rid of mkproto.sh from Samba3
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: tridge@samba.org
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Jerry,

 > I don't want to start any flame wars on style so this is
 > all I will say on the subject, but IMO all of your points 
 > imply that autogenerated headers are better because they
 > support bad programming habits.

I see it as preventing programmer mistakes. If we had tools to catch
those mistakes, then the situation would be different.

So to get rid of auto generated headers, I think it would be wise to
first write tools along the same lines as the current findstatic.pl
and minimal_includes.pl, but which catch the sort of errors that hand
written prototypes tend to lead to.

It's perfectly possible to write tools like that. For example, you
could have a tool that checks that the argument names in all of the
hand written prototypes match the argument names of the real
functions. It's a bit harder to check that the comment blocks match,
but might be doable somehow?

You could also have a tool that scans the hand written prototypes and
checks that all the functions exist in the object files, and have the
right symbol type (using objdump or nm). 

Another tool could check that every function that has a prototype
includes the header that declares the prototype.

All these tools would be potentially useful even if we are using
auto-generated prototypes, because we could use them on bits of
imported code (like heimdal) and on pieces of code that we decide not
to auto-prototype. So they might be worth writing anyway.

You may be tempted to think that auto-generated prototypes are not
needed as so many other projects get away without them. However if you
try minimal_includes.pl and findstatic.pl on those other projects, I
think you'll find that they do suffer from these sorts of
problems. Stephen Rothwell and myself spent some time running them
over the Linux kernel. Ben Elliston spent some time running them over
the gcc source code, and I think he now runs them very regularly. They
found piles of errors in both cases, which have now been fixed. This
is despite the fact that both projects have people doing constant
janitorial work looking for exactly this sort of problem.

I'd be surprised to find that any large C program which doesn't use
tools like these and doesn't auto-generate prototypes shows up clean
if you check for the sorts of mistakes I have mentioned. Can you think
of one that is a candiate for really good coding practices that we
could check?

It also relates to real bugs, and can even cause security problems in
some circumstances. There is a piece of Samba4 where we don't
correctly generate and check prototypes at the moment - the 'init'
functions for modules. I recently found we were getting a SIGBUS on
solaris/ultrasparc when starting smbd. The culprit? One of the init
functions (smb_setup_ejs_net) was returning void instead of
NTSTATUS. On every other platform this was OK, but on ultrasparc it
gets a SIGBUS. That bug happened because the code that called the
function didn't include a correct auto-generated prototype. Instead,
it used a different (incorrect) prototype. See r23011 in Samba4.

Cheers, Tridge

