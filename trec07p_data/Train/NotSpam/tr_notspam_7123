From perl6-all-return-81066-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 20:12:02 2007
Return-Path: <perl6-all-return-81066-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l430C0b9028990
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 20:12:00 -0400
Received: (qmail 6952 invoked by uid 514); 3 May 2007 00:11:59 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 6947 invoked from network); 3 May 2007 00:11:58 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Matt Diephouse (via RT) <parrotbug-followup@parrotcode.org>
X-RT-NewTicket: yes
To: bugs-bitbucket@netlabs.develooper.com
Resent-To: perl6-internals@perl.org
Mail-Followup-To: perl6-internals@perl.org
Reply-To: perl6-internals@perl.org
Date: Wed, 02 May 2007 17:10:32 -0700
Subject: [perl #42865] [BUG] There's no way to set a vtable function with a Sub at runtime 
In-Reply-To: <B6A75271-9DC2-4769-9084-9001D6313798@diephouse.com>
References: <RT-Ticket-42865@perl.org> <B6A75271-9DC2-4769-9084-9001D6313798@diephouse.com>
Message-ID: <rt-3.6.HEAD-15879-1178151032-48.42865-72-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #42865
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: matt@diephouse.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit
X-RT-Original-Encoding: utf-8
Resent-Message-Id: <20070503001033.369922AFD4@x3.develooper.com>
Resent-Date: Wed,  2 May 2007 17:10:33 -0700 (PDT)
Resent-From: rt-matt=diephouse.com@netlabs.develooper.com
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

# New Ticket Created by  Matt Diephouse 
# Please include the string:  [perl #42865]
# in the subject line of all future correspondence about this issue. 
# <URL: http://rt.perl.org/rt3/Ticket/Display.html?id=42865 >


There's no real way to set a vtable function at runtime. It's  
possible to use the PIR compiler to eval a new function, but there's  
no way to take an existing sub and add it as a vtable function[1].

Before :vtable, this operation simply meant adding the sub to the new  
namespace under the right name. But since that's going away, we need  
a new way to do things.

I suspect we need some sort of set_vtable opcode.

     set_vtable ['Foo'; 'Bar'], 'get_string', $P0

Maybe there should be set_root_vtable and set_hll_vtable variants to  
go along with to match the set_*global opcodes.

I'm not sure how this should interact with PMCs or whether there  
should be get_*vtable opcodes. It should be easy enough to return a  
Bound_NCI PMC if the user requests a vtable function from a PMC.

[1] Technically, there is a way, but it's a bug. See RT#42864.

--
Matt Diephouse
http://matt.diephouse.com


