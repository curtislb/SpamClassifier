From beginners-return-91812-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun May 20 12:22:05 2007
Return-Path: <beginners-return-91812-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4KGM3qD020879
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 20 May 2007 12:22:04 -0400
Received: (qmail 18039 invoked by uid 514); 20 May 2007 16:21:54 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 18022 invoked from network); 20 May 2007 16:21:54 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 May 2007 16:21:54 -0000
Received: (qmail 623 invoked by uid 225); 20 May 2007 16:21:53 -0000
Delivered-To: beginners@perl.org
Received: (qmail 611 invoked by alias); 20 May 2007 16:21:53 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from steelhead.pace2020.com (HELO steelhead.pace2020.com) (72.15.210.67)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 20 May 2007 09:21:34 -0700
Received: from localhost (localhost.localdomain [127.0.0.1])
	by steelhead.pace2020.com (Postfix) with ESMTP id 0171619603F2
	for <beginners@perl.org>; Sun, 20 May 2007 12:21:30 -0400 (EDT)
X-DSPAM-Result: Innocent
X-DSPAM-Confidence: 0.9997
X-DSPAM-Probability: 0.0000
X-DSPAM-Signature: 46507588237531944810545
X-DSPAM-Factors: 27,
X-Virus-Scanned: amavisd-new at 
Received: from steelhead.pace2020.com ([127.0.0.1])
	by localhost (steelhead.pace2020.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id qDrn39R7zeXo for <beginners@perl.org>;
	Sun, 20 May 2007 12:21:28 -0400 (EDT)
Received: from shipwreck (adsl-072-148-074-006.sip.gnv.bellsouth.net [72.148.74.6])
	by steelhead.pace2020.com (Postfix) with ESMTP id 7385519603EF
	for <beginners@perl.org>; Sun, 20 May 2007 12:21:26 -0400 (EDT)
Reply-To: <theal@pace2020.com>
From: "Tony Heal" <theal@pace2020.com>
To: <beginners@perl.org>
Subject: logic not working
Date: Sun, 20 May 2007 12:21:24 -0400
Organization: Pace Systems Group, Inc.
Message-ID: <01c101c79afa$e99b7790$800101df@shipwreck>
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_01C2_01C79AD9.6289D790"
X-Mailer: Microsoft Office Outlook 11
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
thread-index: Acea+tKweja0Lvu7THGn87Z6V81D9A==
X-Virus-Checked: Checked

------=_NextPart_000_01C2_01C79AD9.6289D790
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit

OK I am probably missing something stupid, but I can not get this to work. The output should be 'Daily-{day of
week)-{MMM}-{DD}-{YYYY}' for Sunday thru Friday and 'Weekly-{1|2|3}-{day of week)-{MMM}-{DD}-{YYYY} for Saturday and
every fourth Saturday should start rotating months 'Month-{1|2|3}-{day of week)-{MMM}-{DD}-{YYYY}

 

Anyone got any ideas?

 

Oh, there is some code at the front that changes the system date from May 1 to 31

 

Thanks

 

 

Tony

 

 

#!/usr/bin/perl

use warnings;

use strict;

my $today = `date +%m%d%H%M`;

my $count = "501";

while ($count lt 532){ 

my $that = "0$count" . "2100";

system("date $that");

my $backupBaseDir = '/gfsbackup';

my $logFile = "$backupBaseDir\/gfs_backup.log";

my $scpCMD = 'scp -i /usr/backup/.ssh/haddock';

my $backupDir = gfsBackup();

my @ePaceServers = ("silverfish", "catfish", "bonefish");

if ( ! -d $backupBaseDir )

{

            mkdir $backupBaseDir;

}

sub gfsBackup

{

my ($sec,$min,$hour,$mday,$mon,$yearOffset,$wday,$yday,$isdst)=localtime(time);

my $year = $yearOffset + 1900;

my ($weeksec,$weekmin,$weekhour,$weekmday,$weekmon,$weekyearOffset,$weekwday,$weekyday,$weekisdst)=localtime(time -
(84600 * 8));

my $weekyear = $weekyearOffset + 1900;

my ($msec,$mmin,$mhour,$mmday,$mmon,$myearOffset,$mwday,$myday,$misdst)=localtime(time - (84600 * 29));

my $myear = $yearOffset + 1900;

my $week = int($yday/7);

my $sevendays = (time - (84600 * 7));

my @days = ("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday");

my @months = ("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");

my ($directory, @dir, $month, $gfsDir, $DatedgfsDir, $monthDirectory, @monthDir, $lastWeek, $dirtemp);

if ( $days[$wday] =~ "Saturday" )

            {

            opendir (DIR, $backupBaseDir);

            my @readdir = readdir(DIR);

            closedir(DIR);

            while (<@readdir>)

            {

                        $directory = $_;

                        print "directory = $directory\n";

                        if ( $directory =~ "$months[$weekmon]-$weekmday-$weekyear" )

                        {

                                    @dir = split( /-/, $directory);

                                    if ( $dir[0] =~ "Monthly" )

                                    {

                                                $gfsDir = "Weekly-1";

                                    }

                                    if ( $dir[0] =~ "Weekly" )

                                    {

                                                if ( $dir[1] lt 3 )

                                                            {

                                                                        my $weekcount = $dir[1] + 1;

                                                                        $gfsDir = "Weekly-$weekcount";

                                                            }

                                                if ( $dir[1] eq 3 )

                                                            {

                                                            my $monthcount = `ls $backupBaseDir | grep
"$months[$mmon]-$mmday-$myear" | cut -d- -f2`;

                                                            if ( $monthcount eq "13" )

                                                                        {

                                                                                    $gfsDir = "Monthly-1";

                                                                        }

                                                            else

                                                                        {

                                                                                    $monthcount++;

                                                                                    $gfsDir = "Monthly-$monthcount";

                                                                        }

                                                            }

                                    }

                                    last;

                        }

            }

            }

            elsif ( $days[$wday] =~ "Saturday" )

            {

                        $gfsDir = "Weekly-1";

                        last;

            }

if ( ! $gfsDir )

{

            $gfsDir = "Daily-$days[$wday]-$months[$mon]-$mday-$year";

            mkdir "$backupBaseDir/$gfsDir";

            chdir "$backupBaseDir/$gfsDir";

            return $gfsDir;

}

else

{

            $DatedgfsDir = "$gfsDir-$days[$wday]-$months[$mon]-$mday-$year";

            mkdir "$backupBaseDir/$DatedgfsDir";

            chdir "$backupBaseDir/$DatedgfsDir";

            $gfsDir = $DatedgfsDir;

            return $gfsDir;

}

}

$count++;}

 


------=_NextPart_000_01C2_01C79AD9.6289D790--

