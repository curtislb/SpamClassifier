From perl6-all-return-81090-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May  4 00:07:44 2007
Return-Path: <perl6-all-return-81090-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4447hqD010930
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 4 May 2007 00:07:44 -0400
Received: (qmail 4538 invoked by uid 514); 4 May 2007 04:07:42 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 4532 invoked from network); 4 May 2007 04:07:41 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
X-Virus-Scanned: by both ClamAV and Kaspersky at http://aliencamel.com/
Message-ID: <463AAA3B.6040104@perl.org>
Date: Thu, 03 May 2007 20:36:27 -0700
From: Allison Randal <allison@perl.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: perl6-internals@perl.org
Subject: Re: [perl #42865] [BUG] There's no way to set a vtable function with
 a Sub at runtime
References: <RT-Ticket-42865@perl.org> <B6A75271-9DC2-4769-9084-9001D6313798@diephouse.com> <rt-3.6.HEAD-15879-1178151032-48.42865-72-0@perl.org>
In-Reply-To: <rt-3.6.HEAD-15879-1178151032-48.42865-72-0@perl.org>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

Matt Diephouse (via RT) wrote:
> There's no real way to set a vtable function at runtime. It's  
> possible to use the PIR compiler to eval a new function, but there's  
> no way to take an existing sub and add it as a vtable function[1].
> 
> Before :vtable, this operation simply meant adding the sub to the new  
> namespace under the right name. But since that's going away, we need  
> a new way to do things.
> 
> I suspect we need some sort of set_vtable opcode.
> 
>      set_vtable ['Foo'; 'Bar'], 'get_string', $P0
> 
> Maybe there should be set_root_vtable and set_hll_vtable variants to  
> go along with to match the set_*global opcodes.

For classes, the 'add_method' method takes a named parameter to say 
whether it's a vtable function. And, vtable functions aren't stored in 
the namespace at all anymore, but in a data structure inside the class, 
so you wouldn't have 'root' and 'hll' variants. I can see potentially 
see adding an 'add_vtable' vtable function, parallel to add_method, 
add_attribute, etc.

What's the use case for modifying a low-level PMC's vtable entries at 
runtime? Or, are you only talking about overriding vtable functions in a 
class?

Allison

