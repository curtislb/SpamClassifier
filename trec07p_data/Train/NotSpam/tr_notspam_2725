From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed Apr 18 08:49:58 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3ICnv0I010573
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 18 Apr 2007 08:49:57 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 626C0163B06
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 18 Apr 2007 12:49:33 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.9 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 620)
	id B1DB5163829; Wed, 18 Apr 2007 12:49:05 +0000 (GMT)
To: samba-cvs@samba.org
From: metze@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070418124905.B1DB5163829@lists.samba.org>
Date: Wed, 18 Apr 2007 12:49:05 +0000 (GMT)
Subject: svn commit: samba r22334 - in
	branches/SAMBA_4_0/source/script/tests: .
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 2701
Lines: 106

Author: metze
Date: 2007-04-18 12:49:05 +0000 (Wed, 18 Apr 2007)
New Revision: 22334

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22334

Log:
don't print the test output if the test passed
(in build-farm mode)

use scalar(localtime()) instead of system("date")

metze
Modified:
   branches/SAMBA_4_0/source/script/tests/selftest.pl


Changeset:
Modified: branches/SAMBA_4_0/source/script/tests/selftest.pl
===================================================================
--- branches/SAMBA_4_0/source/script/tests/selftest.pl	2007-04-18 12:17:53 UTC (rev 22333)
+++ branches/SAMBA_4_0/source/script/tests/selftest.pl	2007-04-18 12:49:05 UTC (rev 22334)
@@ -179,31 +179,48 @@
 sub buildfarm_start_msg($)
 {
 	my ($state) = @_;
+	my $out = "";
 
-	print "--==--==--==--==--==--==--==--==--==--==--\n";
-	print "Running test $state->{NAME} (level 0 stdout)\n";
-	print "--==--==--==--==--==--==--==--==--==--==--\n";
-	system("date");
+	$out .= "--==--==--==--==--==--==--==--==--==--==--\n";
+	$out .= "Running test $state->{NAME} (level 0 stdout)\n";
+	$out .= "--==--==--==--==--==--==--==--==--==--==--\n";
+	$out .= scalar(localtime())."\n";
+	$out .= "NAME: $state->{NAME}\n";
+	$out .= "CMD: $state->{CMD}\n";
+
+	$test_output->{$state->{NAME}} = "";
+
+	print $out;
 }
 
 sub buildfarm_output_msg($$)
 {
 	my ($state, $output) = @_;
 
-	print $output;
+	$test_output->{$state->{NAME}} .= $output;
 }
 
 sub buildfarm_end_msg($$$)
 {
 	my ($state, $expected_ret, $ret) = @_;
+	my $out = "";
 
-	print "==========================================\n";
 	if ($ret == $expected_ret) {
-		print "TEST PASSED: $state->{NAME}\n";
+		$out .= "ALL OK\n";
 	} else {
-		print "TEST FAILED: $state->{NAME} (status $ret)\n";
+		$out .= "ERROR: $ret";
+		$out .= $test_output->{$state->{NAME}};
 	}
-	print "==========================================\n";
+
+	$out .= "==========================================\n";
+	if ($ret == $expected_ret) {
+		$out .= "TEST PASSED: $state->{NAME}\n";
+	} else {
+		$out .= "TEST FAILED: $state->{NAME} (status $ret)\n";
+	}
+	$out .= "==========================================\n";
+
+	print $out;
 }
 
 my $buildfarm_msg_ops = {
@@ -212,6 +229,8 @@
 	end_msg		=> \&buildfarm_end_msg
 };
 
+sub plain_output_msg($$);
+
 sub plain_start_msg($)
 {
 	my ($state) = @_;
@@ -223,6 +242,8 @@
 
 	$test_output->{$state->{NAME}} = "" unless $opt_verbose;
 
+	plain_output_msg($state, "CMD: $state->{CMD}\n");
+
 	print $out;
 }
 
@@ -263,7 +284,6 @@
 		START	=> time()
 	};
 	$msg_ops->{start_msg}($msg_state);
-	$msg_ops->{output_msg}($msg_state, "COMMAND: $cmd\n");
 	open(RESULT, "$cmd 2>&1|");
 	my $expected_ret = 1;
 	my $open_tests = {};

