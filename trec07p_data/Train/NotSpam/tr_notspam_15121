From beginners-return-92030-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 31 20:54:49 2007
Return-Path: <beginners-return-92030-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l510smhB002828
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 20:54:49 -0400
Received: (qmail 3457 invoked by uid 514); 1 Jun 2007 00:54:39 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3448 invoked from network); 1 Jun 2007 00:54:39 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 00:54:39 -0000
Received: (qmail 30264 invoked by uid 225); 1 Jun 2007 00:54:38 -0000
Delivered-To: beginners@perl.org
Received: (qmail 30247 invoked by alias); 1 Jun 2007 00:54:38 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.179 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.179)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 31 May 2007 17:54:29 -0700
Received: by wa-out-1112.google.com with SMTP id m38so465987waf
        for <beginners@perl.org>; Thu, 31 May 2007 17:54:24 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=UCP+pG/lihvA4IHFRVC3EKolvTQxV3gqqlzFpmwlJ87FBBvmoplt1zBEo1+ZJk6dhMOauV3NTJBA1yj7Yg7F+W7ncTOMLE+Q8o7BA4gjtcLgzosiyEdmA4t/ap15RT12ztcXB2GUwxsr1BDaUNWDgm+/JWypo4ZNo6qGVteDR58=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=eGFh9cndopIYVfjq/On/CyMMKKK+xV8IcrxKOi8EFJsmugymgkCmeEHQJ8aDoH3GZ1yY3cnX+kefJn8h183QGJnlRla45CGzuvIqRJ9HwiO+dSSRcgX9vqJVEKjtuS6gWmAl6suOf2Tr4o/CfdsJTrS2R8bn5p9bHVfYvjUP6gY=
Received: by 10.114.53.1 with SMTP id b1mr1157240waa.1180659264106;
        Thu, 31 May 2007 17:54:24 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Thu, 31 May 2007 17:54:24 -0700 (PDT)
Message-ID: <58ce48dc0705311754r40d77558j50e73675d9edcc94@mail.gmail.com>
Date: Thu, 31 May 2007 20:54:24 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Jonathan Lang" <dataweaver@gmail.com>
Subject: Re: Error:Can't locate object method "prepare" via package "abc" at xyz.pm
Cc: Alma <almatirkey@gmail.com>, beginners@perl.org,
   perl-beginners@moderators.isc.org
In-Reply-To: <ef30550b0705311618v1af7f40fl9462b0d3852f20ea@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1180617470.727212.109630@q19g2000prn.googlegroups.com>
	 <ef30550b0705311618v1af7f40fl9462b0d3852f20ea@mail.gmail.com>

On 5/31/07, Jonathan Lang <dataweaver@gmail.com> wrote:
snip
> Again, you have a signature problem.  'sub new($)' says that 'new'
> will take a single scalar as a parameter; as such, @_ will only ever
> have one value in it: $usr and $pwd will always be set to null.
snip

Well, there is a prototype problem, but it isn't that $ will force new
to only accept one value, but rather that prototypes and OO Perl don't
mix.  Perl simply ignores prototypes on methods.  Also prototypes are
broken*, don't use them.

#!/usr/bin/perl

use strict;
use warnings;

package foo;

sub new ($) {
        my $class = shift;
        return bless { @_ }, $class;
}

package main;

my $foo = foo->new(this => 1, that => 2);

print "this $foo->{this} and that $foo->{that}\n";

* http://library.n0i.net/programming/perl/articles/fm_prototypes/

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


