From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon May 14 20:18:25 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4F0IPqD029156
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 14 May 2007 20:18:25 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id EBE261638D4
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 15 May 2007 00:18:22 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id DC709162BDD; Tue, 15 May 2007 00:17:20 +0000 (GMT)
Date: Tue, 15 May 2007 09:42:53 +1000
To: samba-cvs@samba.org
From: tridge@samba.org
Message-Id: <20070515001720.DC709162BDD@lists.samba.org>
Subject: Rev 299: AIX needs sin_len field for bind() in
	http://samba.org/~tridge/ctdb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

------------------------------------------------------------
revno: 299
revision-id: tridge@samba.org-20070514234252-lkr0iynk4eys7ff1
parent: tridge@samba.org-20070514040133-2ktprtc6t6161yy5
committer: Andrew Tridgell <tridge@samba.org>
branch nick: tridge
timestamp: Tue 2007-05-15 09:42:52 +1000
message:
  AIX needs sin_len field for bind()
modified:
  configure.ac                   configure.ac-20061117234101-o3qt14umlg9en8z0-10
  tcp/tcp_connect.c              tcp_connect.c-20061128004937-x70q1cu5xzg5g2tm-1
=== modified file 'configure.ac'
--- a/configure.ac	2007-05-05 07:18:06 +0000
+++ b/configure.ac	2007-05-14 23:42:52 +0000
@@ -30,6 +30,16 @@
 m4_include(libevents.m4)
 m4_include(ib/config.m4)
 
+AC_CACHE_CHECK([for sin_len in sock],ctdb_cv_HAVE_SOCK_SIN_LEN,[
+AC_TRY_COMPILE([#include <sys/types.h>
+#include <sys/socket.h>
+#include <netinet/in.h>],
+[struct sockaddr_in sock; sock.sin_len = sizeof(sock);],
+ctdb_cv_HAVE_SOCK_SIN_LEN=yes,ctdb_cv_HAVE_SOCK_SIN_LEN=no)])
+if test x"$ctdb_cv_HAVE_SOCK_SIN_LEN" = x"yes"; then
+    AC_DEFINE(HAVE_SOCK_SIN_LEN,1,[Whether the sockaddr_in struct has a sin_len property])
+fi
+
 AC_SUBST(EXTRA_OBJ)
 
 AC_OUTPUT(Makefile)

=== modified file 'tcp/tcp_connect.c'
--- a/tcp/tcp_connect.c	2007-05-01 03:25:02 +0000
+++ b/tcp/tcp_connect.c	2007-05-14 23:42:52 +0000
@@ -125,6 +125,10 @@
 
 	set_nonblocking(tnode->fd);
 
+	ZERO_STRUCT(sock_out);
+#ifdef HAVE_SOCK_SIN_LEN
+	sock_out.sin_len = sizeof(sock_out);
+#endif
 	if (ctdb_tcp_get_address(ctdb, node->address.address, &sock_out.sin_addr) != 0) {
 		return;
 	}
@@ -138,6 +142,10 @@
 	 * the remote side is actually routable in case CTDB traffic will run on
 	 * a dedicated non-routeable network.
 	 */
+	ZERO_STRUCT(sock_in);
+#ifdef HAVE_SOCK_SIN_LEN
+	sock_in.sin_len = sizeof(sock_in);
+#endif
 	if (ctdb_tcp_get_address(ctdb, ctdb->address.address, &sock_in.sin_addr) != 0) {
 		return;
 	}
@@ -239,6 +247,10 @@
 	}
 
 	for (i=0;i<ctdb->num_nodes;i++) {
+		ZERO_STRUCT(sock);
+#ifdef HAVE_SOCK_SIN_LEN
+		sock.sin_len = sizeof(sock);
+#endif
 		sock.sin_port = htons(ctdb->nodes[i]->address.port);
 		sock.sin_family = PF_INET;
 		if (ctdb_tcp_get_address(ctdb, ctdb->nodes[i]->address.address, 
@@ -309,6 +321,10 @@
 		return ctdb_tcp_listen_automatic(ctdb);
 	}
 
+	ZERO_STRUCT(sock);
+#ifdef HAVE_SOCK_SIN_LEN
+	sock.sin_len = sizeof(sock);
+#endif
 	sock.sin_port = htons(ctdb->address.port);
 	sock.sin_family = PF_INET;
 	

