From beginners-return-91818-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 21 03:22:42 2007
Return-Path: <beginners-return-91818-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4L7MfqD028256
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 21 May 2007 03:22:41 -0400
Received: (qmail 3259 invoked by uid 514); 21 May 2007 07:22:33 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3250 invoked from network); 21 May 2007 07:22:33 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 21 May 2007 07:22:33 -0000
Received: (qmail 31535 invoked by uid 225); 21 May 2007 07:22:32 -0000
Delivered-To: beginners@perl.org
Received: (qmail 31529 invoked by alias); 21 May 2007 07:22:32 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of dharshana.ve@gmail.com designates 64.233.166.177 as permitted sender)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.177)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 21 May 2007 00:21:52 -0700
Received: by py-out-1112.google.com with SMTP id p76so1366pyb
        for <beginners@perl.org>; Mon, 21 May 2007 00:21:48 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=ixemmNpoTtUbg6p7OgnUQG5/abllE7HVIVf0et+4MZpojpRdBePVx+Pfq6vZvQlO8aAMkM8f468O7CvUc/Bx+3lLBREcuYiKI6IZ3RzSkqx4jRa7f3T4WqkRtsqXc/I6lMph6jgr4MloyxY50jc8S9B1XvBmFxXNthe75eOOPig=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=XsllGYR+MCPUpC2V5Vi3eQkEaOl7GVUmJ6AeJdpPAsah1BUWxXjGECVtgiR1DTDkWTyco4ZjOGNyIT51hF6dbZ9SxFbIvCv0aQyLViohIAYwxtplNobGwWa/xCy+x5U7N9PN9RUycoqpi1Eu9WqQAPns0Hhf729zyjO1622fYl4=
Received: by 10.64.208.20 with SMTP id f20mr5863371qbg.1179732107660;
        Mon, 21 May 2007 00:21:47 -0700 (PDT)
Received: by 10.64.179.15 with HTTP; Mon, 21 May 2007 00:21:47 -0700 (PDT)
Message-ID: <9f91e0840705210021s113d9b4ex4a0ce42f8c05d237@mail.gmail.com>
Date: Mon, 21 May 2007 12:51:47 +0530
From: "Dharshana Eswaran" <dharshana.ve@gmail.com>
To: "Mumia W." <mumia.w.18.spam+nospam@earthlink.net>
Subject: Re: Regarding files
Cc: "Beginners List" <beginners@perl.org>
In-Reply-To: <46513BCE.4030205@earthlink.net>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_43737_19806368.1179732107575"
References: <9f91e0840705202136hd68acf1md30892cb2146d8d1@mail.gmail.com>
	 <9f91e0840705202137q11ce8b82v2af20b58444a980d@mail.gmail.com>
	 <46513BCE.4030205@earthlink.net>
X-Virus-Checked: Checked

------=_Part_43737_19806368.1179732107575
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thank you all..

But i dont want to use any perl modules in the code. I am trying to get a
logic without any help from the additional modules.

Thanks and Regards,
Dharshana

On 5/21/07, Mumia W. <mumia.w.18.spam+nospam@earthlink.net> wrote:
>
> On 05/20/2007 11:37 PM, Dharshana Eswaran wrote:
> > Hi All,
> >
> > The below code helps in reading a file in reverse:
> >
> > use strict;
> > use warning;
> >
> > open( FILE, "<$file_to_reverse" )
> >
> >  or die( "Can't open file file_to_reverse: $!" );
> >
> > @lines = reverse <FILE>;
> > foreach $line (@lines) {
> >  # do something with $line
> > }
> >
> > But i am trying to grep for a string in the file and once i get the
> string,
> >
> > I need to read few lines which occurs before the string. For eg:
> >
> > typedef union
> > {
> >    TYPE_T type;
> >   MODE_T mode;
> > } CHANNEL_INFO_T;
> >
> > Here, I grep for CHANNEL_INFO_T, once i get that, i need to read the
> > elements defined in the union or structure.
> >
> >
> > I have written a code but i am unable to achieve what i wanted.
> >
> > Can anyone guide me in this?
> >
> > Thanks and Regards,
> > Dharshana
> >
>
> You could use Tie::File to treat the file's lines as an array:
>
>      use strict;
>      use warnings;
>      use Fcntl 'O_RDONLY';
>      require 'Tie/File.pm';
>
>      tie my @file, 'Tie::File', 'anyfile.txt', mode => O_RDONLY
>          or die("Tie::File failed: $!");
>
>      for my $n (0 .. $#file) {
>          local $\ = "\n";
>          $_ = $file[$n];
>          if (/CHANNEL_INFO_T/) {
>              print $file[$n-2];
>              print $file[$n-1];
>              print;
>          }
>      }
>
>      untie @file;
>
>
>
>
>
>
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>
>

------=_Part_43737_19806368.1179732107575--

