From beginners-return-92641-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Jun 21 22:43:08 2007
Return-Path: <beginners-return-92641-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5M2h7L9032748
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 21 Jun 2007 22:43:07 -0400
Received: (qmail 27276 invoked by uid 514); 22 Jun 2007 02:43:00 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 27267 invoked from network); 22 Jun 2007 02:42:59 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 22 Jun 2007 02:42:59 -0000
Received: (qmail 31444 invoked by uid 225); 22 Jun 2007 02:42:59 -0000
Delivered-To: beginners@perl.org
Received: (qmail 31436 invoked by alias); 22 Jun 2007 02:42:58 -0000
X-Spam-Status: No, hits=-0.4 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from ms-smtp-01.ohiordc.rr.com (HELO ms-smtp-01.ohiordc.rr.com) (65.24.5.135)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 21 Jun 2007 19:42:56 -0700
Received: from janus.tacocat.net (cpe-65-29-101-30.twmi.res.rr.com [65.29.101.30])
	by ms-smtp-01.ohiordc.rr.com (8.13.6/8.13.6) with ESMTP id l5M2gnVB009938
	for <beginners@perl.org>; Thu, 21 Jun 2007 22:42:50 -0400 (EDT)
Received: from [192.168.1.247] (ws247.tacocat.net [192.168.1.247])
	by janus.tacocat.net (Postfix) with ESMTP id 283504C068
	for <beginners@perl.org>; Thu, 21 Jun 2007 22:42:48 -0400 (EDT)
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Transfer-Encoding: 7bit
Message-Id: <0B52CF23-ECF2-48EF-855E-8C2058D48D98@tacocat.net>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
To: beginners perl <beginners@perl.org>
From: Tom Allison <tom@tacocat.net>
Subject: still working with utf8
Date: Thu, 21 Jun 2007 22:42:45 -0400
X-Mailer: Apple Mail (2.752.3)
X-Virus-Scanned: Symantec AntiVirus Scan Engine

OK, I sorted out what the deal is with charsets, Encode, utf8 and  
other goodies.

Now I have something I'm just not sure exactly how it is supposet to  
operate.

I have a string:
=?iso-2022-jp?B?Rlc6IBskQjxkJDckNSRHJE8kSiQvJEYzWiQ3JF8kPyQkGyhC?=
That is a MIME::Base64 encoded string of iso-2022-jp characters.

After I decode_base64 them and decode($text,'iso-2022-jp',utf8') them  
I can print out something that looks exactly like japanese characters.

But you can't match /(\w+) on them.  It's apparently one "word"  
without spaces in it.
Um... I don't know Japanese.  But I guess this string of spaghetti  
(to me) is actually a language where one character as represented in  
a unicode terminal is actually one 'word' according to the perl  
definition of a word...

In english, this would pick apart words in a sense that is simple for  
me and many on this list to understand.

I guess my question is, for CJK languages, should I expect the notion  
of using a regex like \w+ to pick up entire strings of text instead  
of discrete words like latin based languages?



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


