From perl6-all-return-81551-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 23 08:28:35 2007
Return-Path: <perl6-all-return-81551-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4NCSXqD025126
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 23 May 2007 08:28:34 -0400
Received: (qmail 6879 invoked by uid 514); 23 May 2007 12:28:27 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 6874 invoked from network); 23 May 2007 12:28:27 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DKIM_SIGNED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of parrotcode@gmail.com)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of parrotcode@gmail.com designates 64.233.162.226 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=fgaRugyIv8ByUL98OIBgPW0TBATpSBw8v+t2ZVXdxMu6vz5Oaz1X/J83XC2h3v916EzwXlIESDOK/h2cL6NomYo+lGvGtJHjMC+xum/BtEOwqKbH4ZDrVjK+DV/NF4CjY3sz9T4lAd0QaOJnvCkrxM+gurAos5JzJCjhf6jCWw4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=d3EtfgwEr2BdDkUCgSbpT6GqJ2XZhBDQhI3i/O29KN3UOne/aiXyvO/vGUcYWtU2YiK3s2eZbQPFhchpxwKhNcduBEGdckivm5nPPpERPl4gCKaizgR25JoplRsJ/13QNdMbt+PdHwKJHiPlfuBua8NGltad9IPZcQOLA7QnO1E=
Message-ID: <7b0e52b40705230506i427d7f75m7434f1ab4dd2bcb@mail.gmail.com>
Date: Wed, 23 May 2007 20:06:35 +0800
From: "Klaas-Jan Stol" <parrotcode@gmail.com>
To: chromatic <chromatic@wgz.org>
Subject: Re: FOTW src/debug.c
Cc: parrot-porters@perl.org
In-Reply-To: <200705221550.07740.chromatic@wgz.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_20411_13723702.1179921995960"
References: <200705221550.07740.chromatic@wgz.org>
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_NEUTRAL

------=_Part_20411_13723702.1179921995960
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 5/23/07, chromatic <chromatic@wgz.org> wrote:
>
> This file implements most of the Parrot debugger.  The interpreter struct
> has
> a slot called pdb that contains a PDB_t (parrot/debug.h).
>
> This file is somewhat messy.  It has some string manipulation functions
> (nextarg(), skip_ws(), parse_int(), parse_string()) that should probably
> go
> elsewhere.
>
> There are also some places that seem somewhat careless about memory
> allocation
> and freeing.  For example, where in this file does interp->pdb get
> initialized?  (Answer: in src/embed.c - Parrot_disassemble()).
>
> Where does it get freed?  (Answer: nowhere that I can tell.)
>
> The freeing *could* go in Parrot_really_destroy() in src/inter_create.c
> (did
> you catch the contradiction in names there?), but I'm starting to think
> that
> each file that represents the entry point into a system should have two
> functions, one that initializes the system and its necessary data
> structures
> and another that finalizes and frees things.
>
> I don't know if we have any good tests for the debugger; this is something
> we
> ought to consider if we're going to move code around.  Sadly, I don't know
> any easy way to test things apart from opening a Parrot process and
> feeding
> data in and out.  Making the debugger scriptable from PIR is a bigger
> project
> than I'm comfortable suggesting until it gets more tests.
>
> Some of the other memory-related functions have a little bit too much
> magic.
> For example, PDB_free_file() takes the file to free out of the current
> debugger.  It does the right thing to free files, but there appear to be
> cases where it's useful to free a file that's not the debugger's current
> file, so this function is inappropriately general.
>
> Other functions have odd names -- PDB_hasInstructions() (no underscore?),
> PDB_print() (should be PDB_print_registers()).
>
> The code is fairly decent.  Most of the issues here relate to
> organization.
>
> -- c
>

There are some magic numbers, like 255, and some other very unclear code
snippets like:

  for (i = 0; *command && isalpha((int) *command); command++, i++)
        c += (tolower((int) *command) + (i + 1)) * ((i + 1) * 255);


This needs some comments. If anybody knows what's going on there, please
enlighten me and fellow readers :-)

regards,
kjs

------=_Part_20411_13723702.1179921995960--

