From r-help-bounces@stat.math.ethz.ch  Fri Apr 13 07:28:40 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3DBSd0I010525
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 07:28:40 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3DBRB8e017267;
	Fri, 13 Apr 2007 13:27:27 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.2 required=5.0 tests=AWL, BAYES_50,
	HTML_MESSAGE autolearn=no version=3.1.8
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.172])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3DBAgP8011583
	for <r-help@stat.math.ethz.ch>; Fri, 13 Apr 2007 13:10:42 +0200
Received: by ug-out-1314.google.com with SMTP id p37so491301ugc
	for <r-help@stat.math.ethz.ch>; Fri, 13 Apr 2007 04:10:42 -0700 (PDT)
Received: by 10.67.28.9 with SMTP id f9mr1932477ugj.1176462641447;
	Fri, 13 Apr 2007 04:10:41 -0700 (PDT)
Received: by 10.67.123.7 with HTTP; Fri, 13 Apr 2007 04:10:41 -0700 (PDT)
Message-ID: <65cc7bdf0704130410i61b48351nadd0359907989d87@mail.gmail.com>
Date: Fri, 13 Apr 2007 06:10:41 -0500
From: "tom soyer" <tom.soyer@gmail.com>
To: "Gabor Grothendieck" <ggrothendieck@gmail.com>
In-Reply-To: <971536df0704121726r12ccac4eu1ccfd89e8da3b5a9@mail.gmail.com>
MIME-Version: 1.0
References: <65cc7bdf0704121138x5b696a40gdff153fd2edf67c8@mail.gmail.com>
	<971536df0704121226k36fdb73bic928abd3447b108@mail.gmail.com>
	<65cc7bdf0704121238n5e2b72a5h19e0296050254833@mail.gmail.com>
	<971536df0704121241u1f22b2b8j51e7af4ffd320e9c@mail.gmail.com>
	<65cc7bdf0704121254l84d6fdcs5fef37bca89092ad@mail.gmail.com>
	<971536df0704121726r12ccac4eu1ccfd89e8da3b5a9@mail.gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Content-Disposition: inline
Cc: r-help <r-help@stat.math.ethz.ch>
Subject: Re: [R] Construct time series objects from raw data stored in csv
	files
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2020
Lines: 63

Thanks Gabor!!

On 4/12/07, Gabor Grothendieck <ggrothendieck@gmail.com> wrote:
>
> On 4/12/07, tom soyer <tom.soyer@gmail.com> wrote:
> > What should I do for weekly and daily data series? Are there functions
> > similar to yearmon() for other time intervals? I see that there is a
> > built-in yearqtr() function for quarterly data, but that's it.
>
> ts series cannot directly represent daily and weekly
> series other than somehow deciding on a numeric representation
> for time.
>
> Here we will use the number of days and the number of weeks
> since the Epoch (1970-01-01) and assume we assume weeks
> start on Sunday.  We will also do it over again using the number
> of weeks since the first point in the series and the number of
> days since the first point.
>
> Lines.raw is from my original post on this thread.
>
>
> z <- read.zoo(textConnection(Lines.raw), header = TRUE, sep = ",")
>
> # ts series will represent days as no of days since Epoch
> zday <- z
> frequency(zday) <- 1
> tsday <- as.ts(zday)
>
> # ts series will represent weeks as no of weeks since Epoch
> zweek <- zday
> offset <- -3 # weeks start on Sun
> # offset <- -4 # weeks start on Mon
> zweek <- aggregate(z, (as.numeric(time(z)) + offset) %/% 7, mean)
> frequency(zweek) <- 1
> tsweek <- as.ts(zweek)
>
> ##########################################################
> # alternately use number of days since first day in series
> # and number of weeks since first week in series
>
>
> zday0 <- aggregate(zday, time(zday) - min(time(zday)), c)
> frequency(zday0) <- 1
> tsday0 <- as.ts(zday0)
>
> zweek0 <- aggregate(zweek, time(zweek) - min(time(zweek)), c)
> frequency(zweek0) <- 1
> tsweek0 <- as.ts(zweek0)
>



-- 
Tom

	[[alternative HTML version deleted]]

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

