From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Thu Jun  7 04:59:34 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l578xXhB032627
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 7 Jun 2007 04:59:34 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id A887216383D
	for <ktwarwic@speedy.uwaterloo.ca>; Thu,  7 Jun 2007 08:59:27 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id A0B80162ACE; Thu,  7 Jun 2007 08:58:54 +0000 (GMT)
Date: Thu, 07 Jun 2007 18:39:38 +1000
To: samba-cvs@samba.org
From: tridge@samba.org
Message-Id: <20070607085854.A0B80162ACE@lists.samba.org>
Subject: Rev 496: formatting fixes in http://samba.org/~tridge/ctdb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

------------------------------------------------------------
revno: 496
revision-id: tridge@samba.org-20070607083937-cr7d8z9lf4cyxckz
parent: tridge@samba.org-20070607083727-7839ezzz8od0tndc
committer: Andrew Tridgell <tridge@samba.org>
branch nick: tridge
timestamp: Thu 2007-06-07 18:39:37 +1000
message:
  formatting fixes
modified:
  common/ctdb_recoverd.c         recoverd.c-20070503213540-bvxuyd9jm1f7ig90-1
=== modified file 'common/ctdb_recoverd.c'
--- a/common/ctdb_recoverd.c	2007-06-07 08:37:27 +0000
+++ b/common/ctdb_recoverd.c	2007-06-07 08:39:37 +0000
@@ -202,7 +202,8 @@
 			continue;
 		}
 
-		ret = ctdb_ctrl_getdbmap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, mem_ctx, &remote_dbmap);
+		ret = ctdb_ctrl_getdbmap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, 
+					 mem_ctx, &remote_dbmap);
 		if (ret != 0) {
 			DEBUG(0, (__location__ " Unable to get dbids from node %u\n", vnn));
 			return -1;
@@ -260,7 +261,8 @@
 			continue;
 		}
 
-		ret = ctdb_ctrl_getdbmap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, mem_ctx, &remote_dbmap);
+		ret = ctdb_ctrl_getdbmap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, 
+					 mem_ctx, &remote_dbmap);
 		if (ret != 0) {
 			DEBUG(0, (__location__ " Unable to get dbids from node %u\n", vnn));
 			return -1;
@@ -282,9 +284,11 @@
 			/* ok so we need to create this database and
 			   rebuild dbmap
 			 */
-			ctdb_ctrl_getdbname(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, remote_dbmap->dbids[db], mem_ctx, &name);
+			ctdb_ctrl_getdbname(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, 
+					    remote_dbmap->dbids[db], mem_ctx, &name);
 			if (ret != 0) {
-				DEBUG(0, (__location__ " Unable to get dbname from node %u\n", nodemap->nodes[j].vnn));
+				DEBUG(0, (__location__ " Unable to get dbname from node %u\n", 
+					  nodemap->nodes[j].vnn));
 				return -1;
 			}
 			ctdb_ctrl_createdb(ctdb, CONTROL_TIMEOUT(), vnn, mem_ctx, name);
@@ -325,9 +329,11 @@
 			if (nodemap->nodes[j].flags & NODE_FLAGS_INACTIVE) {
 				continue;
 			}
-			ret = ctdb_ctrl_copydb(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, vnn, dbmap->dbids[i], CTDB_LMASTER_ANY, mem_ctx);
+			ret = ctdb_ctrl_copydb(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, 
+					       vnn, dbmap->dbids[i], CTDB_LMASTER_ANY, mem_ctx);
 			if (ret != 0) {
-				DEBUG(0, (__location__ " Unable to copy db from node %u to node %u\n", nodemap->nodes[j].vnn, vnn));
+				DEBUG(0, (__location__ " Unable to copy db from node %u to node %u\n", 
+					  nodemap->nodes[j].vnn, vnn));
 				return -1;
 			}
 		}
@@ -476,9 +482,11 @@
 			if (nodemap->nodes[j].flags & NODE_FLAGS_INACTIVE) {
 				continue;
 			}
-			ret = ctdb_ctrl_copydb(ctdb, CONTROL_TIMEOUT(), vnn, nodemap->nodes[j].vnn, dbmap->dbids[i], CTDB_LMASTER_ANY, mem_ctx);
+			ret = ctdb_ctrl_copydb(ctdb, CONTROL_TIMEOUT(), vnn, nodemap->nodes[j].vnn, 
+					       dbmap->dbids[i], CTDB_LMASTER_ANY, mem_ctx);
 			if (ret != 0) {
-				DEBUG(0, (__location__ " Unable to copy db from node %u to node %u\n", vnn, nodemap->nodes[j].vnn));
+				DEBUG(0, (__location__ " Unable to copy db from node %u to node %u\n", 
+					  vnn, nodemap->nodes[j].vnn));
 				return -1;
 			}
 		}
@@ -1142,7 +1150,8 @@
 		}
 
 		if (recmaster!=vnn) {
-			DEBUG(0, ("Node %u does not agree we are the recmaster. Force reelection\n", nodemap->nodes[j].vnn));
+			DEBUG(0, ("Node %u does not agree we are the recmaster. Force reelection\n", 
+				  nodemap->nodes[j].vnn));
 			force_election(rec, mem_ctx, vnn, nodemap);
 			goto again;
 		}
@@ -1163,7 +1172,8 @@
 			goto again;
 		}
 		if (recmode != CTDB_RECOVERY_NORMAL) {
-			DEBUG(0, (__location__ " Node:%u was in recovery mode. Restart recovery process\n", nodemap->nodes[j].vnn));
+			DEBUG(0, (__location__ " Node:%u was in recovery mode. Restart recovery process\n", 
+				  nodemap->nodes[j].vnn));
 			do_recovery(rec, mem_ctx, vnn, num_active, nodemap, vnnmap, nodemap->nodes[j].vnn);
 			goto again;
 		}
@@ -1181,9 +1191,11 @@
 			continue;
 		}
 
-		ret = ctdb_ctrl_getnodemap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, mem_ctx, &remote_nodemap);
+		ret = ctdb_ctrl_getnodemap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, 
+					   mem_ctx, &remote_nodemap);
 		if (ret != 0) {
-			DEBUG(0, (__location__ " Unable to get nodemap from remote node %u\n", nodemap->nodes[j].vnn));
+			DEBUG(0, (__location__ " Unable to get nodemap from remote node %u\n", 
+				  nodemap->nodes[j].vnn));
 			goto again;
 		}
 
@@ -1206,7 +1218,8 @@
 				(nodemap->nodes[i].flags & NODE_FLAGS_INACTIVE))) {
 				DEBUG(0, (__location__ " Remote node:%u has different nodemap.\n", 
 					  nodemap->nodes[j].vnn));
-				do_recovery(rec, mem_ctx, vnn, num_active, nodemap, vnnmap, nodemap->nodes[j].vnn);
+				do_recovery(rec, mem_ctx, vnn, num_active, nodemap, 
+					    vnnmap, nodemap->nodes[j].vnn);
 				goto again;
 			}
 		}
@@ -1269,9 +1282,11 @@
 			continue;
 		}
 
-		ret = ctdb_ctrl_getvnnmap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, mem_ctx, &remote_vnnmap);
+		ret = ctdb_ctrl_getvnnmap(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn, 
+					  mem_ctx, &remote_vnnmap);
 		if (ret != 0) {
-			DEBUG(0, (__location__ " Unable to get vnnmap from remote node %u\n", nodemap->nodes[j].vnn));
+			DEBUG(0, (__location__ " Unable to get vnnmap from remote node %u\n", 
+				  nodemap->nodes[j].vnn));
 			goto again;
 		}
 
@@ -1296,7 +1311,8 @@
 			if (remote_vnnmap->map[i] != vnnmap->map[i]) {
 				DEBUG(0, (__location__ " Remote node %u has different vnnmap.\n", 
 					  nodemap->nodes[j].vnn));
-				do_recovery(rec, mem_ctx, vnn, num_active, nodemap, vnnmap, nodemap->nodes[j].vnn);
+				do_recovery(rec, mem_ctx, vnn, num_active, nodemap, 
+					    vnnmap, nodemap->nodes[j].vnn);
 				goto again;
 			}
 		}

