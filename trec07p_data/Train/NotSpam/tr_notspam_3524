From beginners-return-90955-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 20 09:15:35 2007
Return-Path: <beginners-return-90955-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3KDFY0I006305
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 09:15:35 -0400
Received: (qmail 22537 invoked by uid 514); 20 Apr 2007 13:15:02 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 22525 invoked from network); 20 Apr 2007 13:15:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2007 13:15:01 -0000
Received: (qmail 19086 invoked by uid 225); 20 Apr 2007 13:15:01 -0000
Delivered-To: beginners@perl.org
Received: (qmail 19078 invoked by alias); 20 Apr 2007 13:15:00 -0000
X-Spam-Status: No, hits=0.8 required=8.0
	tests=BAYES_00,DK_POLICY_TESTING,DK_SIGNED,DK_VERIFIED,DNS_FROM_RFC_ABUSE,DNS_FROM_RFC_POST,DNS_FROM_RFC_WHOIS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from web63403.mail.re1.yahoo.com (HELO web63403.mail.re1.yahoo.com) (69.147.97.43)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Fri, 20 Apr 2007 06:14:58 -0700
Received: (qmail 80271 invoked by uid 60001); 20 Apr 2007 13:14:53 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=X-YMail-OSG:Received:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding:Message-ID;
  b=US0dRNBb7pJ11EOTo4hJl8PVZBLQpXSFdWme889wtHVfOiSLc8GuQwpTnVTXdlYwWeva8WsbPL2RGQze0ViswDCAOQ314k+5Z7PgdB62exfWnkDqwk/Gk+My6dOhommp0X5Z9EjYD4vx1keuQlBFZLFrY7G8wpKlkjiWvUEjH4Y=;
X-YMail-OSG: TBVI3GQVM1nR8uakF9H0SSISSTwd4Fq1ZUL92evIeXmdVYTqu0WH_o2mwca3L7405_Mv2wkZwAFHxWTi8ddZW37UgTK1B.hDIsBgSVqHdHFoup7cIH9Lew--
Received: from [12.20.127.229] by web63403.mail.re1.yahoo.com via HTTP; Fri, 20 Apr 2007 06:14:52 PDT
Date: Fri, 20 Apr 2007 06:14:52 -0700 (PDT)
From: oryann9 <oryann9@yahoo.com>
Subject: Re: Nested loop
To: Perl List <beginners@perl.org>
In-Reply-To: <58ce48dc0704192129r3112ddb8m62d05075b5dd966b@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <999878.79133.qm@web63403.mail.re1.yahoo.com>
Status: O
Content-Length: 2057
Lines: 80

--- Chas Owens <chas.owens@gmail.com> wrote:

> On 4/19/07, John W. Krahn <krahnj@telus.net> wrote:
> > Chas Owens wrote:
> > > Yes, foreach was aliased to for for backwards
> compatibility,
> >
> > Huh?  Do you have something to back up that claim?
> 
> Well, perlsyn* says
>        The "foreach" keyword is actually a synonym
> for the "for" keyword, so
>        you can use "foreach" for readability or
> "for" for brevity.  (Or
>        because the Bourne shell is more familiar to
> you than csh, so writing
>        "for" comes more naturally.)
> 
> But Synopsis 4* says
>        There is no foreach statement any more. It's
> always spelled for
> in Perl 6,
>        so it always takes a list as an argument
> 
> So, you can either start training yourself to say
> for instead of
> foreach now or wait for culture shock down the road.
> 

It really does not matter to me which one I use b/c
they both work well and seem to produce the same
results in all my tested code.  Its like asking me
would you like that coffee with cream/sugar or black.
ANSWER: I like coffee black and with cream/sugar, it
does not matter much and it all depends upon my mood.

Interesting though I ran perl -MO=Deparse on this
code...

derek.smith@dubmdsmith10 /cygdrive/c/temp
$ cat foo1
for my $i (0 .. 3) {
   $i *= 3;
   print $i,"\n";
}
print "\n\n";
for my $i (map { $_ * 3 } 0 .. 3) {
        print "$i\n";
}

$ perl -MO=Deparse foo1
foreach my $i (0 .. 3) {
    $i *= 3;
    print $i, "\n";
}
print "\n\n";
foreach my $i (map {$_ * 3;} 0..3) {
    print "$i\n";
}
foo1 syntax OK

So is foreach really dead or going away?
BTW Great write up Chas!

$ perl -v

This is perl, v5.8.7 built for
cygwin-thread-multi-64int
(with 1 registered patch, see perl -V for more detail)

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


