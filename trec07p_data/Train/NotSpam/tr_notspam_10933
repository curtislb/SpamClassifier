From beginners-return-91738-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 16 08:01:37 2007
Return-Path: <beginners-return-91738-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4GC1bqD018264
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 16 May 2007 08:01:37 -0400
Received: (qmail 17568 invoked by uid 514); 16 May 2007 12:01:28 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 17530 invoked from network); 16 May 2007 12:01:27 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 16 May 2007 12:01:27 -0000
Received: (qmail 24041 invoked by uid 225); 16 May 2007 12:01:27 -0000
Delivered-To: beginners@perl.org
Received: (qmail 24036 invoked by alias); 16 May 2007 12:01:27 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.237 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.237)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 16 May 2007 05:01:19 -0700
Received: by nz-out-0506.google.com with SMTP id x7so495153nzc
        for <beginners@perl.org>; Wed, 16 May 2007 05:01:15 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=ePpyQ8zQhtq8JIETElyp9aFayoqBB1LxhDnunwfy5irs+IUNjVq6SwpSD+IkqQbc47Lvad8Ij/KX9ei33kZxSmRdIxhyU9ekVtWuBrGhOh+5zui5Y5xqZ+JHlYxGZWeHHCWBXC2htW2ZbOvc0Z+zCHcDWWPu4I2s4bGT7Jk/B3I=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=jGgOC2SGTpJ6x1W4p1MehZm76KUu0yNIR0iDtklF6zh6sYpgPoZ/JdNTf7r8yy+KggDKehSXDfTzene7HcxNbQE1IYX/T5ea/7IzQ9LT8y8vZU+XkhJg0hstCaS+8zvND8LvBfmHaXpwopYqVjdS3quKC2Njh/EcssG8mSdKU+0=
Received: by 10.115.77.1 with SMTP id e1mr1719024wal.1179316874651;
        Wed, 16 May 2007 05:01:14 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Wed, 16 May 2007 05:01:14 -0700 (PDT)
Message-ID: <58ce48dc0705160501s2e249102q2ceaff2b4ce4515@mail.gmail.com>
Date: Wed, 16 May 2007 08:01:14 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: sivasakthi <msivasakthi@gmail.com>
Subject: Re: Delete a particular line from file
Cc: "Jeff Pang" <pangjr@yahoo.com.au>, "beginners perl" <beginners@perl.org>
In-Reply-To: <1179306205.2973.32.camel@sim-co.kovaiteam.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1179202464.2421.16.camel@sim-co.kovaiteam.com>
	 <46493654.4040505@yahoo.com.au>
	 <1179306205.2973.32.camel@sim-co.kovaiteam.com>

On 5/16/07, sivasakthi <msivasakthi@gmail.com> wrote:
> Suppose i have checked the group of  I/P addresses for deleting opting
> then what should i do??
> Is there any inbuilt function there for that requirement??
snip
> > while(<FILE>) {
> >     my ($time,$lport,$ip,$stats,$rport) = split;
> >     next if $ip eq '172.16.2.80';
> >     # using those values above to create hash,based on what form of hash
> > you needed.
> > }

Assuming that you have a list of IP addresses you want to skip in @ip,
you could say

#!/usr/bin/perl

use strict;
use warnings;

OUTER:
while(<FILE>) {
   my ($time, $lport, $ip, $stats, $rport) = split;
   for my $skip_ip (@ip) {
      next OUTER if $ip eq $skip_ip;
   }
   # using those values above to create hash
   #based on what form of hash you needed.
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


