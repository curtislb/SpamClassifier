From beginners-return-91834-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 21 20:20:16 2007
Return-Path: <beginners-return-91834-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4M0KFqD005634
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 21 May 2007 20:20:15 -0400
Received: (qmail 15137 invoked by uid 514); 22 May 2007 00:20:06 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 15127 invoked from network); 22 May 2007 00:20:06 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 22 May 2007 00:20:06 -0000
Received: (qmail 15686 invoked by uid 225); 22 May 2007 00:20:05 -0000
Delivered-To: beginners@perl.org
Received: (qmail 15675 invoked by alias); 22 May 2007 00:20:05 -0000
X-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of krahnj@telus.net)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 21 May 2007 17:19:57 -0700
Received: (qmail 15103 invoked by uid 515); 22 May 2007 00:19:53 -0000
Message-ID: <20070522001953.15102.qmail@lists.develooper.com>
To: beginners@perl.org
From: "John W. Krahn" <krahnj@telus.net>
Subject: Re: Efficient matching
Date: Mon, 21 May 2007 17:21:20 -0700
References: <9f91e0840705202136hd68acf1md30892cb2146d8d1@mail.gmail.com> <9f91e0840705202137q11ce8b82v2af20b58444a980d@mail.gmail.com> <20070521080916.15210.qmail@lists.develooper.com> <9f91e0840705210326o5a0ee85bkef8e8b1e779a3ca3@mail.gmail.com> <3.0.1.32.20070521152119.011bb950@muse.calarts.edu>
Lines: 27
User-Agent: KNode/0.10.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7Bit
X-Posted-By: 154.20.131.28

Karyn Williams wrote:

> I need to check for strings in a file. An example would be checking for a
> username in /etc/passwd or /var/log/maillog. The string is in another
> file, sometimes a single field on a line by itself, sometimes in a line
> with other strings. Based on what I have seen online and what I have done
> in other scripts I can :
> 
> 
> 1. slurp the file into a single string and then check for a match.
> 
> 2. read the relevent field from the file into hash keys and check for a
> match.
> 
> 3. Loop through the file line by line and look for a match.
> 
> 
> Generally there are 1 - 2,000 strings, and 2,000 to 1,500,000 lines per
> file.
> 
> I am wondering how these different methods may impact performance.

perldoc -q "How do I efficiently match many regular expressions at once"



John

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


