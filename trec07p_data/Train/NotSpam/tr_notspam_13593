From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Fri May 25 21:27:06 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4Q1R6qD002316
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 25 May 2007 21:27:06 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 1C2AF16386F
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 26 May 2007 01:27:02 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 549)
	id 43A07162BCE; Sat, 26 May 2007 01:26:11 +0000 (GMT)
To: samba-cvs@samba.org
From: jra@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070526012611.43A07162BCE@lists.samba.org>
Date: Sat, 26 May 2007 01:26:11 +0000 (GMT)
Subject: svn commit: samba r23151 - in branches: SAMBA_3_0/source/smbd
	SAMBA_3_0_25/source/smbd SAMBA_3_0_26/source/smbd
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: jra
Date: 2007-05-26 01:26:09 +0000 (Sat, 26 May 2007)
New Revision: 23151

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23151

Log:
Re-arrange the logic so it looks identical to the
"file existed" case above. This has no functional
change but is easier to see that it's doing the
same thing.
Jeremy.

Modified:
   branches/SAMBA_3_0/source/smbd/open.c
   branches/SAMBA_3_0_25/source/smbd/open.c
   branches/SAMBA_3_0_26/source/smbd/open.c


Changeset:
Modified: branches/SAMBA_3_0/source/smbd/open.c
===================================================================
--- branches/SAMBA_3_0/source/smbd/open.c	2007-05-26 01:19:51 UTC (rev 23150)
+++ branches/SAMBA_3_0/source/smbd/open.c	2007-05-26 01:26:09 UTC (rev 23151)
@@ -1663,6 +1663,20 @@
 					 access_mask, share_access,
 					 create_options, &file_existed);
 
+		if (NT_STATUS_IS_OK(status)) {
+			/* We might be going to allow this open. Check oplock
+			 * status again. */
+			/* Second pass - send break for both batch or
+			 * exclusive oplocks. */
+			if (delay_for_oplocks(lck, fsp, 2, oplock_request)) {
+				schedule_defer_open(lck, request_time);
+				TALLOC_FREE(lck);
+				fd_close(conn, fsp);
+				file_free(fsp);
+				return NT_STATUS_SHARING_VIOLATION;
+			}
+		}
+
 		if (!NT_STATUS_IS_OK(status)) {
 			struct deferred_open_record state;
 
@@ -1686,14 +1700,6 @@
 			return status;
 		}
 
-		if (delay_for_oplocks(lck, fsp, 2, oplock_request)) {
-			schedule_defer_open(lck, request_time);
-			TALLOC_FREE(lck);
-			fd_close(conn, fsp);
-			file_free(fsp);
-			return NT_STATUS_SHARING_VIOLATION;
-		}
-
 		/*
 		 * We exit this block with the share entry *locked*.....
 		 */

Modified: branches/SAMBA_3_0_25/source/smbd/open.c
===================================================================
--- branches/SAMBA_3_0_25/source/smbd/open.c	2007-05-26 01:19:51 UTC (rev 23150)
+++ branches/SAMBA_3_0_25/source/smbd/open.c	2007-05-26 01:26:09 UTC (rev 23151)
@@ -1665,6 +1665,20 @@
 					 access_mask, share_access,
 					 create_options, &file_existed);
 
+		if (NT_STATUS_IS_OK(status)) {
+			/* We might be going to allow this open. Check oplock
+			 * status again. */
+			/* Second pass - send break for both batch or
+			 * exclusive oplocks. */
+			if (delay_for_oplocks(lck, fsp, 2, oplock_request)) {
+				schedule_defer_open(lck, request_time);
+				TALLOC_FREE(lck);
+				fd_close(conn, fsp);
+				file_free(fsp);
+				return NT_STATUS_SHARING_VIOLATION;
+			}
+		}
+
 		if (!NT_STATUS_IS_OK(status)) {
 			struct deferred_open_record state;
 
@@ -1688,14 +1702,6 @@
 			return status;
 		}
 
-		if (delay_for_oplocks(lck, fsp, 2, oplock_request)) {
-			schedule_defer_open(lck, request_time);
-			TALLOC_FREE(lck);
-			fd_close(conn, fsp);
-			file_free(fsp);
-			return NT_STATUS_SHARING_VIOLATION;
-		}
-
 		/*
 		 * We exit this block with the share entry *locked*.....
 		 */

Modified: branches/SAMBA_3_0_26/source/smbd/open.c
===================================================================
--- branches/SAMBA_3_0_26/source/smbd/open.c	2007-05-26 01:19:51 UTC (rev 23150)
+++ branches/SAMBA_3_0_26/source/smbd/open.c	2007-05-26 01:26:09 UTC (rev 23151)
@@ -1667,6 +1667,20 @@
 					 access_mask, share_access,
 					 create_options, &file_existed);
 
+		if (NT_STATUS_IS_OK(status)) {
+			/* We might be going to allow this open. Check oplock
+			 * status again. */
+			/* Second pass - send break for both batch or
+			 * exclusive oplocks. */
+			if (delay_for_oplocks(lck, fsp, 2, oplock_request)) {
+				schedule_defer_open(lck, request_time);
+				TALLOC_FREE(lck);
+				fd_close(conn, fsp);
+				file_free(fsp);
+				return NT_STATUS_SHARING_VIOLATION;
+			}
+		}
+
 		if (!NT_STATUS_IS_OK(status)) {
 			struct deferred_open_record state;
 
@@ -1690,14 +1704,6 @@
 			return status;
 		}
 
-		if (delay_for_oplocks(lck, fsp, 2, oplock_request)) {
-			schedule_defer_open(lck, request_time);
-			TALLOC_FREE(lck);
-			fd_close(conn, fsp);
-			file_free(fsp);
-			return NT_STATUS_SHARING_VIOLATION;
-		}
-
 		/*
 		 * We exit this block with the share entry *locked*.....
 		 */

