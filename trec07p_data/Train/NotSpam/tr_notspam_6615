From perl6-all-return-81012-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  1 15:33:05 2007
Return-Path: <perl6-all-return-81012-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l41JX5b9012196
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 1 May 2007 15:33:05 -0400
Received: (qmail 18119 invoked by uid 514); 1 May 2007 04:12:40 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 18114 invoked from network); 1 May 2007 04:12:39 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.4 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,MIME_BASE64_NO_NAME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of dataweaver@gmail.com designates 209.85.132.246 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=YGU2QLvIQHr0OrkwIK7RMbUhqwnYA6+gAxUz66FmFKFny5aKG8bSuA0gGRzAzkta/bydx3HYjFi+76p6R4yLJ65zNdZxGJCiczHEzeDTJMNMrQvrBLvNmyFIj1v9HVcopDgabnBLoeBdYDFMNDYAM/YajLiymuixOiMCifzQEB8=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=eR8JE5VqCdVo5AYnpNxUlzb2hu0P20sh4mg508W75Dyk/SAnCzgcLsp10XzMArtLeO+NTR7QnLiGiyItH0Sq0K00LE2h21tpsKChG0KaaNOMMLX/FniS35Mzo2CD4XpGLrixYV6gLY40w94CoCrY3rlHbzfCo3WSAlYYWoPISRo=
Message-ID: <ef30550b0704302111x54dfd78dqb144c090564e50bc@mail.gmail.com>
Date: Mon, 30 Apr 2007 21:11:50 -0700
From: "Jonathan Lang" <dataweaver@gmail.com>
To: perl6-language@perl.org
Subject: Re: S12: can(), signatures and casting
In-Reply-To: <20070501015413.GA18605@wall.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Disposition: inline
References: <62482.87743.qm@web60813.mail.yahoo.com>
	 <ef30550b0704290342n23956d07xa7efa70a73d64060@mail.gmail.com>
	 <20070501015413.GA18605@wall.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.4 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,MIME_BASE64_NO_NAME,SPF_PASS
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by flax9.uwaterloo.ca id l41JX5b9012196
Status: O
Content-Length: 1702
Lines: 13

Larry Wall wrote:> Maybe we need to allow the & indirection on method names too:>>     if $obj.&fribble:(Str --> BadPoet) {
-snip-
> Note that we already define &foo:(Int, Str) to return a list of candidates> if there's more than one, so extending this from the multi dispatcher> to the single dispatcher just seem like a SMOS (small matter of syntax).
One corollary of this is that querying an object for its availablemethods should probably give you a list of coderefs instead of methodnames.
What threw me initially was that I wasn't used to thinking of acoderef as a test for existence - in particular, I couldn't see howthe method's name could be specified using such a syntax.
Another question: what about
  $obj.?fribble:(Str --> BadPoet)  $obj.*fribble:(Str --> BadPoet)  $obj.+fribble:(Str --> BadPoet)
As I understand it, placing a ? or * between an object and a methodresults in the method only being called if it exists (although I'm notclear on what happens if it doesn't); placing a * or + between theobject and method calls every version of the method that applies.Couldn't you just cap one of the former two with a '&' to prevent theresulting methods from actually running?
  &$obj.?fribble:(Str --> BadPoet)  &$obj.*fribble:(Str --> BadPoet)  &$obj.+fribble:(Str --> BadPoet)
Or would you have to hyperize the '&' in the latter cases?
  &$obj.fribble:(Str --> BadPoet) # dies if fribble doesn't work as advertised;  &$obj.?fribble:(Str --> BadPoet) # returns undef instead.  &«$obj.*fribble:(Str --> BadPoet) # returns a list of all fribbles;  &«$obj.+fribble:(Str --> BadPoet) # as above, but fails on an empty list.
Regardless, I agree: can '.can()'.
-- Jonathan "Dataweaver" Lang

