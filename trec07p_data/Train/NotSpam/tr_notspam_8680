From perl6-all-return-81192-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  8 20:50:37 2007
Return-Path: <perl6-all-return-81192-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l490oZqD022335
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 8 May 2007 20:50:35 -0400
Received: (qmail 30882 invoked by uid 514); 9 May 2007 00:50:33 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 30819 invoked from network); 9 May 2007 00:50:32 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
In-Reply-To: <189adbd0705081502o46a685b7oce042c7d3cfa6e7d@mail.gmail.com>
References: <RT-Ticket-42905@perl.org> <20070508142014.47991.qmail@spout.spiders.net> <189adbd0705081338t14af7dbdm8de22de66df6c70@mail.gmail.com> <200705081406.00431.chromatic@wgz.org> <189adbd0705081502o46a685b7oce042c7d3cfa6e7d@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <838D413E-D41B-48EF-8803-2FFAC18AC6D5@coleda.com>
Cc: Perl 6 Internals <perl6-internals@perl.org>
Content-Transfer-Encoding: 7bit
From: Will Coleda <will@coleda.com>
Subject: Re: [perl #42905] [PATCH] implement vtable overriding for PDD15, bugfix
Date: Tue, 8 May 2007 20:50:15 -0400
To: Alek Storm <alek.storm@gmail.com>, Allison Randal <allison@perl.org>,
   chromatic <chromatic@wgz.org>
X-Mailer: Apple Mail (2.752.3)
X-Virus-Scanned: Symantec AntiVirus Scan Engine
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL


On May 8, 2007, at 6:02 PM, Alek Storm wrote:

> On 5/8/07, chromatic <chromatic@wgz.org> wrote:
>>
>> With :vtable, you define a sub of the appropriate name and use  
>> the :vtable
>> attribute.
>>
>> Without :vtable, you define a sub of any name, add :anon so as not to
>> pollute
>> your namespace, somehow magically get that sub in a PMC, get the
>> appropriate
>> class in a PMC, and then call add_method on that class object with  
>> the sub
>> object, being sure to do all of this at load or instantiation time  
>> so that
>> people can use the right vtable entry any time during the program.
>
>
> No, with :vtable you define a sub of any name and use the :vtable  
> attribute,
> specifying which vtable method it overrides if the name doesn't  
> match the
> vtable name.  Then you create a Class PMC and call 'add_method' on it,
> passing the name, sub, flag that it's a vtable method, and flag  
> that it's
> anonymous.  However, since it's anonymous, the name parameter doesn't
> matter.
>
> Without :vtable, you define a sub of any name.  Then you create a  
> Class PMC
> and call 'add_vtable_method' on it, passing the vtable name and sub.
>
> Remember that this patch is for PDD15, not the old object system.   
> Even so,
> classes are *already* manually created at load time in both the  
> PDD15 and
> old object systems - that's where we stick the 'newclass' opcode.

Looking at PDD15, I see this paragraph...

 > To override a vtable function, either add the :vtable pragma to the
 > declaration of the method, or pass a named parameter "vtable" into  
the
 > add_method method on a class or role.

... which is kind of lonely, since, as you point out, there is no way  
in PDD15 to *declare* a method (and not that vtable ISA method, either.)

If we're keeping :vtable, we need to update this verbiage (and  
include an example) to avoid confusion.

On a related note, :method is mentioned in docs/compiler_faq.pod &  
docs/imcc/calling_conventions.pod. If it's dead, it needs to be  
deprecated; if it's not, it should probably be mentioned in PDD15.

> -- 
> Alek Storm

--
Will "Coke" Coleda
will@coleda.com


