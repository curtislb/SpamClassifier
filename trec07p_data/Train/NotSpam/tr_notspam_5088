From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed Apr 25 20:32:14 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3Q0WE6w005816
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 20:32:14 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 74B09163A0A
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 26 Apr 2007 00:32:13 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: **
X-Spam-Status: No, score=2.3 required=3.8 tests=AWL, BAYES_40, FORGED_RCVD_HELO,
	NO_REAL_NAME,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-technical@lists.samba.org
Delivered-To: samba-technical@lists.samba.org
Received: from amber.vis-av.com (dsl092-075-243.bos1.dsl.speakeasy.net
	[66.92.75.243]) by lists.samba.org (Postfix) with SMTP id C8AFA16382E
	for <samba-technical@lists.samba.org>;
	Thu, 26 Apr 2007 00:31:32 +0000 (GMT)
Received: (qmail 32060 invoked from network); 26 Apr 2007 00:31:31 -0000
Received: from unknown (HELO oberon-mail.internal) (192.168.1.71)
	by amber.internal with SMTP; 26 Apr 2007 00:31:32 -0000
Received: (nullmailer pid 728 invoked by uid 0);
	Thu, 26 Apr 2007 00:31:31 -0000
From: derrell@samba.org
To: Johannes Bauer <dfnsonfsduifb@gmx.de>
References: <462FEB35.6080705@gmx.de>
Date: Wed, 25 Apr 2007 20:31:31 -0400
In-Reply-To: <462FEB35.6080705@gmx.de> (Johannes Bauer's message of "Thu, 26
	Apr 2007 01:58:45 +0200")
Message-ID: <slaoq8m4.fsf@oberon-mail.internal>
User-Agent: Gnus/5.110004 (No Gnus v0.4) XEmacs/21.4.17 (linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: samba-technical@lists.samba.org
Subject: Re: libsmbclient: smbc_stat buffer overflow
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: derrell@samba.org
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 3038
Lines: 109

Johannes Bauer <dfnsonfsduifb@gmx.de> writes:

> Hello list,
>
> I've recently encountered a problem with libsmbclient which causes the
> smb_stat function to write over the "struct stat" buffer exactly 8 bytes
> on x86_32 (i686) systems. x86_64 seems not to be affected.
>
> Affected versions:
>   3.0.22 (Ubuntu)
>   3.0.24 (Gentoo)
>   3.0.24 (Gentoo, different system)
>
> This program demonstrates the problem (replace //joeserver/transfer by a
> valid samba share, of course):

You don't indicate how you compiled this program, but I suspect that
libsmbclient is compiled for large file support, while your application is
not.  That would cause libsmbclient to be using different size fields in
struct stat than your program is assuming.

Please try compiling your program with these additional compile flags, and
confirm that this fixes the problem (or not):

  -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64

Cheers,

Derrell


> #include <stdio.h>
> #include <errno.h>
> #include <sys/time.h>
> #include <string.h>
> #include <unistd.h>
> #include <stdlib.h>
> #include <libsmbclient.h>
>
> struct smbstat {
> 	struct stat stat;
> 	unsigned char pad[16];
> };
>
> static void Authentication_Function(const char *pServer, const char
> *pShare, char *pWorkgroup, int workgroup_len, char *pUsername, int
> username_len, char *pPassword, int password_len) {
>     strncpy(pUsername, "guest", username_len);
>     strncpy(pPassword, "", password_len);
> }
>
> int main(int argc, char **argv) {
> 	int dir;
> 	struct smbc_dirent *Directory_Entry;
> 	char Buffer[256];
>
> 	if (smbc_init(Authentication_Function, 0) != 0) {
> 		fprintf(stderr, "smblister: Could not initialize smbc-library.\n");
> 		exit(6);
> 	}
>
> 	dir = smbc_opendir("smb://joeserver/transfer");
> 	
> 	while ((Directory_Entry = smbc_readdir(dir)) != NULL) {
> 		if (Directory_Entry->smbc_type == SMBC_FILE) {
> 			int i;
> 			off_t Filesize;
> 			struct smbstat Filestats;
> 			memset(&Filestats, 0x63, sizeof(struct smbstat));
> 			snprintf(Buffer, sizeof(Buffer), "smb://joeserver/transfer/%s",
> Directory_Entry->name);
> 			if (!smbc_stat(Buffer, (struct stat*)&Filestats)) {
> 				Filesize = Filestats.stat.st_size;
> 			} else {
> 				Filesize = 0;
> 			}
> 			printf("%s %ld\n", Directory_Entry->name, Filesize);
> 			for (i = 0; i < 16; i++) printf("%02x ", Filestats.pad[i]);
> 			printf("\n");
> 		}
> 	}
> 	
> 	smbc_closedir(dir);
> 	return 0;
> }
>
> And the output on an i686 machine:
>
> out.bmp 3932214
> 16 2f 00 00 00 00 00 00 63 63 63 63 63 63 63 63
> x.pdf 296844
> 14 09 00 00 00 00 00 00 63 63 63 63 63 63 63 63
>
> Clearly it can be seen that the first eight bytes of "pad" become
> overwritten.
>
> I've traced this error down to this point - it has, of course,
> catastrophal consequences: programs using the smb_stat sometimes showed
> chrashing (segfaults) und undefined behaviour (defect samba contexts).
> Exploitation of this bug seems unlinkely, however.
>
> Please tell me what you think.
> Thank you,
> Greetings,
> Johannes
>
>

-- 

