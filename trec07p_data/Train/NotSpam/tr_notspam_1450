From beginners-return-90859-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 13 11:30:21 2007
Return-Path: <beginners-return-90859-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3DFUJ0I013334
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 11:30:20 -0400
Received: (qmail 29149 invoked by uid 514); 13 Apr 2007 15:29:50 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 29136 invoked from network); 13 Apr 2007 15:29:49 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Apr 2007 15:29:49 -0000
Received: (qmail 27652 invoked by uid 225); 13 Apr 2007 15:29:48 -0000
Delivered-To: beginners@perl.org
Received: (qmail 27631 invoked by alias); 13 Apr 2007 15:29:46 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.njpservices.co.uk (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 13 Apr 2007 08:29:39 -0700
Received: from [85.92.179.37] (85-92-179-37.eurisp.net [85.92.179.37] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l3DFTRa17661;
	Fri, 13 Apr 2007 16:29:28 +0100
Message-ID: <461FA1DD.906@350.com>
Date: Fri, 13 Apr 2007 16:29:33 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: beginners perl <beginners@perl.org>
CC: yitzle <yitzle@users.sourceforge.net>
Subject: Re: Enum
References: <ca5781c80704122240r3ad4a03n9739501d7662cc5a@mail.gmail.com>	 <461F4EDE.9030901@350.com> <ca5781c80704130701k7fe5ea8blf9d1d009aa97f00d@mail.gmail.com>
In-Reply-To: <ca5781c80704130701k7fe5ea8blf9d1d009aa97f00d@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1457
Lines: 54

yitzle wrote:
> 
> Rob Dixon wrote:
>> 
>> yitzle wrote:
>>>
>>> Don't shoot me!
>>> I can't find enum on the perldocs. Perl does have an enum, right?
>>> How do I go about making an enum? I basically want a bunch of
>>> variables to equal subsequent values, eg 0, 1, 2, ...
>> 
>> Perl doesn't provide enum natively. But it's a solution to a
>> problem, so perhaps
>> you ought to tell us what the problem is instead of trying to
>> implement a C solution?
>
> The "problem" is thus.
> I an reading in data and using split to get it to an array.
> Each element/column has a specific meaning, eg firstName, lastName etc
> Rather than using [0], [1] I figured I could set up an enum($firstName, 
> $lastName, etc)
> I suppose the alternative is to define (constant or variable) each index 
> name manually.
> Hm... Stupid me :)
> 
>   ($firstName, $lastName, etc) = (1 .. x);
> 
> Close enough to the enum :D (unless I messed up the range notation).
> I guess that solves it.

BANG!

There's no need to assign names to array indices when you have Perl's hash
structure. Suppose your data is tab-separated, you could write:

my @data;

while (<>) {
  my %record;
  @record{qw(firstName lastName field3 field4)} = split /\t/;
  push @data, \%record;
}

or something similar. No need for C in a Perl program.

HTH,

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


