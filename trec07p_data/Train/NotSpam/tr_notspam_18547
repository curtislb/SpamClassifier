From beginners-return-92319-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun 12 15:15:09 2007
Return-Path: <beginners-return-92319-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5CJF8L9030800
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 12 Jun 2007 15:15:09 -0400
Received: (qmail 11425 invoked by uid 514); 12 Jun 2007 19:15:01 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 11406 invoked from network); 12 Jun 2007 19:15:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 Jun 2007 19:15:01 -0000
Received: (qmail 9408 invoked by uid 225); 12 Jun 2007 19:15:01 -0000
Delivered-To: beginners@perl.org
Received: (qmail 9398 invoked by alias); 12 Jun 2007 19:14:59 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 204.209.205.52 as permitted sender)
Received: from mx01.telus.net (HELO defout.telus.net) (204.209.205.52)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 12 Jun 2007 12:14:57 -0700
Received: from priv-edmwaa06.telusplanet.net ([154.20.131.28])
          by priv-edmwes33.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070612191453.GDZJ1761.priv-edmwes33.telusplanet.net@priv-edmwaa06.telusplanet.net>
          for <beginners@perl.org>; Tue, 12 Jun 2007 13:14:53 -0600
Received: from [154.20.131.28] (d154-20-131-28.bchsia.telus.net [154.20.131.28])
	by priv-edmwaa06.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 48DAPA7SK3
	for <beginners@perl.org>; Tue, 12 Jun 2007 13:14:52 -0600 (MDT)
Message-ID: <466EF0AB.3090001@telus.net>
Date: Tue, 12 Jun 2007 12:14:51 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Thunderbird 1.5.0.12 (X11/20070604)
MIME-Version: 1.0
To: Perl beginners <beginners@perl.org>
Subject: Re: Perl directory listing program
References: <1181665584.263356.201200@i38g2000prf.googlegroups.com>
In-Reply-To: <1181665584.263356.201200@i38g2000prf.googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

sintral@gmail.com wrote:
> Looking for some help here you perl geniuses you : )
> 
> I need a program that will list all of the files in a directory.
> Without any arguments the program will list only the files (not
> directories) in the current directory.  But I must have some command
> line options:
> 
> -d <with 0 or 1 directory argument> if no argument is given, the cwd
> is used.  If the argument given is not a directory an error is thrown.
> The output needs to have the following headers:
> File Name | Size | Owner | Group ( with no pipes)
> 
> -l displays a long listing (can be used with -d as "script.pl -l -d
> <dirname>")
> The output needs to have the following headers:
> File Name | Size | Owner | Group (with no pipes)
> 
> no parameters - show the files in the cwd
> The output needs to have the following header:
> File Name

Just off the top of my head, season to taste:

#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Std;

getopt 'hl', \my %opt;

exists $opt{ h } && die <<HELP;
usage: $0 [-h] [-l] [directory]
      -h    this message
      -l    long listing
HELP

my $dir    = shift || '.';
my $format = "%-25s %10s %-8s %-8s\n";

opendir my $dh, $dir or die "Cannot open '$dir' $!";

if ( exists $opt{ l } ) {
     printf $format, 'File Name', 'Size', 'Owner', 'Group'
     }
else {
     print "File Name\n"
     }

while ( my $file = readdir $dh ) {
     my ( $uid, $gid, $size ) = ( lstat "$dir/$file" )[ 4, 5, 7 ] or die 
"Cannot stat '$dir' $!";
     next unless -f _;
     if ( exists $opt{ l } ) {
         printf $format, $file, $size, scalar getpwuid $uid, scalar 
getgrgid $gid
         }
     else {
         print "$file\n"
         }
     }




John
-- 
use Perl;
program
fulfillment

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


