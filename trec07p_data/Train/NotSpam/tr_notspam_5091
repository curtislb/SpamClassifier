From beginners-return-91058-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 20:39:33 2007
Return-Path: <beginners-return-91058-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3Q0dW6w005863
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 20:39:32 -0400
Received: (qmail 6033 invoked by uid 514); 26 Apr 2007 00:39:27 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 6002 invoked from network); 26 Apr 2007 00:39:26 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Apr 2007 00:39:26 -0000
Received: (qmail 5541 invoked by uid 225); 26 Apr 2007 00:39:26 -0000
Delivered-To: beginners@perl.org
Received: (qmail 5534 invoked by alias); 26 Apr 2007 00:39:26 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 204.209.205.55 as permitted sender)
Received: from defout.telus.net (HELO defout.telus.net) (204.209.205.55)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 17:39:24 -0700
Received: from priv-edmwaa06.telusplanet.net ([154.20.156.154])
          by priv-edmwes50.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070426003919.TZMD28285.priv-edmwes50.telusplanet.net@priv-edmwaa06.telusplanet.net>
          for <beginners@perl.org>; Wed, 25 Apr 2007 18:39:19 -0600
Received: from [154.20.156.154] (d154-20-156-154.bchsia.telus.net [154.20.156.154])
	by priv-edmwaa06.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 4CB6J6DGLF
	for <beginners@perl.org>; Wed, 25 Apr 2007 18:39:19 -0600 (MDT)
Message-ID: <462FF4B0.7030408@telus.net>
Date: Wed, 25 Apr 2007 17:39:12 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: Code Comments/Tips - Can this code be better?
References: <ca5781c80704251555i4f44d215qb6028b8db80f6aaa@mail.gmail.com>
In-Reply-To: <ca5781c80704251555i4f44d215qb6028b8db80f6aaa@mail.gmail.com>
X-Enigmail-Version: 0.90.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1579
Lines: 58

yitzle wrote:
> I got an input source that got records of fixed number of lines, eg
> Name, Address, Age, Phone, Cell

So you are saying that 'Name' appears on every fifth line and *always* on
every fifth line?

> I'm not interested in Age or Cell.
> I'm doing something along the lines of the following. Can I do better?
> 
> my @lines = qw/name address age phone cell end/;
> my %process = {name=>1, address=>1, phone=>1, end=>1};
> my $i = 0;
> my $name;
> my %hash;
> while(<INPUT>) {
>     $name = $_ if($lines[$i] eq 'name');
>     next unless($process{$lines[$i]});
>     $hash{$name}{$lines[$i]} = $_;
> } continue {
>     $i = ($i++) % (#$lines + 1);

You should *never* use auto-incrment or auto-decrement on a variable that
appears more than once in an expression, *ever*!

      ( $i += 1 ) %= @lines;

> }
> 
> One part that really irks me is the hash for listing what lines get
> processed.
> I suppose I can process everything and have a qw// list of what parts
> of the hash I want to use at a later point of the code...


my @lines = qw/ name address age phone cell end /;
my $name;
my %hash;

while ( <INPUT> ) {
    chomp;
    my $record = $. % @lines;
    $name = $_ if $record == 1;
    push @{ $hash{ $name } }, $_ if $record == 2 || $record == 4;
    }



John
-- 
Perl isn't a toolbox, but a small machine shop where you can special-order
certain sorts of tools at low cost and in short order.       -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


