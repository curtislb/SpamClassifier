From r-help-bounces@stat.math.ethz.ch  Wed Apr 25 22:39:12 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3Q2dB6w006923
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 22:39:12 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3Q2c9x7031533;
	Thu, 26 Apr 2007 04:38:29 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.7 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from web39711.mail.mud.yahoo.com (web39711.mail.mud.yahoo.com
	[209.191.106.57])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with SMTP id l3Q2biTD031394
	for <r-help@stat.math.ethz.ch>; Thu, 26 Apr 2007 04:37:45 +0200
Received: (qmail 44673 invoked by uid 60001); 26 Apr 2007 02:37:44 -0000
X-YMail-OSG: UKnBbqcVM1mEwnXrEhNy1uA9MRzogXP72u1u8VHXHVKaAR7hbLEGSr_1EIOeDYZTHtkbiCAKTUm0k5Wky96RLtxOsuS7Fkv5DEuWEBjFQ0Oru8kGLX_IvHnYQ5Iluw--
Received: from [132.239.127.87] by web39711.mail.mud.yahoo.com via HTTP;
	Wed, 25 Apr 2007 19:37:44 PDT
Date: Wed, 25 Apr 2007 19:37:44 -0700 (PDT)
From: Stephen Tucker <brown_emu@yahoo.com>
To: Peter Dalgaard <P.Dalgaard@biostat.ku.dk>, Tony Plate <tplate@acm.org>,
   jim holtman <jholtman@gmail.com>
In-Reply-To: <462F6F88.7030306@biostat.ku.dk>
MIME-Version: 1.0
Message-ID: <173291.42864.qm@web39711.mail.mud.yahoo.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] regular expressions with grep() and negative indexing
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="iso-8859-1"
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by speedy.uwaterloo.ca id l3Q2dB6w006923
Status: O
Content-Length: 2691
Lines: 100

Thanks guys for the suggestions guys- I come across this problem a lot but
now I have many solutions.

Thank you,

Stephen


--- Peter Dalgaard <P.Dalgaard@biostat.ku.dk> wrote:

> Peter Dalgaard wrote:
> > Stephen Tucker wrote:
> >   
> >> Dear R-helpers,
> >>
> >> Does anyone know how to use regular expressions to return vector
> elements
> >> that don't contain a word? For instance, if I have a vector
> >>   x <- c("seal.0","seal.1-exclude")
> >> I'd like to get back the elements which do not contain the word
> "exclude",
> >> using something like (I know this doesn't work) but:
> >>   grep("[^(exclude)]",x)
> >>
> >> I can use 
> >>   x[-grep("exclude",x)]
> >> for this case but then if I use this expression in a recursive function,
> it
> >> will not work for instances in which the vector contains no elements
> with
> >> that word. For instance, if I have
> >>   x2 <- c("dolphin.0","dolphin.1")
> >> then
> >>   x2[-grep("exclude",x2)]
> >> will give me 'character(0)'
> >>
> >> I know I can accomplish this in several steps, for instance:
> >>   myfunc <- function(x) {
> >>     iexclude <- grep("exclude",x)
> >>     if(length(iexclude) > 0) x2 <- x[-iexclude] else x2 <- x
> >>     # do stuff with x2 <...?
> >>   }
> >>
> >> But this is embedded in a much larger function and I am trying to
> minimize
> >> intermediate variable assignment (perhaps a futile effort). But if
> anyone
> >> knows of an easy solution, I'd appreciate a tip.
> >>   
> >>     
> > It has come up a couple of times before, and yes, it is a bit of a pain.
> >
> > Probably the quickest way out is
> >
> > negIndex <- function(i) 
> >
> >    if(length(i))
> >
> >        -i 
> >
> >    else 
> >
> >        TRUE
> >
> >   
> ... which of course needs braces if typed on the command line
> 
> negIndex <- function(i) 
> {
>    if(length(i))
>        -i 
>    else 
>        TRUE
> }
> 
> And I should probably also have said that it works like this:
> 
> > x2 <- c("dolphin.0","dolphin.1")
> > x2[-grep("exclude",x2)]
> character(0)
> > x2[negIndex(grep("exclude",x2))]
> [1] "dolphin.0" "dolphin.1"
> 
> 
> 
> -- 
>    O__  ---- Peter Dalgaard             Øster Farimagsgade 5, Entr.B
>   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
>  (*) \(*) -- University of Copenhagen   Denmark          Ph:  (+45)
> 35327918
> ~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)                  FAX: (+45)
> 35327907
> 
>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

