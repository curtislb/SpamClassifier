From beginners-return-92745-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 25 09:59:31 2007
Return-Path: <beginners-return-92745-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5PDxTL9029437
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 25 Jun 2007 09:59:30 -0400
Received: (qmail 21925 invoked by uid 514); 25 Jun 2007 13:59:21 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 21916 invoked from network); 25 Jun 2007 13:59:21 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Jun 2007 13:59:21 -0000
Received: (qmail 21746 invoked by uid 225); 25 Jun 2007 13:59:20 -0000
Delivered-To: beginners@perl.org
Received: (qmail 21731 invoked by alias); 25 Jun 2007 13:59:19 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of kamdarmihir06@gmail.com designates 64.233.166.177 as permitted sender)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.177)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 25 Jun 2007 06:59:16 -0700
Received: by py-out-1112.google.com with SMTP id a25so1684031pyi
        for <beginners@perl.org>; Mon, 25 Jun 2007 06:59:12 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=CfDSyyCMPhIbV7bbITpFEqPM8ns+0SPkzS9YtmJHZE3ZKl0HX+D1hqAqomGQAk03iSdpFOpU6PC2iLlFYdoay2SpMaklmawsLbkel2vStrLA/iR3x1qZLEr+zvyrRg/Sd4JrXOeda+Kn5yewyAsgxkdFZniEhhwxdpp1ECC39Rg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=Z0ppVOfV5lNgid8B/XpwjpteYq4YbudCyyRPqkRE93xGFTiut3JNxzBiaind3YBww9lFEKdF0/JLR8RCu4P/OPQDZ0MFlyuHl6McdleffQSILckgN0d3PX7wumyLV9q2Pb7p3aPGvPIgnGEq9uiWXKmJC6NUivhk7xqwML0aRfE=
Received: by 10.141.161.6 with SMTP id n6mr721459rvo.1182779951721;
        Mon, 25 Jun 2007 06:59:11 -0700 (PDT)
Received: by 10.141.34.19 with HTTP; Mon, 25 Jun 2007 06:59:11 -0700 (PDT)
Message-ID: <15a372ce0706250659o16179d44r84084d453f4d7667@mail.gmail.com>
Date: Mon, 25 Jun 2007 19:29:11 +0530
From: "Mihir Kamdar" <kamdarmihir06@gmail.com>
To: "Tom Phoenix" <tom@stonehenge.com>
Subject: Re: Help parsing a CSV file
Cc: beginners@perl.org
In-Reply-To: <31086b240706240854i29ecdaf7ke3b8c4939ee0c4b2@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_217_7206675.1182779951699"
References: <15a372ce0706240730y70e65894pc545a2f68c61a3c@mail.gmail.com>
	 <31086b240706240854i29ecdaf7ke3b8c4939ee0c4b2@mail.gmail.com>

------=_Part_217_7206675.1182779951699
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi Tom,

I found a script which does this for me which is as follows:-


#!/usr/bin/perl

#open(INFILE,'testJohor1.csv');
#open(OUTFILE,'xyz1.txt');

if (2 != ($#ARGV+1)) {

    print "Usage: $0 <infile> <outfile>\n";
    exit 1;
}

open INFILE,  "<$ARGV[0]" || die "unable to open INFILE";
open OUTFILE, ">$ARGV[1]" || die "unable to open OUTFILE";

while (<INFILE>) {

    if (/(.*)(\d)\/(\d)/) {

    my $stub  = $1;
    my $start = $2;
    my $end   = $3;

    for $i ($start..$end) {

        print OUTFILE "$stub$i\n";
    }

    } else {

      print OUTFILE "$_";
    }
}

close INFILE;
close OUTFILE;

It converts the fields in my input file like 097611/4 to
097611
097612
097613
097614

But there are some of the fields like 09778/0, which should be converted to
09778
09779
09770

The script ignores these values where difit before '/' is greater than the
one which is after that.

Any improvizations??

Thanks,
Mihir

On 6/24/07, Tom Phoenix <tom@stonehenge.com> wrote:
>
> On 6/24/07, Mihir Kamdar <kamdarmihir06@gmail.com> wrote:
>
> > I have a csv file having 3rd field as phone number series. In that
> field,
> > some of the records are phone number ranges like 097611/4
> >
> > Now I need to seperate this into 4 numbers and store them one after the
> > other, like:-
> >
> > 097611
> > 097612
> > 097613
> > 097614
>
> I recommend writing a Perl program to do this processing. Perl is
> excellent at text handling in general, and there are many modules on
> CPAN to help with the thornier tasks. Have you tried Perl yet? How far
> have you gotten? Where are you stuck?
>
> Cheers!
>
> --Tom Phoenix
> Stonehenge Perl Training
>

------=_Part_217_7206675.1182779951699--

