From perl6-all-return-82122-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 00:35:43 2007
Return-Path: <perl6-all-return-82122-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5K4ZgL9005655
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 00:35:43 -0400
Received: (qmail 8408 invoked by uid 514); 20 Jun 2007 04:35:40 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 8403 invoked from network); 20 Jun 2007 04:35:39 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-compiler-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-compiler
List-Id: <perl6-compiler.perl.org>
Delivered-To: mailing list perl6-compiler@perl.org
Delivered-To: perl6-compiler@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Tue, 19 Jun 2007 23:35:07 -0500
From: "Patrick R. Michaud" <pmichaud@pobox.com>
To: perl6-compiler@perl.org
Subject: perl6/parrot now passes 01-sanity
Message-ID: <20070620043507.GA32274@host.pmichaud.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.4.2.1i
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host.pmichaud.com
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [32003 505] / [47 12]
X-AntiAbuse: Sender Address Domain - host.pmichaud.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

As many of you may have gleaned from some of the recent Parrot
announcements, we now have the Perl6/Parrot compiler ("perl6") 
passing all of the "01-sanity" tests.  Special thanks go to 
Will Coleda (Coke), chromatic, Jerry Gay (particle), Mark 
Glines, and anyone else I might have forgotten for their efforts 
in getting us to this milestone.

Now that we've reached the milestone, it's a good opportunity
to outline where I think things will head from here.

First, I had erroneously anticipated that by passing the 01-sanity
tests we would then be able to quickly make use the Test.pm module 
that is in Pugs.  Unfortunately, that module seems to have evolved 
substantially (in entirely reasonable ways, I will add), so Test.pm
now makes use of Perl 6 features that we haven't yet implemented 
in the perl6 compiler, and that may take a bit of time yet to develop.
While we will certainly continue to focus on getting Test.pm to run,
we also want to progress on other components at the same time.
So, in all likelihood we'll build a very temporary Test.pm be able
to start running other tests, until we're sufficiently far enough
along to converge on the Pugs Test.pm module.

This is also a good time to make an official declaration that for
the foreseeable future, the test suite that exists in Pugs will 
be the designated canonical test suite for perl6-on-parrot.  In fact,
the current plan is that all patches and commits to the Perl 6 test 
suite will continue to take place in the Pugs repository, and then 
we'll find ways to make those tests easily available for use by 
the perl6 compiler in Parrot.

This will also make it easy for people to participate in contributing
and revising tests -- just get a Pugs commit bit!  

As we start looking at resolving tests, we'll also want to look at
the test files themselves, and making sure they're still consistent
with the Perl 6 specification as it has evolved.  As questions or
inconsistencies arise, we can post them to this list (or perl6-language)
for clarifications and decisions.

Lastly, we're always looking for people who can help with the building
of the perl6 compiler itself, and patches are welcome!  Just get the
latest version of parrot from http://www.parrotcode.org/ and start
looking in the languages/perl6/ directory.

Yes, perl6 still requires a fair knowledge of PIR -- we're working 
on tools to substantially reduce that.  We're also going to be 
providing more information about the compiler on the mailing list
and in various documents, and there will be sessions and hackathons
at YAPC::NA for people who want to get involved there.

Thanks!

Pm

