From r-help-bounces@stat.math.ethz.ch  Wed Apr 18 18:52:31 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3IMqP0I017014
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 18 Apr 2007 18:52:31 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3IMoxg8018564;
	Thu, 19 Apr 2007 00:51:11 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.6 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from jarlite.fhcrc.org (JARLITE.FHCRC.ORG [140.107.42.11])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3IMok5R018509
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <r-help@stat.math.ethz.ch>; Thu, 19 Apr 2007 00:50:48 +0200
Received: from jade.fhcrc.org (JADE.FHCRC.ORG [140.107.42.223])
	by jarlite.fhcrc.org (8.12.11.20060308/8.12.11/SuSE Linux 0.7) with
	ESMTP id l3IMoaid006508
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 18 Apr 2007 15:50:36 -0700
Received: from [140.107.157.139] (DHCP157139.FHCRC.ORG [140.107.157.139])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by jade.fhcrc.org (Postfix) with ESMTP id 6D4F6346B;
	Wed, 18 Apr 2007 15:50:36 -0700 (PDT)
Message-ID: <4626A0BC.2080006@fhcrc.org>
Date: Wed, 18 Apr 2007 15:50:36 -0700
From: Robert Gentleman <rgentlem@fhcrc.org>
User-Agent: Thunderbird 1.5.0.10 (Macintosh/20070221)
MIME-Version: 1.0
To: "Leeds, Mark (IED)" <Mark.Leeds@morganstanley.com>
References: <D3AEEDA31E57474B840BEBC25A8A834401956EBB@NYWEXMB23.msad.ms.com>
In-Reply-To: <D3AEEDA31E57474B840BEBC25A8A834401956EBB@NYWEXMB23.msad.ms.com>
X-PMX-Version: 5.3.1.294258, Antispam-Engine: 2.5.1.298604,
	Antispam-Data: 2007.4.18.154034
X-FHCRC-SCANNED: Wed Apr 18 15:50:41 2007
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Gentleman and Ihaka , 2000 paper question
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2860
Lines: 94

not sure just what you want, but here are some snippets

newton <-
   function(lfun, est, tol = 1e-7, niter = 500) {
     cscore <- lfun$score(est)
     if (abs(cscore) < tol)
       return(est)
     for (i in 1:niter) {
       new <- est - cscore / lfun$d2(est)
       cscore <- lfun$score(new)
       if (abs(cscore) < tol)
         return(new)
       est <- new
     }
     stop("exceeded allowed number of iterations")
   }

with the likelihood function

Rmklike <-
   function(data) {
     n <- length(data)
     sumx <- sum(data)
     lfun <- function(mu) n * log(mu) - mu * sumx
     score <- function(mu) n / mu - sumx
     d2 <- function(mu) -n / mu^2
     list(lfun = lfun, score = score, d2 = d2)
   }


Leeds, Mark (IED) wrote:
> In their paper, "Lexical Scope and Statistical Computing", the authors (
> Gentleman and Ihaka ) go to great length explaining why R's use of
> lexical scoping creates advantages when doing statistical computations.
> 
> If anyone has or is familiar with this paper, could they provide the
> main program code for how the "newton" function would be called in their
> example on page 500 of the paper.  The authors are extremely clear in
> their writing and the paper is quite an eye opener for me but it seems
> like lfun somehow needs to be initialized so that it "grabs" the
> environment of "Rmklike". 

   Rmlike is called to create the likelihood function, and since that 
function is defined in the body of Rmlike, it has the evaluation 
environment by default. And any return value will have the correct 
environment.

> I'm not sure how one would go about doing this so I am wondering what
> the main program that calls "newton" would be
> if there was one. Thanks.
> 

So,

   data=rexp(10, rate=.3)
   lf = Rmklike(data)
   newton(lf, .1)


seems to do the trick (and surprisingly still works, as written some 
unbelievably long time ago)

  Robert

> 
> 	
> Mark
> --------------------------------------------------------
> 
> This is not an offer (or solicitation of an offer) to buy/se...{{dropped}}
> 
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
> 

-- 
Robert Gentleman, PhD
Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M2-B876
PO Box 19024
Seattle, Washington 98109-1024
206-667-7700
rgentlem@fhcrc.org

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

