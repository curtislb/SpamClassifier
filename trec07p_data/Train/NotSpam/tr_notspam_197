From r-help-bounces@stat.math.ethz.ch  Mon Apr  9 13:23:22 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l39HNK0I017209
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 9 Apr 2007 13:23:21 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l39HLHMC008279;
	Mon, 9 Apr 2007 19:21:38 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL autolearn=no version=3.1.8
Received: from tigon.mail.utk.edu (tigon.mail.utk.edu [160.36.0.83])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l39HL0DJ008091
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <R-help@stat.math.ethz.ch>; Mon, 9 Apr 2007 19:21:01 +0200
X-ASG-Debug-ID: 1176139259-723600ea0000-ttKww0
X-Barracuda-URL: http://liger.mail.utk.edu:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: ksmtp2.utk.tennessee.edu[160.36.76.165]
X-Barracuda-Start-Time: 1176139259
Received: from ksmtp2.utk.tennessee.edu (ksmtp2.utk.tennessee.edu
	[160.36.76.165])
	by tigon.mail.utk.edu (Spam Firewall) with ESMTP id A5AF17D5FEC
	for <R-help@stat.math.ethz.ch>; Mon,  9 Apr 2007 13:20:59 -0400 (EDT)
Received: from UTKFSVS4.utk.tennessee.edu ([160.36.76.189]) by
	ksmtp2.utk.tennessee.edu with Microsoft SMTPSVC(6.0.3790.1830); 
	Mon, 9 Apr 2007 13:20:59 -0400
x-mimeole: Produced By Microsoft Exchange V6.5
Content-class: urn:content-classes:message
MIME-Version: 1.0
X-ASG-Orig-Subj: RE: do.call vs. lapply for lists
Date: Mon, 9 Apr 2007 13:20:59 -0400
Message-ID: <D028EEB4CA113D4EAFDD485CCC998277AF9BBC@UTKFSVS4.utk.tennessee.edu>
In-Reply-To: <1176138352.5098.54.camel@localhost.localdomain>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: do.call vs. lapply for lists
Thread-Index: Acd6yVpBr4vmzwG9StCRII5rRVofgwAAdqiA
References: <D028EEB4CA113D4EAFDD485CCC998277AF9B9D@UTKFSVS4.utk.tennessee.edu>
	<1176138352.5098.54.camel@localhost.localdomain>
From: "Muenchen, Robert A (Bob)" <muenchen@utk.edu>
To: <R-help@stat.math.ethz.ch>
X-OriginalArrivalTime: 09 Apr 2007 17:20:59.0850 (UTC)
	FILETIME=[712442A0:01C77ACB]
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at mail.utk.edu
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
X-MIME-Autoconverted: from quoted-printable to 8bit by hypatia.math.ethz.ch id
	l39HL0DJ008091
Subject: Re: [R] do.call vs. lapply for lists
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 4526
Lines: 165

Marc,

That makes the difference between do.call and lapply crystal clear. Your
explanation would make a nice FAQ entry.

Thanks!
Bob

=========================================================
  Bob Muenchen (pronounced Min'-chen), Manager  
  Statistical Consulting Center
  U of TN Office of Information Technology
  200 Stokely Management Center, Knoxville, TN 37996-0520
  Voice: (865) 974-5230  
  FAX:   (865) 974-4810
  Email: muenchen@utk.edu
  Web:   http://oit.utk.edu/scc, 
  News:  http://listserv.utk.edu/archives/statnews.html
=========================================================


> -----Original Message-----
> From: Marc Schwartz [mailto:marc_schwartz@comcast.net]
> Sent: Monday, April 09, 2007 1:06 PM
> To: Muenchen, Robert A (Bob)
> Cc: R-help@stat.math.ethz.ch
> Subject: Re: do.call vs. lapply for lists
> 
> On Mon, 2007-04-09 at 12:45 -0400, Muenchen, Robert A (Bob) wrote:
> > Hi All,
> >
> > I'm trying to understand the difference between do.call and lapply
> for
> > applying a function to a list. Below is one of the variations of
> > programs (by Marc Schwartz) discussed here recently to select the
> first
> > and last n observations per group.
> >
> > I've looked in several books, the R FAQ and searched the archives,
> but I
> > can't find enough to figure out why lapply doesn't do what do.call
> does
> > in this case. The help files & newsletter descriptions of do.call
> sound
> > like it would do the same thing, but I'm sure that's due to my lack
> of
> > understanding about their specific terminology. I would appreciate
it
> if
> > you could take a moment to enlighten me.
> >
> > Thanks,
> > Bob
> >
> > mydata <- data.frame(
> >   id      = c('001','001','001','002','003','003'),
> >   math    = c(80,75,70,65,65,70),
> >   reading = c(65,70,88,NA,90,NA)
> > )
> > mydata
> >
> > mylast <- lapply( split(mydata,mydata$id), tail, n=1)
> > mylast
> > class(mylast) #It's a list, so lapply will so *something* with it.
> >
> > #This gets the desired result:
> > do.call("rbind", mylast)
> >
> > #This doesn't do the same thing, which confuses me:
> > lapply(mylast,rbind)
> >
> > #...and data.frame won't fix it as I've seen it do in other
> > circumstances:
> > data.frame( lapply(mylast,rbind) )
> 
> Bob,
> 
> A key difference is that do.call() operates (in the above example) as
> if
> the actual call was:
> 
> > rbind(mylast[[1]], mylast[[2]], mylast[[3]])
>    id math reading
> 3 001   70      88
> 4 002   65      NA
> 6 003   70      NA
> 
> In other words, do.call() takes the quoted function and passes the
list
> object as if it was a list of individual arguments. So rbind() is only
> called once.
> 
> In this case, rbind() internally handles all of the factor level
> issues,
> etc. to enable a single common data frame to be created from the three
> independent data frames contained in 'mylast':
> 
> > str(mylast)
> List of 3
>  $ 001:'data.frame':    1 obs. of  3 variables:
>   ..$ id     : Factor w/ 3 levels "001","002","003": 1
>   ..$ math   : num 70
>   ..$ reading: num 88
>  $ 002:'data.frame':    1 obs. of  3 variables:
>   ..$ id     : Factor w/ 3 levels "001","002","003": 2
>   ..$ math   : num 65
>   ..$ reading: num NA
>  $ 003:'data.frame':    1 obs. of  3 variables:
>   ..$ id     : Factor w/ 3 levels "001","002","003": 3
>   ..$ math   : num 70
>   ..$ reading: num NA
> 
> 
> On the other hand, lapply() (as above) calls rbind() _separately_ for
> each component of mylast.  It therefore acts as if the following
series
> of three separate calls were made:
> 
> 
> > rbind(mylast[[1]])
>    id math reading
> 3 001   70      88
> 
> > rbind(mylast[[2]])
>    id math reading
> 4 002   65      NA
> 
> > rbind(mylast[[3]])
>    id math reading
> 6 003   70      NA
> 
> 
> Of course, the result of lapply() is that the above are combined into
a
> single R list object and returned:
> 
> > lapply(mylast, rbind)
> $`001`
>    id math reading
> 3 001   70      88
> 
> $`002`
>    id math reading
> 4 002   65      NA
> 
> $`003`
>    id math reading
> 6 003   70      NA
> 
> 
> It is a subtle, but of course critical, difference in how the internal
> function is called and how the arguments are passed.
> 
> Does that help?
> 
> Regards,
> 
> Marc Schwartz
>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

