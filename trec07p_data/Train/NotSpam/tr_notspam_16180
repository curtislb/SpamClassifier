From sugar-bounces@lists.laptop.org  Mon Jun  4 12:56:44 2007
Return-Path: <sugar-bounces@lists.laptop.org>
Received: from mail.laptop.org (pedal.laptop.org [18.85.2.148])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l54GuhhB030464
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 4 Jun 2007 12:56:43 -0400
Received: from [127.0.1.1] (localhost [127.0.0.1])
	by mail.laptop.org (Postfix) with ESMTP id C9CB458BC7BB;
	Mon,  4 Jun 2007 12:56:27 -0400 (EDT)
Received: by mail.laptop.org (Postfix)
	id 5E1DD58BC7CB; Mon,  4 Jun 2007 12:56:26 -0400 (EDT)
Delivered-To: sugar@laptop.org
Received: from spam.laptop.org (spam.laptop.org [18.85.46.23])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mail.laptop.org (Postfix) with ESMTP id 5B9ED58BC7BB
	for <sugar@laptop.org>; Mon,  4 Jun 2007 12:56:26 -0400 (EDT)
X-ASG-Debug-ID: 1180976191-554d00180000-3Xmyjt
X-Barracuda-URL: http://18.85.46.23:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: mx1.redhat.com[66.187.233.31]
X-Barracuda-Start-Time: 1180976191
Received: from mx1.redhat.com (mx1.redhat.com [66.187.233.31])
	by spam.laptop.org (Spam Firewall) with ESMTP id 0F71E12B47
	for <sugar@laptop.org>; Mon,  4 Jun 2007 12:56:31 -0400 (EDT)
Received: from int-mx1.corp.redhat.com (int-mx1.corp.redhat.com
	[172.16.52.254])
	by mx1.redhat.com (8.13.1/8.13.1) with ESMTP id l54GuTiD026016;
	Mon, 4 Jun 2007 12:56:29 -0400
Received: from mail.boston.redhat.com (mail.boston.redhat.com [172.16.76.12])
	by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id
	l54GuTx2030391; Mon, 4 Jun 2007 12:56:29 -0400
Received: from localhost.localdomain (vpn-4-76.str.redhat.com [10.32.4.76])
	by mail.boston.redhat.com (8.13.1/8.13.1) with ESMTP id l54GuGog026573; 
	Mon, 4 Jun 2007 12:56:19 -0400
Message-ID: <4664431D.1000808@redhat.com>
Date: Mon, 04 Jun 2007 18:51:41 +0200
From: Marco Pesenti Gritti <mpg@redhat.com>
User-Agent: Thunderbird 2.0.0.0 (X11/20070419)
MIME-Version: 1.0
To: Bert Freudenberg <bert@freudenbergs.de>
X-ASG-Orig-Subj: Re: #1560 NORM Trial-2: Activity launch not detected
References: <1560-trac@dev.laptop.org>
	<043.e317810da44204f94840a939cbdf3dae@laptop.org>
	<A508E0F2-B6CA-4DC5-991B-22AF04F525C6@freudenbergs.de>
	<466424B1.7090301@redhat.com>
	<989C2FB3-70E1-4977-A49F-CF17FE7DBB1B@freudenbergs.de>
In-Reply-To: <989C2FB3-70E1-4977-A49F-CF17FE7DBB1B@freudenbergs.de>
X-Barracuda-Bayes: INNOCENT GLOBAL 0.0000 1.0000 -2.0210
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at laptop.org
X-Barracuda-Spam-Score: -2.02
X-Barracuda-Spam-Status: No, SCORE=-2.02 using global scores of TAG_LEVEL=3.5
	QUARANTINE_LEVEL=1000.0 KILL_LEVEL=5.5 tests=
X-Barracuda-Spam-Report: Code version 3.1, rules version 3.1.18951
	Rule breakdown below
	pts rule name              description
	---- ----------------------
	--------------------------------------------------
Cc: Sugar ml <sugar@laptop.org>
Subject: Re: [sugar] #1560 NORM Trial-2: Activity launch not detected
X-BeenThere: sugar@lists.laptop.org
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Discussion of OLPC design,
	desktop platform and user experience" <sugar.lists.laptop.org>
List-Unsubscribe: <http://lists.laptop.org/listinfo/sugar>,
	<mailto:sugar-request@lists.laptop.org?subject=unsubscribe>
List-Archive: <http://lists.laptop.org/pipermail/sugar>
List-Post: <mailto:sugar@lists.laptop.org>
List-Help: <mailto:sugar-request@lists.laptop.org?subject=help>
List-Subscribe: <http://lists.laptop.org/listinfo/sugar>,
	<mailto:sugar-request@lists.laptop.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: sugar-bounces@lists.laptop.org
Errors-To: sugar-bounces@lists.laptop.org

Bert Freudenberg wrote:
> On Jun 4, 2007, at 16:41 , Marco Pesenti Gritti wrote:
>
>> Bert Freudenberg wrote:
>>> On Jun 3, 2007, at 18:01 , Zarro Boogs per Child wrote:
>>>
>>>> #1560: Activity launch not detected
>>>> ---------------------+------------------------------------------------------ 
>>>>
>>>>   Reporter:  bert    |       Owner:  dcbw
>>>>       Type:  defect  |      Status:  reopened
>>>>   Priority:  normal  |   Milestone:  Trial-2
>>>>  Component:  sugar   |     Version:
>>>> Resolution:          |    Keywords:
>>>>   Verified:  0       |
>>>> ---------------------+------------------------------------------------------ 
>>>>
>>>> Comment (by marco):
>>>>
>>>>  This should be fixed again in the latest git. Activity id and 
>>>> bundle id
>>>>  should now be provided by two properties of the toplevel X window.
>>>>
>>>>  _SUGAR_ACTIVITY_ID (utf8 string)
>>>>  _SUGAR_BUNDLE_ID (utf8 string)
>>>>
>>>>  sugar/lib/sugar-x11-util.c has the code which we use to set those
>>>>  properties for python activities.
>>>
>>> This only complicates matters. Not only for Etoys (which does not 
>>> have a way to set X properties currently), but I see you had to 
>>> resort to C code even for Python activities. I'd much prefer if the 
>>> only thing Sugar cares about an activity X-wise is its window ID 
>>> (and we're working on a way to make that accessible in Squeak). 
>>> Everything else should be handled by DBus, and this is how it 
>>> actually was before your refactoring. If anything I'd shift 
>>> communication *towards" DBus, not away from it towards X by 
>>> introducing arbitrary and unnecessary properties.
>>
>> [ CCing Dan, since he wrote the original startup notification and  
>> I'm interested in his opinion ]
>>
>> We decided a while ago to use X  for window management and I don't 
>> see a reason to revisit that decision. Etoys should respect the 
>> multiple windows semantic (which I know you are working on, thanks).
>>
>> To reassure you, we are not going to use X as an IPC (as people have 
>> done in the past), since that gets unbelievably ugly: that's where 
>> dbus has his role in the shell -> activity instance communication.
>
> That's good to hear. However, the X properties required now are more 
> complex than before. In the case of Squeak, at window creation time I 
> have no way of knowing the dbus activity id yet.
>
>>> Besides, it does not address the original problem - that if an 
>>> activity X window is opened and detected by the Sugar shell, but it 
>>> has not created its DBus service yet, the shell will mistake it for 
>>> a raw X app (creating a
>>> "raw" icon in the donut next to the still flashing activity icon).
>>
>> If there is a _SUGAR_ACTIVITY_ID property the window is an activity, 
>> otherwise it's a raw X window. So I think it actually solves the 
>> problem.
>>
>> The shell must know the activity and the bundle id as soon as an 
>> activity window is displayed, otherwise it can't represent it 
>> properly in the home. Relying on the dbus service for this was very 
>> fragile and introduced races which was hard or impossible to solve 
>> properly.
>
> To show the icon it's sufficient to know the bundle id. Actually, you 
> don't even really need that, because the icon is already showing 
> (flashing). You just need to know if this is an activity window or 
> not. And if it is, then sooner or later the dbus service will appear 
> telling you if that window belongs to this activity.
>

You are probably misunderstanding how startup notification works.

1 Before an activity is started from the panel it informs the shell that 
an activity with a certain $ID is going to startup -> The shell display 
a pulsing icon.
2 When the window finally appear, sugar needs to get its activity id so 
that it can transform the notification icon in a normal one (stop the 
pulsing, map it to the window xid etc).

> It's practically the same whether you announce the dbus service via X 
> props, or you send the XID via dbus. Supporting both makes activity 
> developer's live easier.
>

Using X props the operation is atomic. The window appears *and* you know 
his activity_id at the same time. And that obviously avoid the races.

>> Window management should work using X communication. Mixing dbus and 
>> X there just introduce races and confusion. If we was going down the 
>> "dbus for window management" route then I'd agree with you, but we 
>> aren't.
>
>>> This can easily be fixed up later by detecting the DBus service 
>>> creation and removing the raw icon - this is how my fix worked.
>>
>> Now, that's really a bad hack. I don't want to show a random icon on 
>> the screen and than replace it when the DBUS service appear... it 
>> just suck.
>
> That icon would not even be visible because it is hidden by the X 
> window that just appeared. It is noble to try preventing to create 
> that icon unnecessarily, but if I had a say in designing Sugar, I'd 
> opt for robustness, making it simpler for external developers, not 
> harder.
>

Robustness is exactly the reason I chose to use the X properties. It 
makes it slightly harder to setup a non-python Sugar activity but it's a 
much cleaner and robust approach.

> In fact, if I launch an activity from the Sugar frame, it's reasonable 
> to assume that the next X window opened actually belongs to that 
> activity. So you don't really need to show that raw icon, at least 
> until the activity launch is finished.
>

Huh. You are really not opting for robustness here!

>> The startup phase is completed when the window appear on the screen, 
>> not when the dbus service appear. That's also exactly how startup 
>> notification is implemented in GNOME btw.
>
> Which isn't really relevant to Sugar, is it?

It's relevant that the Sugar approach to startup notification has been 
already used successfully in another based on  the same platform.

Marco
_______________________________________________
Sugar mailing list
Sugar@lists.laptop.org
http://lists.laptop.org/listinfo/sugar

