From perl6-all-return-81692-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 31 19:58:48 2007
Return-Path: <perl6-all-return-81692-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4VNwlhB002323
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 19:58:48 -0400
Received: (qmail 17131 invoked by uid 514); 31 May 2007 23:58:41 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 17126 invoked from network); 31 May 2007 23:58:41 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=2.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of david.green@telus.net designates 199.185.220.222 as permitted sender)
Mime-Version: 1.0
Message-Id: <a06230903c2841742ecc0@[172.27.1.7]>
In-Reply-To: <20070529234058.GB18458@wall.org>
References: <20070529211829.A0A6ECB9B8@x12.develooper.com>
 <f60fe000705291546h15604024ib3d3476e51ceda99@mail.gmail.com>
 <20070529234058.GB18458@wall.org>
Date: Thu, 31 May 2007 17:36:37 -0600
To: perl6-language@perl.org
From: David Green <david.green@telus.net>
Subject: Re: [svn:perl6-synopsis] r14407 - doc/trunk/design/syn
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

On 5/29/07, Larry Wall wrote:
>Note that "any" is considered a singular noun in English,

I started to say, "Except when it means 'all'", but when used that 
way, it still would mean "all" in the singular sense.  But it gives 
me an excuse to point out that "any" can be ambiguous in English; 
it's not hard to see which meaning is intended in a given context, 
but there's still a temptation to translate an English "any" into a 
Perl "any" when it really means "all".

   #If my score equals anyone else's, there's a tie
   if $my_score==any(@other_scores) { say "I tied with ".score2name($my_score) }

   #If my score is higher than anyone else's, I win!
   if $my_score > any(@other_scores) { say "Oops, this doesn't DWIM!" }

Not a big deal in one way, but it's the kind of error that's easy to 
overlook even when you're staring right at it.  Which is why when I'm 
writing SQL, I prefer to use SOME instead of ANY.  If it were spelled 
"some" in Perl, I figure all the extra typing would be worth it to 
avoid an occasional error.


>In any case, the Huffman coding is probably right because you want
>to declare Any parameters more often than you want to talk about any
>possible kind of Object, I suspect.

Are Objects really Everything?  What about native types like int -- 
or (thanks to autoboxing) should I really be thinking of them as 
Objects with built-in optimiser hints?  Not that I have a good 
example of why you'd want to specify a native-only type; I'm only 
asking out of pedantic curiosity.


-David

