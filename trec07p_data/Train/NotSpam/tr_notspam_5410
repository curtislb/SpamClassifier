From perl6-all-return-80907-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Apr 26 19:50:03 2007
Return-Path: <perl6-all-return-80907-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3QNo16w018651
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 26 Apr 2007 19:50:01 -0400
Received: (qmail 12803 invoked by uid 514); 26 Apr 2007 23:50:00 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 12790 invoked from network); 26 Apr 2007 23:50:00 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of bailey.charles@gmail.com designates 209.85.132.245 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        b=qqoeobMr/zoSTxqatxDtRCiClgp4WPXV0e5iYWPH/6ZUWMsS3RsqyRxL22bEZ79hfW47Y9c6VA8Fgz6Sodwc9DP6jfIfA1T0oUG7DCf+k5lYB42ei6Zuk/RZmpn0QHmxKzfounvpvCx1Bql7LNrpmrKAzQ81qtE6Ui8U0yJq9hU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        b=JJ+j5X5OiPNesAOVebrXkLNtaOdLYhnIMrL3lOp4Jt3lxztwxDw0WScsn6ibhY8VzEUvnbHQMaPyG+2ukxA6zeHsa5z/WOHC94fPjUZZEeHWWdXvgU5mGK6u58nRMXexL6e6ciNqdh04xHSEGhnu3lY+A6HSfcFwtEHI/EFe4KE=
Message-ID: <b78749dd0704261649i5b2497fds8bfdf063334e3cf2@mail.gmail.com>
Date: Thu, 26 Apr 2007 19:49:39 -0400
From: "Charles Bailey" <bailey.charles@gmail.com>
To: perl6-language@perl.org
Subject: Re: [svn:perl6-synopsis] r14376 - doc/trunk/design/syn
In-Reply-To: <20070424232830.GA7200@wall.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_131658_9827389.1177631379921"
References: <20070417182239.1D331CB9B8@x12.develooper.com>
	 <7ca3f0160704171134x458e3864r5d0a652c0ea7d93b@mail.gmail.com>
	 <b78749dd0704241545u151ae6efj9b8bd4b3d823bd70@mail.gmail.com>
	 <20070424232830.GA7200@wall.org>
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
Status: O
Content-Length: 2488
Lines: 62

------=_Part_131658_9827389.1177631379921
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 4/24/07, Larry Wall <larry@wall.org> wrote:
>
> On Tue, Apr 24, 2007 at 06:45:12PM -0400, Charles Bailey wrote:
> : On 4/17/07, larry@cvs.perl.org <larry@cvs.perl.org> wrote:
> : >Note that unless no longer allows an else
> : It's probably that I'm just having another day where skull > brain, but
> I'm
> : not sure I see the benefit to the language here.
> :
> : I think of "unless" as an alternate spelling for "if not", so it seems
> : natural that it be possible to follow it with an "else".  I'll grant
> that
> : the (common) idiomatic usage of "unless" doesn't include an "else", but
> that
> : seems more an argument not to use an "else" rather than to forbid
> it.  It's
> : a bit like saying one can "continue" after a "while" but not an "until".
> :
> : Is there a parsing advantage that I've missed, or does it disambiguate
> some
> : other construct?
>
> Yes, it's slightly easier to parse this way, and yes, it bugs me that
> unless/else is not English, but mostly I changed it as a not-so-gentle
> prod towards refactoring, based on the notion that if you have to
> install a guard on a storage location being false, you've probably
> got the scope of the storage location wrong.  And even if not, there
> are several other ways to write it, at least one of which will be
> generally more readable to other people.
>
> I freely admit that it's less orthogonal and that I'm being high-handed.
> :)


For situations such as this we have Rule One.

But I think I'd still ask you to reconsider, in a low-priority thread
somewhere.

My sense is that the driving consideration is more a use case than an
intrinsic element of language structure (to the extent that the two are
separable), and would have a more natural home in a pragma like
Design::BestPractice (or Lingua::Franca or Wheels::Training or
Lingua::Fascist, depending on one's point of view).  Maybe I'm just thinking
too neutrally of unless === if not, rather than unless === if shouldn't be.

Either way, it's a pretty minor point -- certainly nothing as mind-bending
as a good JAPH or with the scary security implications of
parens-specify-an-executable-block, so 'nuff said.

-- 
Regards,
Charles Bailey
Lists: bailey _dot_ charles _at_ gmail _dot_ com
Other: bailey _at_ newman _dot_ upenn _dot_ edu

------=_Part_131658_9827389.1177631379921--

