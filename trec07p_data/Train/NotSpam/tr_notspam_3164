From r-help-bounces@stat.math.ethz.ch  Thu Apr 19 10:34:51 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3JEYm0I025705
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 10:34:49 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JEXDVi026073;
	Thu, 19 Apr 2007 16:33:36 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from ipex2.johnshopkins.edu (ipex2.johnshopkins.edu [162.129.8.151])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JEVxYT025566
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=FAIL)
	for <r-help@stat.math.ethz.ch>; Thu, 19 Apr 2007 16:32:00 +0200
Received: from dom-59mfy81.monument1.jhmi.edu (HELO DOM59MFY81)
	([10.16.148.124]) by ipex2.johnshopkins.edu with ESMTP/TLS/RC4-MD5;
	19 Apr 2007 10:31:58 -0400
X-BrightmailFiltered: true
X-Brightmail-Tracker: AAAAAA==
X-IronPort-AV: i="4.14,428,1170651600"; 
	d="scan'208"; a="265573982:sNHT39566536"
From: "Ravi Varadhan" <rvaradhan@jhmi.edu>
To: "'Alberto Monteiro'" <albmont@centroin.com.br>,
   <ted.harding@manchester.ac.uk>, <r-help@stat.math.ethz.ch>
References: <10076822.post@talk.nabble.com>
	<XFMail.070419140156.Ted.Harding@manchester.ac.uk>
	<20070419131917.M36114@centroin.com.br>
Date: Thu, 19 Apr 2007 10:31:58 -0400
Message-ID: <001d01c7828f$7c9d0d30$7c94100a@win.ad.jhu.edu>
MIME-Version: 1.0
X-Mailer: Microsoft Office Outlook 11
In-reply-to: <20070419131917.M36114@centroin.com.br>
Thread-index: AceCjCAp052+ibWXQiudgWNCElZ7xwAA0/oA
X-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: Re: [R] convergence
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2386
Lines: 82

No.

----------------------------------------------------------------------------
-------

Ravi Varadhan, Ph.D.

Assistant Professor, The Center on Aging and Health

Division of Geriatric Medicine and Gerontology 

Johns Hopkins University

Ph: (410) 502-2619

Fax: (410) 614-9625

Email: rvaradhan@jhmi.edu

Webpage:  http://www.jhsph.edu/agingandhealth/People/Faculty/Varadhan.html

 

----------------------------------------------------------------------------
--------

-----Original Message-----
From: r-help-bounces@stat.math.ethz.ch
[mailto:r-help-bounces@stat.math.ethz.ch] On Behalf Of Alberto Monteiro
Sent: Thursday, April 19, 2007 9:24 AM
To: ted.harding@manchester.ac.uk; r-help@stat.math.ethz.ch
Subject: Re: [R] convergence


Ted Harding wrote:
> 
> There are various ways round this, but a 'for' loop with
> a fixed number of iterations is not usully one of them!
> 
> The simplest is to use while(). A possibly strategy is
> 
>   Y.old <- initial.Y
>   while(TRUE){
>     Y <- compute.Y(Y.old, ...)
>     if(abs(Y - Y.old) < small.number) break
>     Y.old <- Y
>   }
> 
> This will loop indefinitely until the convergence criterion
> 
>   abs(Y - Y.old) < small.number
> 
> is met, and then stop.
> 
I guess some precaution must be taken to prevent that the loop
runs forever.

Those algorithms that must optimize something, but run the risk 
of running forever, sound like the "chess playing" engine: we
know that a deterministic solution exists (there is a finite number
of chess positions), but it's not practical to check all of them.

I read somewhere that computer loop problems are treated as if
the computer was "playing chess" agains Murphy: it tries hard to
solve the problem, but sometimes he must give up a path and backtrack
to a less optimum but faster solution.

Do I make any sense?

Alberto Monteiro

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

