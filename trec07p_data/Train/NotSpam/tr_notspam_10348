From perl6-all-return-81358-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 14 19:58:52 2007
Return-Path: <perl6-all-return-81358-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4ENwpqD028916
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 14 May 2007 19:58:51 -0400
Received: (qmail 10698 invoked by uid 514); 14 May 2007 23:58:48 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 10693 invoked from network); 14 May 2007 23:58:48 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of dataweaver@gmail.com designates 209.85.132.251 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=J7j2lgUtdUhxbS3Dl/8Dpuyd1Vikx/4lKpC19EyQblso/AQGRzQ+nqAKJ8g4oEWw8ld5/leugbgZhJiwbAwW/C/Ye15Tbbd76ycUnn34DMSnoInYafV3SXJTnNaC6fSoy5CS+z6LxRZMX61myx4m/W4xalal7A6GX1rwPiMN0/Y=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=KlgjGUw5/fydA6uNyS7kLUgRLKWbAzFp5NqL8wfwNsBxzWHKQnAhuBHckF/4isYEYQDdK0UP6bp2HalI3uSfp0sB2HLsz9mSoCbo96409iyNtk2zF7XUAPtObkM9o+JfGCrkbg5A+A5fLtTYXJy0hoVW6jUY1oFwL8xQMKsIWU0=
Message-ID: <ef30550b0705141656q1586d7b4oeb392e2735b86c5d@mail.gmail.com>
Date: Mon, 14 May 2007 16:56:37 -0700
From: "Jonathan Lang" <dataweaver@gmail.com>
To: p6l <perl6-language@perl.org>
Subject: Re: Sigils by example (was: Re: Is Perl 6 too late?)
In-Reply-To: <f60fe000705141537u6535cf60s99d2281279ea965a@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <010520071004503787%brian.d.foy@gmail.com>
	 <200705111448.05991.chromatic@wgz.org>
	 <20070513224235.28013.qmail@lists.develooper.com>
	 <46479C1C.4000305@casella.verplant.org>
	 <20070514105154.5648.qmail@lists.develooper.com>
	 <20070514120717.2d513956.frank@wiles.org>
	 <20070514202047.14038.qmail@lists.develooper.com>
	 <20070514204607.GG2873@c4.convolution.nl>
	 <ef30550b0705141452j5f8e1e3dtb427982e2ad183bd@mail.gmail.com>
	 <f60fe000705141537u6535cf60s99d2281279ea965a@mail.gmail.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS

Mark J. Reed wrote:
> Jonathan Lang wrote:
> > Good examples.  Now could you provide some to explain to me why it's
> > important to distinguish between '$', '@', '%', and '&'?  I ask
> > because I've seen a lot of object-based code that has said stuff like
> > '$container{$key}';
>
> Well, $container{$key} is how you access elements of %container in
> Perl5; in Perl6 that's %container{$key}.  But in object-based P5 code,
> you'd be much more likely to see $container->{$key}, where $container
> contains a reference to a hash.

True; but not at all what I was referring to.

> I believe in P6 you could write that
> either as $container.{$key}, $container{$key} (where the . is implied
> since $container{$key} can't refer to %container anymore),  or
> %$container{$key}.

_This_ is closer to what I'm referring to.  As I understand it, Hash
is a role that provides (among other things) postcircumfix:<{ }>.  So
any object that does Hash should be able to call the above method.
And unless I've missed something, there's nothing in perl 6 that
insists that an object that does Hash must be assigned to a variable
that uses the '%' sigil; the '$' sigil seems to work equally well.
i.e., I've seen code to the effect of:

  class Foo does Hash { ... }
  my $obj is Foo;
  $obj<key> = 5;
  say $obj<key>;

In short, it appears that there's nothing keeping you from assigning
hash-like or list-like objects to scalar variables.

And this is without bringing references into the picture.

> You aren't the only person who feels this way; there was a proposal
> back in the RFC process to remove sigils in favor of "everything is a
> scalar, dereference as needed".  I was in that camp myself.  But Larry
> rejected that proposal, defending the utility of sigils, and I have
> been swayed by the arguments, which I'm not going to repeat because I
> can't say it as well, but I do advise you to go read - it was either
> Apoc1 or Apoc2, I think.

I have never been in that camp.  In fact, I tend to see the points I
raise above as a bug, not a feature.

Perhaps the relationship between sigils and roles will be addressed in
the as-yet unwritten S14 (or whichever spec is supposed to address
tied variables)?

-- 
Jonathan "Dataweaver" Lang

