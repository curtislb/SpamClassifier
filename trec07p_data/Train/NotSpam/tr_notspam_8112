From perl6-all-return-81139-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May  7 00:32:06 2007
Return-Path: <perl6-all-return-81139-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l474W5qD027036
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 7 May 2007 00:32:06 -0400
Received: (qmail 30865 invoked by uid 514); 7 May 2007 04:32:02 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 30860 invoked from network); 7 May 2007 04:32:02 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of codermattie@gmail.com designates 64.233.166.176 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:date:from:to:cc:subject:message-id:in-reply-to:references:x-mailer:mime-version:content-type;
        b=hshnaviHLXH/Sctyo8U7BKP5uQkqMgG6zEAKRZ0mc9f4JVcS7xcRSp9mEAn+Yr5GRoVrWKdB4oAD2NBTlQZlfCvf0ZVPq4sbixqK/Xm8ZvNpKnUYh46PpDZeM1Sr+30BOsZOevffXeXqOzh+eQp2e8OUIidqh3xNkxAWN/Mp5Jg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:date:from:to:cc:subject:message-id:in-reply-to:references:x-mailer:mime-version:content-type;
        b=T2yagJuwU94itQoPnQA2wCZCRj1zNkyLGQfuKM3hhinAIcheW0z8rXZ4XmWoryexlhgPVK9Di9cYGhCsE0qxbwoon5gX9TFS0py+KuZIA2ykH83ZSBlupSCbHmqEitcXnosDpTO3U+hY/CBZ+3ACHXNjOicEMFHVO43O+C0df6g=
Date: Sun, 6 May 2007 18:43:08 -0700
From: Mike Mattie <codermattie@gmail.com>
To: perl6-internals@perl.org
Cc: parrotbug-followup@parrotcode.org
Subject: Re: [perl #41908] [PATCH] 5 feature enhancement of src/library.c
 (extension guessing), and solutions for the install target problems
Message-ID: <20070506184308.1cd09a92@reforged>
In-Reply-To: <rt-3.6.HEAD-12281-1178463122-1607.41908-15-0@perl.org>
References: <RT-Ticket-41908@perl.org>
	<20070321034327.2ac9e486@reforged>
	<rt-3.6.HEAD-30201-1174473850-80.41908-15-0@perl.org>
	<rt-3.6.HEAD-30557-1177960940-1925.41908-15-0@perl.org>
	<rt-3.6.HEAD-12281-1178463122-1607.41908-15-0@perl.org>
X-Mailer: Claws Mail 2.6.1 (GTK+ 2.10.9; i686-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: multipart/signed; boundary="Sig_4hJF21=GFSGe2aCxgfhqUKj";
 protocol="application/pgp-signature"; micalg=PGP-SHA1
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS

--Sig_4hJF21=GFSGe2aCxgfhqUKj
Content-Type: multipart/mixed; boundary=MP_DVIjX.GccfTgMjypkEMomjC

--MP_DVIjX.GccfTgMjypkEMomjC
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

On Sun, 06 May 2007 07:52:04 -0700
"Paul Cochrane via RT" <parrotbug-followup@parrotcode.org> wrote:

> Matt,
>=20
> This patch actually broke stuff and was reverted shortly before
> Parrot 0.4.10.  It needs to be reapplied, and then checked that it
> doesn't break anything (IIRC there were problems on Win32), hence why
> the ticket is still open.  I've only just returned from 3 weeks
> overseas and haven't had time over the past couple of months to
> attack the ticket.  If you have the tuits, go for it!  other than
> that, I'll have a go at it hopefully sometime soon (famous last
> words...)

I noticed that the patch was generated before I had turned off the
tabs in my editor. I have rebased the patch against 18443 and
double checked it for any tab issues. passed full test harness
on i686-pc-gnu-linux.

> Paul
>=20
> > I'd like to get this ticket (#41908) resolved. The patch was
> > applied, so everything is good
> > there, but your reply here has left me wondering. If there is more
> > to be done, could you open
> > another ticket?
> >=20
> > It's better to split off new requests/bugs into new tickets rather
> > than keep them in the patch
> > ticket because it cuts down the amount of reading that needs to be
> > done when sorting
> > through tickets. The patch itself doesn't seem that relevant that it
> > couldn't be a separate
> > ticket.
>=20
> > Thanks.
> >=20
> > --
> > Matt Diephouse
> >=20
>=20
>=20
>=20

--MP_DVIjX.GccfTgMjypkEMomjC
Content-Type: text/x-patch;
 name=locate-paths-with-extension-guessing-rebase.diff
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
 filename=locate-paths-with-extension-guessing-rebase.diff

--- HEAD/src/library.c	2007-05-06 17:58:47.000000000 -0700
+++ rev-18443/src/library.c	2007-05-06 18:32:18.000000000 -0700
@@ -257,6 +257,78 @@
     return join;
 }
=20
+#define LOAD_EXT_CODE_LAST 3
+
+static const char* load_ext_code[ LOAD_EXT_CODE_LAST + 1 ] =3D {
+    ".pbc",
+
+    /* source level files */
+
+    ".pasm",
+    ".past",
+    ".pir",
+};
+
+static STRING*
+try_load_path(Interp *interp, STRING* path) {
+    STRING *final;
+
+    final =3D string_copy(interp, path);
+
+#if 0
+    printf("path is \"%s\"\n",
+           string_to_cstring(interp, final ));
+#endif
+
+    final =3D path_finalize(interp, final );
+
+    if (Parrot_stat_info_intval(interp, final , STAT_EXISTS)) {
+        return final;
+    }
+
+    return NULL;
+}
+
+/*
+  guess extensions, so that the user can drop the extensions
+  leaving it up to the build process/install wether or not
+  a .pbc or a .pir file is used.
+ */
+
+static STRING*
+try_bytecode_extensions (Interp *interp, STRING* path )
+{
+    STRING *with_ext, *result;
+
+    int guess;
+
+    /*
+      first try the path without guessing ensure compatability with existi=
ng code.
+     */
+
+    with_ext =3D string_copy(interp, path);
+
+    if ( (result =3D try_load_path(interp, with_ext) ) )
+        return result;
+
+    /*
+      start guessing now. this version tries to find the lowest form of the
+      code, starting with bytecode and working up to PIR. note the atypical
+      loop control. This is so the array can easily be processed in revers=
e.
+     */
+
+    for( guess =3D 0 ; guess <=3D LOAD_EXT_CODE_LAST ; guess++ ) {
+        with_ext =3D string_copy(interp, path);
+        with_ext =3D string_append(interp,
+                                 with_ext, const_string(interp, load_ext_c=
ode[guess]));
+
+        if ( (result =3D try_load_path(interp, with_ext)) )
+            return result;
+    }
+
+    return NULL;
+}
+
 /*
=20
 =3Ditem C<char* Parrot_locate_runtime_file(Interp *, const char *file_name,
@@ -289,6 +361,11 @@
     INTVAL i, n;
     PMC *paths;
=20
+#if 0
+    printf("requesting path: \"%s\"\n",
+           string_to_cstring(interp, file ));
+#endif
+
     /* if this is an absolute path return it as is */
     if (is_abs_path(interp, file))
         return file;
@@ -311,18 +388,22 @@
         else
             full_name =3D string_copy(interp, path);
=20
-        full_name =3D path_append(interp, full_name , file);
+        full_name =3D path_append(interp, full_name , file );
=20
-        full_name =3D path_finalize(interp, full_name);
-        if (Parrot_stat_info_intval(interp, full_name, STAT_EXISTS)) {
+        full_name =3D ( type & PARROT_RUNTIME_FT_DYNEXT )
+            ? try_load_path(interp, full_name )
+            : try_bytecode_extensions(interp, full_name );
+
+        if ( full_name )
             return full_name;
-        }
     }
=20
-    full_name =3D path_finalize(interp, file);
-    if (Parrot_stat_info_intval(interp, full_name, STAT_EXISTS)) {
-        return full_name;
-    }
+     full_name =3D ( type & PARROT_RUNTIME_FT_DYNEXT )
+        ? try_load_path(interp, file )
+        : try_bytecode_extensions(interp, file );
+
+     if ( full_name )
+         return full_name;
=20
     return NULL;
 }

--MP_DVIjX.GccfTgMjypkEMomjC--

--Sig_4hJF21=GFSGe2aCxgfhqUKj
Content-Type: application/pgp-signature; name=signature.asc
Content-Disposition: attachment; filename=signature.asc

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFGPoQydfRchrkBInkRAlBAAJ4vPApHEuOOKax2qnSJOqGzBSEtbQCg7neb
i+HS7PtZj5EBuN1SD1t2HgM=
=PeOI
-----END PGP SIGNATURE-----

--Sig_4hJF21=GFSGe2aCxgfhqUKj--

