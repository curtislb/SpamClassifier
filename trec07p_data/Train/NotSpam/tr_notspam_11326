From r-help-bounces@stat.math.ethz.ch  Thu May 17 11:16:26 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4HFGNqD001090
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 11:16:24 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4HFFbqp017960;
	Thu, 17 May 2007 17:15:49 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.6 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from pigwidgeon.lancs.ac.uk (pigwidgeon.lancs.ac.uk [148.88.0.67])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4HFDce5016693
	for <r-help@stat.math.ethz.ch>; Thu, 17 May 2007 17:13:38 +0200
Received: from mail02.lancs.ac.uk ([148.88.1.54])
	by pigwidgeon.lancs.ac.uk with esmtp (Exim 4.60)
	(envelope-from <b.rowlingson@lancaster.ac.uk>) id 1Hohfd-00052K-Nx
	for r-help@stat.math.ethz.ch; Thu, 17 May 2007 16:13:37 +0100
Received: from fyb028000002.lancs.ac.uk ([148.88.168.53])
	by mail02.lancs.ac.uk with esmtp (Exim 4.66)
	(envelope-from <b.rowlingson@lancaster.ac.uk>)
	id 1Hohfd-0001k4-2P; Thu, 17 May 2007 16:13:37 +0100
Message-ID: <464C720B.2030409@lancaster.ac.uk>
Date: Thu, 17 May 2007 16:17:31 +0100
From: Barry Rowlingson <b.rowlingson@lancaster.ac.uk>
User-Agent: Thunderbird 1.5.0.8 (X11/20061115)
MIME-Version: 1.0
To: mwkimpel@gmail.com
References: <464C6D33.6000800@gmail.com>
In-Reply-To: <464C6D33.6000800@gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] help with executing instruction every i-th run of loop
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Mark W Kimpel wrote:
> I am running a very long loop and would like to save intermediate 
> results in case of a system or program crash. Here is the skeleton of 
> what my code would be:
> 
> for (i in 1:zillion)

I'm a bit worried about this line:

  > 1:zillion
  > Error: cannot allocate vector of size 4 zillion bytes

  hmm, lets try on a machine with a few more zillion bytes of RAM:

  > 1:zillion
  Error: result would be too long a vector

> Is there an even better way to address my need?

  Looping over vectors like this involves the uneccesary creation of a 
long vector. For anything up to a million its probably okay, but once 
you start getting into the zillions...

  You can do it with less storage by just having a while loop:

  > while (i != 100 ){print(i);i=i+1}

  Many modern computer languages have "iterators" for looping, which 
abstract all the looping functionality into an object. I started writing 
something for R a few years ago but never got round to finishing it. It 
let you do this:

  myLoop <- loop(N=10,step=1,start=1)
  while(iterate(myLoop)){
   doSomething()
  }

  The 'myLoop' object here is the iterator that controls the looping. 
You can use it to get the iteration number and then use the  i %% 1000 
test everyone else has told you about by now...

  Anyway, if anyone has a spare R programmer kicking around and would 
like all my looper code, just ask...

Barry

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

