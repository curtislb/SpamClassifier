From r-help-bounces@stat.math.ethz.ch  Fri Apr 20 14:59:39 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3KIxb0I009891
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 14:59:38 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3KIw1Tk030041;
	Fri, 20 Apr 2007 20:58:17 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.2 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from wr-out-0506.google.com (wr-out-0506.google.com [64.233.184.234])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3KImRF8026959
	for <r-help@stat.math.ethz.ch>; Fri, 20 Apr 2007 20:48:27 +0200
Received: by wr-out-0506.google.com with SMTP id i21so1028374wra
	for <r-help@stat.math.ethz.ch>; Fri, 20 Apr 2007 11:48:26 -0700 (PDT)
Received: by 10.114.75.1 with SMTP id x1mr1374719waa.1177094906363;
	Fri, 20 Apr 2007 11:48:26 -0700 (PDT)
Received: by 10.115.33.16 with HTTP; Fri, 20 Apr 2007 11:48:26 -0700 (PDT)
Message-ID: <f8e6ff050704201148mfd75c5cs3998195dbabf4cff@mail.gmail.com>
Date: Fri, 20 Apr 2007 13:48:26 -0500
From: "hadley wickham" <h.wickham@gmail.com>
To: "Iestyn Lewis" <ilewis@pharm.emory.edu>
In-Reply-To: <4628EA82.3040207@pharm.emory.edu>
MIME-Version: 1.0
Content-Disposition: inline
References: <4628EA82.3040207@pharm.emory.edu>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Fastest way to repeatedly subset a data frame?
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2375
Lines: 83

On 4/20/07, Iestyn Lewis <ilewis@pharm.emory.edu> wrote:
> Hi -
>
>  I have a data frame with a large number of observations (62,000 rows,
> but only 2 columns - a character ID and a result list).
>
> Sample:
>
>  > my.df <- data.frame(id=c("ID1", "ID2", "ID3"), result=1:3)
>  > my.df
>    id result
> 1 ID1      1
> 2 ID2      2
> 3 ID3      3
>
> I have a list of ID vectors.  This list will have anywhere from 100 to
> 1000 members, and each member will have anywhere from 10 to 5000 id entries.
>
> Sample:
>
>  > my.idlist[["List1"]] <- c("ID1", "ID3")
>  > my.idlist[["List2"]] <- c("ID2")
>  > my.idlist
> $List1
> [1] "ID1" "ID3"
>
> $List2
> [1] "ID2"
>
>
> I need to subset that data frame by the list of IDs in each vector, to
> end up with vectors that contain just the results for the IDs found in
> each vector in the list.  My current approach is to create new columns
> in the original data frame with the names of the list items, and any
> results that don't match replaced with NA.  Here is what I've done so far:
>
> createSubsets <- function(res, slib) {
>     for(i in 1:length(slib)) {
>         res[ ,names(slib)[i]] <- replace(res$result,
> which(!is.element(res$sid, slib[[i]])), NA)
>         return (res)
>     }
> }
>
> I have 2 problems:
>
> 1)  My function only works for the first item in the list:
>
>  > my.df <- createSubsets(my.df, my.idlist)
>  > my.df
>    id result List1
> 1 ID1      1     1
> 2 ID2      2    NA
> 3 ID3      3     3
>
> In order to get all results, I have to copy the loop out of the function
> and paste it into R directly.
>
> 2)  It is very, very slow.  For a dataset of 62,000 rows and 253 list
> entries, it takes probably 5 minutes on a pentium D.  An implementation
> of this kind of subsetting using hashtables in C# takes a neglible
> amount of time.
>
> I am open to any suggestions about data format, methods, anything.

How about:

df <- data.frame(id=c("ID1", "ID2", "ID3"), result=1:3)

ids <- list()
ids[["List1"]] <- c("ID1", "ID3")
ids[["List2"]] <- c("ID2")

rownames(df) <- df$id
lapply(ids, function(id) df[id, ])

Hadley

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

