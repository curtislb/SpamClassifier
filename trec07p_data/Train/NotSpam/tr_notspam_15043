From r-help-bounces@stat.math.ethz.ch  Thu May 31 17:20:24 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4VLKNhB000727
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 31 May 2007 17:20:24 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4VLJk2M013077;
	Thu, 31 May 2007 23:19:52 +0200
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=1.0 required=5.0 tests=AWL, BAYES_50,
	DKIM_POLICY_SIGNSOME,
	MSGID_FROM_MTA_HEADER autolearn=no version=3.2.0
Received: from bay0-omc2-s9.bay0.hotmail.com (bay0-omc2-s9.bay0.hotmail.com
	[65.54.246.145])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4VLFNxr011320
	for <r-help@stat.math.ethz.ch>; Thu, 31 May 2007 23:15:23 +0200
Received: from hotmail.com ([65.55.137.114]) by bay0-omc2-s9.bay0.hotmail.com
	with Microsoft SMTPSVC(6.0.3790.2668); 
	Thu, 31 May 2007 14:15:22 -0700
Received: from mail pickup service by hotmail.com with Microsoft SMTPSVC;
	Thu, 31 May 2007 14:15:22 -0700
Message-ID: <BAY132-F34C7499FE713438830935DAA2D0@phx.gbl>
Received: from 65.55.137.123 by by132fd.bay132.hotmail.msn.com with HTTP;
	Thu, 31 May 2007 21:15:19 GMT
X-Originating-IP: [66.9.245.179]
X-Originating-Email: [topkatz@msn.com]
X-Sender: topkatz@msn.com
In-Reply-To: <Pine.LNX.4.64.0705312042510.1862@gannet.stats.ox.ac.uk>
From: "Talbot Katz" <topkatz@msn.com>
To: ripley@stats.ox.ac.uk
Date: Thu, 31 May 2007 17:15:19 -0400
Mime-Version: 1.0
X-OriginalArrivalTime: 31 May 2007 21:15:22.0266 (UTC)
	FILETIME=[CC79A7A0:01C7A3C8]
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Restoring .Random.seed
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Thanks!  The "get / assign" combination does just what I want, and the 
warning about the pre-existence of .Random.seed was very helpful.  As for 
set.seed, I have used it to create a replicable state (in fact, I have an 
option to use it in the function I was writing that prompted my query), but 
I didn't see any indication that it could be used to restore a state for 
which you don't necessarily know the seed.

I got a couple of good offlist responses, too.  One person told me about the 
"<<-" assignment operator (with an admonishment to use it judiciously).  
Another responder mentioned the setRNG package, which has a specific 
methodology for saving the random number generator state.

--  TMK  --
212-460-5430	home
917-656-5351	cell



>From: Prof Brian Ripley <ripley@stats.ox.ac.uk>
>To: Talbot Katz <topkatz@msn.com>
>CC: r-help@stat.math.ethz.ch
>Subject: Re: [R] Restoring .Random.seed
>Date: Thu, 31 May 2007 20:57:09 +0100 (BST)
>
>On Thu, 31 May 2007, Talbot Katz wrote:
>
>>Hi.
>>
>>Suppose I have a function which does some random number generation within.
>>The random number generation inside the function changes the value of
>>.Random.seed in the calling environment.  If I want to restore the
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^
>That is your misunderstanding.  From the help page
>
>      The object '.Random.seed' is only looked for in the user's
>      workspace.
>
>which seems plain enough.  So, you can do
>
>save.seed <- get(".Random.seed", .GlobalEnv)
>assign(".Randon.seed", save.seed, .GlobalEnv)
>
>to save and restore, *provided* that random numbers have been used in the 
>session (or .Random.seed will not exist).
>
>However, the help recommends using set.seed(), and why not follow the 
>advice?
>
>>pre-function call .Random.seed, I can do:
>>
>>save.seed<-.Random.seed
>>result<-myfunction()
>>.Random.seed<-save.seed
>>
>>Is there a way to do the restoration inside the function?  I tried putting
>>the "save.seed<-.Random.seed" and ".Random.seed<-save.seed" statements
>>inside the function, but that didn't work.
>
>As documented on the help page.
>
>[...]
>
>--
>Brian D. Ripley,                  ripley@stats.ox.ac.uk
>Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>University of Oxford,             Tel:  +44 1865 272861 (self)
>1 South Parks Road,                     +44 1865 272866 (PA)
>Oxford OX1 3TG, UK                Fax:  +44 1865 272595

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

