From sugar-bounces@laptop.org  Sun May  6 06:39:20 2007
Return-Path: <sugar-bounces@laptop.org>
Received: from pedal.laptop.org (pedal.laptop.org [18.85.2.148])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l46AdJqD018117
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 6 May 2007 06:39:19 -0400
Received: from pedal.laptop.org (localhost [127.0.0.1])
	by pedal.laptop.org (Postfix) with ESMTP id B22BD4EEB9;
	Sun,  6 May 2007 06:39:11 -0400 (EDT)
X-Original-To: sugar@laptop.org
Delivered-To: sugar@laptop.org
Received: from spam.laptop.org (spam.laptop.org [18.85.46.23])
	by pedal.laptop.org (Postfix) with ESMTP id B5D964EEB9
	for <sugar@laptop.org>; Sun,  6 May 2007 06:39:10 -0400 (EDT)
X-ASG-Debug-ID: 1178447956-72ab000f0000-3Xmyjt
X-Barracuda-URL: http://18.85.46.23:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: mx1.redhat.com[66.187.233.31]
X-Barracuda-Start-Time: 1178447956
Received: from mx1.redhat.com (mx1.redhat.com [66.187.233.31])
	by spam.laptop.org (Spam Firewall) with ESMTP id 794988C86
	for <sugar@laptop.org>; Sun,  6 May 2007 06:39:16 -0400 (EDT)
Received: from int-mx1.corp.redhat.com (int-mx1.corp.redhat.com
	[172.16.52.254])
	by mx1.redhat.com (8.13.1/8.13.1) with ESMTP id l46AdFoe009777;
	Sun, 6 May 2007 06:39:15 -0400
Received: from mail.boston.redhat.com (mail.boston.redhat.com [172.16.76.12])
	by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id
	l46AdE4J020929; Sun, 6 May 2007 06:39:14 -0400
Received: from [10.13.248.25] (vpn-248-25.boston.redhat.com [10.13.248.25])
	by mail.boston.redhat.com (8.12.11.20060308/8.12.11) with ESMTP id
	l46AdD0L006279; Sun, 6 May 2007 06:39:13 -0400
X-ASG-Orig-Subj: Re: [sugar] Web activity & ebook reading
From: Marco Pesenti Gritti <mpg@redhat.com>
To: Ian Bicking <ianb@colorstudy.com>
In-Reply-To: <463D256D.4010900@colorstudy.com>
References: <463D256D.4010900@colorstudy.com>
Date: Sun, 06 May 2007 12:39:15 +0200
Message-Id: <1178447955.2403.32.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 (2.10.1-4.fc7) 
X-Barracuda-Bayes: INNOCENT GLOBAL 0.0003 1.0000 -2.0193
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at laptop.org
X-Barracuda-Spam-Score: -2.02
X-Barracuda-Spam-Status: No, SCORE=-2.02 using global scores of TAG_LEVEL=3.5
	QUARANTINE_LEVEL=1000.0 KILL_LEVEL=5.5 tests=
X-Barracuda-Spam-Report: Code version 3.1, rules version 3.1.16197
	Rule breakdown below
	pts rule name              description
	---- ----------------------
	--------------------------------------------------
Cc: sugar@laptop.org
Subject: Re: [sugar] Web activity & ebook reading
X-BeenThere: sugar@laptop.org
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Discussion of OLPC design,
	desktop platform and user experience" <sugar.laptop.org>
List-Unsubscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=unsubscribe>
List-Archive: <http://mailman.laptop.org/pipermail/sugar>
List-Post: <mailto:sugar@laptop.org>
List-Help: <mailto:sugar-request@laptop.org?subject=help>
List-Subscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: sugar-bounces@laptop.org
Errors-To: sugar-bounces@laptop.org

On Sat, 2007-05-05 at 19:46 -0500, Ian Bicking wrote:
> So we've been talking about "the" ebook reader, and how it might work.
> For reading HTML or things that would be converted into HTML (e.g.,
> Crossmark), the browser seems like an obvious basis for a reader.
> There's not a huge number of basic features that aren't in the browser
> currently.  So we're thinking about how we might add these extra features.
> 
> I've been reading the list of methods as described here:
>    http://www.pygtk.org/pygtkmozembed/class-gtkmozembed.html
> and there's not a lot of methods.  Changing buttons, maybe allowing you
> to switch modes, all seems pretty reasonable -- the code at least all
> looks simple enough.  But some of what we want to do involves getting at
> the document object.
> 
> As an example, if you get to the bottom of a document, and the document
> has a <link rel="next"> tag, then a page-down from there should take you
> to the linked page.  Then you can flow through a linear but multi-page
> document fairly seamlessly (assuming it's been marked up nicely).
> There's a variety of things we'd like to do, including injecting the
> Javascript to implement the ubiquitous annotation.
> 
> Is the current browser activity -- and more specifically pygtkmozembed
> -- the right basis for this kind of work?  In the short term, are there
> ways we can start adding these features (even if the implementation may
> have to be discarded later)?
> 

If you are planning to put this in the Read activity it should not be
based on the Web activity but rather on the sugar.Browser component. 

gtkmozembed API is very limited. There are multiple ways we can allow
activities to access the full mozilla API (and hence being able to do
stuff like manipulating the DOM etc).

The two ways that makes more sense to me are:

1 Hook up pyxpcom support to sugar.Browser. In theory this would allow
you to access the full xpcom mozilla API from python. My only doubt
about this approach is that pyxpcom has not been used a lot so far (and
development does not seem to be very active).

2 Implement come sort of extension system on the top of xpcom components
(extensions could be written in javascript, c++ and maybe python at that
point)

Approach 1 would probably end up being a lot cleaner if we manage to get
it to work.

> 
> Looking at details, we were thinking that maybe browser.append_data()
> could be used to inject at least a little Javascript.  I tried adding
> this to WebActivity.__init__:
> 
>    self._browser.connect('notify::net-stop', self._doc_loaded_cb)
> 
> Then:
> 
>    def self._doc_loaded_cb(self, embed, *args):
>        data = '<script>alert("hey!")</script>'
>        embed.append_data(StringIO(data), len(data))
> 
> But I couldn't get the signal to fire at all; I couldn't get any signals
> to work except notify::title.  Maybe there's something magic that I
> don't understand here.  Anyway, that might give me a crude way to hack
> on stuff.

The notify:: prefix is used to get signals on gobject properties
changes. You want just "net-stop" there.

Marco

_______________________________________________
Sugar mailing list
Sugar@laptop.org
http://mailman.laptop.org/mailman/listinfo/sugar

