From beginners-return-91559-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May 11 19:06:57 2007
Return-Path: <beginners-return-91559-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4BN6uqD003124
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 11 May 2007 19:06:57 -0400
Received: (qmail 18461 invoked by uid 514); 11 May 2007 23:06:49 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 18449 invoked from network); 11 May 2007 23:06:49 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 11 May 2007 23:06:49 -0000
Received: (qmail 21499 invoked by uid 225); 11 May 2007 23:06:48 -0000
Delivered-To: beginners@perl.org
Received: (qmail 21493 invoked by alias); 11 May 2007 23:06:48 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.231 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.231)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 11 May 2007 16:06:45 -0700
Received: by nz-out-0506.google.com with SMTP id 12so1094629nzp
        for <beginners@perl.org>; Fri, 11 May 2007 16:06:41 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Q/kbbl5j60Mm5qUy9PVTjBasYGHkdnQmnVQyiqtZRv6d99gqMp7t2L8Ej9YzuhF6DSKRK38boekNy4X137scTo+efv4HtJMZ1wvBeHyqWjh26LtQY0Es4g4f+BuFtZBFTVGubJBqMaFVjz253+PFcpmZ6Ir1v7wj55FEqLAfUdw=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=hTTmVrXeXjhmGebAYssLSrvWAAh/SyhCwEI89942bQ6ANBflxOjHqdzKLo0s+0uhHceNavdYT+W+w7F/nIZgNhOG6Q1u+lrACzb/atITKyeLl/+xpwGjddDVU4k4gbd5WWxG8S5oTMtu3GTm1C4S8AiIpRtLuPHLYYufHtt5LEo=
Received: by 10.114.103.1 with SMTP id a1mr54131wac.1178924801473;
        Fri, 11 May 2007 16:06:41 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Fri, 11 May 2007 16:06:41 -0700 (PDT)
Message-ID: <58ce48dc0705111606v377be1a2j3d5282554a50af86@mail.gmail.com>
Date: Fri, 11 May 2007 19:06:41 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Tom Allison" <tom@tacocat.net>
Subject: Re: regex & utf8
Cc: "beginners-list List" <beginners@perl.org>
In-Reply-To: <AF8503AE-B881-4E7A-9B5E-06664B199E12@tacocat.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Disposition: inline
References: <AF8503AE-B881-4E7A-9B5E-06664B199E12@tacocat.net>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l4BN6uqD003124

On 5/11/07, Tom Allison <tom@tacocat.net> wrote:
> OK, I'm reading through different unicode related perldocs and have a
> rather simple question.
>
> Under perl version 5.8, does /(\w+)/ match UTF-8 characters without
> calling any special pragma?  I'm having a hard time finding something
> that makes the statement that clearly.
>
> I'm trying to parse out email content and it seems reasonable that I
> could get characters in just about any conceivable format, from
> ascii, latin, utf...
>
> For simplicity I'm leaning in a direction of just converting everying
> "up" to UTF8 and working all my string/regex manipulations on UTF.
>
> So I'm trying to see if I can just use /(\w+)/ without worrying about
> all this character encoding?
> Or do I have to first Encode everything into UTF8?
> And if so, before I Encode it, do I have to figure out what it is
> first and then convert it from whatever encoding it is to UTF8?
>
> For simplicity, it isn't necessarily a requirement that I can parse
> the content into perfectly accurate words, but they have to be
> completely repeatable and preferable fast.
>
> help?

from perldoc perlunicode
snip
       Input and Output Layers
           Perl knows when a filehandle uses Perl's internal Unicode encodings
           (UTF-8, or UTF-EBCDIC if in EBCDIC) if the filehandle is opened
           with the ":utf8" layer.  Other encodings can be converted to Perl's
           encoding on input or from Perl's encoding on output by use of the
           ":encoding(...)"  layer.  See open.

           To indicate that Perl source itself is using a particular encoding,
           see encoding.

       Regular Expressions
           The regular expression compiler produces polymorphic opcodes.  That
           is, the pattern adapts to the data and automatically switches to
           the Unicode character scheme when presented with Unicode data--or
           instead uses a traditional byte scheme when presented with byte
           data.
snip
       ·   Character classes in regular expressions match characters instead
           of bytes and match against the character properties specified in
           the Unicode properties database.  "\w" can be used to match a
           Japanese ideograph, for instance.

           (However, and as a limitation of the current implementation, using
           "\w" or "\W" inside a "[...]" character class will still match with
           byte semantics.)
snip

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/



