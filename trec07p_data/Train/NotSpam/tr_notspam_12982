From perl6-all-return-81567-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 24 03:24:08 2007
Return-Path: <perl6-all-return-81567-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4O7O7qD002444
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 24 May 2007 03:24:07 -0400
Received: (qmail 1046 invoked by uid 514); 24 May 2007 07:24:02 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 1041 invoked from network); 24 May 2007 07:24:02 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=2.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Mime-Version: 1.0
Message-Id: <p06240801c27aeb4c7366@[192.168.1.101]>
In-Reply-To: <ef30550b0705231600h60f60372n4fcbfa56f74e6a5d@mail.gmail.com>
References: <20070523181134.DEB98CB9B8@x12.develooper.com>
 <ef30550b0705231600h60f60372n4fcbfa56f74e6a5d@mail.gmail.com>
Date: Thu, 24 May 2007 00:22:37 -0700
To: perl6-language@perl.org
From: Darren Duncan <darren@DarrenDuncan.net>
Subject: Re: [svn:perl6-synopsis] r14401 - doc/trunk/design/syn
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Scanned-By: MIMEDefang 2.36
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

At 4:00 PM -0700 5/23/07, Jonathan Lang wrote:
>I see no mention of C<@@x> in this section.  I would assume that
>C<@@x> may be bound to any object that does the C<Multidimensional>
>role, with a note to the effect that the C<Multidimensional> role does
>the C<Positional> role (and thus anything that C<@x> may be bound to,
>C<@@x> may also be bound to).

I would argue that "multi-dimensional" is too generic a name for what 
you describe.  In particular, I wouldn't say that something with that 
name "does positional", at least in a conventional sense.

For example, take a list of vectors, which is a multi-dimensional 
structure.  Does it make sense to say that a bunch of vectors can be 
ordered in a simple deterministic sense?  It doesn't make sense 
without context or parameters for the ordering.

If we have a multidim role, don't make it do positional.  Those can 
only be combined on a case by case basis.  If you do make multidim 
positional, then you might as well say that every type does ordered, 
because that makes as much sense.

And the latter is okay per se as long as we just know the purpose of 
such is to make a deterministic way to arrange a group of things into 
an array, but if it doesn't have meaning besides this, in the general 
case.  Same as all does Str or all does Bool et al.

-- Darren Duncan

