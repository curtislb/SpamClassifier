From perl6-all-return-80703-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 18 16:49:47 2007
Return-Path: <perl6-all-return-80703-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3IKnk0I015818
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 18 Apr 2007 16:49:46 -0400
Received: (qmail 29046 invoked by uid 514); 18 Apr 2007 20:49:21 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29039 invoked from network); 18 Apr 2007 20:49:21 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: "Alek Storm" <alek.storm@gmail.com>
Subject: Re: [perl #42430] [PATCH] make :vtable imply :method
Date: Wed, 18 Apr 2007 13:48:40 -0700
User-Agent: KMail/1.9.5
Cc: "Allison Randal" <allison@perl.org>, perl6-internals@perl.org
References: <RT-Ticket-42430@perl.org> <200704181101.35621.chromatic@wgz.org> <189adbd0704181334n16a6ccbdo6f4747ffa70cafb0@mail.gmail.com>
In-Reply-To: <189adbd0704181334n16a6ccbdo6f4747ffa70cafb0@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704181348.40862.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
Status: O
Content-Length: 1380
Lines: 34

On Wednesday 18 April 2007 13:34, Alek Storm wrote:

> Vtable methods defined in C are visible from C.

Of course, otherwise nothing would be able to call them.

> Therefore, it makes 
> sense that vtable methods defined in PIR are visible from PIR, at
> least by default.

That makes no sense to me.  Are you saying that vtable methods defined in a 
specific language should be visible to that language by default?

If that's true, then users have to *know* the implementation details of vtable 
methods.  Is it in C code or is it in PIR code?

That's precisely what vtable methods protect against!  That's why they're in 
vtables.  That's why they're *not* visible as methods to PIR code.

> Making :vtable imply :anon might be unintuitive to 
> users.  Besides that, there's still the problem of :method meaning two
> different things with that implementation.  Basically, in a non-vtable
> sub, there is the :anon flag to detach it from the namespace, but in a
> vtable sub, it's detached by default, and the :method flag attaches it
> to the namespace.  Reversal bad.  Continuity good.

I can't honestly think of a case where you want :vtable AND :method on a 
vtable method, with the caveat that right now you *must* do that 
because :vtable doesn't cause Parrot to include the invocant in the proper 
register on calls.

Fixing that makes these problems all go away.

-- c

