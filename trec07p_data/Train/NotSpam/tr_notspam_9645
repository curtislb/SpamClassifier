From beginners-return-91573-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May 11 22:28:54 2007
Return-Path: <beginners-return-91573-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4C2SrqD004774
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 11 May 2007 22:28:54 -0400
Received: (qmail 11205 invoked by uid 514); 12 May 2007 02:28:47 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 11195 invoked from network); 12 May 2007 02:28:47 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 May 2007 02:28:47 -0000
Received: (qmail 15769 invoked by uid 225); 12 May 2007 02:28:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 15764 invoked by alias); 12 May 2007 02:28:46 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.230 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.230)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 11 May 2007 19:28:44 -0700
Received: by wr-out-0506.google.com with SMTP id 57so1078630wri
        for <beginners@perl.org>; Fri, 11 May 2007 19:28:40 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Yp73snsL2MyIveXoEPHMfjv0QXmFi+NQodlBDOeywCHV8KhtwnfL0k2M1HpY5UHUm/9KmEGoiLoZjbZFgGvo/ZtWV0AUblIiD7JJrTTDzz+D2dis2rOz7UrEJvnFsflhlRneB3RXsIU3f49ER1h3Wzkgze/NVM27gx8+WfxDVyI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=opAUm0Z2qkJdwyDddBT4Le+iP7oMOFp34N1Xs2ucx/qEsGKmU6ZqgeLlSffppAkVmQHXTFv0nJMNeNK/CWaQxfAzlKrNmpeSyoTEXyNHMRhdf5EjkB049X85LFOWn+afxS0stdkOOw6csyS0hEdCKLEU/D+wek7ijgIyIdM7aCM=
Received: by 10.115.47.1 with SMTP id z1mr88043waj.1178936920272;
        Fri, 11 May 2007 19:28:40 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Fri, 11 May 2007 19:28:40 -0700 (PDT)
Message-ID: <58ce48dc0705111928s2d01018fm66b1c973505aa921@mail.gmail.com>
Date: Fri, 11 May 2007 22:28:40 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Tom Phoenix" <tom@stonehenge.com>
Subject: Re: yet another regex
Cc: "Steve Finkelstein" <sf@stevefink.net>, beginners@perl.org
In-Reply-To: <31086b240705111919p51ed565dj30f3e8a2e62037ee@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <4644E531.6000700@stevefink.net>
	 <31086b240705111919p51ed565dj30f3e8a2e62037ee@mail.gmail.com>

On 5/11/07, Tom Phoenix <tom@stonehenge.com> wrote:
> On 5/11/07, Steve Finkelstein <sf@stevefink.net> wrote:
>
> > sflinux themes # echo 500 | perl -ple 's|(\d)|length(9 x $1)|eg;'
> > 500
>
> > essentially, (\d) should match just the '5' in 500. that puts $1 == the
> > literal 5. so you take length(9 x 5) which is nine repeated 5 times, and
> > the length of that is 5. That replaces the 5 with a ... 5?
> >
> > Is my logic correct on this?
>
> I think you've got it, except it doesn't stop with the 5. Unless I'm
> missing something, that substitution means the same thing as this
> simpler one:
>
>     s#(\d)#$1#g
>
> Unless the value of $1 is useful, it's hard to see what good this
> does. It replaces each digit with itself. As side effects it affects
> all the match variables, and it stringifies its target.
>
> Did you find that piece of code somewhere? Do you know what its author
> was trying to do?
>
> --Tom Phoenix
> Stonehenge Perl Training

Beyond obfuscation, I can only think of one reason to write something
like that: un-tainting.  But even then it is bad regex for that since
it doesn't validate anything.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


