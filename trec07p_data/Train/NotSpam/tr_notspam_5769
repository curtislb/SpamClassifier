From perl6-all-return-80943-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 27 19:28:09 2007
Return-Path: <perl6-all-return-80943-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3RNS86w032432
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 19:28:08 -0400
Received: (qmail 6441 invoked by uid 514); 27 Apr 2007 23:28:07 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 6436 invoked from network); 27 Apr 2007 23:28:06 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of jerry.gay@gmail.com designates 66.249.92.175 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=dc7UXzkLHAe6mJMOwwpeAfDKMpkDqiZW0PplA+egx9xa+AKc6PLDzE9c4nc2JYY5qBjEJMS49AQPi+fyVylRfdeRLQfr3za8KR6SIcg8CKHm13KkFuzmyYEPMB9AjhalPg/vM70O6850cSGde9MvpBfg0ksLGKaBYeWL7GUZM6U=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=W1V16GFpJv51ooIg8R0EqwtTH3fZbpsDogS144unBYd/Fh4x4u8KSNuHDOHq19Cfh2cU2S0RPSV8Lv2DjDfuo3mQFAKDore2AI9XfViByNtosyJA0vhJNv5A2f2Sji8e5de0kracQSriIQ6KkXg2J6BrBCbEoJs16+XZ7rzhaQk=
Message-ID: <1d9a3f400704271627i7c6123aehb6cb21da123d084a@mail.gmail.com>
Date: Fri, 27 Apr 2007 16:27:42 -0700
From: "jerry gay" <jerry.gay@gmail.com>
To: matt@diephouse.com
Subject: Re: [perl #42776] [BUG] is isa ok?
Cc: perl6-internals@perl.org, bugs-bitbucket@netlabs.develooper.com
In-Reply-To: <198c87380704271614y549d85dci2e2c0f856eff962f@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <RT-Ticket-42776@perl.org>
	 <1d9a3f400704271221p3bfaf273t224fe5f040a97a13@mail.gmail.com>
	 <rt-3.6.HEAD-6655-1177701697-287.42776-72-0@perl.org>
	 <198c87380704271614y549d85dci2e2c0f856eff962f@mail.gmail.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
Status: O
Content-Length: 2484
Lines: 65

On 4/27/07, Matt Diephouse <mddiep@gmail.com> wrote:
> On 4/27/07, via RT Jerry Gay <parrotbug-followup@parrotcode.org> wrote:
> > # New Ticket Created by  Jerry Gay
> > # Please include the string:  [perl #42776]
> > # in the subject line of all future correspondence about this issue.
> > # <URL: http://rt.perl.org/rt3/Ticket/Display.html?id=42776 >
> >
> >
> > there are two 'isa' ops, defined in src/ops/object.ops
> >
> > one takes a string param, and the other a pmc. it seems the string
> > variant is used frequently throughout the source and tests, but the
> > pmc variant is much less frequently used, and i haven't come across
> > any tests, either. it seems these two ops don't agree on return
> > value... which is problematic.
> >
> >   D:\usr\local\parrot\head>parrot -
> >   .sub main
> >       .local pmc class, obj
> >       class = new 'Class'
> >       obj = class.'new'()
> >       $I0 = isa obj, 'Object'
> >       print $I0
> >       .local pmc cl
> >       cl = new 'String'
> >       cl = 'Object'
> >       $I1 = isa obj, cl
> >       print $I1
> >   .end
> >   ^Z
> >   10
> >
> > why? iunno. but this is causing me problems when using 'isa_ok' in
> > 'Test/More.pir', since it uses the pmc variant.
>
> It looks like the PMC variant is correct in this case, because Object
> isn't actually a class. There's a class flag for PMCs that sets
> whether or not they are a class and Object doesn't have this set.
>
> When you call the PMC variant of isa, it calls Parrot_object_isa, and
> that has this code:
>
>     /* if this is not a class */
>     if (!PObj_is_class_TEST(pmc)) {
>         pmc = VTABLE_get_class(interp, pmc);
>     }
>
> So since Object isn't a class, it calls the get_class vtable and gets
> the Class pmc. It then tests the object to see if it's a Class, which
> it obviously isn't.
>
> Contrast this to the String isa variant. It calls the isa vtable
> function. Object inherits whatever default isa implementation is
> provided. I'm not sure where that code is (it's a little harder to
> find), but I'm guessing it just does a string comparison on the PMC
> names without testing if the PMC is a class.
>
thanks for the explanation. i believe src/pmc/default.pmc has the isa
vtable implementation for Object, by the way.

so, given this differing behavior, these ops must be better
documented. also, isa_ok in Test/More.pir should be modified to use
the string variant of isa, which seems more appropriate. expect a
patch soon.
~jerry

