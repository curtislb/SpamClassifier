From perl6-all-return-82136-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 09:45:23 2007
Return-Path: <perl6-all-return-82136-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5KDjNL9010548
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 09:45:23 -0400
Received: (qmail 25618 invoked by uid 514); 20 Jun 2007 13:45:20 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 25613 invoked from network); 20 Jun 2007 13:45:19 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-1.2 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,PLING_QUERY,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of bailey.charles@gmail.com designates 66.249.92.174 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=efMHZUvztg/gotVnU+XOOy/yg50p6258xEQd/t25jdFVezT28nuKl8KM+Glkdr00wGMXQLTRcI1j/xxnfT1zj7L8MZw0pePv3JICN6GzyGfBLdTbaztPqwrh1QitSQRIQwIaDddyUfk0ri2LGAVQvNtGh3EOd3D3XQyV/HHJyHc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=DyrHxk4OKQNESc9crWo5XZTo8l/HmyP2kwvUfPh4ywgB1e+vzG04ksrBmjBon8FMXWLN5s1nYlkaClsrYSDVf5lvHBUouxdhsDces1K8hyGfHh06Q9VQDvx/1nQP3vlEqoaodRaIBXIJqjfVjz4BiYcutG3cPYoGIwpgM7DLvGU=
Message-ID: <b78749dd0706200644k5fe33babt5a16e8f40cc0d560@mail.gmail.com>
Date: Wed, 20 Jun 2007 09:44:58 -0400
From: "Charles Bailey" <bailey.charles@gmail.com>
To: perl6-all@perl.org, p6l <perl6-language@perl.org>
Subject: Re: assign-if-uninitialized [Was: Generalizing ?? !!]
In-Reply-To: <20070619165424.GA14621@wall.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <061120072038.14824.466DB2B7000D3E23000039E822058844849D0E0909070DD20ED2059D0E03@comcast.net>
	 <ef30550b0706111403y50d449c0q5fa79c580f92c4c7@mail.gmail.com>
	 <7ca3f0160706111412u61a1a869xec62472e9cca113f@mail.gmail.com>
	 <b78749dd0706131408r4768e54as75b3f71fd40d458b@mail.gmail.com>
	 <20070614002232.GA19857@wall.org>
	 <b78749dd0706190850h3a25ecb0h98e862e19c65c105@mail.gmail.com>
	 <20070619165424.GA14621@wall.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.2 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,PLING_QUERY,SPF_PASS

On 6/19/07, Larry Wall <larry@wall.org> wrote:
> On Tue, Jun 19, 2007 at 11:50:35AM -0400, Charles Bailey wrote:
> : Yep.  For that matter, if I had to pick one change in this area that'd
> : have maximum impact, I'd say a good assign-if-uninitialized idiom
> : would be way ahead of an if-then-else idiom.
>
> Depending on how you mean "uninitialized", that would be either:
>
>     $x //= 42;          # init if undefined
>
> or
>
>     state $x = 42;      # init first time through
>
> Both of which are getting borrowed back into Perl 5, as it happens.

This is a Good Thing, on both counts.  (I was thinking primarily of the former.)

My intent was to say that I'm glad this was addressed in the design of
P6, since it is, in my experience, a much more common version of the
conditional assignment problem than the ternary operator.   Yet
another example of P6 doing things well.

Rereading my original comment, I see this is less than clear.  My
apologies for the confusion.

-- 
Regards,
Charles Bailey
Lists: bailey _dot_ charles _at_ gmail _dot_ com
Other: bailey _at_ newman _dot_ upenn _dot_ edu

