From beginners-return-91297-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 20:39:02 2007
Return-Path: <beginners-return-91297-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l430d0b9029172
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 20:39:00 -0400
Received: (qmail 18879 invoked by uid 514); 3 May 2007 00:38:55 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 18870 invoked from network); 3 May 2007 00:38:55 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 May 2007 00:38:55 -0000
Received: (qmail 21073 invoked by uid 225); 3 May 2007 00:38:55 -0000
Delivered-To: beginners@perl.org
Received: (qmail 21068 invoked by alias); 3 May 2007 00:38:54 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,RDNS_NONE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from Unknown (HELO www.rlb3.com) (208.74.120.18)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 17:38:50 -0700
Received: from [192.168.1.39] (cpe-24-167-9-199.houston.res.rr.com [24.167.9.199])
	(using TLSv1 with cipher AES128-SHA (128/128 bits))
	(No client certificate requested)
	by www.rlb3.com (Postfix) with ESMTP id 10C3B3AD80A8;
	Wed,  2 May 2007 19:38:45 -0500 (CDT)
In-Reply-To: <46391058.8090505@miswebdesign.com>
References: <C4A55E6959ED6F498EA07FFB09DAB2E006C905C2@bgeexc04.asiapacific.cpqcorp.net> <46398A33.3060501@gmail.com> <46391058.8090505@miswebdesign.com>
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <5D784B29-B93F-4C73-B24C-06BE797D7822@rlb3.com>
Cc: beginners@perl.org
Content-Transfer-Encoding: 7bit
From: Robert Boone <robert@rlb3.com>
Subject: Re: New to OO Perl
Date: Wed, 2 May 2007 19:38:42 -0500
To: Nigel Peck <nigel@miswebdesign.com>
X-Mailer: Apple Mail (2.752.3)

You may want to seperate your initialization from instantiation.

sub new {
	
	my ( $class, $data ) = @_;
	
	my $self = bless {}, $class;
         $self->init();

        return $self;
	
}

sub init {
     my ($self) = @_;
     $self->{image_magick_object} = Image::Magick::new();

     my $error = $data->{image_magick_object}->Read( $data->{path} );
     croak $error if $error;
}

Future subclasses won't need a new sub and supply there own init sub:

sub init {
     my ($self) = @_;
     $self->SUPER::init()

     $self->{'more_data'} = [];
}




On May 2, 2007, at 5:27 PM, Nigel Peck wrote:

>
> Hi all,
>
> I'm new to writing Object Oriented Perl and am hoping for some advice?
>
> I found the need to use Image::Magick tonight and in order to reuse  
> the code in future I put it in a package of subs.
>
> I then thought it seemed like a good opportunity to try writing an  
> OO module so I did.
>
> However I'm not sure that I couldn't do it better by making use of  
> inheritance although I'm not sure how to do it and also looking for  
> any other suggestions.
>
> A cut down version of my code goes like this...
>
> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
> #!/usr/bin/perl
>
> use strict;
> use warnings;
>
> use Carp;
>
> my $error;
> my $obj_image;
>
> my $obj_image = MIS::Common::Image_magick->new( { path => '/home/ 
> nigel/scripts/taylor1.jpg' } );
> 	
> $obj_image->resize ( { geometry => '360' } );
> $obj_image->crop ( { geometry => '360x480' } );
> 	
> $obj_image->output ( { path => '/home/nigel/scripts/taylor/ 
> thumbnail.jpg' } );
>
> ######################################################################
>
> package MIS::Common::Image_magick;
>
> use Image::Magick;
>
> sub new {
> 	
> 	my ( $class, $data ) = @_;
> 	
> 	$data->{image_magick_object} = Image::Magick::new();
> 	
> 	my $error = $data->{image_magick_object}->Read( $data->{path} );
> 	croak $error if $error;
> 	
> 	return bless $data, $class;
> 	
> }
>
> sub output {
> 	
> 	my ( $self, $args ) = @_;
> 	
> 	my $error = $self->{image_magick_object}->Write( $args->{path} );
> 	croak $error if $error;
> 	
> }
>
> sub resize {
> 	
> 	my ( $self, $args ) = @_;
> 	
> 	$error = $self->{image_magick_object}->Resize( geometry => $args-> 
> {geometry} );
> 	croak $error if $error;
> 	
> }
>
> sub crop {
> 	
> 	my ( $self, $args ) = @_;
> 	
> 	$error = $self->{image_magick_object}->Crop( geometry => $args-> 
> {geometry} );
> 	croak $error if $error;
> 	
> }
> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
>
> What could I do better?
>
> TIA.
>
> Cheers,
> Nigel
>
>
> -- 
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


