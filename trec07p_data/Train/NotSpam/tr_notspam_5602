From beginners-return-91138-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 27 11:58:59 2007
Return-Path: <beginners-return-91138-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3RFww6w027619
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 11:58:58 -0400
Received: (qmail 31424 invoked by uid 514); 27 Apr 2007 15:58:51 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 31412 invoked from network); 27 Apr 2007 15:58:51 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Apr 2007 15:58:51 -0000
Received: (qmail 524 invoked by uid 225); 27 Apr 2007 15:58:51 -0000
Delivered-To: beginners@perl.org
Received: (qmail 509 invoked by alias); 27 Apr 2007 15:58:49 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 199.185.220.240 as permitted sender)
Received: from defout.telus.net (HELO defout.telus.net) (199.185.220.240)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 27 Apr 2007 08:58:47 -0700
Received: from priv-edtnaa05.telusplanet.net ([154.20.156.154])
          by priv-edtnes90.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070427155844.KVFX8722.priv-edtnes90.telusplanet.net@priv-edtnaa05.telusplanet.net>
          for <beginners@perl.org>; Fri, 27 Apr 2007 09:58:44 -0600
Received: from [154.20.156.154] (d154-20-156-154.bchsia.telus.net [154.20.156.154])
	by priv-edtnaa05.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 54MLAQS7QV
	for <beginners@perl.org>; Fri, 27 Apr 2007 09:58:43 -0600 (MDT)
Message-ID: <46321DAA.8040509@telus.net>
Date: Fri, 27 Apr 2007 08:58:34 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: improving my code: array of references
References: <6567.33482.qm@web30211.mail.mud.yahoo.com>	 <1177624580.10826.12.camel@mariani.spry.com>	 <bb075cdf0704261520k5de953dcmf54ff6151df69a25@mail.gmail.com>	 <1177626362.10826.19.camel@mariani.spry.com> <46315FFF.9010108@richweb.com> <1177685500.14854.24.camel@mariani.spry.com>
In-Reply-To: <1177685500.14854.24.camel@mariani.spry.com>
X-Enigmail-Version: 0.90.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 1609
Lines: 50

Pierre Mariani wrote:
> Matthew and Rob, thank you for your replies.
> 
>> - It's unclear whether you have a fixed set of variables to process.
>> Is the list always the same?
> 
> Yes, the list is always the same.
> 
>> - Why are you using references? Are you sure you need to?
>> 
>> - modify_variable() doesn't appear to modify anything, otherwise why
>> are you assigning its return value to the scalar passed as a parameter?
>> It seems to be just a function.
> 
> Modify_variable modifies its input variable.
> 
> Please correct me if I am wrong.
> My understanding is that:
> 1) if I do:
> 	my @array = ($a, $b, $c);
> 	for (@array) { $_ = modify_variable($_)}
> I am going to modify $array[0], $array[1] and $array[2], and NOT $a, $b,
> $c.

Yes because the contents of $a, $b and $c are copied to @array so there is no
way that modifying the contents of @array will affect the contents of $a, $b
and $c.


> 2) if I do:
> 	for ($a, $b, $c) {$_ = modify_variable($_)}
> I am going to modify $a, $b, $c, which is good, but if $a, $b, $c are
> big I am going to be passing around lots of data.

Yes and in your example 1 above you are passing around lots of data twice.  If
you don't want to pass around a lot of data then use references and change the
modify_variable() sub to work with references.



John
-- 
Perl isn't a toolbox, but a small machine shop where you can special-order
certain sorts of tools at low cost and in short order.       -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


