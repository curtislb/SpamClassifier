From r-help-bounces@stat.math.ethz.ch  Thu Apr 19 09:07:12 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3JD7B0I024666
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 09:07:12 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JD5lbj019965;
	Thu, 19 Apr 2007 15:05:51 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: **
X-Spam-Status: No, score=2.6 required=5.0 tests=AWL, FORGED_RCVD_HELO,
	RCVD_NUMERIC_HELO autolearn=no version=3.1.8
Received: from pythagoras.zen.co.uk (pythagoras.zen.co.uk [212.23.3.140])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JD1xgc018625
	for <r-help@stat.math.ethz.ch>; Thu, 19 Apr 2007 15:01:59 +0200
Received: from [88.96.44.206] (helo=88.96.44.206)
	by pythagoras.zen.co.uk with esmtp (Exim 4.50)
	id 1HeWGs-0005LB-5i; Thu, 19 Apr 2007 13:01:58 +0000
Received: (from efh@localhost) by 88.96.44.206 (8.8.8/8.8.5) id OAA19272;
	Thu, 19 Apr 2007 14:01:56 +0100
Message-ID: <XFMail.070419140156.Ted.Harding@manchester.ac.uk>
X-Mailer: XFMail 1.3-alpha-031298 [p0] on Linux
X-Priority: 3 (Normal)
MIME-Version: 1.0
In-Reply-To: <10076822.post@talk.nabble.com>
Date: Thu, 19 Apr 2007 14:01:56 +0100 (BST)
From: (Ted Harding) <Ted.Harding@manchester.ac.uk>
To: r-help@stat.math.ethz.ch
X-Originating-Pythagoras-IP: [88.96.44.206]
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: Re: [R] convergence
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
Reply-To: ted.harding@manchester.ac.uk
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 1342
Lines: 42

On 19-Apr-07 12:00:17, rach.s wrote:
> 
> hie..
> how can i write a loop that makes algorithm keeps repeating
> until a solution is converged?do i use a for loop? i know
> that we can use for loop to ask for a number of repetitions,
> but how to use it to ask the algorithm to keep repeating
> until a solution is converged?
> Thanks

There are various ways round this, but a 'for' loop with
a fixed number of iterations is not usully one of them!

The simplest is to use while(). A possibly strategy is

  Y.old <- initial.Y
  while(TRUE){
    Y <- compute.Y(Y.old, ...)
    if(abs(Y - Y.old) < small.number) break
    Y.old <- Y
  }

This will loop indefinitely until the convergence criterion

  abs(Y - Y.old) < small.number

is met, and then stop.

Best wishes,
Ted.

--------------------------------------------------------------------
E-Mail: (Ted Harding) <Ted.Harding@manchester.ac.uk>
Fax-to-email: +44 (0)870 094 0861
Date: 19-Apr-07                                       Time: 14:01:51
------------------------------ XFMail ------------------------------

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

