From perl6-all-return-81093-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May  4 00:44:48 2007
Return-Path: <perl6-all-return-81093-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l444ikqD011191
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 4 May 2007 00:44:47 -0400
Received: (qmail 13280 invoked by uid 514); 4 May 2007 04:44:45 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 13275 invoked from network); 4 May 2007 04:44:45 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of mddiep@gmail.com designates 64.233.166.181 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=XMjkeqc7rZjHyI9UAn6XiFpGshUsWxQ7Qfy71DKWJIvaqICJwocHG1kIJz0ZpB8o/sS4Tap2n/cKlLa0k8DRW5PKh5GzYTUrPM1e2Ug8ffCsPEgakZ8aY2xt3k4MPFp6/LJAINeyLPO4vHSCiFVadijE5SqwwptCy2xFRZ6weYY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=E5mBjnDJ+ptVRJJF1I+3js5rqIGagMH3Fn47iFSUUwDGk9of4hGVFLz4ZNKs5+qJh5lH5TWA+VZFR3pVh5eb/Y8PoF1kJuCm7Ycsa0WEzmoT9Qdlwu46KKPNndA44+RqAg0nBZcH5JWQj594gm1EF3/EYiIfYKoYaBEmdlaTrAs=
Message-ID: <198c87380705032144w735ddcb2yfc99b478558a0be3@mail.gmail.com>
Date: Fri, 4 May 2007 00:44:06 -0400
From: "Matt Diephouse" <mddiep@gmail.com>
Reply-To: matt@diephouse.com
To: "Allison Randal" <allison@perl.org>
Subject: Re: [perl #42865] [BUG] There's no way to set a vtable function with a Sub at runtime
Cc: perl6-internals@perl.org
In-Reply-To: <463AAA3B.6040104@perl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <RT-Ticket-42865@perl.org>
	 <B6A75271-9DC2-4769-9084-9001D6313798@diephouse.com>
	 <rt-3.6.HEAD-15879-1178151032-48.42865-72-0@perl.org>
	 <463AAA3B.6040104@perl.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,KARMA_CONNECT_NEGATIVE,SPF_PASS

Allison Randal <allison@perl.org> wrote:
> For classes, the 'add_method' method takes a named parameter to say
> whether it's a vtable function. And, vtable functions aren't stored in
> the namespace at all anymore, but in a data structure inside the class,
> so you wouldn't have 'root' and 'hll' variants. I can see potentially
> see adding an 'add_vtable' vtable function, parallel to add_method,
> add_attribute, etc.

After the recent decoupling of vtable functions from methods (with the
addition of the :vtable pragma), why would you want to re-couple them?
I see the two as distinct features, each with their own uses.
Sometimes there's shared behavior, but there ought to be the ability
to have them behave differently.

> What's the use case for modifying a low-level PMC's vtable entries at
> runtime? Or, are you only talking about overriding vtable functions in a
> class?

The latter. It seems like there should be a way to override them
without using eval -- particularly since there's nothing preventing it
technically.

-- 
Matt Diephouse
http://matt.diephouse.com

