From beginners-return-91183-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Apr 28 17:26:32 2007
Return-Path: <beginners-return-91183-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3SLQU6w012618
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 28 Apr 2007 17:26:31 -0400
Received: (qmail 15082 invoked by uid 514); 28 Apr 2007 21:26:24 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 15073 invoked from network); 28 Apr 2007 21:26:24 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Apr 2007 21:26:24 -0000
Received: (qmail 5922 invoked by uid 225); 28 Apr 2007 21:26:24 -0000
Delivered-To: beginners@perl.org
Received: (qmail 5917 invoked by alias); 28 Apr 2007 21:26:23 -0000
X-Spam-Status: No, hits=-2.4 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,MIME_BASE64_NO_NAME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of daggerquill@gmail.com designates 64.233.162.225 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.225)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 28 Apr 2007 14:26:15 -0700
Received: by nz-out-0506.google.com with SMTP id 12so1533859nzp
        for <beginners@perl.org>; Sat, 28 Apr 2007 14:26:10 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=uAtZHJzT46BB9sWrPKAKddTtX/rG6Slf/3Nx5DZYrafYfLNR1QVr4U76T7mJ1zleAzOoaRqkKFXLughG7e1J2EFv/3BDhpPuxKvmdDOUv9RmS0r/O9mZQmUlDOsMxeJr23T8XtC3nG1gn09Z2tgbXOOZgZcXJyCaa9KIxHERXAc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=A24t5wZp7MWFzBmUAYgkMH2i3D0XYdAe9x1/VP8sIWqutPYjMG8mPVu3W5us3TtySEZSKrTAMerdi3Bb0aE5ICDyH43ZUX1LM+GlFWU2+oTEkPRWo2gwGR+khf6pDux6wlPtNpG9571pzs78znRc6dtFLTOTSoA7upkhkSInvuM=
Received: by 10.114.208.8 with SMTP id f8mr1479728wag.1177795569830;
        Sat, 28 Apr 2007 14:26:09 -0700 (PDT)
Received: by 10.115.111.18 with HTTP; Sat, 28 Apr 2007 14:26:09 -0700 (PDT)
Message-ID: <4ce365ec0704281426o667b7566r3acf017c6eb141d0@mail.gmail.com>
Date: Sat, 28 Apr 2007 17:26:09 -0400
From: "Jay Savage" <daggerquill@gmail.com>
To: som.ctc@gmail.com, "Perl List" <beginners@perl.org>
Subject: Re: Open() and glob EXPR
In-Reply-To: <e9a6a7e60704281353s24d059d1y98104626ebef58eb@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-7; format=flowed
Content-Disposition: inline
References: <e9a6a7e60704262120i268e8c64w6173a84bc5b5d8ea@mail.gmail.com>
	 <463180E7.2060805@telus.net>
	 <e9a6a7e60704270136k328aa8ddxceaf34542a65ed54@mail.gmail.com>
	 <bb075cdf0704270508j63f53347w32e04c00e83c084f@mail.gmail.com>
	 <20070428091736.4379.qmail@lists.develooper.com>
	 <e9a6a7e60704281353s24d059d1y98104626ebef58eb@mail.gmail.com>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by speedy.uwaterloo.ca id l3SLQU6w012618
Status: O
Content-Length: 1567
Lines: 7

On 4/28/07, Somu <som.ctc@gmail.com> wrote:> Thank you all.. Now i'm able to open files from other drives and> directories.. The EXPR in glob EXPR is actually a kind of regexp then?> What is this new q{} operator?>>  I am sorry for the previous dubious emails, they actually were errors> made by the mail sender.>
No, it's not a regex. It's just an expression. EXPR is just short for"expression". In the documentation it translates roughly to "the typeof input this operator or function accepts." You then need to read therest of the doc see what kind of input a particular operator orfunction accepts. the type of expression that satisfies "glob EXPR" isvery different from one that would satisfy "unless EXPR," forinstance. In glob's case, the expression is a combination of literalcharacters and wildcards that mimic the wildcard syntax of unixshell(s) (actually BSD glob). It's a glob expression, and it's verydifferent from from a perl regex (or any other regex).
You can read all about q//, qq//, qw//, and their friends in perlopunder "Quote and Quote-like Operators." Better yet, just pick up acopy of _Learning Perl_ or _Learning Perl for Win32_ from your localbookstore. The q*// operators are common ways of quoting text, andyou'll want to get familiat with them.
HTH,
-- j--------------------------------------------------This email and attachment(s): [  ] blogable; [ x ] ask first; [  ]private and confidential
daggerquill [at] gmail [dot] comhttp://www.tuaw.com  http://www.downloadsquad.com  http://www.engatiki.org
values of â will give rise to dom!

