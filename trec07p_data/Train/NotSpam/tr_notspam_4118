From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon Apr 23 02:11:17 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3N6BH0I028683
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 23 Apr 2007 02:11:17 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 1FD7516389D
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 23 Apr 2007 06:10:52 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 540)
	id 6765A162AC2; Mon, 23 Apr 2007 06:10:24 +0000 (GMT)
To: samba-cvs@samba.org
From: jerry@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070423061024.6765A162AC2@lists.samba.org>
Date: Mon, 23 Apr 2007 06:10:24 +0000 (GMT)
Subject: svn commit: samba r22473 - in branches: SAMBA_3_0/source/nsswitch
	SAMBA_3_0_25/source/nsswitch SAMBA_3_0_25/source/passdb
	SAMBA_3_0_RELEASE/source/nsswitch
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 9500
Lines: 291

Author: jerry
Date: 2007-04-23 06:10:22 +0000 (Mon, 23 Apr 2007)
New Revision: 22473

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22473

Log:
Correct fix for setting a default compat tdb idmap backend.
Previous code would always fill in "idmap backend = tdb"
even if you defined idmap domains.  My fault.  I should
have tested the original patch more before committing.



Modified:
   branches/SAMBA_3_0/source/nsswitch/idmap.c
   branches/SAMBA_3_0_25/source/nsswitch/idmap.c
   branches/SAMBA_3_0_25/source/passdb/pdb_ldap.c
   branches/SAMBA_3_0_RELEASE/source/nsswitch/idmap.c


Changeset:
Modified: branches/SAMBA_3_0/source/nsswitch/idmap.c
===================================================================
--- branches/SAMBA_3_0/source/nsswitch/idmap.c	2007-04-23 00:43:47 UTC (rev 22472)
+++ branches/SAMBA_3_0/source/nsswitch/idmap.c	2007-04-23 06:10:22 UTC (rev 22473)
@@ -289,40 +289,42 @@
 
 	dom_list = lp_idmap_domains();
 	
-	if ( dom_list && lp_idmap_backend() ) {
-		DEBUG(0, ("WARNING: idmap backend and idmap domains are "
-			  "mutually excusive!\n"));
-		DEBUGADD(0,("idmap backend option will be IGNORED!\n"));
-	} else if ( lp_idmap_backend() ) {
-		const char **compat_list = lp_idmap_backend();
+	if ( lp_idmap_backend() ) {
+       		const char **compat_list = lp_idmap_backend();
 		char *p = NULL;
 		const char *q = NULL;		
 
-		compat = 1;
+		if ( dom_list ) {			
+			DEBUG(0, ("WARNING: idmap backend and idmap domains are "
+				  "mutually excusive!\n"));
+			DEBUGADD(0,("idmap backend option will be IGNORED!\n"));
+		} else {
+			compat = 1;
 
-		if ( (compat_backend = talloc_strdup( idmap_ctx, *compat_list )) == NULL ) {
-			ret = NT_STATUS_NO_MEMORY;
-			goto done;			
-		}
+			if ( (compat_backend = talloc_strdup( idmap_ctx, *compat_list )) == NULL ) {
+				ret = NT_STATUS_NO_MEMORY;
+				goto done;
+			}
 		
-		/* strip any leading idmap_ prefix of */
-		if (strncmp(*compat_list, "idmap_", 6) == 0 ) {
-			q = *compat_list += 6;
-			DEBUG(0, ("WARNING: idmap backend uses obsolete and "
-				  "deprecated 'idmap_' prefix.\n"
-				  "Please replace 'idmap_%s' by '%s' in %s\n", 
-				  q, q, dyn_CONFIGFILE));
-			compat_backend = talloc_strdup( idmap_ctx, q);
-		} else {
-			compat_backend = talloc_strdup( idmap_ctx, *compat_list);
-		}
+			/* strip any leading idmap_ prefix of */
+			if (strncmp(*compat_list, "idmap_", 6) == 0 ) {
+				q = *compat_list += 6;
+				DEBUG(0, ("WARNING: idmap backend uses obsolete and "
+					  "deprecated 'idmap_' prefix.\n"
+					  "Please replace 'idmap_%s' by '%s' in %s\n", 
+					  q, q, dyn_CONFIGFILE));
+				compat_backend = talloc_strdup( idmap_ctx, q);
+			} else {
+				compat_backend = talloc_strdup( idmap_ctx, *compat_list);
+			}
 			
-		/* separate the backend and module arguements */
-		if ((p = strchr(compat_backend, ':')) != NULL) {
-			*p = '\0';			
-			compat_params = p + 1;
-		}
-	} else {
+			/* separate the backend and module arguements */
+			if ((p = strchr(compat_backend, ':')) != NULL) {
+				*p = '\0';			
+				compat_params = p + 1;
+			}
+		}		
+	} else if ( !dom_list ) {
 		/* Back compatible: without idmap domains and explicit
 		   idmap backend.  Taking default idmap backend: tdb */
 		
@@ -331,7 +333,6 @@
 		compat_params = compat_backend;
 	}
 
-
 	if ( ! dom_list) {
 		dom_list = idmap_default_domain;
 	}

Modified: branches/SAMBA_3_0_25/source/nsswitch/idmap.c
===================================================================
--- branches/SAMBA_3_0_25/source/nsswitch/idmap.c	2007-04-23 00:43:47 UTC (rev 22472)
+++ branches/SAMBA_3_0_25/source/nsswitch/idmap.c	2007-04-23 06:10:22 UTC (rev 22473)
@@ -289,40 +289,42 @@
 
 	dom_list = lp_idmap_domains();
 	
-	if ( dom_list && lp_idmap_backend() ) {
-		DEBUG(0, ("WARNING: idmap backend and idmap domains are "
-			  "mutually excusive!\n"));
-		DEBUGADD(0,("idmap backend option will be IGNORED!\n"));
-	} else if ( lp_idmap_backend() ) {
-		const char **compat_list = lp_idmap_backend();
+	if ( lp_idmap_backend() ) {
+       		const char **compat_list = lp_idmap_backend();
 		char *p = NULL;
 		const char *q = NULL;		
 
-		compat = 1;
+		if ( dom_list ) {			
+			DEBUG(0, ("WARNING: idmap backend and idmap domains are "
+				  "mutually excusive!\n"));
+			DEBUGADD(0,("idmap backend option will be IGNORED!\n"));
+		} else {
+			compat = 1;
 
-		if ( (compat_backend = talloc_strdup( idmap_ctx, *compat_list )) == NULL ) {
-			ret = NT_STATUS_NO_MEMORY;
-			goto done;			
-		}
+			if ( (compat_backend = talloc_strdup( idmap_ctx, *compat_list )) == NULL ) {
+				ret = NT_STATUS_NO_MEMORY;
+				goto done;
+			}
 		
-		/* strip any leading idmap_ prefix of */
-		if (strncmp(*compat_list, "idmap_", 6) == 0 ) {
-			q = *compat_list += 6;
-			DEBUG(0, ("WARNING: idmap backend uses obsolete and "
-				  "deprecated 'idmap_' prefix.\n"
-				  "Please replace 'idmap_%s' by '%s' in %s\n", 
-				  q, q, dyn_CONFIGFILE));
-			compat_backend = talloc_strdup( idmap_ctx, q);
-		} else {
-			compat_backend = talloc_strdup( idmap_ctx, *compat_list);
-		}
+			/* strip any leading idmap_ prefix of */
+			if (strncmp(*compat_list, "idmap_", 6) == 0 ) {
+				q = *compat_list += 6;
+				DEBUG(0, ("WARNING: idmap backend uses obsolete and "
+					  "deprecated 'idmap_' prefix.\n"
+					  "Please replace 'idmap_%s' by '%s' in %s\n", 
+					  q, q, dyn_CONFIGFILE));
+				compat_backend = talloc_strdup( idmap_ctx, q);
+			} else {
+				compat_backend = talloc_strdup( idmap_ctx, *compat_list);
+			}
 			
-		/* separate the backend and module arguements */
-		if ((p = strchr(compat_backend, ':')) != NULL) {
-			*p = '\0';			
-			compat_params = p + 1;
-		}
-	} else {
+			/* separate the backend and module arguements */
+			if ((p = strchr(compat_backend, ':')) != NULL) {
+				*p = '\0';			
+				compat_params = p + 1;
+			}
+		}		
+	} else if ( !dom_list ) {
 		/* Back compatible: without idmap domains and explicit
 		   idmap backend.  Taking default idmap backend: tdb */
 		
@@ -331,7 +333,6 @@
 		compat_params = compat_backend;
 	}
 
-
 	if ( ! dom_list) {
 		dom_list = idmap_default_domain;
 	}

Modified: branches/SAMBA_3_0_25/source/passdb/pdb_ldap.c
===================================================================
--- branches/SAMBA_3_0_25/source/passdb/pdb_ldap.c	2007-04-23 00:43:47 UTC (rev 22472)
+++ branches/SAMBA_3_0_25/source/passdb/pdb_ldap.c	2007-04-23 06:10:22 UTC (rev 22473)
@@ -455,7 +455,11 @@
 			temp))
 		return (time_t) 0;
 
-	strptime(temp, "%Y%m%d%H%M%SZ", &tm);
+	if ( !strptime(temp, "%Y%m%d%H%M%SZ", &tm)) {
+		DEBUG(2,("ldapsam_get_entry_timestamp: strptime failed on: %s\n",
+			(char*)temp));
+		return (time_t) 0;
+	}
 	tzset();
 	return timegm(&tm);
 }

Modified: branches/SAMBA_3_0_RELEASE/source/nsswitch/idmap.c
===================================================================
--- branches/SAMBA_3_0_RELEASE/source/nsswitch/idmap.c	2007-04-23 00:43:47 UTC (rev 22472)
+++ branches/SAMBA_3_0_RELEASE/source/nsswitch/idmap.c	2007-04-23 06:10:22 UTC (rev 22473)
@@ -289,40 +289,42 @@
 
 	dom_list = lp_idmap_domains();
 	
-	if ( dom_list && lp_idmap_backend() ) {
-		DEBUG(0, ("WARNING: idmap backend and idmap domains are "
-			  "mutually excusive!\n"));
-		DEBUGADD(0,("idmap backend option will be IGNORED!\n"));
-	} else if ( lp_idmap_backend() ) {
-		const char **compat_list = lp_idmap_backend();
+	if ( lp_idmap_backend() ) {
+       		const char **compat_list = lp_idmap_backend();
 		char *p = NULL;
 		const char *q = NULL;		
 
-		compat = 1;
+		if ( dom_list ) {			
+			DEBUG(0, ("WARNING: idmap backend and idmap domains are "
+				  "mutually excusive!\n"));
+			DEBUGADD(0,("idmap backend option will be IGNORED!\n"));
+		} else {
+			compat = 1;
 
-		if ( (compat_backend = talloc_strdup( idmap_ctx, *compat_list )) == NULL ) {
-			ret = NT_STATUS_NO_MEMORY;
-			goto done;			
-		}
+			if ( (compat_backend = talloc_strdup( idmap_ctx, *compat_list )) == NULL ) {
+				ret = NT_STATUS_NO_MEMORY;
+				goto done;
+			}
 		
-		/* strip any leading idmap_ prefix of */
-		if (strncmp(*compat_list, "idmap_", 6) == 0 ) {
-			q = *compat_list += 6;
-			DEBUG(0, ("WARNING: idmap backend uses obsolete and "
-				  "deprecated 'idmap_' prefix.\n"
-				  "Please replace 'idmap_%s' by '%s' in %s\n", 
-				  q, q, dyn_CONFIGFILE));
-			compat_backend = talloc_strdup( idmap_ctx, q);
-		} else {
-			compat_backend = talloc_strdup( idmap_ctx, *compat_list);
-		}
+			/* strip any leading idmap_ prefix of */
+			if (strncmp(*compat_list, "idmap_", 6) == 0 ) {
+				q = *compat_list += 6;
+				DEBUG(0, ("WARNING: idmap backend uses obsolete and "
+					  "deprecated 'idmap_' prefix.\n"
+					  "Please replace 'idmap_%s' by '%s' in %s\n", 
+					  q, q, dyn_CONFIGFILE));
+				compat_backend = talloc_strdup( idmap_ctx, q);
+			} else {
+				compat_backend = talloc_strdup( idmap_ctx, *compat_list);
+			}
 			
-		/* separate the backend and module arguements */
-		if ((p = strchr(compat_backend, ':')) != NULL) {
-			*p = '\0';			
-			compat_params = p + 1;
-		}
-	} else {
+			/* separate the backend and module arguements */
+			if ((p = strchr(compat_backend, ':')) != NULL) {
+				*p = '\0';			
+				compat_params = p + 1;
+			}
+		}		
+	} else if ( !dom_list ) {
 		/* Back compatible: without idmap domains and explicit
 		   idmap backend.  Taking default idmap backend: tdb */
 		
@@ -331,7 +333,6 @@
 		compat_params = compat_backend;
 	}
 
-
 	if ( ! dom_list) {
 		dom_list = idmap_default_domain;
 	}

