From beginners-return-92668-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun 22 18:40:03 2007
Return-Path: <beginners-return-92668-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5MMe2L9010016
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 22 Jun 2007 18:40:02 -0400
Received: (qmail 6284 invoked by uid 514); 22 Jun 2007 17:31:41 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 6275 invoked from network); 22 Jun 2007 17:31:41 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 22 Jun 2007 17:31:41 -0000
Received: (qmail 9355 invoked by uid 225); 22 Jun 2007 17:31:41 -0000
Delivered-To: beginners@perl.org
Received: (qmail 9350 invoked by alias); 22 Jun 2007 17:31:40 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.225 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.225)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 22 Jun 2007 10:31:39 -0700
Received: by nz-out-0506.google.com with SMTP id x7so975948nzc
        for <beginners@perl.org>; Fri, 22 Jun 2007 10:31:35 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=TN+0KFd9+uXVuDv5FUnhd7gw4UQPIDtvAnfLbF2aw1tPElshPh/aE2xJjKQGk0ChlpevY2FbaOK6wVu4q6vkPfgcVSfettOBD3XNU5sP3eqQ2fLs9POSjn99mg66u90KWXYmmqlr9rFCc9y/wfxrgYfaXx4eD/3eXUkPvAdop/A=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=FT+v811h9o+gc9KmWdeVTuFPsUSAX92nAN9boAy0xWl3VKpRVnvGopvSCR9QnOypfywjM6wU/65jXUiIyP82UWpVioEmrZYZif5peHa2+leF7Y2bhq+HuckciBdG7bvmAz+gOOngZyyMnuB4zbHTYIUrkNVpM2wJ6w9GZNKloTo=
Received: by 10.114.156.1 with SMTP id d1mr3174221wae.1182533494584;
        Fri, 22 Jun 2007 10:31:34 -0700 (PDT)
Received: by 10.114.102.6 with HTTP; Fri, 22 Jun 2007 10:31:34 -0700 (PDT)
Message-ID: <58ce48dc0706221031g630cbf97oae8f9043db8c1f51@mail.gmail.com>
Date: Fri, 22 Jun 2007 13:31:34 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Andrej Kastrin" <andrej.kastrin@siol.net>
Subject: Re: Count co-occurrences
Cc: "beginners perl" <beginners@perl.org>
In-Reply-To: <467BFD51.3000405@siol.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <467BFD51.3000405@siol.net>

On 6/22/07, Andrej Kastrin <andrej.kastrin@siol.net> wrote:
> Dear all,
>
> I wrote a simple sql querry to count co-occurrences between words but it
> performs very very slow on large datasets. So, it's time to do it with
> Perl. I need just a short tip to start out: which structure to use to
> count all possible occurrences between letters (e.g. A, B and C) under
> the particular document number. My dataset looks like following:
snip

Here is my naive solution.

#!/usr/bin/perl

use strict;
use warnings;

my %co;
my %doc;
my $oldid;

while (<DATA>) {
        chomp;
        my ($id, $val) = split / /;
        unless ($id eq $oldid or not defined $oldid) {
                my @vals = sort keys %doc;
                while (@vals) {
                        my $val = shift @vals;
                        for my $other (@vals) {
                                $co{"$val $other"} += $doc{$val} * $doc{$other};
                        }
                }
                %doc = ();
        }
        $doc{$val}++;
        $oldid = $id;
}
my @vals = sort keys %doc;
while (@vals) {
        my $val = shift @vals;
        for my $other (@vals) {
                $co{"$val $other"} += $doc{$val} * $doc{$other};
        }
}

for my $co (sort keys %co) {
        print "$co $co{$co}\n";
}

__DATA__
1 A
1 B
1 C
1 B
2 A
2 A
2 B
2 C

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


