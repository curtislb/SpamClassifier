From perl6-all-return-82356-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jun 25 06:48:12 2007
Return-Path: <perl6-all-return-82356-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5PAmBL9024392
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 25 Jun 2007 06:48:11 -0400
Received: (qmail 17490 invoked by uid 514); 25 Jun 2007 10:48:07 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 17485 invoked from network); 25 Jun 2007 10:48:07 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Subject: [perl #42427] [CAGE] cleanup perlcritic errors 
From: "Paul Cochrane via RT" <parrotbug-followup@parrotcode.org>
Reply-To: parrotbug-followup@parrotcode.org
In-Reply-To: <1d9a3f400704101609u50e2d2b9g282e5a36e42197a9@mail.gmail.com>
References: <RT-Ticket-42427@perl.org> <1d9a3f400704101609u50e2d2b9g282e5a36e42197a9@mail.gmail.com>
Message-ID: <rt-3.6.HEAD-1276-1182767264-1659.42427-15-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #42427
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: paultcochrane@gmail.com
Cc: perl6-internals@perl.org
To: "OtherRecipients of perl Ticket #42427": ;
MIME-Version: 1.0
X-RT-Original-Encoding: utf-8
Content-type: multipart/mixed; boundary="----------=_1182767265-1276-56"
Date: Mon, 25 Jun 2007 03:27:45 -0700
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

------------=_1182767265-1276-56
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

To be able to attack this ticket properly, we need to be able to run at 
least a subset of the perlcritic tests with 'make test' alongside the 
other coding standards tests, so as to ensure that any broken windows 
do not remain so for very long.  Therefore, I propose to change the 
functionality of the t/codingstd/perlcritic.t test slightly so as to 
run only those tests which have currently been "cleaned up" by default, 
and to run all perlcritic policies by passing the flag '--allpolicies' 
to the test script.  We can then incrementally move cleaned up policies 
into the default list of policies and hence slowly increase our perl 
coding standards testing coverage.  The attached patch implements this, 
and sorts the output of the '--list' option so as to make its output 
more readable.

Comments most definitely welcome!  If there are no problems with this, 
I'll commit the patch, and add t/codingstd/perlcritic.t to the coding 
standards section of the test harness.

Paul

------------=_1182767265-1276-56
Content-Type: application/octet-stream; name="perlcritic.patch"
Content-Disposition: inline; filename="perlcritic.patch"
Content-Transfer-Encoding: base64
RT-Attachment: 42427/264880/115891

SW5kZXg6IHQvY29kaW5nc3RkL3Blcmxjcml0aWMudAo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09Ci0tLSB0L2NvZGluZ3N0ZC9wZXJsY3JpdGljLnQJKHJldmlz
aW9uIDE5MzEwKQorKysgdC9jb2RpbmdzdGQvcGVybGNyaXRpYy50CSh3b3Jr
aW5nIGNvcHkpCkBAIC0yNyw3ICsyNyw3IEBACiAKIG15ICRwZXJsX3RpZHlf
Y29uZiA9ICd0b29scy91dGlsL3Blcmx0aWR5LmNvbmYnOwogCi1teSAoIEBm
aWxlcywgJXBvbGljaWVzLCAkbGlzdF9wb2xpY2llcywgJGxpc3RfZmlsZXMg
KTsKK215ICggQGZpbGVzLCAlcG9saWNpZXMsICRsaXN0X3BvbGljaWVzLCAk
bGlzdF9maWxlcywgJGFsbF9wb2xpY2llcyApOwogCiB3aGlsZSAoQEFSR1Yp
IHsKICAgICBteSAkYXJnID0gJEFSR1ZbMF07CkBAIC00Myw2ICs0MywxMCBA
QAogICAgICAgICAkbGlzdF9maWxlcyA9IDE7CiAgICAgICAgIHNoaWZ0IEBB
UkdWOyAgICAjZGlzY2FyZAogICAgIH0KKyAgICBlbHNpZiAoICRhcmcgZXEg
Jy0tYWxscG9saWNpZXMnICkgeworICAgICAgICAkYWxsX3BvbGljaWVzID0g
MTsKKyAgICAgICAgc2hpZnQgQEFSR1Y7ICAgICNkaXNjYXJkCisgICAgfQog
ICAgIGVsc2lmICggJGFyZyA9fiAvXi0tKC4qKS8gKSB7CiAgICAgICAgICRw
b2xpY2llc3skMX0gPSAxOwogICAgICAgICBzaGlmdCBAQVJHVjsgICAgIyBk
aXNjYXJkCkBAIC0xMDMsMzMgKzEwNywzOCBAQAogIyBGb3IgYSBsaXN0IG9m
IGF2YWlsYWJsZSBwb2xpY2llcywgcGVybGRvYyBQZXJsOjpDcml0aWMKIGlm
ICggIWtleXMgJXBvbGljaWVzICkgewogICAgICVwb2xpY2llcyA9ICgKKyAg
ICAgICAgJ0NvZGVMYXlvdXQ6OlByb2hpYml0RHVwbGljYXRlQ29kYScgICAg
ICAgICAgICAgICA9PiAxLAorICAgICAgICAnQ29kZUxheW91dDo6UHJvaGli
aXRIYXJkVGFicycgICAgICAgICAgICAgICAgICAgID0+IHsgYWxsb3dfbGVh
ZGluZ190YWJzID0+IDAgfSwKKyAgICAgICAgJ0NvZGVMYXlvdXQ6OlByb2hp
Yml0VHJhaWxpbmdXaGl0ZXNwYWNlJyAgICAgICAgICA9PiAxLAorICAgICAg
ICAnQ29kZUxheW91dDo6VXNlUGFycm90Q29kYScgICAgICAgICAgICAgICAg
ICAgICAgID0+IDEsCisgICAgICAgICdUZXN0aW5nQW5kRGVidWdnaW5nOjpN
aXNwbGFjZWRTaGViYW5nJyAgICAgICAgICAgPT4gMSwKKyAgICAgICAgJ1Rl
c3RpbmdBbmREZWJ1Z2dpbmc6OlByb2hpYml0U2hlYmFuZ1dhcm5pbmdzQXJn
JyA9PiAxLAorICAgICAgICAnVGVzdGluZ0FuZERlYnVnZ2luZzo6UmVxdWly
ZVBvcnRhYmxlU2hlYmFuZycgICAgID0+IDEsCiAgICAgICAgICdUZXN0aW5n
QW5kRGVidWdnaW5nOjpSZXF1aXJlVXNlU3RyaWN0JyAgICAgICAgICAgPT4g
MSwKICAgICAgICAgJ1Rlc3RpbmdBbmREZWJ1Z2dpbmc6OlJlcXVpcmVVc2VX
YXJuaW5ncycgICAgICAgICA9PiAxLAotICAgICAgICAnVGVzdGluZ0FuZERl
YnVnZ2luZzo6UmVxdWlyZVBvcnRhYmxlU2hlYmFuZycgICAgID0+IDEsCi0g
ICAgICAgICdUZXN0aW5nQW5kRGVidWdnaW5nOjpQcm9oaWJpdFNoZWJhbmdX
YXJuaW5nc0FyZycgPT4gMSwKLSAgICAgICAgJ1Rlc3RpbmdBbmREZWJ1Z2dp
bmc6Ok1pc3BsYWNlZFNoZWJhbmcnICAgICAgICAgICA9PiAxLAotICAgICAg
ICAnVmFyaWFibGVzOjpQcm9oaWJpdENvbmRpdGlvbmFsRGVjbGFyYXRpb25z
JyAgICAgID0+IDEsCi0gICAgICAgICdJbnB1dE91dHB1dDo6UHJvaGliaXRU
d29BcmdPcGVuJyAgICAgICAgICAgICAgICAgPT4gMSwKLSAgICAgICAgJ0lu
cHV0T3V0cHV0OjpQcm9oaWJpdEJhcmV3b3JkRmlsZUhhbmRsZXMnICAgICAg
ICA9PiAxLAotICAgICAgICAnTmFtaW5nQ29udmVudGlvbnM6OlByb2hpYml0
QW1iaWd1b3VzTmFtZXMnICAgICAgID0+IDEsCi0gICAgICAgICdTdWJyb3V0
aW5lczo6UHJvaGliaXRCdWlsdGluSG9tb255bXMnICAgICAgICAgICAgPT4g
MSwKLSAgICAgICAgJ1N1YnJvdXRpbmVzOjpQcm9oaWJpdEV4cGxpY2l0UmV0
dXJuVW5kZWYnICAgICAgICA9PiAxLAotICAgICAgICAnU3Vicm91dGluZXM6
OlByb2hpYml0U3Vicm91dGluZVByb3RvdHlwZXMnICAgICAgID0+IDEsCi0g
ICAgICAgICdDb2RlTGF5b3V0OjpVc2VQYXJyb3RDb2RhJyAgICAgICAgICAg
ICAgICAgICAgICAgPT4gMSwKLSAgICAgICAgJ0NvZGVMYXlvdXQ6OlByb2hp
Yml0RHVwbGljYXRlQ29kYScgICAgICAgICAgICAgICA9PiAxLAotICAgICAg
ICAnQ29kZUxheW91dDo6UHJvaGliaXRUcmFpbGluZ1doaXRlc3BhY2UnICAg
ICAgICAgID0+IDEsCi0gICAgICAgICdDb2RlTGF5b3V0OjpQcm9oaWJpdEhh
cmRUYWJzJyAgICAgICAgICAgICAgICAgICAgPT4geyBhbGxvd19sZWFkaW5n
X3RhYnMgPT4gMCB9LAotICAgICAgICAnQ29kZUxheW91dDo6UmVxdWlyZVRp
ZHlDb2RlJyAgICAgICAgICAgICAgICAgICAgID0+IHsgcGVybHRpZHlyYyA9
PiAkcGVybF90aWR5X2NvbmYgfSwKLSAgICAgICAgJ1N1YnJvdXRpbmVzOjpS
ZXF1aXJlRmluYWxSZXR1cm4nICAgICAgICAgICAgICAgICA9PiAxLAogICAg
ICk7CiAKKyAgICAjIGFkZCBvdGhlciBwb2xpY2llcyB3aGljaCBhcmVuJ3Qg
eWV0IHBhc3NpbmcgY29uc2lzdGVudGx5IHNlZSBSVCMKKyAgICBpZiAoICRh
bGxfcG9saWNpZXMgKSB7CisgICAgICAgICRwb2xpY2llc3snVmFyaWFibGVz
OjpQcm9oaWJpdENvbmRpdGlvbmFsRGVjbGFyYXRpb25zJ30gPSAxOworICAg
ICAgICAkcG9saWNpZXN7J0lucHV0T3V0cHV0OjpQcm9oaWJpdFR3b0FyZ09w
ZW4nfSAgICAgICAgICAgID0gMTsKKyAgICAgICAgJHBvbGljaWVzeydJbnB1
dE91dHB1dDo6UHJvaGliaXRCYXJld29yZEZpbGVIYW5kbGVzJ30gICA9IDE7
CisgICAgICAgICRwb2xpY2llc3snTmFtaW5nQ29udmVudGlvbnM6OlByb2hp
Yml0QW1iaWd1b3VzTmFtZXMnfSAgPSAxOworICAgICAgICAkcG9saWNpZXN7
J1N1YnJvdXRpbmVzOjpQcm9oaWJpdEJ1aWx0aW5Ib21vbnltcyd9ICAgICAg
ID0gMTsKKyAgICAgICAgJHBvbGljaWVzeydTdWJyb3V0aW5lczo6UHJvaGli
aXRFeHBsaWNpdFJldHVyblVuZGVmJ30gICA9IDE7CisgICAgICAgICRwb2xp
Y2llc3snU3Vicm91dGluZXM6OlByb2hpYml0U3Vicm91dGluZVByb3RvdHlw
ZXMnfSAgPSAxOworICAgICAgICAkcG9saWNpZXN7J0NvZGVMYXlvdXQ6OlJl
cXVpcmVUaWR5Q29kZSd9ICAgICAgICAgICAgICAgID0KKyAgICAgICAgICAg
IHsgcGVybHRpZHlyYyA9PiAkcGVybF90aWR5X2NvbmYgfTsKKyAgICAgICAg
JHBvbGljaWVzeydTdWJyb3V0aW5lczo6UmVxdWlyZUZpbmFsUmV0dXJuJ30g
ICAgICAgICAgICA9IDE7CisgICAgfQorCiAgICAgIyBBZGQgUGVybDo6Q3Jp
dGljOjpCYW5ncyBpZiBpdCBleGlzdHMKICAgICBldmFsIHsgcmVxdWlyZSBQ
ZXJsOjpDcml0aWM6OkJhbmdzOyB9OwogICAgIGlmICgkQCkgewogICAgICAg
ICBkaWFnICJQZXJsOjpDcml0aWM6OkJhbmdzIG5vdCBpbnN0YWxsZWQ6IG5v
dCB0ZXN0aW5nIGZvciBUT0RPIGl0ZW1zIGluIGNvZGUiOwogICAgIH0KICAg
ICBlbHNlIHsKLSAgICAgICAgJHBvbGljaWVzeydCYW5nczo6UHJvaGliaXRG
bGFnQ29tbWVudHMnfSA9IDE7CisgICAgICAgICRwb2xpY2llc3snQmFuZ3M6
OlByb2hpYml0RmxhZ0NvbW1lbnRzJ30gPSAxIGlmICRhbGxfcG9saWNpZXM7
CiAgICAgfQogCiAgICAgIyBHaXZlIGEgZGlhZyB0byBsZXQgdXNlcnMga25v
dyBpZiB0aGlzIGlzIGRvaW5nIGFueXRoaW5nLCBob3cgdG8gcmVwZWF0LgpA
QCAtMTQzLDcgKzE1MiwxNSBAQAogaWYgKCRsaXN0X3BvbGljaWVzKSB7CiAg
ICAgdXNlIERhdGE6OkR1bXBlcjsKICAgICAkRGF0YTo6RHVtcGVyOjpJbmRl
bnQgPSAxOwotICAgIHdhcm4gRHVtcGVyKCBcJXBvbGljaWVzICk7CisgICAg
JERhdGE6OkR1bXBlcjo6VGVyc2UgPSAxOworICAgIGZvcmVhY2ggbXkgJHBv
bGljeSAoIHNvcnQga2V5cyAlcG9saWNpZXMgKSB7CisgICAgICAgIGlmICgg
JHBvbGljaWVzeyRwb2xpY3l9ID09IDEgKSB7CisgICAgICAgICAgICBwcmlu
dCAkcG9saWN5LCAiXG4iOworICAgICAgICB9CisgICAgICAgIGVsc2Ugewor
ICAgICAgICAgICAgd2FybiAkcG9saWN5LCAiID0+ICIsIER1bXBlciggXCRw
b2xpY2llc3skcG9saWN5fSApOworICAgICAgICB9CisgICAgfQogICAgIGV4
aXQ7CiB9CiAKQEAgLTIzMyw3ICsyNTAsNyBAQAogSWYgeW91IGp1c3Qgd2lz
aCB0byBnZXQgYSBsaXN0aW5nIG9mIHRoZSBmaWxlcyB0aGF0IHdpbGwgYmUg
Y2hlY2tlZAogd2l0aG91dCBhY3R1YWxseSBydW5uaW5nIHRoZSB0ZXN0cywg
dXNlOgogCi0gcGVybCB0L2NvZGluZ3N0ZC9wZXJsY3JpdGljLnQgLS1saXN0
ZmlscworIHBlcmwgdC9jb2RpbmdzdGQvcGVybGNyaXRpYy50IC0tbGlzdGZp
bGVzCiAKID1oZWFkMSBCVUdTIEFORCBMSU1JVEFUSU9OUwogCg==

------------=_1182767265-1276-56--

