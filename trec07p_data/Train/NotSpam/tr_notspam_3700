From beginners-return-90976-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 20 16:52:18 2007
Return-Path: <beginners-return-90976-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3KKqG0I010949
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 20 Apr 2007 16:52:17 -0400
Received: (qmail 4178 invoked by uid 514); 20 Apr 2007 20:51:47 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 4164 invoked from network); 20 Apr 2007 20:51:47 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2007 20:51:47 -0000
Received: (qmail 29105 invoked by uid 225); 20 Apr 2007 20:51:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 29100 invoked by alias); 20 Apr 2007 20:51:46 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.226 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.226)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 20 Apr 2007 13:51:43 -0700
Received: by nz-out-0506.google.com with SMTP id s1so802616nze
        for <beginners@perl.org>; Fri, 20 Apr 2007 13:51:38 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=aEpb2zxE0EPzD+YX9VSvEgxIVBCkYL2WbXTWp3FjwuxibJnMGf/7ypoemRw3o9c1tnl7Al6pj0p+pYRTqb5WrC0XQ8ljzuuVpyoa5nSO60I15uqxbaAsjZc/ttE7g/t9pFn12u8eZ2DP4c8faBg40VY62gRuWVuLkcWmdzA8Awo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=TsqoyUE/d2Kps/FhWugujguRNPdjliwThn1Z08kCIp/UGBXMzFtul4Am9AjIe+FliBqTjezVXRuywaX7Texo7eGYjg2kcwMroz/XFWg+xhQp6h44Y444+cmJYntzCI2PkIUcGLK8RmGXwvasymiochF5XjDf0muWtGR2i3Bd9I8=
Received: by 10.114.185.8 with SMTP id i8mr1426593waf.1177102298571;
        Fri, 20 Apr 2007 13:51:38 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Fri, 20 Apr 2007 13:51:38 -0700 (PDT)
Message-ID: <58ce48dc0704201351l23013ca7ra23dd64dbc06571a@mail.gmail.com>
Date: Fri, 20 Apr 2007 16:51:38 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Paul Johnson" <paul@pjcj.net>
Subject: Re: Nested loop
Cc: yitzle <yitzle@users.sourceforge.net>, oryann9 <oryann9@yahoo.com>,
   "Perl List" <beginners@perl.org>
In-Reply-To: <20070420200618.GT18264@pjcj.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <58ce48dc0704192129r3112ddb8m62d05075b5dd966b@mail.gmail.com>
	 <999878.79133.qm@web63403.mail.re1.yahoo.com>
	 <ca5781c80704200719q31471a07l93253e96aa7150b3@mail.gmail.com>
	 <58ce48dc0704201047k4116ce36pb56ed6383ad42613@mail.gmail.com>
	 <20070420200618.GT18264@pjcj.net>
Status: O
Content-Length: 2147
Lines: 62

On 4/20/07, Paul Johnson <paul@pjcj.net> wrote:
snip
> > The grep clearly states that I am looking for something and its block
> > tells me what the criteria are.
>
> There are times where this list needs webctams.  I'd love to have been
> able to have seen you as you wrote that since I find it hard to believe
> that anyone could have done so whilst keeping a straight face ;-)

No, I really do think it is better code that expresses the intent;
however, I don't like the goal behind code in the first place.  How
often do you take each third element of list?  If you are doing that
then you are most likely doing something else wrong farther up in your
code.

>
> I presume that in your second example you should really be comparing
> against
>
>   for (my $i = 0; $i < 10; $i += 3) {
>       func($i);
>   }
>
> which just seems so much clearer to me.

if your goal is to produce 0, 3, 6, and 9 then yes, it is somewhat
clearer, but the very fact the you have a 10 there instead of a 9
points to the off-by-one errors that tend to plague the C-style for
loop.  Unfortunately we will have to wait until Perl 6 for the better
solution:

for 0 .. 9 : by 3 -> $i {}

> Fortunately, TIMTOWTDI, but with any luck I won't be maintaining your
> code ;-)

I probably wouldn't write that code.  I would fix whatever was causing
me to have to take every third element of a list.

>
> Anyway, there seems to be a little confusion about whether for or
> foreach were going to be removed from the language.  The main point I
> wanted to make was that foreach is not going away.  Neither is for.  At
> least, not in Perl5, which will still be around for a long time.  They
> are still synonyms, and any code written now and using either of these
> constructs will continue to work under all Perl5 releases.

The trend going forward is to do away with foreach in favor of for, so
the question becomes "is there any good reason to type four more
letters?"

>
> --
> Paul Johnson - paul@pjcj.net
> http://www.pjcj.net
>

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


