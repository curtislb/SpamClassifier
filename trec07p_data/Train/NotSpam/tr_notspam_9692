From beginners-return-91583-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat May 12 03:46:38 2007
Return-Path: <beginners-return-91583-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4C7kbqD008145
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 12 May 2007 03:46:38 -0400
Received: (qmail 28441 invoked by uid 514); 12 May 2007 07:46:31 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 28431 invoked from network); 12 May 2007 07:46:30 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 May 2007 07:46:30 -0000
Received: (qmail 5684 invoked by uid 225); 12 May 2007 07:46:30 -0000
Delivered-To: beginners@perl.org
Received: (qmail 5677 invoked by alias); 12 May 2007 07:46:29 -0000
X-Spam-Status: No, hits=3.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,FORGED_YAHOO_RCVD,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from office.servervault.com (HELO mail1.dulles.sv.int) (216.12.128.136)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 12 May 2007 00:45:42 -0700
Received: from [192.168.4.103] ([192.168.4.103]) by mail1.dulles.sv.int with Microsoft SMTPSVC(6.0.3790.1830);
	 Sat, 12 May 2007 03:45:37 -0400
Message-ID: <46457066.80901@yahoo.com>
Date: Sat, 12 May 2007 03:44:38 -0400
From: Mathew Snyder <theillien@yahoo.com>
User-Agent: Thunderbird 1.5.0.10 (X11/20060911)
MIME-Version: 1.0
To: Chas Owens <chas.owens@gmail.com>
CC: Perl Beginners <beginners@perl.org>
Subject: Re: passing two hashes into a subroutine
References: <46455E71.9000408@yahoo.com> <58ce48dc0705112341q31e99b42j8068ce11059ab1@mail.gmail.com>
In-Reply-To: <58ce48dc0705112341q31e99b42j8068ce11059ab1@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 12 May 2007 07:45:37.0259 (UTC) FILETIME=[87B4ABB0:01C79469]

If I'm working with two hashes which are actually HoH how would that work?  This
is the snippet of code I'm working with:
sub timesheet {
        my ($dept, $env) = @_;
        if (exists $dept->{username}) {
                open TIMESHEET,
">/work_reports/user/ops_timesheet_weekof_$endDate.txt";
        }else{
                open TIMESHEET,
">/work_reports/user/eng_timesheet_weekof_$endDate.txt";
        }

        print TIMESHEET "Timesheet for $startDate to $endDate\n\n\n";

        foreach my $environ (sort keys %$dept) {
                #Print the header for our data
                print TIMESHEET "$environ", "\n";
                printf TIMESHEET "%10s%8s\n", "User", "hh:mm";
                print TIMESHEET ("-" x 30);
                print TIMESHEET "\n";
                foreach my $name (sort keys %${ $dept->{$environ} }) {
                        printf TIMESHEET "%10s%8s\n", "$name",
"$dept->{$environ->{$name}}";
                }
                printf TIMESHEET ("-" x 30);
                print  TIMESHEET "\n";
                printf TIMESHEET "%18s\n\n", "$env->{$environ}";
        }
        close TIMESHEET;
}

Does that look right?

Mathew
Keep up with me and what I'm up to: http://theillien.blogspot.com


Chas Owens wrote:
> On 5/12/07, Mathew Snyder <theillien@yahoo.com> wrote:
>> When passing two hashes into a subroutine how do I use them separately
>> if they
>> are placed into one flat list?
>>
>> Mathew
>> -- 
>> Keep up with me and what I'm up to: http://theillien.blogspot.com
> 
> Use references:
> 
> func(\%h1, \%h2);
> 
> sub func {
>    my ($h1, $h2) = @_;
> 
>    print "h1\n";
>    for my $key (%$h1) {
>        print "$key => $h1->{$key}\n";
>    }
> 
>    print "h2\n";
>    for my $key (%$h2) {
>        print "$key => $h2->{$key}\n";
>    }
> }
> 

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


