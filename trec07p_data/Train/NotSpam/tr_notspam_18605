From beginners-return-92329-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun 12 18:22:21 2007
Return-Path: <beginners-return-92329-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5CMMKL9032550
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 12 Jun 2007 18:22:20 -0400
Received: (qmail 4162 invoked by uid 514); 12 Jun 2007 22:22:14 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 4153 invoked from network); 12 Jun 2007 22:22:14 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 12 Jun 2007 22:22:14 -0000
Received: (qmail 6077 invoked by uid 225); 12 Jun 2007 22:22:14 -0000
Delivered-To: beginners@perl.org
Received: (qmail 6070 invoked by alias); 12 Jun 2007 22:22:13 -0000
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.183 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.183)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 12 Jun 2007 15:22:10 -0700
Received: by wa-out-1112.google.com with SMTP id v27so6799wah
        for <beginners@perl.org>; Tue, 12 Jun 2007 15:22:06 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=sA8TcY6e6RW3duByPiQZUaA4sOO4ODBLU6a9z6wJVy2ydFYoqSGfuIQKOEC54LulgtIOvkwkXHPpNGl/uMcAgJNHt0HJ4Z+iw7FzQflI2wO76vhoayRxE8sWfzldKiZzAB8txwm/xnxScKkYavXRFiXKeKOUdH1Sc5lG+NosCAA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=ULyyV96phAUwBre6XEkWtndLks7nWhQ3Hga1wDSlh8SVe7Kwwmmq3Gs4MqTLVpmTV5ktaYSY0WwWZX2NTX9HqyILdz4b2AZi//c3gv4FRNE88/W6/9psP7rmF2xL0x3WWGShPOZE1Phaoj6kUaej4nQFq6ofeWcyCzV6QfBeR1E=
Received: by 10.114.78.1 with SMTP id a1mr7126142wab.1181686926237;
        Tue, 12 Jun 2007 15:22:06 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Tue, 12 Jun 2007 15:22:06 -0700 (PDT)
Message-ID: <58ce48dc0706121522k1edb8a31u21a8fe68681c8241@mail.gmail.com>
Date: Tue, 12 Jun 2007 18:22:06 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: lakshmi.sailaja@supersolution.com
Subject: Re: Net::Telnet - Variable in Prompt
Cc: "Martin Barth" <martin@senfdax.de>, beginners@perl.org
In-Reply-To: <EIEIIAMKDIBPECOEKDIKIEMKCDAA.lakshmi.sailaja@supersolution.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Disposition: inline
References: <58ce48dc0706121328p557ac2d2i343bd693ce09d880@mail.gmail.com>
	 <EIEIIAMKDIBPECOEKDIKIEMKCDAA.lakshmi.sailaja@supersolution.com>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l5CMMKL9032550

On 6/12/07, Lakshmi Sailaja <lakshmi.sailaja@supersolution.com> wrote:
snip
> $sub = "xyz";
> $prompt = "L:\\$sub";
>
> my $t = Net::Telnet->new(
>         Timeout => 10,
>         Prompt  => "/$prompt/"
> );
>
snip

from perldoc Net::Telnet
       What To Know Before Using

       · When constructing the match operator argument for "prompt()" or
         "waitfor()", always use single quotes instead of double quotes to
         avoid unexpected backslash interpretation (e.g. '/bash\$ $/').  If
         you're constructing a DOS like file path, you'll need to use four
         backslashes to represent one (e.g. '/c:\\\\users\\\\bill>$/i').

         Of course don't forget about regexp metacharacters like ".", "[", or
         "$".  You'll only need a single backslash to quote them.  The anchor
         metacharacters "^" and "$" refer to positions in the input buffer.
         To avoid matching characters read that look like a prompt, it's a
         good idea to end your prompt pattern with the "$" anchor.  That way
         the prompt will only match if it's the last thing read

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/



