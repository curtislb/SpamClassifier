From perl6-all-return-81444-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 17 03:46:08 2007
Return-Path: <perl6-all-return-81444-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4H7k7qD029167
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 03:46:07 -0400
Received: (qmail 17906 invoked by uid 514); 17 May 2007 07:46:02 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 17901 invoked from network); 17 May 2007 07:46:02 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: audreyt@cvs.develooper.com
To: perl6-language@perl.org
Subject: [svn:perl6-synopsis] r14392 - doc/trunk/design/syn
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Message-Id: <20070517072940.085DFCB9B8@x12.develooper.com>
Date: Thu, 17 May 2007 00:29:40 -0700 (PDT)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

Author: audreyt
Date: Thu May 17 00:29:36 2007
New Revision: 14392

Modified:
   doc/trunk/design/syn/S02.pod
   doc/trunk/design/syn/S04.pod
   doc/trunk/design/syn/S06.pod

Log:
* Fix thrice misspelling of &?BLOCK as $?BLOCK.

Modified: doc/trunk/design/syn/S02.pod
==============================================================================
--- doc/trunk/design/syn/S02.pod	(original)
+++ doc/trunk/design/syn/S02.pod	Thu May 17 00:29:36 2007
@@ -1674,7 +1674,7 @@
     @?LABEL     Which nested block labels am I in?
 
 All the nested C<@?> variables are ordered from the innermost to the
-outermost, so C<@?BLOCK[0]> is always the same as C<$?BLOCK>.
+outermost, so C<@?BLOCK[0]> is always the same as C<&?BLOCK>.
 
 Note that some of these things have parallels in the C<*> space at run time:
 

Modified: doc/trunk/design/syn/S04.pod
==============================================================================
--- doc/trunk/design/syn/S04.pod	(original)
+++ doc/trunk/design/syn/S04.pod	Thu May 17 00:29:36 2007
@@ -724,7 +724,7 @@
 
 is really just short for:
 
-    $?BLOCK.leave(1,2,3)
+    &?BLOCK.leave(1,2,3)
 
 To return from your immediate caller, you can say:
 

Modified: doc/trunk/design/syn/S06.pod
==============================================================================
--- doc/trunk/design/syn/S06.pod	(original)
+++ doc/trunk/design/syn/S06.pod	Thu May 17 00:29:36 2007
@@ -1910,7 +1910,7 @@
 and the method's arguments specify the return value.  If the object
 is omitted (by use of the function or listop forms), the innermost
 block is exited.  Otherwise you must use something like C<context>
-or C<$?BLOCK> or a contextual variable to specify the scope you
+or C<&?BLOCK> or a contextual variable to specify the scope you
 want to exit.  A label (such as a loop label) previously seen in
 the lexical scope also works as a kind of singleton context object:
 it names a statement that is serving both as an outer lexical scope

