From perl6-all-return-80471-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Apr 10 19:06:35 2007
Return-Path: <perl6-all-return-80471-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3AN6Y0I003025
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 10 Apr 2007 19:06:34 -0400
Received: (qmail 7742 invoked by uid 514); 10 Apr 2007 23:06:10 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 7735 invoked from network); 10 Apr 2007 23:06:10 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
From: Leopold Toetsch <lt@toetsch.at>
To: perl6-internals@perl.org
Subject: Re: modifying classes after they're instantiated
Date: Wed, 11 Apr 2007 01:05:44 +0200
User-Agent: KMail/1.9.1
Cc: Allison Randal <allison@perl.org>
References: <461C0EEF.1010107@perl.org>
In-Reply-To: <461C0EEF.1010107@perl.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704110105.44897.lt@toetsch.at>
X-Scan-Signature: e4c330cfbe6de8eefe77e4a947728bc1
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 923
Lines: 17

Am Mittwoch, 11. April 2007 00:25 schrieb Allison Randal:
> 3) Modify the core PMC implementation so it tracks information about
> which the different containers (registers, temporary variables,
> namespace entries, etc.) that hold a particular PMC, and which
> particular container was used to make the method call, so a method call
> can modify the variable it was called on. Disadvantage: This isn't a
> generally useful feature. (Not my favorite alternative.)

I'm just answering 3):
Another "container" might be (external) C code (incl. the C stack). You can't 
track that in above terms. This all boils down to the same implications 
imposed by the conservative GC. You can never be sure, it's a variable (e.g. 
integer looking like a mem addr) or just a real memory location you were 
tracking, which means: modifying adjacent (maybe inside the very PMC or not) 
memory regions could be disastrous.

leo - voting 4)

