From r-help-bounces@stat.math.ethz.ch  Thu May 24 17:25:00 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4OLOwqD010950
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 24 May 2007 17:24:59 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4OLONoS003505;
	Thu, 24 May 2007 23:24:34 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.2 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from gscamnlh02.wr.usgs.gov (gscamnlh02.wr.usgs.gov [130.118.9.69])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4OLNl4b003407
	for <r-help@stat.math.ethz.ch>; Thu, 24 May 2007 23:23:47 +0200
Received: from [130.118.68.221] ([130.118.68.221])
	by gscamnlh02.wr.usgs.gov (Lotus Domino Release 7.0.2FP1)
	with ESMTP id 2007052414234590-21400 ;
	Thu, 24 May 2007 14:23:45 -0700 
In-Reply-To: <40e66e0b0705241412m595f175dh6283d23928a89d23@mail.gmail.com>
References: <44238668-C614-45CD-90EF-98D6657346DC@usgs.gov>
	<40e66e0b0705241412m595f175dh6283d23928a89d23@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.3)
Message-Id: <AA3BBF53-0370-4AD7-8230-651DFBF3B813@usgs.gov>
From: Ken Nussear <knussear@usgs.gov>
Date: Thu, 24 May 2007 14:23:15 -0700
To: Spielas Bates <bates@stat.wisc.edu>
X-Mailer: Apple Mail (2.752.3)
X-MIMETrack: Itemize by SMTP Server on gscamnlh02/SERVER/USGS/DOI(Release
	7.0.2FP1|January 10, 2007) at 05/24/2007 02:23:45 PM,
	Serialize by Router on gscamnlh02/SERVER/USGS/DOI(Release
	7.0.2FP1|January 10, 2007) at 05/24/2007 02:23:47 PM,
	Serialize complete at 05/24/2007 02:23:47 PM
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Function to Sort and test AIC for mixed model lme?
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch


On May 24, 2007, at 2:12 PM, Spielas Bates wrote:

> On 5/24/07, Ken Nussear <knussear@usgs.gov> wrote:
>> > Ken Nussear <knussear <at> mac.com> writes:
>> >
>> > > I'm running a series of mixed models using lme, and I wonder if
>> > there
>> > > is a way to sort them by AIC prior to testing using anova
>> > > (lme1,lme2,lme3,....lme7) other than by hand.
>> >
>> > You can try something like the following. However, also consider
>> > using dropterm or stepAIC in MASS.
>> >
>> > Dieter
>> >
>> > #---------------------
>> >
>> > library(nlme)
>> > fmlist = vector("list",2)
>> > fmlist[[1]] = lme(distance ~ age, data = Orthodont,method="ML")
>> > fmlist[[2]] = lme(distance ~ age + Sex, data = Orthodont,   random
>> > = ~ 1,method="ML")
>> > aic0 = unlist(lapply(fmlist,AIC))
>> > aic0 # larger first
>> > fmlist1 = fmlist[order(aic0)]
>> > unlist(lapply(fmlist1,AIC)) # smaller first
>>
>> I looked at stepAIC, but wanted to specify my own models.
>>
>> I have come pretty close with this
>>
>> # grab all lme objects
>> tst1 <- ls(pat=".ml")
>>  > tst1
>> [1] "lme.T972way.ml"  "lme.T97FULL.ml"  "lme.T97NOINT.ml"
>> "lme.T97NULL.ml"  "lme.T97fc.ml"    "lme.T97min.ml"
>> [7] "lme.T97ns.ml"
>>
>> #create array of AIC for all in tst1
>> tst2 <- lapply(lapply(tst1,get),AIC)
>>  > tst2
>> [[1]]
>> [1] 507.0991
>>
>> [[2]]
>> [1] 508.7594
>>
>> [[3]]
>> [1] 564.8574
>>
>> [[4]]
>> [1] 624.3053
>>
>> [[5]]
>> [1] 502.5878
>>
>> [[6]]
>> [1] 569.8188
>>
>> [[7]]
>> [1] 504.8971
>>
>> #sort tst1 by order of tst2
>> tst3 <- tst1[order(unlist(tst2))]
>>
>>  > tst3
>> [1] "lme.T97fc.ml"    "lme.T97ns.ml"    "lme.T972way.ml"
>> "lme.T97FULL.ml"  "lme.T97NOINT.ml" "lme.T97min.ml"
>> [7] "lme.T97NULL.ml"
>>
>>
>> The problem comes with getting the final anova statement to run.
>>
>>  >anova(tst3)
>> Error in anova(tst3) : no applicable method for "anova"
>>
>> I also tried
>>
>> tst4 <- paste(toString(tst3),collapse="")
>>
>>  > tst4
>> [1] "lme.T97fc.ml, lme.T97ns.ml, lme.T972way.ml, lme.T97FULL.ml,
>> lme.T97NOINT.ml, lme.T97min.ml, lme.T97NULL.ml"
>>  >
>>  > anova(tst4)
>> Error in anova(tst4) : no applicable method for "anova"
>>
>> Any ideas on getting the last part to work?
>
>
> tst3 is a character vector of names so you would need to use
>
> do.call(anova, lapply(tst3, get))
>
> I think it is better to create a list of fitted models initially
> instead of working with names.  It would look something like this
> (this code is untested)
>
> tst2 <- lapply(tst1, get)
> names(tst2) <- tst1
> do.call(anova, tst2[order(unlist(lapply(tst2, AIC)))])



I get errors with each method that I'm not sure how to solve. Any Ideas?

Method 1

 > do.call(anova, lapply(tst3, get))
Error in `row.names<-.data.frame`(`*tmp*`, value = c("structure(list 
(modelStruct = structure(list(reStruct = structure(list(",  :
	invalid 'row.names' length


Method 2
 > names(tst2) <- tst1
 > tst2
$lme.T972way.ml
[1] 507.0991

$lme.T97FULL.ml
[1] 508.7594

$lme.T97NOINT.ml
[1] 564.8574

$lme.T97NULL.ml
[1] 624.3053

$lme.T97fc.ml
[1] 502.5878

$lme.T97min.ml
[1] 569.8188

$lme.T97ns.ml
[1] 504.8971

 > do.call(anova, tst2[order(unlist(lapply(tst2, AIC)))])
Error in logLik(object) : no applicable method for "logLik"
 >

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

