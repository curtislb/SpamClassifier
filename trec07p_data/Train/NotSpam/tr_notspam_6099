From r-help-bounces@stat.math.ethz.ch  Sun Apr 29 10:29:15 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3TETE6w001788
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 29 Apr 2007 10:29:15 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3TES9NC002601;
	Sun, 29 Apr 2007 16:28:22 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.2 required=5.0 tests=AWL, BAYES_50,
	FORGED_RCVD_HELO autolearn=no version=3.1.8
Received: from vscane-b.ucl.ac.uk (vscane-b.ucl.ac.uk [144.82.108.141])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3TES3jw002581
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Sun, 29 Apr 2007 16:28:03 +0200
Received: from 81-178-116-220.dsl.pipex.com ([81.178.116.220]
	helo=dhcppc2.my.nat.localnet)
	by vscane-b.ucl.ac.uk with esmtpsa (TLSv1:RC4-MD5:128) (Exim 4.60)
	(envelope-from <gavin.simpson@ucl.ac.uk>)
	id 1HiANb-0007nW-3r; Sun, 29 Apr 2007 15:27:59 +0100
From: Gavin Simpson <gavin.simpson@ucl.ac.uk>
To: Usman Shehu <ugulumbe@yahoo.co.uk>
In-Reply-To: <561391.47502.qm@web53105.mail.re2.yahoo.com>
References: <561391.47502.qm@web53105.mail.re2.yahoo.com>
Organization: ECRC, UCL Geography
Date: Sun, 29 Apr 2007 15:27:58 +0100
Message-Id: <1177856878.3134.26.camel@dhcppc2.my.nat.localnet>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.3 (2.2.3-4.fc4) 
X-UCL-MailScanner-Information: Please contact the UCL Helpdesk,
	helpdesk@ucl.ac.uk for more information
X-UCL-MailScanner: Found to be clean
X-UCL-MailScanner-From: gavin.simpson@ucl.ac.uk
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Too slow to execute!
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
Reply-To: gavin.simpson@ucl.ac.uk
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2460
Lines: 74

On Sun, 2007-04-29 at 06:56 -0700, Usman Shehu wrote:
> Greetings,
> I have the following simple function but what worries me is that it
> takes about  5 or more minutes to execute. My machine runs on windows
> with 1.8GHz and 256 Ram.
> > Re=NULL
> > for(i in 1:100000){
> + x=rnorm(20)
> + Re[i]=(x-2*10)/20
> + Re
> + }
> I would appreciate any help on how to make it faster.
> 
> Usman

It is not clear exactly what you want to do, but taking what you wrote
literally, there are 3 problems that I see:

     1. You haven't allocated sufficient storage space for 'Re'. As
        such, at each loop, R has to copy and enlarge the object which
        take a all the time.
     2. The result of (x-2*10)/20 is a vector of length 20, which you
        are trying to force into the space for a vector of length 1
     3. In a loop like this, the last line containing just 'Re' does
        nothing. If you want 'Re' printed to the console, then you need
        to wrap it in print. Quite why you'd want 'Re' flashing up on
        the screen 100 000 times is beyond me...

Fixing each of these gives:

## number of permutations
n.perm <- 100000
## storage space for a 100 000 x 20 matrix
Re <- matrix(ncol = 20, nrow = n.perm)
## set up loop
for(i in seq_len(n.perm)) {
   x <- rnorm(20)
   ## store in a row of Re
   Re[i,] <- (x-2*10)/20
}

Timing this shows that it runs in 3.5 seconds on my desktop - which has
similar processor but a lot more RAM:

> system.time({
+ n.perm <- 100000
+ Re <- matrix(ncol = 20, nrow = n.perm)
+ for(i in seq_len(n.perm)) {
+    x <- rnorm(20)
+    Re[i,] <- (x-2*10)/20
+ }
+ })
   user  system elapsed
  3.336   0.056   3.394

HTH

G
-- 
%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%
Gavin Simpson                     [t] +44 (0)20 7679 0522
ECRC                              [f] +44 (0)20 7679 0565
UCL Department of Geography
Pearson Building                  [e] gavin.simpsonATNOSPAMucl.ac.uk
Gower Street
London, UK                        [w] http://www.ucl.ac.uk/~ucfagls/
WC1E 6BT                          [w] http://www.freshwaters.org.uk/
%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%~%

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

