From beginners-return-91507-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 10 11:17:59 2007
Return-Path: <beginners-return-91507-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4AFHvqD010936
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 10 May 2007 11:17:58 -0400
Received: (qmail 22519 invoked by uid 514); 10 May 2007 15:17:50 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 22509 invoked from network); 10 May 2007 15:17:50 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 May 2007 15:17:50 -0000
Received: (qmail 6409 invoked by uid 225); 10 May 2007 15:17:49 -0000
Delivered-To: beginners@perl.org
Received: (qmail 6397 invoked by alias); 10 May 2007 15:17:49 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.230 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.230)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 10 May 2007 08:14:04 -0700
Received: by nz-out-0506.google.com with SMTP id 12so592461nzp
        for <beginners@perl.org>; Thu, 10 May 2007 08:13:27 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=p0VIbuMFXc8SYrqwKV1k9+xZGM/Sty6ikVC110yK51YtDAzeockxRsanw1IcrGJtiSUCQ1eAaLmktBitMs0YP7Rr3t74YMbthl7crWyUvggSYU0eu3y/k/YCjCX6xZSuyyHbtOe3anRrn7+cWllanVss+Rja6eq0fNnUlres6vs=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=md+QyW+OYfdNw1vXSHzi7D9nutG9p48osjRtqg/88Go21CB5Gwc5HSmJwzPTgZ21wjDvKj9QXTa9Q7S+IpQMZl5NJZRU2sHmdmnkeAyPCByPE5WmloEowHtc0vKAtfumVGo3xS5gI0tsDpCLrktU97tg9zTc31CPLhRXx4pHHY0=
Received: by 10.114.205.1 with SMTP id c1mr553657wag.1178810007162;
        Thu, 10 May 2007 08:13:27 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Thu, 10 May 2007 08:13:27 -0700 (PDT)
Message-ID: <58ce48dc0705100813x74f3e7c6i9f617dc71078fafa@mail.gmail.com>
Date: Thu, 10 May 2007 11:13:27 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Nisse Tuta" <nissetuta@gmail.com>
Subject: Re: complex sort
Cc: beginners@perl.org
In-Reply-To: <463F97F8.8070508@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <463F97F8.8070508@gmail.com>

On 5/7/07, Nisse Tuta <nissetuta@gmail.com> wrote:
> Hi All,
>
> I am having big problems solving this sorting issue and would really
> appreciate any help on this.
>
> I have a list with each row containing 3 numbers(Run In Out).
>
> For example,
> R01 13 19
> R01 25 30
> R01 23 47
> R01 2 14
> R02 2 45
> R02 55 60
> R01 1 17
> R03 45 66
> R03 20 35
> and so on......
>
> I would like to go through these and check for any overlapping numbers
> at both In and Out and replacing either the in out or both if
> overlapped. And any cuts/breaks in each run will add a count.
>
> To create a list like
>
> Run Count In Out
> R01 1 1 19
> 2 25 47
> R02 1 2 45
> 2 55 60
>
snip

If I understand correctly then R03 should look like

R03 1 20 35
2 45 46

The sort itself isn't that bad; you are just sorting on three columns,
column 1 first, column 2 second, and column 3 last:

my @sorted = sort {
        $a->[0] cmp $b->[0] or #sort on run, if equal then
        $a->[1] <=> $b->[1] or #sort on in, if equal then
        $a->[2] <=> $b->[2]    #sort on out
} @input;

But that doesn't solve your problem.  You then need to loop over the
sorted values and compress the runs.  Note, if you write the code that
transforms the data correctly, it is not necessary to sort it first,
but it does make it easier.

#!/usr/bin/perl

use strict;
use warnings;

my @input = (
        [ qw(R01 13 19) ],
        [ qw(R01 25 30) ],
        [ qw(R01 23 47) ],
        [ qw(R01  2 14) ],
        [ qw(R02  2 45) ],
        [ qw(R02 55 60) ],
        [ qw(R01  1 17) ],
        [ qw(R03 45 66) ],
        [ qw(R03 20 35) ],
);

my @sorted = sort {
        $a->[0] cmp $b->[0] or #sort on run, if equal then
        $a->[1] <=> $b->[1] or #sort on in, if equal then
        $a->[2] <=> $b->[2]    #sort on out
} @input;

#printf "%s %3d %3d\n", @$_ for @sorted;

my %output;
ROW:
for my $row (@sorted) {
        my ($runname, $in, $out) = @$row;
        for my $run (@{$output{$runname}}) {
                if ($in < $run->[2]) {
                        if ($out > $run->[2]) {
                                $run->[2] = $out;
                        }
                        next ROW;
                }
        }
        push @{$output{$runname}}, $row;
}

for my $runname (sort keys %output) {
        print "$runname ";
        my $i   = 0;
        for my $run (@{$output{$runname}}) {
                $i++;
                printf "$i %3d %3d\n", @{$run}[1,2];
        }
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


