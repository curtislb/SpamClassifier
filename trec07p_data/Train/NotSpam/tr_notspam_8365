From r-help-bounces@stat.math.ethz.ch  Mon May  7 19:44:48 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l47NilqD004675
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 7 May 2007 19:44:47 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l47NhGZ5015254;
	Tue, 8 May 2007 01:43:33 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=BAYES_60 autolearn=no
	version=3.1.8
Received: from sccrmhc14.comcast.net (sccrmhc14.comcast.net [204.127.200.84])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l47Nh9QA015229
	for <r-help@stat.math.ethz.ch>; Tue, 8 May 2007 01:43:09 +0200
Received: from comcast.net (c-24-4-100-88.hsd1.ca.comcast.net[24.4.100.88])
	by comcast.net (sccrmhc14) with SMTP
	id <200705072343070140028esee>; Mon, 7 May 2007 23:43:07 +0000
Message-ID: <463FB989.4060306@comcast.net>
Date: Mon, 07 May 2007 16:43:05 -0700
From: Misha <iamisha1@comcast.net>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US;
	rv:1.0.1) Gecko/20020823 Netscape/7.0
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: r-help@stat.math.ethz.ch
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: [R] Analyzing "Stacked" Time Series
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="windows-1252"
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l47NilqD004675

I have a question about pooling or "stacking" several time series 
“samples” (sorry in advance for the long, possibly confusing, message). 
   I'm sure I'm revealing far more ignorance than I'm aware of, but 
that's why I'm sending this...

[Example at bottom]

I have regional migration flows (“samples”) from, say, regions A to B, A 
to C, B to A, …., C to B (Noted as xIJ in my example).  Each of these is 
a time series, but I want to use R’s time series tools to fit an ARIMA 
(or ARMA) model along with some independent variables (Noted as YIJ, 
ZIJ, where Y and Z are characteristics (e.g., per capita GDP), I 
indicates the region, and J in {O, D} indicates whether it is the origin 
or destination region).

I can do this easily enough for a single flow, say from A to B.  But 
what if I want to find one set of coefficients for all of the flows?

While I can construct vectors that look like what I think they should, I 
can’t figure out how to coerce them into being “stacked” time series, 
with the time indices repeating through each vector 
(t=1,...t=10,t=1,...,t=10,...,t=1,...t=10).  And since I can’t even 
figure out how to do this (or whether it is possible/sensible), I 
certainly can’t use R’s time series packages on this “stacked” time series.

For  my example (below), it’s easy enough to do something like,

fit1 <- lm(X ~ YO + YD + ZO + ZD)

But anything involving lags is not correct, since it seems—at best—to be 
treating my “stacked” time series (i.e., 6 series of length 10) as one 
series of length 60.   For example, these give questionable, if any, output.

arima1 <- arima(X, order = c(1, 0, 0))
fit.gls001 <- gls(X ~ YO + YD + ZO + ZD,
		correlation = corARMA(p = 2), method = "ML")

fit.gls002 <- gls(X ~ YO + YD + ZO + ZD +
		lag(YO) + lag(YD) + lag(ZO) + lag(ZD),
		correlation = corARMA(p = 1), method = "ML")
ar001 <- ar.ols(cbin(X, YO, YD, ZO, ZD))

Here is my example:

xAB <- as.ts(round(rnorm(10, 0, 1), 2), start = c(1990, 1))
xAC <- as.ts(round(rnorm(10, 0, 1), 2), start = c(1990, 1))
xBA <- as.ts(round(rnorm(10, .75, 1.5), 2), start = c(1990, 1))
xBC <- as.ts(round(rnorm(10, .25, 1.9), 2), start = c(1990, 1))
xCA <- as.ts(round(rnorm(10, 1.5, 2.2), 2), start = c(1990, 1))
xCB <- as.ts(round(rnorm(10, .5, 0.8), 2), start = c(1990, 1))
yA <- as.ts(round(rnorm(10, -0.2, 0.3), 2), start = c(1990, 1))
yB <- as.ts(round(runif(10, -1, 1), 2), start = c(1990, 1))
yC <- as.ts(round(runif(10, -1, 1), 2), start = c(1990, 1))
zA <- as.ts(round(rnorm(10, -1.5, 2), 2), start = c(1990, 1))
zB <- as.ts(round(rnorm(10, 0, 0.5), 2), start = c(1990, 1))
zC <- as.ts(round(runif(10, 0, 0.5), 2), start = c(1990, 1))

Orig <- c(1, 1, 2, 2, 3, 3)
Dest <- c(2, 3, 1, 3, 1, 2)
Xt <- cbind(xAB, xAC, xBA, xBC, xCA, xCB)
Yt <- cbind(yA, yB, yC)
Zt <- cbind(zA, zB, zC)

X <- vector()
for(i in 1:ncol(Xt)){
	X <- append(X, Xt[,i])
	}
YO <- vector()
for(i in 1:length(Orig)){
	YO <- append(YO, Yt[,Orig[i]])
	}
ZO <- vector()
for(i in 1:length(Orig)){
	ZO <- append(ZO, Zt[,Orig[i]])
	}
YD <- vector()
for(i in 1:length(Dest)){
	YD <- append(YD, Yt[,Dest[i]])
	}
ZD <- vector()
for(i in 1:length(Dest)){
	ZD <- append(ZD, Zt[,Dest[i]])
	}
Many thanks is advance!

Misha

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

