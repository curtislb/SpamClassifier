From r-help-bounces@stat.math.ethz.ch  Wed Apr 11 09:36:03 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3BDa10I017238
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 11 Apr 2007 09:36:02 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3BDYdSs018975;
	Wed, 11 Apr 2007 15:34:54 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from yankee2.campus.hanover.edu (newmail.hanover.edu
	[192.200.129.191])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3BDJPDh012523
	for <r-help@stat.math.ethz.ch>; Wed, 11 Apr 2007 15:19:34 +0200
Received: from [10.10.250.2] ([10.10.250.2]) by yankee2.campus.hanover.edu
	with Microsoft SMTPSVC(6.0.3790.1830); 
	Wed, 11 Apr 2007 09:19:56 -0400
In-Reply-To: <9937981.post@talk.nabble.com>
References: <9929835.post@talk.nabble.com>
	<Pine.LNX.4.64.0704110636130.16622@gannet.stats.ox.ac.uk>
	<9937981.post@talk.nabble.com>
Mime-Version: 1.0 (Apple Message framework v752.2)
Message-Id: <883209E6-F1AD-4115-831F-0756B1958F16@hanover.edu>
From: Charilaos Skiadas <skiadas@hanover.edu>
Date: Wed, 11 Apr 2007 09:19:21 -0400
To: yoooooo <magno_yu@ml.com>
X-Mailer: Apple Mail (2.752.2)
X-OriginalArrivalTime: 11 Apr 2007 13:19:56.0375 (UTC)
	FILETIME=[19109E70:01C77C3C]
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
X-MIME-Autoconverted: from quoted-printable to 8bit by hypatia.math.ethz.ch id
	l3BDJPDh012523
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Memory management
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="windows-1252"
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by speedy.uwaterloo.ca id l3BDa10I017238
Status: O
Content-Length: 2521
Lines: 71

Before you go down that road, I would recommend first seeing if it is  
really a problem. Premature code optimization is in my opinion never  
a good idea.

Also, reading the Details on ?attach you will find this:

	The database is not actually attached. Rather, a new environment is  
created on the search path and the elements of a list (including  
columns of a data frame) or objects in a save file or an environment  
are copied into the new environment. If you use <<- or assign to  
assign to an attached database, you only alter the attached copy, not  
the original object. (Normal assignment will place a modified version  
in the user's workspace: see the examples.) For this reason attach  
can lead to confusion.

So in fact it is the attaching that has to do copying, not the other  
way around.

As for references, perhaps there is a better one, but searching for  
"pass" in "Writing R Extensions" I found the following on page 41:

	Some memory allocation is obvious in interpreted code, for example,
y <- x + 1
allocates memory for a new vector y. Other memory allocation is less  
obvious and occurs because
R is forced to make good on its promise of ‘call-by-value’ argument  
passing. When an argument
is passed to a function it is not immediately copied. Copying occurs  
(if necessary) only when
the argument is modified. This can lead to surprising memory use.

Perhaps a better source, section 4.3.3 of "The R language  
definition", on Argument Evaluation.


On Apr 11, 2007, at 8:25 AM, yoooooo wrote:

>
> I guess I have more reading to do.... Are there any website that I  
> can read
> up on memory management, or specifically what happen when we 'pass in'
> variables, which strategy is better at which situation?
>
> Thanks~
> - yoooooooo
>
>>
>> On Tue, 10 Apr 2007, yoooooo wrote:
>>
>>>
>>> Hi all, I'm just curious how memory management works in R... I  
>>> need to
>>> run an
>>> optimization that keeps calling the same function with a large  
>>> set of
>>> parameters... so then I start to wonder if it's better if I  
>>> attach the
>>> variables first vs passing them in (coz that involves a lot of  
>>> copying..
>>> )
>>

Haris Skiadas
Department of Mathematics and Computer Science
Hanover College

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

