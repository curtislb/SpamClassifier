From beginners-return-91279-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 13:52:43 2007
Return-Path: <beginners-return-91279-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l42Hqfb9025159
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 13:52:42 -0400
Received: (qmail 29312 invoked by uid 514); 2 May 2007 17:52:36 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 29303 invoked from network); 2 May 2007 17:52:35 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 May 2007 17:52:35 -0000
Received: (qmail 10772 invoked by uid 225); 2 May 2007 17:52:35 -0000
Delivered-To: beginners@perl.org
Received: (qmail 10761 invoked by alias); 2 May 2007 17:52:34 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.239 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.239)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 10:51:14 -0700
Received: by wr-out-0506.google.com with SMTP id 57so213350wri
        for <beginners@perl.org>; Wed, 02 May 2007 10:51:09 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=P8CkWSa+ty9ecB04+wjZro5DArokUlr03aJYxmFVaSCdNj9IbM+GlU07goAkmzIPasqmkpov9fTp7AXq5CiMFt3PVoQpbbF6OvwYm2891j2k1VOYiAMgKvA2Lt/aD/TqctEHSGbJCuYSsY9t5DY3UTnhzeomzFcEdyhsDWtryFI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=UVQlQQI8JQ0zztDL9hB/wFwiYY9yp8V7rhIInRyROzknCtvU6f9nRR6eJhQ2KM/0oK3C+8EYkBs9o32szT8F1zaOGmFCGvP7XkhrOIU/YOwWP7691m5ihaCoi9CdhuAlXYm9DAm8Og5sKr4nCtymVIemb26aNZ33mryUW6Ouf+s=
Received: by 10.115.48.12 with SMTP id a12mr311431wak.1178128268966;
        Wed, 02 May 2007 10:51:08 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Wed, 2 May 2007 10:51:08 -0700 (PDT)
Message-ID: <58ce48dc0705021051m272ca25eg96f3bcf35a580855@mail.gmail.com>
Date: Wed, 2 May 2007 13:51:08 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "jbuburuz@sce.carleton.ca" <jbuburuz@sce.carleton.ca>
Subject: Re: crypt() and /etc/shadow entries do not match?
Cc: beginners@perl.org
In-Reply-To: <58ce48dc0705021046h3df974b0s440c634f1f161fa4@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <61268.134.117.60.110.1178124981.squirrel@webmail.sce.carleton.ca>
	 <58ce48dc0705021038p6df91e01s5f52c02218ba498@mail.gmail.com>
	 <58ce48dc0705021046h3df974b0s440c634f1f161fa4@mail.gmail.com>

On 5/2/07, Chas Owens <chas.owens@gmail.com> wrote:
> On 5/2/07, Chas Owens <chas.owens@gmail.com> wrote:
> > On 5/2/07, jbuburuz@sce.carleton.ca <jbuburuz@sce.carleton.ca> wrote:
> > snip
> > > I have tested crypt() on debian, and redhat. Same problems. The has values
> > > do not match each other.
> > snip
> >
> > It looks like your /etc/shadow file is not using crypt to store the
> > passwords on that system.
> >
> > from man shadow
> >        The password field must be filled. The encrypted password consists of
> >        13 to 24 characters from the 64 character alphabet a thru z, A thru Z,
> >        0 thru 9, \. and /. Optionally it can start with a "$" character. This
> >        means the encrypted password was generated using another (not DES)
> >        algorithm. For example if it starts with "$1$" it means the MD5-based
> >        algorithm was used.
> >
>
> Nevermind, John's email is the one you should pay attention to
>
The relevant doc is perldoc -f crypt:
               When verifying an existing digest string you should use the
               digest as the salt (like "crypt($plain, $digest) eq $digest").
               The SALT used to create the digest is visible as part of the
               digest.  This ensures crypt() will hash the new string with the
               same salt as the digest.  This allows your code to work with
               the standard crypt and with more exotic implementations.  In
               other words, do not assume anything about the returned string
               itself, or how many bytes in the digest matter.

               Traditionally the result is a string of 13 bytes: two first
               bytes of the salt, followed by 11 bytes from the set
               "[./0-9A-Za-z]", and only the first eight bytes of the digest
               string mattered, but alternative hashing schemes (like MD5),
               higher level security schemes (like C2), and implementations on
               non-UNIX platforms may produce different strings.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


