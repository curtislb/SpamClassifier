From beginners-return-92715-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun 24 00:53:39 2007
Return-Path: <beginners-return-92715-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5O4rcL9027640
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 24 Jun 2007 00:53:38 -0400
Received: (qmail 11432 invoked by uid 514); 24 Jun 2007 04:53:30 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 11423 invoked from network); 24 Jun 2007 04:53:30 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 24 Jun 2007 04:53:30 -0000
Received: (qmail 30634 invoked by uid 225); 24 Jun 2007 04:53:30 -0000
Delivered-To: beginners@perl.org
Received: (qmail 30627 invoked by alias); 24 Jun 2007 04:53:29 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 199.185.220.222 as permitted sender)
Received: from outbound03.telus.net (HELO outbound03.telus.net) (199.185.220.222)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 23 Jun 2007 21:53:27 -0700
Received: from priv-edtnaa05.telusplanet.net ([154.20.131.28])
          by priv-edtnes79.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070624045323.CAJA11500.priv-edtnes79.telusplanet.net@priv-edtnaa05.telusplanet.net>
          for <beginners@perl.org>; Sat, 23 Jun 2007 22:53:23 -0600
Received: from [154.20.131.28] (d154-20-131-28.bchsia.telus.net [154.20.131.28])
	by priv-edtnaa05.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id B9QV8QJFWL
	for <beginners@perl.org>; Sat, 23 Jun 2007 22:53:23 -0600 (MDT)
Message-ID: <467DF8C3.90803@telus.net>
Date: Sat, 23 Jun 2007 21:53:23 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Thunderbird 1.5.0.12 (X11/20070604)
MIME-Version: 1.0
To: Perl beginners <beginners@perl.org>
Subject: Re: grep from one file and write to another
References: <a3bd4fe00706231903k6cd592e3t9bbffaecd15c5996@mail.gmail.com>
In-Reply-To: <a3bd4fe00706231903k6cd592e3t9bbffaecd15c5996@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Vahid Moghaddasi wrote:
> Hi all,

Hello,

> I am trying to read a colon delimited text file (filter.in) then
> search for each field in another file (/etc/passwd) and if it is found
> then write that line in the third file (passwd.out). Here is what I
> have written so far but it is not given me the correct result. Thanks
> for any help.
> 
> 
> #!/bin/perl
> #
> # the format of filter.in is user1:user2:user3:user4:
> #
> use File::Copy;
> use strict;
> use warnings;
> $|=1;           # flush output buffer
> open (FILTERfh, "< filter.in") || die "Can not open filter.in: $!\n";
> open PASSWDfh, '</etc/passwd' or die "Can not open the file: $!\n";
> open PASSWDFILfh, ">passwd.out";
> while (<FILTERfh>) {
> chomp;
> my @input = split /:/, $_;
>    for (my $user = 1; $user <= $#input ; $user++) {
>        print "$input[$user] is being added.\n";
>        while (<PASSWDfh>) {
>                my %seen;
>                next if (m/^#/);        # Skip comments
>                next if (m/^\s*$/);     # Skip blank lines
>                my ($field1) = /([^:]+)/;
> #      print PASSWDFILfh $_ unless $seen{$field1} or warn
> #      "WARNING: User $input[$user] does not exist!\n";
>      print PASSWDFILfh $_ unless $input[$user] or warn
>      "WARNING: User $input[$user] does not exist!\n";
> # print PASSWDFILfh $_ if("$field1" eq "$input[$user]");
> #        print PASSWDFILfh $_ if( grep(/$field1:/, $_ )) or warn
> "WARNING: User $input[$user] does not exist!\n";
>     } # while
> } # for
> } # while
> close FILTERfh;
> close PASSWDFILfh;
> close PASSWDfh;

Something like this should work:

#!/bin/perl
#
# the format of filter.in is user1:user2:user3:user4:
#
use strict;
use warnings;

open FILTERfh,    '<', 'filter.in'  or die "Can not open filter.in: $!\n";
open PASSWDFILfh, '>', 'passwd.out' or die "Can not open passwd.out: $!\n";

while ( <FILTERfh> ) {
     chomp;
     my @input = split /:/;
     for ( @input ) {
         if ( getpwnam $_ ) {
             print PASSWDFILfh $_;
             }
         else {
             warn "WARNING: User $_ does not exist!\n";
             }
         }
     }

close FILTERfh;
close PASSWDFILfh;




John
-- 
Perl isn't a toolbox, but a small machine shop where you
can special-order certain sorts of tools at low cost and
in short order.                            -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


