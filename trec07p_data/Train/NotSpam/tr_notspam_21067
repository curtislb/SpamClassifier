From perl6-all-return-82162-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 21:41:55 2007
Return-Path: <perl6-all-return-82162-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5L1ftL9017244
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 21:41:55 -0400
Received: (qmail 24482 invoked by uid 514); 21 Jun 2007 01:41:52 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 24476 invoked from network); 21 Jun 2007 01:41:52 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <18041.55084.546995.290540@rgrjr.dyndns.org>
Date: Wed, 20 Jun 2007 21:41:00 -0400
From: Bob Rogers <rogers-perl6@rgrjr.dyndns.org>
To: Jonathan Worthington <jonathan@jnthn.net>,
   "Patrick R. Michaud" <pmichaud@pobox.com>
CC: parrot-porters@perl.org
Subject: Re: pdd15 - How do I add a class method?
In-Reply-To: <4679B29C.3010407@jnthn.net>
References: <20070619195846.GA16042@host.pmichaud.com>
	<4679B29C.3010407@jnthn.net>
X-Mailer: VM 7.19 under Emacs 22.1.50.1
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,RCVD_IN_PBL,RCVD_IN_SORBS_DUL,RDNS_DYNAMIC,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

   From: Jonathan Worthington <jonathan@jnthn.net>
   Date: Thu, 21 Jun 2007 00:05:00 +0100

   Hi,

   Patrick R. Michaud wrote:
   > My first question is "How do I add a class method?" -- i.e.,
   > a method that operates on a class instance as opposed
   > to an object instance of that class . . .

A method that operates on a class instance would be an instance method
of the class metaclass, wouldn't it?  But I think you meant "on a
*particular* class [metaclass] instance", am I right?

   . . .

   How about writing the method without the :method modifier, but also 
   addmethod'ing it to the class? Then it will be found by find_method, but 
   won't think the first parameter is an invocant. Something here doesn't 
   feel quite right to me, though I'm tired and can't put my finger on what.

   Jonathan

But in order to be able to use class attributes, you would want the
invocant to be the class metaclass instance, wouldn't you?

   If so, then I think this should be handled by a mechanism for
defining a method on a particular object, which is useful for more than
just metaclasses.  I know of only two ways to define a method particular
to an instance X (though this may say something about my lack of breadth
in the language department):

   1.  In Ruby, the class of X is transparently subclassed into a
"virtual" class that becomes the class of X only, and the method is
defined (and dispatched) normally on the virtual class.

   2.  In Common Lisp, on can define a method for the object X, and this
is handled by the dispatch machinery.

   Since the consequences of these strategies are visible to the
programmer ("foo.class" in Ruby returns something different after
"def foo.meth . . .", but the class remains unchanged in Lisp), it seems
like our hands are tied; both must be implemented in order to support
both languages.  But it's not clear to me that either needs to be in the
core, nor which one would make the better default.

   Does anyone know of other strategies?  For other languages with
metaobjects (and, again, I confess I am not familiar with any), how do
they do it?

					-- Bob Rogers
					   http://rgrjr.dyndns.org/

