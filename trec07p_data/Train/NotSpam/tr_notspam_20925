From beginners-return-92592-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 20 13:03:35 2007
Return-Path: <beginners-return-92592-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5KH3YL9012653
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 20 Jun 2007 13:03:35 -0400
Received: (qmail 12497 invoked by uid 514); 20 Jun 2007 17:03:27 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 12488 invoked from network); 20 Jun 2007 17:03:27 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Jun 2007 17:03:27 -0000
Received: (qmail 7754 invoked by uid 225); 20 Jun 2007 17:03:27 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7743 invoked by alias); 20 Jun 2007 17:03:25 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.233 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.233)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 20 Jun 2007 10:03:22 -0700
Received: by nz-out-0506.google.com with SMTP id x7so267612nzc
        for <beginners@perl.org>; Wed, 20 Jun 2007 10:03:18 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=f2RuXieDXFlzDewoZIVDYHqJn/adB0amlWaNeL5tpc2yowrp1qwT2yYLrBHlprZE0yAQvIXtX3FXTtQBcU+O10fN/DrVItafWmM0jewbqwRzZJWH5bj3imuERUwCFL36Lr4yFw84v9u+pBzYnFcZ6cnMUzR/DUhV6BHtrNBQMiw=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=m6YYZU7d3EucHrz9WaDNiG2e7cbIvQEH3iHZZiq85QOaM7K7326Hp3sBd8PM71zNgDEQ3hHFLmt+1oAoj9JmFdSL2vlVPJY3iBBHm/LSE/ralD6xeuKSiZYb8VPDhNy7Fs+ZyvGZ7Vp4+WrIWy2fZZC2QkfCcdIuOFoTnA1t9+E=
Received: by 10.114.24.1 with SMTP id 1mr516811wax.1182358997262;
        Wed, 20 Jun 2007 10:03:17 -0700 (PDT)
Received: by 10.114.102.6 with HTTP; Wed, 20 Jun 2007 10:03:17 -0700 (PDT)
Message-ID: <58ce48dc0706201003kc7b15fcnc35bc47fec2dca80@mail.gmail.com>
Date: Wed, 20 Jun 2007 13:03:17 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: oryann9 <oryann9@yahoo.com>
Subject: Re: Simple Encryption - what function/module could I use?
Cc: "Perl List" <beginners@perl.org>
In-Reply-To: <687155.22481.qm@web63410.mail.re1.yahoo.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <ca5781c80706200758t36509321ge3cb7bf5b62d5e1c@mail.gmail.com>
	 <687155.22481.qm@web63410.mail.re1.yahoo.com>

On 6/20/07, oryann9 <oryann9@yahoo.com> wrote:
snip
> > > my $plaintext = do { local $/ = undef; <> };
> > > my $pad = "X" x length $plaintext;
> > >
> > > my $encryptedtext = $plaintext      ^ $pad;
snip
> I like it to, but dont understand how it is
> encrypting.
> Will you kindly expalin?

$plaintext is the contents of the file(s) passed in on the commandline
(or stdin if none are passed in).

$pad is the character X repeated until there are as many Xs as
characters in $plaintext

$encryptedtext is the result of xor'ing $plaintext with pad.

xor has the following truth table
A B R
0 0 0
0 1 1
1 0 1
1 1 0

so if I have 01101100 and I xor it with 01110001 I get 00011101.  This
is the "encrypted value".  If I xor the result 00011101 with the key
01110001 I get the original value back.

01101100 plaintext
01110001 key
00011101 "encrypted"

00011101 "encrypted"
01110001 key
01101100 plaintext

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


