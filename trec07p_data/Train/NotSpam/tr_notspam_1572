From perl6-all-return-80559-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 13 18:17:36 2007
Return-Path: <perl6-all-return-80559-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3DMHa0I027596
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 18:17:36 -0400
Received: (qmail 368 invoked by uid 514); 13 Apr 2007 22:17:11 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 363 invoked from network); 13 Apr 2007 22:17:11 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of lrpalmer@gmail.com designates 64.233.184.224 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=gHesfL9CvV5Iu49yzDd7gsmlpLhT/ENaWql5ZK+W6vv8iuA1FwNVwfBHU1l2V3cJYxFnF0n835bKHgp1d3tNfL4CoFtBnraQb2ffVTokwP95csch7WL48iecb2WrxcbRIQO/uazW+g8meLMvwbzzAQy/x5vvUgv5K3yqf43hgJI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=PHEtaqJaXSTelBtngXcR+Tmm8Sf6vhscgf6KqvjYF3Q8M01P4g5l2ATp2Bun0KhJz+xG8VUx+FRaf3c5opm7rdmCV2glRg0Hu4yvf+Qv1FzcP0hNJEShzu8FyTecY1465T3FkKO0mmlTH5njxqkhvStirY7ZtPLb8KXGkzQ0Nac=
Message-ID: <7ca3f0160704131516r33b46354m912ad955539e3acc@mail.gmail.com>
Date: Fri, 13 Apr 2007 16:16:54 -0600
From: "Luke Palmer" <lrpalmer@gmail.com>
To: "brian d foy" <brian.d.foy@gmail.com>
Subject: Re: File test operators as Pairs
Cc: perl6-language@perl.org
In-Reply-To: <130420071657496270%brian.d.foy@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <130420071657496270%brian.d.foy@gmail.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
Status: O
Content-Length: 1761
Lines: 41

On 4/13/07, brian d foy <brian.d.foy@gmail.com> wrote:
> Which then makes me think I'd want to do something a bit wacky to see
> if the modtime is greater than 5:
>
>
>    "doc" ~~ M => any( 5 ..* );

Or even "doc" ~~ M => (5..*).  Then again, ("doc" ~~ :M) ~~ 5..* does
the same thing, without having to have pattern matching in two
different places.

It seems like the pairness of the pair is pretty useless in this case;
i.e. it's a hack to fudge Lisp- or Ruby-style symbols.  But symbols
would be a hack in this case, too.

These things are methods, and I'm not sure why we've crammed them into
smart match. Things like :M have nothing to do with matching. What
would it mean if smart match returned false?  "This file has not been
modified ever"?  :e has a bit more merit for a smart match, but the
operation has little to do with the concept of a string or the pair e
=> 1.

I'm inclined to say that the best solution for filetests is to throw
out our dwimmery altogether.  Back in Perl 4 days, using "stat"
explicitly was awkward, because you had to use it as a list and
memorize the positions of all the returns.  -s $file beats the heck
out of (stat $file)[7], for sure.  It also had the benefit that shell
people would instantly recognize what's going on.

However, now we have stat($file).size.  With that, every programmer
will recognize what's going on, not just people with shell background.
 And I don't think even people with a shell background will know what
($file ~~ :s) means (their guess could be right, but they'd have to
look it up to confirm, and they would never think to *write* such a
thing).

I can never remember whether mtime is -m or -M anyway...

Let's get rid of all the filetest magic, in favor of using stat explicitly.

Luke

