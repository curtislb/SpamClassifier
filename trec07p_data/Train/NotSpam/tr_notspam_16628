From beginners-return-92167-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun  5 14:35:14 2007
Return-Path: <beginners-return-92167-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l55IZDhB012448
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 5 Jun 2007 14:35:13 -0400
Received: (qmail 23979 invoked by uid 514); 5 Jun 2007 18:35:02 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 23970 invoked from network); 5 Jun 2007 18:35:02 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 5 Jun 2007 18:35:02 -0000
Received: (qmail 14286 invoked by uid 225); 5 Jun 2007 18:35:02 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14269 invoked by alias); 5 Jun 2007 18:35:01 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.180 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.180)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 05 Jun 2007 11:34:54 -0700
Received: by wa-out-1112.google.com with SMTP id v27so2512389wah
        for <beginners@perl.org>; Tue, 05 Jun 2007 11:34:50 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=s8ppEJDzNwn5n3nv8HLeZT9oDIEJZRHocCqU4/6qHhkjxA0S4iGW314CWo8/7zhT+Deiz4qYbkOjyqq/z5Xvfv1APLPiaP+WuH4tMFKe38uzTVyj9aHmKwUJXTLfhC9LdM/xuhkl8rj/c7vz2skQyWhZER906b0hUoBq4Vu73cQ=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=K9nr+GDPT3wSTaJGdo59AFfMAEDvSUPZJJypRDG4Dc6yyw4BMpNp8VWZBx1wMfh5j//mI9CbRW1wj3uy9Q1YYlS7FfxfMe3SwimxmsRSEGbZFhebXG8FZlBVNOiu2i0/6sb5OmIcDGp2UmMjw3NkNG+PziJng6YF3h+tiFoZKpo=
Received: by 10.114.126.1 with SMTP id y1mr6270521wac.1181068489295;
        Tue, 05 Jun 2007 11:34:49 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Tue, 5 Jun 2007 11:34:49 -0700 (PDT)
Message-ID: <58ce48dc0706051134w66ed0a50s101b93c47f594429@mail.gmail.com>
Date: Tue, 5 Jun 2007 14:34:49 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Brad Baxter" <baxter.brad@gmail.com>
Subject: Re: Passing arguments to subroutine
Cc: beginners@perl.org
In-Reply-To: <1181057185.460896.5650@g4g2000hsf.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1180600046.701654.45930@j4g2000prf.googlegroups.com>
	 <ca5781c80705310715id79bf45p4f24c332b140c225@mail.gmail.com>
	 <1180634334.534436.293150@q75g2000hsh.googlegroups.com>
	 <58ce48dc0706010658u3ce21047s45b46667b22839d@mail.gmail.com>
	 <1181057185.460896.5650@g4g2000hsf.googlegroups.com>

On 6/5/07, Brad Baxter <baxter.brad@gmail.com> wrote:
snip
> Apparently, unlike with named subs, both &$anon()
> and $anon->() ignore prototypes.  However, like named
> subs &$anon gets the caller's @_.  But that is almost
> never mentioned afaict at the places in the docs where
> the &$anon style call is used.
>
> This isn't intended to be a criticism; I just wonder if some
> small number of newcomers reading the docs might
> be picking up calling habits from this.
snip

Yet another reason to avoid Perl 5 prototypes (they don't survive the
sub being turned into a reference).  Happily Perl 6 fixes this

pugs> sub foo ($arg) { $arg }
undef
pugs> foo()
*** No compatible subroutine found: "&foo"
    at <interactive> line 1, column 1 - line 2, column 1
pugs> foo("arg")
"arg"
pugs> my $coderef = \&foo;
sub {Syn "block" {Var "$arg"}}
pugs> $coderef()
*** No compatible subroutine found: "$coderef"
    at <interactive> line 1, column 1 - line 2, column 1
pugs> $coderef("arg")
"arg"

Admittedly, Pugs isn't doing a good job with the error message yet,
but at least it is working the way one would expect.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


