From perl6-all-return-80831-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Apr 23 20:00:00 2007
Return-Path: <perl6-all-return-80831-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3NNxx6w002964
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 23 Apr 2007 19:59:59 -0400
Received: (qmail 16841 invoked by uid 514); 23 Apr 2007 23:59:58 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 16836 invoked from network); 23 Apr 2007 23:59:58 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: matt@diephouse.com
Subject: Re: [perl #42320] [BUG] Memory leak with String pmc
Date: Mon, 23 Apr 2007 16:59:30 -0700
User-Agent: KMail/1.9.5
Cc: "Leopold Toetsch" <lt@toetsch.at>, perl6-internals@perl.org
References: <RT-Ticket-42320@perl.org> <200704232104.52084.lt@toetsch.at> <198c87380704231641p7c47cb38w4d9963ebfb63a45b@mail.gmail.com>
In-Reply-To: <198c87380704231641p7c47cb38w4d9963ebfb63a45b@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704231659.30881.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=1.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO,RCVD_IN_CBL,SPF_PASS
Status: O
Content-Length: 782
Lines: 29

On Monday 23 April 2007 16:41, Matt Diephouse wrote:

> Leopold Toetsch <lt@toetsch.at> wrote:
> > Am Montag, 23. April 2007 20:23 schrieb chromatic:

> > > > .sub main :main
> > > > loop:
> > > >     $P0 = new .String
> > > >     goto loop
> > > > .end
> >
> > That's an endless loop. How does one measure, if it's leaking memory?

> Presumably, every iteration of the loop uses the same "physical"
> register. This should free up the String from the previous iteration
> for collection. If there's a leak, memory would climb higher and
> higher; if there's not, it should level out.

I also threw in my favorite:

	$P1 = getinterp
	...
	$P1.'run_gc'()

top still showed ever-increasing virtual set sizes.

I'll trace what compact_pool() does to see if that sheds any light.

-- c

