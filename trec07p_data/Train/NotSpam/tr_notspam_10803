From r-help-bounces@stat.math.ethz.ch  Tue May 15 19:53:32 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4FNrVqD011796
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 15 May 2007 19:53:32 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4FNr6WD006461;
	Wed, 16 May 2007 01:53:13 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from wr-out-0506.google.com (wr-out-0506.google.com [64.233.184.224])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4FNqxWd006435
	for <r-help@stat.math.ethz.ch>; Wed, 16 May 2007 01:53:00 +0200
Received: by wr-out-0506.google.com with SMTP id i21so2379614wra
	for <r-help@stat.math.ethz.ch>; Tue, 15 May 2007 16:52:59 -0700 (PDT)
Received: by 10.115.89.1 with SMTP id r1mr1838247wal.1179273178722;
	Tue, 15 May 2007 16:52:58 -0700 (PDT)
Received: by 10.115.72.4 with HTTP; Tue, 15 May 2007 16:52:58 -0700 (PDT)
Message-ID: <eb555e660705151652l53dcf77al3d41914f3fee30c0@mail.gmail.com>
Date: Tue, 15 May 2007 16:52:58 -0700
From: "Deepayan Sarkar" <deepayan.sarkar@gmail.com>
To: "Waichler, Scott R" <Scott.Waichler@pnl.gov>
In-Reply-To: <F807B6FD7E7BE144A22B8A449CDAD93401220F3C@EMAIL02.pnl.gov>
MIME-Version: 1.0
Content-Disposition: inline
References: <F807B6FD7E7BE144A22B8A449CDAD93401220F39@EMAIL02.pnl.gov>
	<eb555e660705151345o5149c610p2822fa949717679e@mail.gmail.com>
	<F807B6FD7E7BE144A22B8A449CDAD93401220F3C@EMAIL02.pnl.gov>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Getting default aspect ratio from lattice
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

On 5/15/07, Waichler, Scott R <Scott.Waichler@pnl.gov> wrote:
> > > How can I get the value of the aspect ratio that is used in
> > a lattice
> > > plot?  In a levelplot for instance, the native units per cm of my x
> > > and y axes are different, and I need to know the aspect
> > ratio so that
> > > I can correctly plot vectors.  I know how to set the aspect in a
> > > high-level lattice function but I can't quite figure out how to get
> > > it.  I would like call to levelplot() without printing
> > anything, get
> > > the aspect ratio, use it to create my vector arrows, then call
> > > levelplot() again with print() to create the final figure.
> >
> > Your question doesn't necessarily have a well defined answer,
> > because the aspect ratio may be computed only on printing
> > (and not even then, as the aspect ratio may change after
> > printing if you resize the device). In fact, this is the
> > default behaviour (aspect = "fill").
>
> Thanks for the help, Deepayan.  Yes, I guess what I am looking for is
> the actual numerical value for aspect.ratio that is used when aspect =
> "fill".  My device is a pdf and I don't resize it.  Could I execute the
> whole plot, including printing it, while saving the aspect.ratio that
> was used, then create the plot again?

Sort of, if you use something like:

getAspect <-
    function(obj)
{
    print(obj)
    trellis.focus("panel", 1, 1, highlight = FALSE)
    cpl <- current.panel.limits(unit = "inches")
    ans <- diff(cpl$ylim) / diff(cpl$xlim)
    trellis.unfocus()
    ans
}

Using this, I get:

> foo <- levelplot(volcano, aspect = "fill")
> x11()
> getAspect(foo)
[1] 1.096661
> dev.off()
> x11("", 5, 9)
> getAspect(foo)
[1] 2.342152
> dev.off()

But if you know the size of your device, you won't do much worse if
you supply a numeric aspect based on that (unless you have a
multipanel plot and the automatic layout calculation is important to
you).

-Deepayan

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

