From beginners-return-91022-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 07:55:53 2007
Return-Path: <beginners-return-91022-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PBtp6w030032
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 07:55:52 -0400
Received: (qmail 29836 invoked by uid 514); 25 Apr 2007 11:55:47 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 29827 invoked from network); 25 Apr 2007 11:55:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Apr 2007 11:55:46 -0000
Received: (qmail 20121 invoked by uid 225); 25 Apr 2007 11:55:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 20115 invoked by alias); 25 Apr 2007 11:55:45 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.fast4.net (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 04:55:40 -0700
Received: from [85.92.179.189] (85-92-179-189.eurisp.net [85.92.179.189] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l3PBtOa14715;
	Wed, 25 Apr 2007 12:55:25 +0100
Message-ID: <462F41AA.70002@350.com>
Date: Wed, 25 Apr 2007 12:55:22 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: beginners@perl.org
CC: stanislav.nedelchev@gmail.com
Subject: Re: How to sum up values
References: <462DEB0C.4040709@siol.net> <462E393F.9010301@350.com> <462F19EC.5000804@gmail.com>
In-Reply-To: <462F19EC.5000804@gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 2195
Lines: 109

Stanislav Nedelchev wrote:
> Rob Dixon wrote:
>> Andrej Kastrin wrote:
>>> Dear all,
>>>
>>> Question about the sum function; the file structure is as follows:
>>>
>>> A|100
>>> A|200
>>> A|150
>>> B|20
>>> B|90
>>> C|10
>>> C|30
>>> C|300
>>>
>>> The result I want to obtain is to sum values in the second column
>>> (columnB) for each particular letter in the first column (ColumnA);
>>> e.g.:
>>>
>>> A|450
>>> B|100
>>> C|330
>>>
>>> I don't want to use hash structure because the input file is very
>>> large. Is there any simple way to do that step-by-step: to sum up
>>> values in columnB until the letter in columnA changes and print the
>>> result...
>>>
>>> Thanks in advance for any suggestion, Andrej
>>>
>>>
>>> #!/usr/bin/perl
>>> use strict;
>>> use warnings;
>>>
>>> open FH1, "< test.txt" or die "Can't open file : $!";
>>> while (<FH1>) {
>>>    chomp;
>>>    ($columnA,$columnB)=split /\|/;
>>>    ... ???
>>> }
>> my ($label, $total);
>>
>> while (<FH1>) {
>>  chomp;
>>  my ($columnA,$columnB)=split /\|/;
>>  
>>  if ($label and $columnA ne $label) {
>>    print "$label|$total\n";
>>    $total = 0;
>>  }
>>
>>  $label = $columnA;
>>  $total += $columnB;
>>
>>  print "$label|$total\n" if eof;
>> }
>>
>>
>>
>> HTH,
>>
>> Rob
>>
> It's was interesting to see some different solutions of the problem .
> I was very usefull to me but i think that if data is in random order it
> will not work in expected way.
> Maybe I'm wrong.
> Data :
> A|100
> B|20
> A|200
> A|150
> B|20
> B|90
> C|10
> C|30
> C|300
> 
> Result:
> A|100
> B|20
> A|350
> B|110
> C|340
> 
> Best Regards.

I wrote this solution specifically because no one else had answered the original
poster's question:

Andrej Kastrin wrote:
>>>
>>> I don't want to use hash structure because the input file is very
>>> large. Is there any simple way to do that step-by-step: to sum up
>>> values in columnB until the letter in columnA changes and print the
>>> result...

This program does exactly that, although I would have coded a hash solution
if I had the choice.

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


