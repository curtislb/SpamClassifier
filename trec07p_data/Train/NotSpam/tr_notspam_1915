From sugar-bounces@laptop.org  Sun Apr 15 22:17:16 2007
Return-Path: <sugar-bounces@laptop.org>
Received: from pedal.laptop.org (pedal.laptop.org [18.85.2.148])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3G2HG0I032479
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 15 Apr 2007 22:17:16 -0400
Received: from pedal.laptop.org (localhost [127.0.0.1])
	by pedal.laptop.org (Postfix) with ESMTP id 4B7994F7EF;
	Sun, 15 Apr 2007 22:16:28 -0400 (EDT)
X-Original-To: sugar@laptop.org
Delivered-To: sugar@laptop.org
Received: from spam.laptop.org (spam.laptop.org [18.85.46.23])
	by pedal.laptop.org (Postfix) with ESMTP id 814E94F7EF
	for <sugar@laptop.org>; Sun, 15 Apr 2007 22:16:27 -0400 (EDT)
X-ASG-Debug-ID: 1176689810-702900000000-3Xmyjt
X-Barracuda-URL: http://18.85.46.23:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: wr-out-0506.google.com[64.233.184.228]
X-Barracuda-Start-Time: 1176689810
Received: from wr-out-0506.google.com (wr-out-0506.google.com [64.233.184.228])
	by spam.laptop.org (Spam Firewall) with ESMTP id CEBA52329F
	for <sugar@laptop.org>; Sun, 15 Apr 2007 22:16:50 -0400 (EDT)
Received: by wr-out-0506.google.com with SMTP id 68so1448570wri
	for <sugar@laptop.org>; Sun, 15 Apr 2007 19:16:50 -0700 (PDT)
Received: by 10.114.95.1 with SMTP id s1mr612793wab.1176689809952;
	Sun, 15 Apr 2007 19:16:49 -0700 (PDT)
Received: by 10.114.180.14 with HTTP; Sun, 15 Apr 2007 19:16:49 -0700 (PDT)
Message-ID: <3e8ca5c80704151916o31c0fb03vd27d7092f15e2fd4@mail.gmail.com>
Date: Mon, 16 Apr 2007 12:16:49 +1000
From: "Stephen Thorne" <stephen.thorne@gmail.com>
To: "Ian Bicking" <ianb@colorstudy.com>, sugar@laptop.org
X-ASG-Orig-Subj: Re: [sugar] eBook software
In-Reply-To: <4622D1AE.6060403@colorstudy.com>
MIME-Version: 1.0
Content-Disposition: inline
References: <3e8ca5c80704151557t44d7fdbbs3b160484b5e55856@mail.gmail.com>
	<4622D1AE.6060403@colorstudy.com>
X-Barracuda-Bayes: INNOCENT GLOBAL 0.0000 1.0000 -2.0210
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at laptop.org
X-Barracuda-Spam-Score: -2.02
X-Barracuda-Spam-Status: No, SCORE=-2.02 using global scores of TAG_LEVEL=3.5
	QUARANTINE_LEVEL=1000.0 KILL_LEVEL=5.5 tests=
X-Barracuda-Spam-Report: Code version 3.1, rules version 3.1.14303
	Rule breakdown below
	pts rule name              description
	---- ----------------------
	--------------------------------------------------
Subject: Re: [sugar] eBook software
X-BeenThere: sugar@laptop.org
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Discussion of OLPC design,
	desktop platform and user experience" <sugar.laptop.org>
List-Unsubscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=unsubscribe>
List-Archive: <http://mailman.laptop.org/pipermail/sugar>
List-Post: <mailto:sugar@laptop.org>
List-Help: <mailto:sugar-request@laptop.org?subject=help>
List-Subscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: sugar-bounces@laptop.org
Errors-To: sugar-bounces@laptop.org
Status: O
Content-Length: 2898
Lines: 61

On 4/16/07, Ian Bicking <ianb@colorstudy.com> wrote:
> There's the library itself, which is what you get as the home page when
> you open up the browser.  I believe this is all done just as static
> HTML, and I believe the UI is just transitional, it's not intended as
> the final implementation.  I'm not sure how that relates to
> ebook-browser-reader.  Huh.

ebook browser reader looks like a spike implementation of a js based
reader. I've emailed the author directly and I'll find out where that
project is at.

> Anyway, there definitely will be HTML content that should have a good
> reading experience, which implies something browser-based.  Though
> there's been discussion of whether the browser activity in particular
> should be the basis of that.  The line between browsing and reading
> extended works seems fuzzy to me; creating a distinction by having two
> activities would seem unfortunate.

Definately. Reading extended works in the web browser is also very
hard to do. Long web pages are almost impossible to keep your place
in. This is the motivation for something js based like the
ebook-browser-reader I think.

> Something that I think would be excellent is if the browser had UI
> specifically related to some of these link types:
> http://www.w3.org/TR/html401/types.html#type-links -- these identify the
> position of a page in a book-like structure fairly well, I think, and
> having the browser actually pay attention to that should make it easier
> to translating a book into HTML.
>
> I imagine better bookmarking of some sort would also be helpful --
> ideally you'd be able to save your exact position so you can return to
> it.  The journal would save that position (once the journal is
> implemented), but regardless of that the browser has to be able to tell
> the journal the position and then be able to return to it later.

Having investigated the memory footprint of the web browser on the
beta2 machines, it's currently quite heavy. My biggest fear with using
it for ebook reading is that if it gets OOMKilled, then the page will
be lost, and that be a disaster.

What I was thinking was possibly using the web browser and a local
light weight http server of some kind (SimpleHTTPServer or something)
that would serve ajaxy data to the web browser and integrate with
things like the journal. This way even if the Web activity with its
MozEmbed component dies via OOM, the backend store can still be
written (and the backend store can take SIGDANGER signals and cache
that data to disk).

That all said, the sophieproject looks very promising (and is BSD
licensed) so I'm currently wanting to investigate that.

-- 
Stephen Thorne

"Give me enough bandwidth and a place to sit and I will move the world."
  --Jonathan Lange
_______________________________________________
Sugar mailing list
Sugar@laptop.org
http://mailman.laptop.org/mailman/listinfo/sugar

