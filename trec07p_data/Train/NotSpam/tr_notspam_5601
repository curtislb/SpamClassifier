From beginners-return-91137-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 27 11:56:48 2007
Return-Path: <beginners-return-91137-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3RFul6w027597
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 11:56:47 -0400
Received: (qmail 29140 invoked by uid 514); 27 Apr 2007 15:56:40 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 29130 invoked from network); 27 Apr 2007 15:56:40 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Apr 2007 15:56:40 -0000
Received: (qmail 32102 invoked by uid 225); 27 Apr 2007 15:56:39 -0000
Delivered-To: beginners@perl.org
Received: (qmail 32097 invoked by alias); 27 Apr 2007 15:56:39 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.181)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 27 Apr 2007 08:56:37 -0700
Received: by py-out-1112.google.com with SMTP id u52so838476pyb
        for <beginners@perl.org>; Fri, 27 Apr 2007 08:56:32 -0700 (PDT)
Received: by 10.35.127.7 with SMTP id e7mr5477372pyn.1177689392886;
        Fri, 27 Apr 2007 08:56:32 -0700 (PDT)
Received: by 10.35.20.8 with HTTP; Fri, 27 Apr 2007 08:56:32 -0700 (PDT)
Message-ID: <913717600704270856q711ddbcfy3b37d9f94c74d329@mail.gmail.com>
Date: Fri, 27 Apr 2007 23:56:32 +0800
From: "Jeff Pang" <pangj@earthlink.net>
Sender: jeff@faceloops.com
To: "Chas Owens" <chas.owens@gmail.com>
Subject: Re: scape . character
Cc: "Tatiana Lloret Iglesias" <tlloreti@gmail.com>,
   "Perl Beginners" <beginners@perl.org>
In-Reply-To: <58ce48dc0704270846g35e7d40ep4bd273c7e3440ba0@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <2f6912940704270815k73c1949ahd1fb944149da2f63@mail.gmail.com>
	 <913717600704270830m3b7a71e5i31a58c32d3740a6a@mail.gmail.com>
	 <2f6912940704270835hf48e635td047627da08e8e19@mail.gmail.com>
	 <913717600704270840q5036358fw96c2baf9f643de86@mail.gmail.com>
	 <58ce48dc0704270846g35e7d40ep4bd273c7e3440ba0@mail.gmail.com>
X-Google-Sender-Auth: 9c83f2e41720bb24
Status: O
Content-Length: 569
Lines: 22

> umm, why are you testing twice?  Just capture the last digit (instead
> of the whole version number) in the first regex.
>
>    next unless /\s+\d+\.\d+\.(\d+)\s+/;
>    print "$1\n"
>

b/c he asked two questions,
1) how to capture version string;
2) how to capture last number from version string.

surely I know testing one time is enough.

-- 
Chinese Practical Mod_perl book online
http://home.arcor.de/jeffpang/mod_perl/

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


