From perl6-all-return-81349-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 14 19:23:06 2007
Return-Path: <perl6-all-return-81349-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4ENN5qD028520
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 14 May 2007 19:23:06 -0400
Received: (qmail 31296 invoked by uid 514); 14 May 2007 23:23:02 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 31291 invoked from network); 14 May 2007 23:23:02 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Tue, 15 May 2007 01:15:17 +0200
From: Juerd Waalboer <juerd@convolution.nl>
To: perl6-language@perl.org
Subject: Re: Sigils by example
Message-ID: <20070514231517.GJ2873@c4.convolution.nl>
References: <010520071004503787%brian.d.foy@gmail.com> <1584795397.20070503140643@shitov.ru> <200705111448.05991.chromatic@wgz.org> <20070513224235.28013.qmail@lists.develooper.com> <46479C1C.4000305@casella.verplant.org> <20070514105154.5648.qmail@lists.develooper.com> <20070514120717.2d513956.frank@wiles.org> <20070514202047.14038.qmail@lists.develooper.com> <20070514204607.GG2873@c4.convolution.nl> <20070514224829.21436.qmail@lists.develooper.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20070514224829.21436.qmail@lists.develooper.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

Thomas Wittek skribis 2007-05-15  0:48 (+0200):
> > The Perl Way:
> > $object.foo() calls the method called "foo".
> > $object.$foo() calls the method that is in the variable $foo.
> My way:
> someref = &somemethod
> object.someref()
> Of course you could argue that you don't know in advance, if "object"
> has a method with that name, so you cannot manually avoid the conflict.

Indeed. Now you have to know your object very well, and avoid all of its
method names for variable names. For example, an HTTP::Request object
has a .headers method. If Your Way were in effect, I could no longer
safely use the name "headers" for my own variables, and then still call
the "headers" method on the object.

Perl allows both avoiding clashes and not-avoiding clashes. Your way
only strictly requires the former programming style. And since my
preferred style is different, I'm glad you're not designing Perl 6.
-- 
korajn salutojn,

  juerd waalboer:  perl hacker  <juerd@juerd.nl>  <http://juerd.nl/sig>
  convolution:     ict solutions and consultancy <sales@convolution.nl>

