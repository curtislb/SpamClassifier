From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed Jun  6 20:15:49 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l570FmhB027840
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 6 Jun 2007 20:15:49 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id A9065162C4B
	for <ktwarwic@speedy.uwaterloo.ca>; Thu,  7 Jun 2007 00:15:42 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.9 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 549)
	id 441DD162AF4; Thu,  7 Jun 2007 00:14:13 +0000 (GMT)
To: samba-cvs@samba.org
From: jra@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070607001413.441DD162AF4@lists.samba.org>
Date: Thu,  7 Jun 2007 00:14:13 +0000 (GMT)
Subject: svn commit: samba r23371 - in branches:
	SAMBA_3_0/source/lib/tdb/common SAMBA_3_0_25/source/tdb/common
	SAMBA_3_0_26/source/lib/tdb/common SAMBA_4_0/source/lib/tdb/common
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: jra
Date: 2007-06-07 00:14:06 +0000 (Thu, 07 Jun 2007)
New Revision: 23371

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23371

Log:
Fix the misleading comment I added - it really *should*
say "locks chain and returned record", not
"and returns record"
Jeremy.

Modified:
   branches/SAMBA_3_0/source/lib/tdb/common/traverse.c
   branches/SAMBA_3_0_25/source/tdb/common/traverse.c
   branches/SAMBA_3_0_26/source/lib/tdb/common/traverse.c
   branches/SAMBA_4_0/source/lib/tdb/common/traverse.c


Changeset:
Modified: branches/SAMBA_3_0/source/lib/tdb/common/traverse.c
===================================================================
--- branches/SAMBA_3_0/source/lib/tdb/common/traverse.c	2007-06-07 00:00:45 UTC (rev 23370)
+++ branches/SAMBA_3_0/source/lib/tdb/common/traverse.c	2007-06-07 00:14:06 UTC (rev 23371)
@@ -263,7 +263,7 @@
 	tdb->travlocks.off = tdb->travlocks.hash = 0;
 	tdb->travlocks.lock_rw = F_RDLCK;
 
-	/* Grab first record: locks chain and returns record. */
+	/* Grab first record: locks chain and returned record. */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) <= 0)
 		return tdb_null;
 	/* now read the key */
@@ -320,7 +320,7 @@
 	}
 	oldhash = tdb->travlocks.hash;
 
-	/* Grab next record: locks chain and returns record,
+	/* Grab next record: locks chain and returned record,
 	   unlocks old record */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) > 0) {
 		key.dsize = rec.key_len;

Modified: branches/SAMBA_3_0_25/source/tdb/common/traverse.c
===================================================================
--- branches/SAMBA_3_0_25/source/tdb/common/traverse.c	2007-06-07 00:00:45 UTC (rev 23370)
+++ branches/SAMBA_3_0_25/source/tdb/common/traverse.c	2007-06-07 00:14:06 UTC (rev 23371)
@@ -263,7 +263,7 @@
 	tdb->travlocks.off = tdb->travlocks.hash = 0;
 	tdb->travlocks.lock_rw = F_RDLCK;
 
-	/* Grab first record: locks chain and returns record. */
+	/* Grab first record: locks chain and returned record. */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) <= 0)
 		return tdb_null;
 	/* now read the key */
@@ -320,7 +320,7 @@
 	}
 	oldhash = tdb->travlocks.hash;
 
-	/* Grab next record: locks chain and returns record,
+	/* Grab next record: locks chain and returned record,
 	   unlocks old record */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) > 0) {
 		key.dsize = rec.key_len;

Modified: branches/SAMBA_3_0_26/source/lib/tdb/common/traverse.c
===================================================================
--- branches/SAMBA_3_0_26/source/lib/tdb/common/traverse.c	2007-06-07 00:00:45 UTC (rev 23370)
+++ branches/SAMBA_3_0_26/source/lib/tdb/common/traverse.c	2007-06-07 00:14:06 UTC (rev 23371)
@@ -263,7 +263,7 @@
 	tdb->travlocks.off = tdb->travlocks.hash = 0;
 	tdb->travlocks.lock_rw = F_RDLCK;
 
-	/* Grab first record: locks chain and returns record. */
+	/* Grab first record: locks chain and returned record. */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) <= 0)
 		return tdb_null;
 	/* now read the key */
@@ -320,7 +320,7 @@
 	}
 	oldhash = tdb->travlocks.hash;
 
-	/* Grab next record: locks chain and returns record,
+	/* Grab next record: locks chain and returned record,
 	   unlocks old record */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) > 0) {
 		key.dsize = rec.key_len;

Modified: branches/SAMBA_4_0/source/lib/tdb/common/traverse.c
===================================================================
--- branches/SAMBA_4_0/source/lib/tdb/common/traverse.c	2007-06-07 00:00:45 UTC (rev 23370)
+++ branches/SAMBA_4_0/source/lib/tdb/common/traverse.c	2007-06-07 00:14:06 UTC (rev 23371)
@@ -259,7 +259,7 @@
 	tdb->travlocks.off = tdb->travlocks.hash = 0;
 	tdb->travlocks.lock_rw = F_RDLCK;
 
-	/* Grab first record: locks chain and returns record. */
+	/* Grab first record: locks chain and returned record. */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) <= 0)
 		return tdb_null;
 	/* now read the key */
@@ -316,7 +316,7 @@
 	}
 	oldhash = tdb->travlocks.hash;
 
-	/* Grab next record: locks chain and returns record,
+	/* Grab next record: locks chain and returned record,
 	   unlocks old record */
 	if (tdb_next_lock(tdb, &tdb->travlocks, &rec) > 0) {
 		key.dsize = rec.key_len;

