From beginners-return-91799-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May 18 22:13:09 2007
Return-Path: <beginners-return-91799-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4J2D6qD020873
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 18 May 2007 22:13:08 -0400
Received: (qmail 16079 invoked by uid 514); 19 May 2007 02:12:58 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 16070 invoked from network); 19 May 2007 02:12:58 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 19 May 2007 02:12:58 -0000
Received: (qmail 27369 invoked by uid 225); 19 May 2007 02:12:57 -0000
Delivered-To: beginners@perl.org
Received: (qmail 27351 invoked by alias); 19 May 2007 02:12:55 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 66.249.82.236 as permitted sender)
Received: from wx-out-0506.google.com (HELO wx-out-0506.google.com) (66.249.82.236)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 18 May 2007 19:11:34 -0700
Received: by wx-out-0506.google.com with SMTP id t16so1039709wxc
        for <beginners@perl.org>; Fri, 18 May 2007 19:11:29 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=brhd0P/Nxn1OaDeHMnhSajaGiDQX9yGdXR1L/K0YTSB/IlgskvxV4G5JPmV93NPp4n4ObuX4KrTcBG/EcpE/vPyAzx5kIbwIrYF4qu3UmmhlvVWyVhyPbKpHaM6JQqc4RTt3/Kr4kIZPDXk6/BVviuE9h7GhatoEMtovr+WkTyk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=GaQaZdnJLYp2vxNlHFyG9/eHIOCSwRxIMvIdbuJyWTmv0e+43/B17TVeiELWbfHqHwxPZQ4bEqB2sC7QsMTWaGn7HkB8Q87RyL5DgmyuoSTRmaCb0sjoacUGYf4MUDzZeA9PfdYEheEICKfWOpXzpWmg0WNo7OY1sHG/fhufSYo=
Received: by 10.90.52.18 with SMTP id z18mr2453354agz.1179540689310;
        Fri, 18 May 2007 19:11:29 -0700 (PDT)
Received: by 10.90.114.19 with HTTP; Fri, 18 May 2007 19:11:29 -0700 (PDT)
Message-ID: <31086b240705181911o9c40569y4047afc62a683c13@mail.gmail.com>
Date: Fri, 18 May 2007 19:11:29 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Martin Barth" <martin@senfdax.de>
Subject: Re: syscall getpwnam and changing authetication on system
Cc: beginners@perl.org
In-Reply-To: <20070518180623.624b7ca5@nietzsche>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <20070518180623.624b7ca5@nietzsche>
X-Google-Sender-Auth: 364b23c958524909

On 5/18/07, Martin Barth <martin@senfdax.de> wrote:

>         print "********** " . eval("getpwnam('christian')") ."\n"; sleep 10;

Why are you (mis-)using the evil eval?

> if I do a perl -wle 'print getpwnam("christian")' the correct (new) uid is returned.

So, if you don't use the evil eval, everything works fine?

That should be the end of the story. ("Doctor, it hurts when I stick
my finger in my eye." "Stop doing that.") But in case you're burning
with curiosity about what's going on with eval, here you go:

I suspect that your perl has cached the result of compiling that
string, which is to say it's cached the old uid. If you need an eval
string to be repeatedly re-compiled at runtime (and you fail to notice
that this is a sign that your algorithm needs fixing) simply ensure
that it's a different string each time you eval it. Perhaps something
like this:

  my $serial;
  my $evil_result = eval("getpwnam('christian')" . "\n#" . ++$serial);

But this is no endorsement of the evil eval. You've found merely one
of its evil pitfalls. Avoid, avoid, avoid.

Cheers!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


