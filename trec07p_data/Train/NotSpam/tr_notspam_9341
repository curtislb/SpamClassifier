From r-help-bounces@stat.math.ethz.ch  Thu May 10 21:55:29 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4B1tSqD017064
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 10 May 2007 21:55:29 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4B1t1P4018369;
	Fri, 11 May 2007 03:55:10 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=AWL, BAYES_50,
	HTML_MESSAGE autolearn=no version=3.1.8
Received: from web63907.mail.re1.yahoo.com (web63907.mail.re1.yahoo.com
	[69.147.97.122])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with SMTP id l4B1sqV0018340
	for <r-help@stat.math.ethz.ch>; Fri, 11 May 2007 03:54:53 +0200
Received: (qmail 66094 invoked by uid 60001); 11 May 2007 01:54:52 -0000
X-YMail-OSG: 9tnXWssVM1n3SpRHFOVVH9wQkfJ618YNTKxgLQXDA61eejIDi2vK4NnCAGD1I0ybBYyKaLADamSWXynq3fnI5AcCdQ--
Received: from [76.21.56.103] by web63907.mail.re1.yahoo.com via HTTP;
	Thu, 10 May 2007 18:54:52 PDT
Date: Thu, 10 May 2007 18:54:52 -0700 (PDT)
From: new ruser <newruser@yahoo.com>
To: jim holtman <jholtman@gmail.com>
In-Reply-To: <644e1f320705101750y295bb77y52123a8102640268@mail.gmail.com>
MIME-Version: 1.0
Message-ID: <614931.65795.qm@web63907.mail.re1.yahoo.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Content-Disposition: inline
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] how to pass "arguments" to a function within a function?
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Thanks, but I need to clarify.

Sometimes f"FUN" may take only 1 argument, other times it may take several arguments.  

How can I write the code so that the appropriate arguments are "automatically" passed to fun, using the column names in vars.in as the "argument names" and the contents of row1 of vars.in as the arguments?

jim holtman <jholtman@gmail.com> wrote: You weren't passing in any 'x' and 'y' arguments to the 'fun'.

Try this:

vars.in = data.frame(x='sample1',y='sample2')


examplefun  <- function(fun, vars=vars.in, ...) {

       for(v in 1: ncol(vars) ) {
           assign( names(vars)[v]  , vars[1,v]  , env=.GlobalEnv)
       }
       fun(x=as.character(vars[1,1]), y=as.character(vars[1,2]))
}

examplefun(fun=minus, vars = vars.in)


On 5/10/07, new ruser  wrote:
> I have searched the r-help files but have not been able to find an answer to this question.  I apologize if this questions has been asked previously.
>
> (Please excuse the ludicrousness of this example, as I have simplified my task for the purposes of this help inquiry.  Please trust me that something like this will in fact be useful what I am trying to accomplish. I am using R 2.4.1 in Windows XP.)
>
> I have created two functions:
>
> 1. minus <- function(x,y) {get(x)-get(y)}
>
> a. note: x and y are of type character and represent the names of numerical objects)
>
>
> 2. examplefun  <- function(fun, vars=vars.in, ...) {
>
>        for(v in 1: ncol(vars) ) {
>            assign( names(vars)[v]  , vars[1,v]  , env=.GlobalEnv)
>                                        }
>
> fun(...) }
>
> a. FUN = another function (e.g. minus() that takes as its inputs variables of type chatrcater
> b. vars = (a data.frame with the names of variables that will be passed to "FUN"
>
> My problem: various inputs for "FUN" will require different arguments.  These arguments will be contained in the column names of "vars".  How do I pass these arguments to FUN()?
>
>
> My example and my attempt:
>
> what I am trying to do, successfully accomplished without a function:
> x='sample1'
> y='sample2'
>
> sample1=c(222,333,444)
> sample2=c(100,200,300)
>
> minus <- function(x,y) {get(x)-get(y)}
> minus(x,y)
>
> #########################################################
>
> #My so-far failing attempt to write a function to do the same thing:
>
> vars.in = data.frame(x='sample1',y='sample2')
>
>
> examplefun  <- function(fun, vars=vars.in, ...) {
>
>        for(v in 1: ncol(vars) ) {
>            assign( names(vars)[v]  , vars[1,v]  , env=.GlobalEnv)
>                                        }
>
> fun(...) }
>
> examplefun(fun=minus, vars = vars.in)
>
>
> ---------------------------------
> Now that's room service! Choose from over 150,000 hotels
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


-- 
Jim Holtman
Cincinnati, OH
+1 513 646 9390

What is the problem you are trying to solve?


 
---------------------------------


	[[alternative HTML version deleted]]

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

