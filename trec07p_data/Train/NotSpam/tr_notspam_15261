From beginners-return-92053-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun  1 08:05:35 2007
Return-Path: <beginners-return-92053-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l51C5ZhB009364
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 1 Jun 2007 08:05:35 -0400
Received: (qmail 30978 invoked by uid 514); 1 Jun 2007 12:05:24 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 30969 invoked from network); 1 Jun 2007 12:05:24 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jun 2007 12:05:24 -0000
Received: (qmail 28604 invoked by uid 225); 1 Jun 2007 12:05:23 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28598 invoked by alias); 1 Jun 2007 12:05:23 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from bgerelbas02.asiapac.hp.net (HELO bgerelbas02.asiapac.hp.net) (15.219.201.135)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 01 Jun 2007 05:02:26 -0700
Received: from bgeexg12.asiapacific.cpqcorp.net (bgeexg12.asiapacific.cpqcorp.net [16.150.33.53])
	by bgerelbas02.asiapac.hp.net (Postfix) with ESMTP id AC39F32FCD;
	Fri,  1 Jun 2007 17:32:18 +0530 (IST)
Received: from bgeexc04.asiapacific.cpqcorp.net ([16.150.33.49]) by bgeexg12.asiapacific.cpqcorp.net with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 1 Jun 2007 17:32:18 +0530
X-MimeOLE: Produced By Microsoft Exchange V6.5
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Subject: RE: Simplest hash initialization with no value
Date: Fri, 1 Jun 2007 17:32:18 +0530
Message-ID: <C4A55E6959ED6F498EA07FFB09DAB2E00725272A@bgeexc04.asiapacific.cpqcorp.net>
In-Reply-To: <1180696114.138700.158500@g4g2000hsf.googlegroups.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: Simplest hash initialization with no value
thread-index: AcekPqD2iyfYSOIITvuLN+n1OrrDBgABaLjw
References: <C4A55E6959ED6F498EA07FFB09DAB2E007252726@bgeexc04.asiapacific.cpqcorp.net>   <465FEBE8.6020004@earthlink.net>   <C4A55E6959ED6F498EA07FFB09DAB2E007252728@bgeexc04.asiapacific.cpqcorp.net> <1180696114.138700.158500@g4g2000hsf.googlegroups.com>
From: "Nath, Alok (STSD)" <alok.nath@hp.com>
To: "Paul Lalli" <mritty@gmail.com>, <beginners@perl.org>,
   <perl-beginners@moderators.isc.org>
X-OriginalArrivalTime: 01 Jun 2007 12:02:18.0547 (UTC) FILETIME=[B3D9B830:01C7A444]
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l51C5ZhB009364

 But when decalared this way it gives a warning message :"Use of
uninitialized value in concatenation (.) or string at"
	
in a print statement which is something like this :

		my %myhash = map { $_ => undef } qw/A B C D E F G H I J
K/;
		foreach my $key (%myhash){
			print $myhash{$key}
		} 


-----Original Message-----
From: Paul Lalli [mailto:mritty@gmail.com] 
Sent: Friday, June 01, 2007 4:39 PM
To: beginners@perl.org; perl-beginners@moderators.isc.org
Subject: Re: Simplest hash initialization with no value

On Jun 1, 6:08 am, alok.n...@hp.com (Alok Nath) wrote:

> Why it gives syntax error when -
>         my @myhash{qw/A B/} = ();

Er... because it's not valid syntax.  That's why you'd get a syntax
error. Not sure what you're asking. You can't "declare" a hash slice.
You declare variables.

> It works when I say -
>         my %myhash ;
>         @myhash{qw/A B/} = ();

Right.  Because that is valid syntax.  First you declare %myhash, then
you initialize two keys of that hash using a slice.

Your original question was "how to initialize a hash".  It's apparent
now that you wanted to know how to "declare and initialize a hash in one
step".  This question comes up so frequently that it really should be a
FAQ.  The way you did so was fine originally.  What's wrong with it?  If
you have a longer list of keys, you could use the map operator as a
shortcut, so you don't write 'undef' multiple times:

my %myhash = map { $_ => undef } qw/A B C D E F G H I J K/;

Paul Lalli


--
To unsubscribe, e-mail: beginners-unsubscribe@perl.org For additional
commands, e-mail: beginners-help@perl.org http://learn.perl.org/



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/



