From r-help-bounces@stat.math.ethz.ch  Fri May 18 11:31:11 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4IFVAqD015441
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 18 May 2007 11:31:10 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4IFUFFo017548;
	Fri, 18 May 2007 17:30:37 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.7 required=5.0 tests=AWL,
	BAYES_40 autolearn=no version=3.1.8
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.169])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4IFIRLu012573
	for <r-help@stat.math.ethz.ch>; Fri, 18 May 2007 17:18:39 +0200
Received: by ug-out-1314.google.com with SMTP id p37so514351ugc
	for <r-help@stat.math.ethz.ch>; Fri, 18 May 2007 08:18:38 -0700 (PDT)
Received: by 10.66.220.17 with SMTP id s17mr1115182ugg.1179501510869;
	Fri, 18 May 2007 08:18:30 -0700 (PDT)
Received: by 10.67.105.1 with HTTP; Fri, 18 May 2007 08:18:30 -0700 (PDT)
Message-ID: <971536df0705180818y53163f7dhc59fbaf4fc1735e9@mail.gmail.com>
Date: Fri, 18 May 2007 11:18:30 -0400
From: "Gabor Grothendieck" <ggrothendieck@gmail.com>
To: "Vadim Ogranovich" <vogranovich@jumptrading.com>
In-Reply-To: <20146744.210881179500883813.JavaMail.root@jumpmail1.w2k.jumptrading.com>
MIME-Version: 1.0
Content-Disposition: inline
References: <971536df0705180753je98e7d6r2fbaf16699768ed7@mail.gmail.com>
	<20146744.210881179500883813.JavaMail.root@jumpmail1.w2k.jumptrading.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] subset arg in (modified) evalq
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Try this:

e <- quote(summary(y + z))
all.vars(e)


On 5/18/07, Vadim Ogranovich <vogranovich@jumptrading.com> wrote:
> Sorry, I didn't explain myself clear enough. I knew about the select arg in
> subset(). My question was, given the expression expression(summary(x+y)),
> how to extract all names that will be looked up during its evaluation.
>
> As to checking performance assumptions, you are right, in most cases the
> overhead is negligible, but sometimes I work with really big data sets.
>
> Thanks a lot for your help,
> Vadim
>
>
> ----- Original Message -----
> From: "Gabor Grothendieck" <ggrothendieck@gmail.com>
> To: "Vadim Ogranovich" <vogranovich@jumptrading.com>
> Cc: r-help@stat.math.ethz.ch
> Sent: Friday, May 18, 2007 9:53:26 AM (GMT-0600) America/Chicago
> Subject: Re: [R] subset arg in (modified) evalq
>
> I would check your performance assumption with an actual test before
> concluding such but at any rate subset does have a select argument. See
> ?subset
>
> On 5/18/07, Vadim Ogranovich <vogranovich@jumptrading.com> wrote:
> > Thanks Gabor!  This does exactly what I wanted.
> >
> > One follow-up question, how to extract the var names, in this case y, z,
> > from the expression? The subset function creates a new object and this may
> > be expensive when the data has a lot of irrelevant collumns. So I thougth
> > that I could reduce this to the columns I actually need.
> >
> > Thanks,
> > Vadim
> >
> >
> >
> > ----- Original Message -----
> > From: "Gabor Grothendieck" <ggrothendieck@gmail.com>
> > To: "Vadim Ogranovich" <vogranovich@jumptrading.com>
> > Cc: r-help@stat.math.ethz.ch
> > Sent: Friday, May 18, 2007 9:19:49 AM (GMT-0600) America/Chicago
> > Subject: Re: [R] subset arg in (modified) evalq
> >
> > Try this:
> >
> >    with(subset(data, x > 0), summary(y + z))
> >
> >
> > On 5/18/07, Vadim Ogranovich <vogranovich@jumptrading.com> wrote:
> > > Hi,
> > >
> > > When using evalq to evaluate expressions within a say data.frame context
> I
> > often wish there was a 'subset' argument, much like in lm() or any ather
> > advanced regression model. I would be grateful for a tip how to do this.
> > >
> > > Here is an illustration of what I want:
> > >
> > > n <- 100
> > > data <- data.frame(x=rnorm(n), y=rnorm(y), z=rnorm(z))
> > >
> > > # this works
> > > evalq({ i <- 0<x; summary(y[i] + z[i]) }, data)
> > >
> > > # I want to do the above w/o explicit subscripting, e.g.
> > > myevalq(summary(y + z), subset=0<x, data)
> > >
> > > Thanks,
> > > Vadim
> > >
> > >        [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-help@stat.math.ethz.ch mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-help
> > > PLEASE do read the posting guide
> > http://www.R-project.org/posting-guide.html
> > > and provide commented, minimal, self-contained, reproducible code.
> > >
> >
>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

