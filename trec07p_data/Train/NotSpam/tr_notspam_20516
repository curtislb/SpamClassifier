From beginners-return-92544-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jun 19 09:53:58 2007
Return-Path: <beginners-return-92544-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5JDruL9030064
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 19 Jun 2007 09:53:57 -0400
Received: (qmail 19246 invoked by uid 514); 19 Jun 2007 13:53:50 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 19237 invoked from network); 19 Jun 2007 13:53:50 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 19 Jun 2007 13:53:50 -0000
Received: (qmail 21493 invoked by uid 225); 19 Jun 2007 13:53:50 -0000
Delivered-To: beginners@perl.org
Received: (qmail 21483 invoked by alias); 19 Jun 2007 13:53:49 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.fast4.net (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 19 Jun 2007 06:53:47 -0700
Received: from [85.92.185.116] (85-92-185-116.eurisp.net [85.92.185.116] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l5JDraF01457;
	Tue, 19 Jun 2007 14:53:36 +0100
Message-ID: <4677DFE0.6050405@350.com>
Date: Tue, 19 Jun 2007 14:53:36 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.12 (Windows/20070509)
MIME-Version: 1.0
To: beginners@perl.org
CC: Matt <mlist@cmcflex.com>
Subject: Re: find2perl output to array
References: <4677CD59.50409@cmcflex.com> <20070619150137.4bf35947@nietzsche> <4677D7F5.5090304@cmcflex.com>
In-Reply-To: <4677D7F5.5090304@cmcflex.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Matt wrote:
> Thanks Martin,
>> change following line:
>>  
>>>     (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && 
>>> /^DATA.*\.zip\z/s && print("$name\n");
>>>     
>>
>> to
>>
>>  
>>>     (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && 
>>> /^DATA.*\.zip\z/s && push @files, $name;
>>>     
>>
>> at the end you have all files in the @files array.
>>
>>   
> 
> I did that, and then at the bottom of the script I tried looping through 
> just to verify that @files was populated - no dice.
> 
> use vars qw/*name *dir *prune/;
> *name   = *File::Find::name;
> *dir    = *File::Find::dir;
> *prune  = *File::Find::prune;
> 
> sub wanted;
> 
> $smallcuid = lc $cuid;
> 
> # Traverse desired filesystems
> File::Find::find({wanted => \&wanted}, 
> '/home/ftpuser/'.$smallcuid.'/flexvault/'.$directory.'/');
> exit;
> 
> 
> sub wanted {
>    my ($dev,$ino,$mode,$nlink,$uid,$gid);
> 
> (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && 
> /^DATA.*\.zip\z/s && push @files, name;
> }
> 
> for $element (@files) {
>       print $element, "\n";
> }
> 
> 
> 
> What have I done wrong?  Although if I put that for loop within the 
> function it does populate, but it repeats each results 6 times.

It's not displaying the contents of the array becuase you have a
call to exit before the loop.

It's repeating several times because your wanted() subroutine is called
for every file and directory.

The code you have published will put 'name' into @files several times,
and doesn't show the origin of $cuid or directory.

Something like the code below should work.

HTH,

Rob


use strict;
use warnings;

use File::Find;

my ($cuid, $smallcuid);
my $directory;
my @files;

find(\&wanted, "/home/ftpuser/$smallcuid/flexvault/$directory/");

print "$_\n" foreach @files;

sub wanted {
  push @files, $File::Find::name if -f and /^DATA.*\.zip\z/s;
}





-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


