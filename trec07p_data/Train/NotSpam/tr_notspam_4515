From r-help-bounces@stat.math.ethz.ch  Tue Apr 24 06:42:50 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3OAgn6w012972
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 24 Apr 2007 06:42:49 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3OAfXwC008343;
	Tue, 24 Apr 2007 12:41:41 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.7 required=5.0 tests=AWL, BAYES_50, ML_MARKETING,
	SARE_URI_EQUALS autolearn=no version=3.1.8
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3OAYeXL005476;
	Tue, 24 Apr 2007 12:41:20 +0200
Received: from slim.kubism.ku.dk (slim.kubism.ku.dk [192.38.18.21])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3OAYWlH005441
	for <r-announce@lists.r-project.org>; Tue, 24 Apr 2007 12:34:32 +0200
Received: from [192.38.18.17] (viggo.kubism.ku.dk [192.38.18.17])
	by slim.kubism.ku.dk (Postfix) with ESMTP id 34B895AA00
	for <r-announce@lists.r-project.org>;
	Tue, 24 Apr 2007 12:34:32 +0200 (CEST)
Message-ID: <462DDD37.4070700@biostat.ku.dk>
Date: Tue, 24 Apr 2007 12:34:31 +0200
From: Peter Dalgaard <P.Dalgaard@biostat.ku.dk>
User-Agent: Thunderbird 1.5.0.10 (X11/20060911)
MIME-Version: 1.0
To: r-announce@stat.math.ethz.ch
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
X-BeenThere: r-announce@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
X-MIME-Autoconverted: from base64 to 8bit by hypatia.math.ethz.ch id
	l3OAYeXL005476
Subject: [R] R 2.5.0 is released
X-BeenThere: r-help@stat.math.ethz.ch
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by speedy.uwaterloo.ca id l3OAgn6w012972
Status: O
Content-Length: 32822
Lines: 259

I've rolled up R-2.5.0.tar.gz a short while ago. This is a development release which contains a number of new features. In particular:
  - Object name completion by integration of package 'rcompletion' by     Deepayan Sarkar  - New recommended package 'codetools' by Luke Tierney  - New Rscript front-end, which enables shell-like R scripting
also, a number of mostly minor bugs have been fixed. See the full listof changes below.
You can get it (some time this evening) from
http://cran.r-project.org/src/base/R-2/R-2.5.0.tar.gz
or wait for it to be mirrored at a CRAN site nearer to you. In case of impatience, try http://www.biostat.ku.dk/~pd/R-release
Binaries for various platforms will appear in due course.         For the R Core Team
        Peter Dalgaard
These are the md5sums for the freshly created files, in case you wishto check that they are uncorrupted:a8efde35b940278de19730d326f58449  AUTHORSeb723b61539feef013de476e68b5c50a  COPYINGa6f89e2100d9b6cdffcea4f398e37343  COPYING.LIBaa6d06dd154bbde39b4d35f26068675d  FAQ70447ae7f2c35233d3065b004aa4f331  INSTALLb12ff4c900a49f0d7786d80e249934c9  NEWS88bbd6781faedc788a1cbd434194480c  ONEWS4f004de59e24a52d0f500063b4603bcb  OONEWSb9088663fc539c059acfaf19d6d90a69  R-2.5.0.tar.gzb9088663fc539c059acfaf19d6d90a69  R-latest.tar.gz433182754c05c2cf7a04ad0da474a1d0  README020479f381d5f9038dcb18708997f5da  RESOURCES4eaf8a3e428694523edc16feb0140206  THANKS
This is the relevant part of the NEWS file:

		CHANGES IN R VERSION 2.5.0

USER-VISIBLE CHANGES
    o	apropos(x) and find(x) now both only work for character 'x',	and hence drop all non-standard evaluation behaviour.
    o	Data frames can have 'automatic' row names which are not	converted to dimnames by as.matrix().  (Consequently, e.g.,	t(.)  for such data frames has NULL column names.)  This	change leads to memory reductions in several places, but can	break code which assumes character dimnames for data frames	derived from matrices.
	No existing R object is regarded as having 'automatic' row	names, and it may be beneficial to recreate such objects via	read.table() or data.frame().
    o	Using $ on an atomic vector now raises a warning, as does use	on an S4 class for which a method has not been defined.
    o	The Unix-alike readline terminal interface now does	command-completion for R objects, incorporating the	functionality formerly in package 'rcompletion' by Deepayan	Sarkar.  This can be disabled by setting the environment	variable R_COMPLETION=FALSE when starting R (e.g. in	~/.Renviron).  (Note that when this is enabled, filename	completion no longer works for file paths containing R	operators such as '+' and '-'.)

NEW FEATURES
    o	abbreviate() no longer has an 8191 byte limit on the size of	strings it can handle.
    o	abs(x) now returns integer for integer or logical arguments.
    o	apropos() has a new argument 'ignore.case' which defaults to	TRUE, potentially matching more than previously, thanks to a	suggestion by Seth Falcon.
    o	args(), str() and print() now give the argument lists of primitive	functions.
    o	as.matrix() gains the '...' argument that several packages have	assumed it always had (and S-PLUS has).
    o	Manipulation of integers as roman numerals via as.roman() in	package utils.
    o	attr() no longer treats name = NA_character_ as meaning	name = "NA".
    o	binom.test() now allows a 'fuzz' for calculated integer values	in its x and n arguments.
    o	boxplot(*, notch = TRUE) now warns when notches are outside	hinges; related to PR#7690.
    o	New function callCC() providing a downward-only version of	Scheme's call with current continuation.
    o	capabilities() now has a "profmem" entry indicating whether	R has been compiled with memory profiling.
    o	colnames<-() and rownames<-() now handle data frames explicitly,	so calling colnames<- on a data frame no longer alters the	representation of the row names.
    o	commandArgs() has a new 'trailingOnly' argument to be used in	conjunction with --args.
    o	contour() now passes graphical parameters in '...' to axis()	and box().
    o	New data set 'crimtab' on Student(1908)'s 3000 criminals.
    o	cut.default() has a new argument 'ordered_result'.
    o	.deparseOpts() has two new options: "keepNA" to ensure that	different types (logical, integer, double, character and	complex) of NAs are distinguished, and "S_compatible" to	suppress the use of R-specific features such as 123L and to	deparse integer values of a double vector with a trailing	decimal point.
	The 'keepInteger' option now uses the suffix 'L' rather than	as.integer() where possible (unless all entries are NA or	"S_compatible" is also set).
	Other deparse options can now be added to "all" (which has not	for some time actually switched on all options).
	Integer sequences m:n are now deparsed in that form.
    o	deparse() and dput() now include "keepInteger" and "keepNA" in	their defaults for the 'control' argument.
    o   detach() now takes another argument, unload, which indicates        whether or not to unload the package and then only cleans        up the S4 methods if the package successfully unloads.
    o	There are new constants NA_integer_, NA_real_, NA_complex_ and	NA_character_ to denote NAs of those types, and they will be	used in deparsing in place of as.integer(NA) etc unless	.deparseOpts() includes "S_compatible".
    o	dev.print() now recognizes 'screen devices' as all those with	an enabled display list, rather than a hard-coded set.
    o	Objects of class "difftime" are now handled more flexibly. The	units of such objects can now be accessed via a units()	function, which also has a replacement form, and there are	conversion methods to and from numeric, which also allow the	specification of units.	 Objects of this class can also be	stored in data frames now.  A format() method has been added,	and the print method was revised.
    o	New function environmentName() to give the print name of	environments such as "namespace:base".	This is now used by str().
    o	New function env.profile() provides R level access to summary	statistics on environments.  In a related patch, new.env()	now allows the user to specify an initial size for a hashed	environment.
    o	file() can read the X11 clipboard selection as "X11_clipboard"	on suitable X11-using systems.
    o	file("stdin") is now recognized, and refers to the process's	'stdin' file stream whereas stdin() refers to the console.	These may differ, for example for a GUI console, an embedded	application of R or if --file= has been used.
    o	file_test() is now also available in package utils.	(It is now private in package tools.)
    o	file.show() gains an 'encoding' argument.
    o	New functions formatUL() and formatOL() in package utils for	formatting unordered (itemize) and ordered (enumerate) lists.
    o	The statistics reported when gcinfo(TRUE) are now of the amounts	used (in Mb) and not of the amounts free (which are not really	relevant when there are no hard limits, only gc trigger points).
    o	New function get_all_vars() to retrieve all the	(untransformed) variables that the default method of	model.frame() would use to create the model frame.
    o	interaction() has a new argument 'lex.order'.
    o   initialize() (in methods) now tries to be smarter about        updating the new instance in place, thereby reducing        copying.
    o	install.packages(dependencies = NA) is a new default, which is	to install essential dependencies when installing from	repositories to a single library.  As a result of this change,	update.packages() will install any new dependencies of the	packages it is updating (alongside the package in the same	library tree).
	If 'lib' is not specified or is specified of length one and	the chosen location is not a writable directory,	install.packages() offers to create a personal library	directory for you if one does not already exist, and to	install there.
    o	is.atomic, is.call, is.character, is.complex, is.double (== is.real),	is.environment, is.expression, is.function, is.integer,	is.list, is.logical, is.null, is.object, is.pairlist,	is.recursive, is.single and is.symbol (== is.name) are no	longer internally S3 generic, nor can S4 methods be written	for them.
	The "factor" methods of is.integer and is.numeric have been	replaced by internal code.
    o	Added is.raw() for completeness.
    o	l10n_info() also reports if the current locale is Latin-1.
    o	levels<-(), names() and names<-() now dispatch internally for	efficiency and so no longer have S3 default methods.
    o	.libPaths() now does both tilde and glob expansion.
    o	Functions lm(), glm() loess(), xtabs() and the default method	of model.frame() coerce their 'formula'	argument (if supplied)	to a formula.
    o	max(), min() and range() now work with character vectors.
    o	message() has a new argument 'appendLF' to handle messages	with and without newlines.  There is a new message class	packageStartupMessage() that can be suppressed separately.
    o	A new function, method.skeleton() writes a skeleton version of        a call to setMethod() to a file, with correct arguments and        format, given the name of the function and the method signature.
    o	mode<- and storage.mode<- do slightly less copying.
    o	nls.control(* , printEval = FALSE, warnOnly = FALSE) are two new	options to help better analyze (non-)convergence of nls(),	thanks to Kate Mullen.
	nls() and summary(nls()) now contain more information and also	print information about convergence.
    o	options(device = ) now accepts a function object as well as	the name of a function.
    o	pdf() supports new values for 'paper' of "US" (same as	"letter"), "a4r" and "USr" (the latter two meaning rotated to	landscape).  postscript() also accepts paper = "US".
    o	persp() now respects the graphical pars 'cex.axis', 'cex.lab',	'font.axis' and 'font.lab'.
    o	New faster internal functions pmax.int() and pmin.int() for	inputs which are atomic vectors without classes (called by	pmax/pmin where applicable).
	pmin/pmax are now more likely to work with classed objects:	they work with POSIXlt datetimes, for example.
    o	postscript() now by default writes grey colors (including black	and white) via 'setgray', which gives more widely acceptable	output.	 There are options to write pure RGB, CMYK or gray via	the new argument 'colormodel'.
    o	rbind.data.frame() now ignores all zero-row inputs, as well as	zero-column inputs (which it used to do, undocumented).	 This	is because read.table() can create zero-row data frames with	NULL columns, and those cannot be extended.
    o	readChar() and writeChar() can now work with a raw vector.
    o	read.table(), write.table() and allies have been moved to package	utils.
    o	rgb() now accepts the red, green and blue components in a	single matrix or data frame.
    o	New utility function RShowDoc() in package 'utils' to find and	display manuals and other documentation files.
    o	New .row_names_info() utility function finds the number of rows	efficiently for data frames; consequently, dim.data.frame()	has become very fast for large data frames with 'automatic'	row names.
    o	RSiteSearch() now also allows to search postings of the 'R-devel'	mailing list.
    o	screeplot() is now (S3) generic with a default method, thanks	to a patch from Gavin Simpson.
    o	Experimental 'verbose' argument for selectMethod().  Might be	replaced later by a better interface for method selection	inspection.
    o	Added links to source files to the parsing routines, so that	source() can now echo the original source and comments (rather	than deparsing).  This affects example() and Sweave() as well.
    o	stack() and unstack() have been moved to package utils.
    o	strptime() now sets the "tzone" attribute on the result if	tz != "".
    o	str.default() typically prints fewer entries of logical vectors.
    o	The RweaveLatex driver for Sweave() now supports two new	options: expand=FALSE, to show chunk references in the output,	and concordance=TRUE, to output the concordance between input	and output lines.
    o	system() now takes the same set of arguments on all platforms,	with those which are not applicable being ignored with a	warning.  Unix-alikes gain 'input' and 'wait', and Windows	gains 'ignore.stderr'.
    o	system.time() and proc.time() now return an object of class	"proc_time" with a print() method that returns a POSIX-like	format with names.
    o	Sys.getenv() has a new argument 'unset' to allow unset and set	to "" to be distinguished (if the OS does).  The results of	Sys.getenv() are now sorted (by name).
    o	New function Sys.glob(), a wrapper for the POSIX.2 function	glob(3) to do wildcard expansion (on systems which have it,	plus an emulation on Windows).
    o	Sys.setenv() is a new (and preferred) synonym for Sys.putenv().	The internal C code uses the POSIX-preferred 'setenv' rather	than 'putenv' where the former is available.
    o	New function Sys.unsetenv() to remove environment variables	(on systems where unsetenv is implemented or putenv can remove	variables, such as on Windows).
    o	text(), mtext(), strheight(), strwidth(), legend(), axis(),	title(), pie(), grid.text() and textGrob() all attempt to	coerce non-language annotation objects (in the sense of is.object)	to character vectors.  This is principally intended to cover	factors and POSIXt and Date objects, and is done via the	new utility function as.graphicsAnnot() in package grDevices.
    o	tcltk:tk_select.list() now chooses the width to fit the widest item.
    o	{re,un}tracemem() are now primitives for efficiency and so	migrate from 'utils' to 'base'.
    o	union(), interect(), setdiff() and setequal() now coerce their	arguments to be vectors (and they were documented only to	apply to vectors).
    o	uniroot() now works if the zero occurs at one of the ends of	the interval (suggestion of Tamas Papp).
    o	There is a new function View() for viewing matrix-like	objects in a spreadsheet, which can be left up whilst R is	running.
    o	New function withVisible() allows R level access to the	visibility flag.
    o	zip.file.extract() has been moved to package utils.

    o	A few more cases of subassignment work, e.g. <raw>[] <- <list>	and <vector>[] <- <expression>, with suitable coercion of the LHS.
    o	There is a warning if \ is used unnecessarily in a string when	being parsed, e.g. "\." where probably "\\." was intended.	("\." is valid, but the same as ".".)  Thanks to Bill Dunlap	for the suggestion.
    o	Introduced the suffix L for integer literals to create	integer rather than numeric values, e.g. 100L, 0x10L, 1e2L.
    o	Set the parser to give verbose error messages in case of	syntax errors.
    o	The class "LinearMethodsList" has been extended and will be	used to create list versions of methods, derived from the	methods tables (environments).	The older recursive	"MethodsList" class will be deprecated (by the release of	2.5.0 if possible).
    o	There are more flexible ways to specify the default library	search path.  In addition to R_LIBS and .Library, there are	.Library.site (defaults to R_HOME/site-library) and	R_LIBS_USER (defaults to a platform- and version-specific	directory in ~/R).  See ?.libPaths for details.
    o	LAPACK has been updated to version 3.1.0.  This should cause	only small changes to the output, but do remember that the sign	of eigenvectors (and principal components) is indeterminate.
    o	PCRE has been updated to version 7.0.
    o	Several functions handle row names more efficiently:
	- read.table() and read.DIF() make use of integer row names	  where appropriate, and avoid at least one copy in assigning	  them.
	- data.frame() and the standard as.data.frame() methods avoid	  generating long dummy row names and then discarding them.
	- expand.grid() and merge() generate compact 'automatic' row	  names.
	- data.matrix() and as.matrix.data.frame() have a new argument	  'rownames.force' that by default drops 'automatic' row names.
    o	<data frame>[i, j] is substantially more memory-efficient when	only a small part of the data frame is selected, especially	when (part of) a single column is selected.
    o	Command-line R (and Rterm.exe under Windows) accepts the options	'-f filename', '--file=filename' and '-e expression' to follow	other script interpreters.  These imply --no-save unless	--save is specified.
    o	Invalid bytes in character strings in an MBCS now deparse/print	in the form "\xc1" rather than "<c1>", which means they can be	parsed/scanned.
    o	Printing functions (without source attributes) and expressions	now preserves integers (using the L suffix) and NAs (using	NA_real_ etc where necessary).
    o	The 'internal' objects .helpForCall, .tryHelp and topicName are	no longer exported from 'utils'.
    o	The internal regex code has been upgraded to glibc 2.5 (from 2.3.6).
    o	Text help now attempts to display files which have an \encoding	section in the specified encoding via file.show().
    o	R now attempts to keep track of character strings which are	known to be in Latin-1 or UTF-8 and print or plot them	appropriately in other locales.	 This is primarily intended	to make it possible to use data in Western European languages	in both Latin-1 and UTF-8 locales.  Currently scan(),	read.table(), readLines(), parse() and source() allow	encodings to be declared, and console input in suitable	locales is also recognized.
	New function Encoding() can read or set the declared encodings	for a character vector.
    o	There have been numerous performance improvements to the data	editor on both Windows and X11.	 In particular, resizing the	window works much better on X11.

DEPRECATED & DEFUNCT
    o	symbol.C() and symbol.For() are defunct, and have been replaced	by wrappers that give a warning.
    o	Calling a builtin function with an empty argument is now always	an error.
    o	The autoloading of ts() is defunct.
    o	The undocumented reserved word GLOBAL.ENV has been removed.	(It was yet another way to get the value of the symbol	.GlobalEnv.)
    o	The deprecated behaviour of structure() in adding a class when	specifying with "tsp" or "levels" attributes is now defunct.
    o	unix() is now finally defunct, having been deprecated for	at least seven years.
    o	Sys.putenv() is now deprecated in favour of Sys.setenv(),	following the POSIX recommendation.
    o	Building R with --without-iconv is deprecated.
    o	Using $ on an atomic vector is deprecated (it was previously	valid and documented to return NULL).
    o	The use of storage.mode<- for other than standard types (and        in particular for value "single") is deprecated: use mode<-	instead.

INSTALLATION
    o	A suitable iconv (e.g. from glibc or GNU libiconv) is	required.  For 2.5.x only you can build R without it by	configuring using --without-iconv.
    o	There is support again for building on AIX (tested on 5.2 and 5.3)	thanks to Ei-ji Nakama.
    o	Autoconf 2.60 or later is used to create 'configure'.  This	makes a number of small changes, and incorporates the changes	to the detection of a C99-compliant C compiler backported for	2.4.1.
    o	Detection of a Java development environment was added such that	packages don't need to provide their own Java detection. Newly	added make variables are JAVAC, JAVAH, JAR and JAVA_CPPFLAGS.
	R CMD javareconf was updated to look for the corresponding	Java tools as well.
	In addition, Java detection honors user-supplied environment	variables JAVA_CPPFLAGS, JAVA_LIBS and JAVA_LD_LIBRARY_PATH.
    o	Added workaround for reported non-POSIX sh on OSF1.  (PR#9375)
    o	'make install-strip' now works, stripping the executables and	also the shared libraries and modules on platforms where	'libtool' knows how to do so.
    o	Building R as a shared library and standalone nmath now	installs pkg-config files 'libR.pc' and 'libRmath.pc' respectively.
    o	Added test for insufficiently complete implementation of sigaction.

C-LEVEL FACILITIES
    o	Functions str2type, type2char and type2str are now available in	Rinternals.h.
    o	Added support for Objective C in R and packages (if available).
    o	R_ParseVector() has a new 4th argument 'SEXP srcfile' allowing	source references to be attached to the returned expression list.
    o	Added ptr_R_WriteConsoleEx callback which allows consoles to	distinguish between regular output and errors/warnings.	To ensure backward compatibility it is only used if	ptr_R_WriteConsole is set to NULL.

UTILITIES
    o	Additional Sweave() internal functions are exported to help	writing new drivers, and RweaveLatexRuncode() is now created	using a helper function (all from a patch submitted by Seth	Falcon).
    o	The following additional flags are accessible from R CMD config:	OBJC, OBJCFLAGS, JAR, JAVA, JAVAC, JAVAH, JAVA_HOME, JAVA_LIBS	and JAVA_CPPFLAGS.
    o	R CMD build now takes the package name from the DESCRIPTION	file and not from the directory.  (PR#9266)
    o	checkS3methods() (and hence R CMD check) now checks agreement	with primitive internal generics, and checks for additional	arguments in methods where the generic does not have a '...'	argument.
	codoc() now knows the argument lists of primitive functions.
    o	R CMD INSTALL and R CMD REMOVE now use as the default library	(if -l is not specified) the first library that would be used	if R were run in the current environment (and they run R to	find it).
    o	There is a new front-end Rscript which can be used for #!	scripts and similar tasks.  See help("Rscript") and 'An	Introduction to R' for further details.
    o	R CMD BATCH (not Windows) no longer prepends	'invisible(options(echo = TRUE))' to the input script.  This	was the default unless --slave is specified and the latter is	no longer overridden.
	On all OSes it makes use of the -f argument to R, so	file("stdin") can be used from BATCH scripts.
	On all OSes it reports proc.time() at the end of the script	unless q() is called with options to inhibit this.
    o	R CMD INSTALL now prepends the installation directory (if	specified) to the library search path.
    o	Package installation now re-encodes R files and the NAMESPACE	file if the DESCRIPTION file specifies an encoding, and sets	the encoding used for reading files in preparing for	LazyData.  This will help if a package needs to be used in	(say) both latin1 and UTF-8 locales on different systems.
    o	R CMD check now reports on non-ASCII strings in datasets.	(These are a portability issue, which can be alleviated by	marking their encoding: see 'Writing R Extensions'.)
    o	Rdiff now converts CRLF endings in the target file, and	converts UTF-8 single quotes in either to ASCII quotes.
    o	New recommended package 'codetools' by Luke Tierney provides	code-analysis tools.  This can optionally be used by 'R CMD	check' to detect problems, especially symbols which are not	visible.
    o	R CMD config now knows about LIBnn .
    o	New recommended package 'rcompgen' by Deepayan Sarkar	provides support for command-line completion under the Unix	terminal interface (provided readline is enabled) and the	Windows Rgui and Rterm front ends.

BUG FIXES
    o	gc() can now report quantities of 'Vcells' in excess of 16Gb on	64-bit systems (rather than reporting NA).
    o	Assigning class "factor" to an object now requires it has	integer (and not say double) codes.
    o	structure() ensures that objects with added class "factor" have	integer codes.
    o	The "formula" and "outer" attributes of datasets 'ChickWeight',	'CO2', 'DNase', 'Indometh', 'Loblolly', 'Orange' and 'Theoph'	now have an empty environment and not the environment used to	dump the datasets in the package.
    o	Dataset 'Seatbelts' now correctly has class c("mts", "ts").
    o	str() now labels classes on data frames more coherently.
    o	Several 'special' primitives and .Internals could return	invisibly if the evaluation of an argument led to the	visibility flag being turned off.  These included	as.character(), as.vector(), call(), dim(), dimnames(),	lapply(), rep(), seq() and seq_along().  Others (e.g. dput()	and print.default()) could return visibly when this was not	intended.
    o	Several primitives such as dim() were not checking the number	of arguments supplied before method dispatch.
    o	Tracing of primitive functions has been corrected.  It should	now be the case that tracing either works or is not allowed	for all primitive functions. (Problems remain if you make a	primitive into a generic when it is being traced.  To be fixed	later.)
    o	max.col() now omits infinite values in determining the	relative tolerance.
    o	R CMD Sweave and R CMD Stangle now respond to --help and --version	like other utilities.
    o	.libPaths() adds only existing directories (as it was	documented to, but could add non-directories).
    o	setIs() and setClassUnion() failed to find some existing	subclasses and produced spurious warnings, now fixed.
    o	data.frame() ignored 'row.names' for 0-column data frames, and	no longer treats an explicit row.names=NULL differently from	the default value.
    o	identical() looked at the internal structure of the	'row.names' attribute, and not the value visible at R level.
    o	abline(reg) now also correctly works with intercept-only lm	models, and abline() warns more when it's called illogically.
    o	warning() was truncating messages at	getOption("warning.length") - 1 (not as documented), with no	indication.  It now appends '[... truncated]'.
    o	Stangle/Sweave were throwing spurious warnings if options	'result' or 'strip.white' were unset.
    o	all.equal() was ignoring 'check.attributes' for list and	expression targets, and checking only attributes on raw vectors.	Logical vectors were being compared as if they were numeric,	(with a mean difference being quoted).
    o	Calculating the number of significant digits in a number was	itself subject to rounding errors for digits >= 16.  The	calculation has been changed to err on the side of slightly	too few significant digits (but still at least 15) rather than	far too many.  (An example is print(1.001, digits=16).)
    o	unlink() on Unix-alikes failed for paths containing spaces.
    o	substr() and friends treated NA 'start' or 'stop' incorrectly.
    o	merge(x, y, all.y = TRUE) would sometimes incorrectly return	logical columns for columns only in y when there were no	common rows.
    o	read.table(fn, col.names=) on an empty file returned NULL	columns, rather than logical(0) columns (which is what results	from reading a file with just a header).
    o	grid.[xy]axis(label=logical(0)) failed.
    o	expression() was unnecessarily duplicating arguments.
    o	as.expression(<list>) returned a single-element expression	vector, which was not compatible with S: it now copies lists	element-by-element.
    o	supsmu(periodic = TRUE) could segfault.  (PR#9502, detection	and patch by Bill Dunlap.)
    o	pmax/pmin called with only logical arguments did not coerce to	numeric, although they were documented to do so (as max/min	do).
    o	methods() did not know that cbind() and rbind() are internally	generic.
    o	dim(x) <- NULL removed the names of x, but this was always	undocumented.  It is not clear that it is desirable but it is	S-compatible and relied on, so is now documented.
    o	which(x, arr.ind = TRUE) did not return a matrix (as	documented) if 'x' was an array of length 0.
    o	C-level duplicate() truncated CHARSXPs with embedded nuls.
    o	Partial matching of attributes was not working as documented	in some cases if there were more than two partial matches or	if "names" was involved.
    o	data(package=character(0)) was not looking in ./data as	documented.
    o	summary.mlm() failed if some response names were "" (as can	easily happen if cbind() is used).
    o	The postscript() and pdf() drivers shared an encoding list	but used slightly different formats.  This caused problems if	both were used with the same non-default encoding in the same	session.  (PR#9517)
    o	The data editor was not allowing Inf, NA and NaN to be entered	in numerical columns.  It was intended to differentiate	between empty cells and NAs, but did not do so: it now does	so for strings.
    o	supsmu() could segfault if all cases had non-finite values.	(PR#9519)
    o	plnorm(x, lower.tail=FALSE) was returning the wrong tail for	x <= 0.  (PR#9520)
    o	which.min() would not report a minimum of +Inf, and	analogously for which.max().  (PR#9522)
    o	'R CMD check' could fail with an unhelpful error when checking	Rd files for errors if there was only one file and that had a	serious error.  (PR#9459)
    o	try() has been reimplemented using tryCatch() to solve two	problems with the original implementation: (i) try() would run	non-NULL options("error") expressions for errors within a try, and	(ii) try() would catch user interrupts.
    o	str(obj) could fail when obj contained a dendrogram.
    o	Using <data frame>[, <last column>] <- NULL failed (PR#9565)
    o	choose(n, k) could return non-integer values for integer n and	small k on some platforms.
    o	nclass.scott(x) and nclass.FD(x) no longer return NaN when var(x)	or IQR(x) (respectively) is zero.
	hist() now allows breaks = 1 (which the above patch will	return), but not breaks = Inf (which gave an obscure error).
    o	strptime("%j") now also works for the first days of Feb-Dec.	(PR#9577)
    o	write.table() now recovers better if 'file' is an unopened	connection.  (It used to open it for both the column names and	the data.)
    o	Fixed bug in mosaicplot(sort=) introduced by undocumented	change in R 2.4.1 (changeset r39655).
    o	contr.treatment(n=0) failed with a spurious error message.	(It remains an error.)
    o	as.numeric() was incorrectly documented: it is identical to	as.double.
    o	jitter(rep(-1, 3)) gave NaNs. (PR#9580)
    o	max.col() was not random for a row of zeroes. (PR#9542)
    o	ansari.test(conf.int=TRUE, exact=FALSE) failed.
    o	trace() now works on S3 registered methods, by modifying the	version in the S3 methods table.
    o	rep(length=1, each=0) segfaulted.
    o	postscript() could overflow a buffer if used with a long	'command' argument.
    o	The internal computations to copy complete attribute lists did	not copy the flag marking S4 objects, so the copies no longer	behaved like S4 objects.
    o	The C code of nlminb() was altering a variable without	duplicating it.  (This did not affect nlminb() but would have	if the code was called from a different wrapper.)
    o	smooth(kind = "3RS3R") (the current default) used .C(DUP =	FALSE) but altered its input argument.  (This was masked by	duplication in as.double.)
    o	The signature for the predefined S4 method for as.character()	was missing '...' .
    o	readBin(<raw vector>) could read beyond the end of the vector	when size-changing was involved.
    o	The C entry point PrintValue (designed to emulate auto-printing)	would not find show() for use on S4 objects, and did not have	the same search path (for show(), print() and print() methods)	as auto-printing.  Also, auto-printing and print() of S4	objects would fail to find 'show' if the methods namespace was	loaded but the package was not attached (or otherwise not in	the search path).
    o	print() (and auto-printing) now recognize S4 objects even when	'methods' is not loaded, and print a short summary rather than	dump the internal structure.
    o	Sweave and Stangle had problems due to partial matching of code	chunk names when run with split=TRUE.
    o	install.packages() on a source package now ensures that	R CMD INSTALL sees the same library search path as	install.packages() did when computing dependencies.
    o	density() now ensures its 'y' values are non-negative. (PR#8876)
    o	is.finite() and is.infinite() (and many other primitives)	are not internally generic and so do not support S4 methods,	which can no longer be set. (PR#7951)
    o	nls(algorithm = "port") now accepts a list 'start' argument,	as for the other methods (and as documented).
    o	Standard errors from the "ar" method of predict() could be	wrong for the last p predictions for models near	non-stationarity. (PR#9614)



--    O__  ---- Peter Dalgaard             Øster Farimagsgade 5, Entr.B  c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K (*) \(*) -- University of Copenhagen   Denmark          Ph:  (+45) 35327918~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)                  FAX: (+45) 35327907
_______________________________________________R-announce@stat.math.ethz.ch mailing listhttps://stat.ethz.ch/mailman/listinfo/r-announce
______________________________________________R-help@stat.math.ethz.ch mailing listhttps://stat.ethz.ch/mailman/listinfo/r-helpPLEASE do read the posting guide http://www.R-project.org/posting-guide.htmland provide commented, minimal, self-contained, reproducible code.

