From r-help-bounces@stat.math.ethz.ch  Wed Jun  6 21:35:30 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l571ZThB028485
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 6 Jun 2007 21:35:29 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l571Ytnv022561;
	Thu, 7 Jun 2007 03:35:05 +0200
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.6 required=5.0 tests=AWL, BAYES_50, DKIM_SIGNED,
	DKIM_VERIFIED autolearn=no version=3.2.0
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.174])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l571Ym1i022522
	for <r-help@stat.math.ethz.ch>; Thu, 7 Jun 2007 03:34:48 +0200
Received: by ug-out-1314.google.com with SMTP id 36so541502uga
	for <r-help@stat.math.ethz.ch>; Wed, 06 Jun 2007 18:34:48 -0700 (PDT)
Received: by 10.67.102.16 with SMTP id e16mr807230ugm.1181180088321;
	Wed, 06 Jun 2007 18:34:48 -0700 (PDT)
Received: by 10.67.28.5 with HTTP; Wed, 6 Jun 2007 18:34:48 -0700 (PDT)
Message-ID: <971536df0706061834g1c24c13dv9ce6be5b6ae55b51@mail.gmail.com>
Date: Wed, 6 Jun 2007 21:34:48 -0400
From: "Gabor Grothendieck" <ggrothendieck@gmail.com>
To: "Benilton Carvalho" <bcarvalh@jhsph.edu>
In-Reply-To: <E2350202-E64C-4E64-B958-D624926FE56F@jhsph.edu>
MIME-Version: 1.0
Content-Disposition: inline
References: <E2350202-E64C-4E64-B958-D624926FE56F@jhsph.edu>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: "r-help@lists.r-project.org server posting" <r-help@stat.math.ethz.ch>
Subject: Re: [R] name of the variable that will contain the result of a
	function
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

Don't think you can do that but you could respecify your function
so that the assigned variable must appear as the first argument:

foo <- function(y, arg) {
	y <- substitute(y)
	if (is.name(y)) assign(deparse(y), arg+1, parent.frame())
	else cat("not assigned\n")
	invisible()
}

if (exists("zz")) rm(zz)
foo(zz, 3)
zz
foo(zz, 4)
zz

xx <- foo(zz, 99)
xx
zz
foo(0, 99)
foo(x+1, 99)


On 6/6/07, Benilton Carvalho <bcarvalh@jhsph.edu> wrote:
> Hi everyone,
>
> say I have a function called 'foo', which takes the argument arg1.
>
> Is there any mechanism that I can use to "learn" about the variable
> where foo(arg1) is going to be stored?
>
> For example:
>
> x <- foo(arg1)
>
> so, inside foo() I'd like to be able to get the string "x".
>
> if,
>
> foo(arg1)
>
> was used insted, I'd like to get NA.
>
> thank you very much,
>
> b
>
>
>
>
>
>
> --
> Benilton Carvalho
> PhD Candidate
> Department of Biostatistics
> Bloomberg School of Public Health
> Johns Hopkins University
> bcarvalh@jhsph.edu
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

