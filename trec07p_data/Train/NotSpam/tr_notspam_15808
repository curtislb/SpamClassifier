From beginners-return-92111-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun  3 11:01:34 2007
Return-Path: <beginners-return-92111-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l53F1WhB016739
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 3 Jun 2007 11:01:33 -0400
Received: (qmail 13497 invoked by uid 514); 3 Jun 2007 15:01:23 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 13488 invoked from network); 3 Jun 2007 15:01:22 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 Jun 2007 15:01:22 -0000
Received: (qmail 17157 invoked by uid 225); 3 Jun 2007 15:01:22 -0000
Delivered-To: beginners@perl.org
Received: (qmail 17139 invoked by alias); 3 Jun 2007 15:01:20 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 66.249.82.228 as permitted sender)
Received: from wx-out-0506.google.com (HELO wx-out-0506.google.com) (66.249.82.228)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 03 Jun 2007 08:01:12 -0700
Received: by wx-out-0506.google.com with SMTP id r21so1033796wxc
        for <beginners@perl.org>; Sun, 03 Jun 2007 08:01:08 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=nFeeQHNbrzTvNRbhMgPUAFAOSb9cTEFmuvoesbg9lWl2vLW1jcE5bBY1SWWVFe7nAl1twK4XoyItKgCm84EM35dPG1uExb85eFevmIUIwgXiuzLBMjJYcjg3EjLdenu8sawVtY3ivxQ6xnMvZ/WDNp46FggsLdTBp831Pv1/pDs=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=YTn6ZBl0hhpwRhFEmw6sf/KeIs9++EL9yURTmt3cA1/jyMiF4LPKn1zq22x3efQZUOH+X5sIpFYYKhQIV+tAoaFoypICdQdLkbGhTP/fRh8y5kqCVUlblV1L6RRw2pNVn7/AbSK0skQ2X65fpbMAoQTfvf3K8aJa+FUhzSQ0Ejo=
Received: by 10.90.49.19 with SMTP id w19mr3008217agw.1180882868452;
        Sun, 03 Jun 2007 08:01:08 -0700 (PDT)
Received: by 10.90.113.16 with HTTP; Sun, 3 Jun 2007 08:01:08 -0700 (PDT)
Message-ID: <31086b240706030801s78ebe926vbc4c2e658e38fb6b@mail.gmail.com>
Date: Sun, 3 Jun 2007 08:01:08 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Mike Lesser" <exceptions@earthlink.net>
Subject: Re: Paths, Spaces, Getopt::Long
Cc: "Beginners Perl" <beginners@perl.org>
In-Reply-To: <B10E7F7C-1342-4A53-B4AC-66860F9EC452@earthlink.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <B10E7F7C-1342-4A53-B4AC-66860F9EC452@earthlink.net>
X-Google-Sender-Auth: 7b1d967341fa8c1e

On 6/3/07, Mike Lesser <exceptions@earthlink.net> wrote:

> I use the module Getopt::Long to read arguments, one of which is a
> file path that may have spaces. The path string that is returned from
> Getopt has spaces without escape chars.  The string seems to be fine
> for Perl use, but not so great for other things, such as the Shell
> module, which can't handle the spaces.

So, the problem isn't that Getopt::Long is giving you the correct file
name, which happens to contain spaces. The problem is that you're
passing a string containing shell metacharacters (spaces) to the
shell. Yes?

I fear that you're using the Shell module for more than it was
intended to do, perhaps because you don't know about system().

One easy solution may be to give a list of arguments to system(). The
first is the name of the program you're trying to run, the rest of the
list are the command-line arguments to give it. You don't need to
escape anything, because the strings are passed as-is.

  # use the system's chmod command on a list of filenames
  system "chmod", "u+w", @filenames;

Hope this helps!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


