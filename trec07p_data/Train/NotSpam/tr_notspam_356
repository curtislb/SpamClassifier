From beginners-return-90793-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Apr 10 03:34:54 2007
Return-Path: <beginners-return-90793-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3A7Yr0I025938
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 10 Apr 2007 03:34:54 -0400
Received: (qmail 24666 invoked by uid 514); 10 Apr 2007 07:34:27 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 24657 invoked from network); 10 Apr 2007 07:34:26 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Apr 2007 07:34:26 -0000
Received: (qmail 4833 invoked by uid 225); 10 Apr 2007 07:34:26 -0000
Delivered-To: beginners@perl.org
Received: (qmail 4779 invoked by alias); 10 Apr 2007 07:34:22 -0000
X-Spam-Status: No, hits=3.0 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,DNS_FROM_RFC_ABUSE,DNS_FROM_RFC_POST,DNS_FROM_RFC_WHOIS,FORGED_YAHOO_RCVD,HTML_30_40,HTML_MESSAGE
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from mta6.mail-relay.ubc.ca (HELO mta6.mail-relay.ubc.ca) (137.82.45.12)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 10 Apr 2007 00:34:18 -0700
Received: from mta1.interchange.ubc.ca (mta1.interchange.ubc.ca [142.103.145.69])
	by mta6.mail-relay.ubc.ca (8.12.11.20060308/8.12.11) with ESMTP id l3A7YAAq013426
	for <beginners@perl.org>; Tue, 10 Apr 2007 00:34:10 -0700 (PDT)
	(envelope-from oasf2004@yahoo.com)
Received: from [127.0.0.1] (S0106000c41ce0f10.vc.shawcable.net [24.80.241.24])
 by smtp.interchange.ubc.ca
 (iPlanet Messaging Server 5.2 HotFix 1.21 (built Sep  8 2003))
 with ESMTPSA id <0JG900GDUUCYXI@smtp.interchange.ubc.ca> for
 beginners@perl.org; Tue, 10 Apr 2007 00:34:10 -0700 (PDT)
Date: Tue, 10 Apr 2007 00:34:18 -0700
From: Hoffmann <oasf2004@yahoo.com>
Subject: Re: how these two variables are equal numerically?
In-reply-to: <20070410072336.19025.qmail@lists.develooper.com>
To: Perl Mailing List <beginners@perl.org>
Message-id: <461B3DFA.1040704@yahoo.com>
MIME-version: 1.0
Content-type: multipart/alternative;
 boundary=------------030305090900010601010506
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
References: <461B34E8.6010502@yahoo.com>
 <20070410072336.19025.qmail@lists.develooper.com>
X-UBC-Scanned: Sophos PureMessage 4.7.1.128075, Antispam-Engine: 2.5.0.283055, Antispam-Data: 2007.4.9.235535
X-UBC-Relayed: Relayed through mail-relay.ubc.ca
X-PerlMx-Spam: Probability=8%, Report=FORGED_FROM_YAHOO 0.1, HTML_NO_HTTP 0.1, __BAT_BOUNDARY 0, __CT 0, __CTYPE_HAS_BOUNDARY 0, __CTYPE_MULTIPART 0, __CTYPE_MULTIPART_ALT 0, __FROM_YAHOO 0, __HAS_MSGID 0, __MIME_HTML 0, __MIME_VERSION 0, __SANE_MSGID 0, __TAG_EXISTS_HTML 0, __USER_AGENT 0
X-Spam-Level: 
X-Old-Spam-Flag: No
Status: O
Content-Length: 1068
Lines: 49

--------------030305090900010601010506
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Dr.Ruud wrote:
> Hoffmann schreef:
>   
>> Could some one explain how, in the example below, $name and $goodguy
>> are equal numerically?
>>
>> $name = 'Markkkk';
>>
>> $goodguy = 'Tony';
>>
>> if ($name == $goodguy) {
>>         print "Hello, Sir.\n";
>> } else {
>>         print "Begone, evil peon!\n";
>> }
>>     
>
> Try also with something like 
>
> #!/usr/bin/perl
>   use strict;
>   use warnings;
>
>   my $name    = '1Markkkk';
>   my $goodguy = '2Tony';
>
>
>   if ($name eq $goodguy) {
>       print "Hello, Friend.\n";
>   }
>   elsif ($name == $goodguy) {
>       print "Hello, Anyone.\n";
>   }
>   else {
>       print "Begone, evil peon!\n";
>   }
>
> __END__
>
>   
I did exactly that. And I know that the correct way to compare strings 
is by using 'eq'. The question is: by considering the original post, 
which value Perl 'gives' to those numerical variables? Is it 1==1?

--------------030305090900010601010506--

