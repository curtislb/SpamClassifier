From perl6-all-return-80586-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Apr 14 14:16:22 2007
Return-Path: <perl6-all-return-80586-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3EIGL0I004209
	for <ktwarwic@speedy.uwaterloo.ca>; Sat, 14 Apr 2007 14:16:22 -0400
Received: (qmail 27312 invoked by uid 514); 14 Apr 2007 18:15:57 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 27305 invoked from network); 14 Apr 2007 18:15:57 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Subject: [perl #39784] Make Parrot's default namespace be untyped 
From: "Allison Randal via RT" <parrotbug-followup@parrotcode.org>
Reply-To: parrotbug-followup@parrotcode.org
In-Reply-To: <20060711002346.GB5072@tytlal.topaz.cx>
References: <RT-Ticket-39784@perl.org> <20060711002346.GB5072@tytlal.topaz.cx>
Message-ID: <rt-3.6.HEAD-30557-1176574532-1759.39784-15-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #39784
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: al@shadowed.net
Cc: perl6-internals@perl.org
To: "OtherRecipients of perl Ticket #39784": ;
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit
X-RT-Original-Encoding: utf-8
Date: Sat, 14 Apr 2007 11:15:34 -0700
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00,DK_POLICY_SIGNSOME
Status: O
Content-Length: 1106
Lines: 24

On Mon Jul 10 17:25:13 2006, chip wrote:
> Parrot's default namespace implementation should be 100% untyped --
> basically just a hash with some additional methods.
> 
> Making this happen requires solving the problem of Parrot's currently
> requiring classes and class method namespaces to have the same name.
> 
> e.g. the current situation is:
> 
>     find_global 'MyClass'                # 'MyClass' is class object
>     find_global ['MyClass'], 'mymethod'  # 'MyClass' is namespace object
> 
> Depending on a typed namespace in the core of Parrot is Not OK.

It shouldn't be untyped, it should just consistently be a namespace
object. Under the new object metamodel, you can retrieve the class
object (when it exists) by calling a method on the namespace object.
And, you no longer look up methods in the global namespace anyway, you
have to look them up on the class object.

This ticket represents an alternate way to address some problems in the
earlier object system (a solution we considered at one point in the
past, but it wasn't a complete solution). So, I've marked the ticket as
rejected.

