From beginners-return-92354-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 13 09:50:38 2007
Return-Path: <beginners-return-92354-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5DDobL9008243
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 13 Jun 2007 09:50:37 -0400
Received: (qmail 17881 invoked by uid 514); 13 Jun 2007 13:50:30 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 17872 invoked from network); 13 Jun 2007 13:50:29 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Jun 2007 13:50:29 -0000
Received: (qmail 9160 invoked by uid 225); 13 Jun 2007 13:50:29 -0000
Delivered-To: beginners@perl.org
Received: (qmail 9145 invoked by alias); 13 Jun 2007 13:50:28 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of mritty@gmail.com)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Wed, 13 Jun 2007 06:50:18 -0700
Received: (qmail 17836 invoked by uid 515); 13 Jun 2007 13:50:14 -0000
To: beginners@perl.org
MBOX-Line: From news@google.com Wed Jun 13 13:50:13 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Received: (qmail 17826 invoked from network); 13 Jun 2007 13:50:13 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Jun 2007 13:50:13 -0000
Received: (qmail 9036 invoked by uid 225); 13 Jun 2007 13:50:12 -0000
Delivered-To: news-moderator-perl.beginners@perl.org
Received: (qmail 9026 invoked by alias); 13 Jun 2007 13:50:12 -0000
Received-SPF: neutral (x1.develooper.com: 130.59.1.10 is neither permitted nor denied by domain of news@google.com)
Received: from pinatubo-2.switch.ch (HELO pinatubo.switch.ch) (130.59.1.10)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 13 Jun 2007 06:50:09 -0700
Received: from [64.233.171.4] (helo=proxy.google.com)
	by pinatubo.switch.ch with esmtp (Exim 4.50)
	id 1HyTEa-000304-Sn
	for perl-beginners@moderators.isc.org; Wed, 13 Jun 2007 15:50:05 +0200
Received: from AR019023
	by proxy.google.com with ESMTP id l5DDo0dF008614
	for <perl-beginners@moderators.isc.org>; Wed, 13 Jun 2007 06:50:02 -0700
Received: (from news@localhost)
	by Google Production id l5DDo0p7024191
	for perl-beginners@moderators.isc.org; Wed, 13 Jun 2007 06:50:00 -0700
From: Paul Lalli <mritty@gmail.com>
Subject: Re: regex for matching repeated strings
Date: Wed, 13 Jun 2007 06:49:59 -0700
Organization: http://groups.google.com
Lines: 33
Message-ID: <1181742599.814379.152120@q19g2000prn.googlegroups.com>
References: <loom.20070612T175837-990@post.gmane.org>
   <58ce48dc0706121049xe249f2eqe0bc86036c4654ba@mail.gmail.com>
   <ca5781c80706121055i42b6524epbb3d9457ef646170@mail.gmail.com>
   <466EF1DA.3000604@telus.net>
   <loom.20070613T111116-614@post.gmane.org>
NNTP-Posting-Host: 204.97.183.31
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Trace: posting.google.com 1181742600 24190 127.0.0.1 (13 Jun 2007 13:50:00 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Wed, 13 Jun 2007 13:50:00 +0000 (UTC)
In-Reply-To: <loom.20070613T111116-614@post.gmane.org>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; InfoPath.1),gzip(gfe),gzip(gfe)
X-HTTP-Via: 1.0 mndnetcachea (NetCache NetApp/6.0.5)
Complaints-To: groups-abuse@google.com
Injection-Info: q19g2000prn.googlegroups.com; posting-host=204.97.183.31;
   posting-account=p3DCbw0AAAAc32agNMy1mXKInuw5KHP_
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Jun 13, 5:21 am, jlum...@arrowt.co.uk (James) wrote:
> Thanks all, I have something working
>
> > $data =~ s/(.*\n)(?=\1)//g;
>
> Can anyone explain the (?=\1) bit? I get the search replace.

Which part do you not understand?  The (?=) or the \1 or both?

(?= ) is a "positive lookahead assertion".  It "peeks" into the
pattern match to determine if the next thing matches its contents, but
it doesn not actually match those contents.  It doesn't move the
internal position pointer along, and whatever is in the (?= ) is not
part of the actual match so will not be replaced.

\1 within a pattern match means exactly what $1 will mean when the
pattern match is finished.  That is, it's whatever was matched by the
first capturing parentheses in this pattern match.  In this case,
that's .*\n.

So this pattern is searching for 0 or more of any character, followed
by the newline, and then checks to see if the next thing after that is
exactly what was matched again.  If so, the entire *MATCH* is replaced
with nothing.  Since the second instance was of the .*\n was not
actually matched, just looked for, it does not get replaced.

For more information,
perldoc perlretut
perldoc perlre
perldoc perlreref

Paul Lalli


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


