From perl6-all-return-81856-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun  6 22:13:17 2007
Return-Path: <perl6-all-return-81856-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l572DGhB028783
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 6 Jun 2007 22:13:17 -0400
Received: (qmail 26078 invoked by uid 514); 7 Jun 2007 02:13:09 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 26064 invoked from network); 7 Jun 2007 02:13:08 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Subject: [perl #37923] [TODO] build - configure framework needs tests 
From: "James Keenan via RT" <parrotbug-followup@parrotcode.org>
Reply-To: parrotbug-followup@parrotcode.org
In-Reply-To: <rt-3.6.HEAD-1668-1181115925-1488.37923-15-0@perl.org>
References: <RT-Ticket-37923@perl.org> <rt-3.6.HEAD-1668-1181115925-1488.37923-15-0@perl.org>
Message-ID: <rt-3.6.HEAD-1668-1181182343-351.37923-15-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #37923
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: jkeen@verizon.net
Cc: perl6-internals@perl.org
To: "OtherRecipients of perl Ticket #37923": ;
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit
X-RT-Original-Encoding: utf-8
Date: Wed, 06 Jun 2007 19:12:25 -0700
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

On Wed Jun 06 00:45:25 2007, ptc wrote:
> On Mon Feb 20 14:35:58 2006, jhoblitt wrote:
> > > [jhoblitt <!-- x --> at hawaii.edu - Wed Dec 14 01:56:56 2005]:
> > > 
> > > - The framework itself needs tests!!!
> > > 
> > > Parrot::Configure::Data should be low hanging fruit
> > 
> > This has been mustly done since Decemeber with the expection of
> > Parrot::Configure::Step.  Any help that can be offered would be
> > appreciated there. ;)
> 
> kid51,
> 
> you've been working hard on this area, are you able to comment on the 
> current status of the Configure tests?  We might be able to close this 
> ticket :-)

Assuming we would say completeness was one of our primary objectives, I would have to 
say:  No.

But you can form your own opinion by consulting the coverage chart here:
http://thenceforward.net/parrot/coverage/configure-build/coverage.html

This shows the results of running the configuration tests (generally, t/configure/), then 
running Configure.pl, then running the postconfiguration (t/postconfigure/) and build tools 
tests (t/tools/pmc2cutils, t/tools/ops2pmutils, t/tools/ops2cutils).  In other words:

      perl Configure.pl --test

Three comments:

1.  Parrot::Configure and Parrot::Configure::Step both still have uncovered subroutines.  I 
wouldn't describe them as "low-hanging fruit," because if they were easy to write tests for, I 
would have done it already.  But they should be tackled soon.

2.  Large parts of the config/*/* hierarchy are OS-specific.  So running tests and coverage on 
any one OS will not boost coverage across the board.  Nonetheless, there are large parts of 
that hierarchy that are *not* OS-specific.  I think the main reason to write more tests for 
them is that by doing so we increase the number of people who understand WTF is going on 
in the configuration process.  And if at some point we have to come up with non-Perl 5 ways 
of configuring Parrot, we need to have more people who understand the objectives of the 
configuration, and not just the language implementing that configuration.

3.  The build tools test, mostly in passing, substantial parts of the lib/Parrot/Pmc2c/ 
hierarchy other than Parrot::Pmc2c::Pmc2cMain (f.k.a. Parrot::Pmc2c::Utils).  It would be good 
to have more unit tests for 
Parrot::Pmc2c::Library, ::Null, ::Ref, ::SharedRef, ::StandardConst, ::StmRef 
and ::UtilFunctions.   But though those are Perl 5 packages, their focus is very much on C 
compilation, an area in which others will have to take the lead.

(Perhaps this would be a good spot to plug my talk at YAPC::NA::2007, June 28, 9:00 am:  
Component-Focused Testing:  The Case of the Parrot Configuration and Build Tools:  http://
conferences.mongueurs.net/yn2007/talk/541.  Anyone hoping to work in this area should 
be able to pick up something there, and I would love to have that opportunity to meet with 
other current and potential Parrot testers.)

kid51

