From perl6-all-return-81176-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  8 17:10:28 2007
Return-Path: <perl6-all-return-81176-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l48LARqD020299
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 8 May 2007 17:10:27 -0400
Received: (qmail 12826 invoked by uid 514); 8 May 2007 21:10:25 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 12820 invoked from network); 8 May 2007 21:10:25 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DKIM_SIGNED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of alek.storm@gmail.com designates 66.249.92.174 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=KmKruWuuUVde+9n149rAhfipC7qiFDc73qD97hYpK/CqKPPaBq1lGQpJwRhKkwPA/6w9RaSQMW4yobgwuTpH1wWpwlQospIt6pezEisKYj7ypvGK4k+6ZTTmnFZTc+b/QCHIm+UYIGUQvrR6Rl7AhzQ7OeLuJbCYcm0LNJpRE3c=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=X1+TVDlKUt7tpi0IM8EEqj0WKl+hNpAAj8WBC9zcKmnbDyZ6olQrbCK5m/1CUvBlag4cI2c6riq1bz271oVza50mvFKq6OncKT7ObbCAquXlEFo+yLdyZ7Kw4s1WmyLGRJR8/gJ+Ml9TKivVfP6rrYh2edg4pHezYPgr7HJnh2Q=
Message-ID: <189adbd0705081338t14af7dbdm8de22de66df6c70@mail.gmail.com>
Date: Tue, 8 May 2007 20:38:31 +0000
From: "Alek Storm" <alek.storm@gmail.com>
To: "Will Coleda" <will@coleda.com>
Subject: Re: [perl #42905] [PATCH] implement vtable overriding for PDD15, bugfix
Cc: perl6-internals@perl.org
In-Reply-To: <20070508142014.47991.qmail@spout.spiders.net>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_62617_2588206.1178656711617"
References: <RT-Ticket-42905@perl.org>
	 <189adbd0705071821l427409d9v94895cc11b9a374@mail.gmail.com>
	 <rt-3.6.HEAD-12281-1178587398-1986.42905-72-0@perl.org>
	 <20070508142014.47991.qmail@spout.spiders.net>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS

------=_Part_62617_2588206.1178656711617
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 5/8/07, Will Coleda <will@coleda.com> wrote:
>
> How would one implement a vtable method, (referring to self), and then add
> it to the object? You'd have to add an ":init :load :anon" block after the
>
> vtable was defined in order to invoke add_vtable_method, and you'd need a
> reference to the invokable you're adding, which means you'd have to leave
> it
> lying about in a namespace somewhere so you could extract it.
>
> So, I think keeping a compile time directive like :vtable around is still
> a
> good idea.


It works exactly the same way as 'add_method' - this is the way the new
object system works, as defined in PDD15.  Since this makes :vtable
pointless, I think we should get rid of it.

>  Because I was unsure exactly how the
> > interface is going to end up, 'add_method' also adds vtable methods
> also, if
> > :vtable is set on the method. If we decide to go with this interface,
> I'd
> > like to take it out, along with the :vtable pragma.
> >
> > Trying to override 'mark', 'destroy', or 'morph' throws an exception,
> > because overriding them might be dangerous.  An exception is also thrown
> for
> > 'init_pmc', see below.
>
> (morph) FYI, there are dynamic PMCs that already override morph, for good
> or
> evil.


Allowing 'morph' is possible.  Let's see what others think.

-- 
Alek Storm

------=_Part_62617_2588206.1178656711617--

