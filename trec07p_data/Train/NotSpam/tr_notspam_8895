From beginners-return-91462-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  9 12:28:55 2007
Return-Path: <beginners-return-91462-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l49GSsqD031110
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 9 May 2007 12:28:55 -0400
Received: (qmail 2779 invoked by uid 514); 9 May 2007 16:28:48 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 2770 invoked from network); 9 May 2007 16:28:48 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 May 2007 16:28:48 -0000
Received: (qmail 7516 invoked by uid 225); 9 May 2007 16:28:47 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7511 invoked by alias); 9 May 2007 16:28:47 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.231 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.231)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 09 May 2007 09:28:15 -0700
Received: by wr-out-0506.google.com with SMTP id 57so244751wri
        for <beginners@perl.org>; Wed, 09 May 2007 09:28:11 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=NUKV3dYIwCVRbT83oDwTf1W1xJjpKk4LGI02sJh3yrxG84RMk2otmmaRxqsVB4ZtgWzsQ1zVRY7EcsTSBD9m9azFrppi13E/isOnzKdaZAplYS3n80fVEE8c5GkJBBMD3s7euaZLFELXjv76ceJimSvfGQYE0Dz4pWNrYiZx8rA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=eMoRNxFbtm+K2unkvqfnnrVjCBMSr11TyiJsj/1wUQIPQUIzNANgiH3ieVrr1O+bwD242axekIJ7czoW8qI67yD63NFgNQgk0kmXL3cv/r+pSUb4suitJhRSvEjLhO8AVtzkoYZRyY1DPPbJEDsMZ4INduWskFPYSnJy2JTA3O8=
Received: by 10.114.167.2 with SMTP id p2mr249372wae.1178728091431;
        Wed, 09 May 2007 09:28:11 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Wed, 9 May 2007 09:28:11 -0700 (PDT)
Message-ID: <58ce48dc0705090928r542891cdr22a3b2f621064766@mail.gmail.com>
Date: Wed, 9 May 2007 12:28:11 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Jeff Pang" <pangj@earthlink.net>
Subject: Re: forking problem with dbd::mysql
Cc: beginners-list <beginners@perl.org>
In-Reply-To: <29172822.1178726953247.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <29172822.1178726953247.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>

On 5/9/07, Jeff Pang <pangj@earthlink.net> wrote:
snip
> Yes but I think is this maybe a bug in DBI class?For example,open a file handle and
> after forking child close that handle,this would not affect parent's handle.
snip

It definitely violates the principle of least surprise, but it is also
a very hard problem.  File handles are much simpler* in comparison.
The handle is auto-disconnecting so that you don't accidentally exit
your script leaving the database connection open.  Imagine a script
that connects to the database, runs a short query, and then ends.  Now
imagine that script running several times a second.  Each time it runs
it leaks a connection that is not reclaimed by the server until it
times out (if it times out).  The proper way to handle this (in my
opinion, which might be terribly flawed since I haven't thought about
it very hard yet) is to have some sort of flag that can be set on the
database handle to tell the DBI to destroy it without closing the
connection.  This flag could be set in the child and everybody would
be happy.  I am looking in the docs now to see if such a flag exists.
If it doesn't then I am going to bug the maintainers of both the DBI
and DBD::mysql to add it.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


