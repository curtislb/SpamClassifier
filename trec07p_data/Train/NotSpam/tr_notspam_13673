From beginners-return-91901-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat May 26 13:25:18 2007
Return-Path: <beginners-return-91901-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4QHPFqD010503
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 26 May 2007 13:25:16 -0400
Received: (qmail 15886 invoked by uid 514); 26 May 2007 17:25:05 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 15877 invoked from network); 26 May 2007 17:25:05 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 May 2007 17:25:05 -0000
Received: (qmail 24828 invoked by uid 225); 26 May 2007 17:25:05 -0000
Delivered-To: beginners@perl.org
Received: (qmail 24814 invoked by alias); 26 May 2007 17:25:04 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of mritty@gmail.com)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Sat, 26 May 2007 10:24:48 -0700
Received: (qmail 15871 invoked by uid 515); 26 May 2007 17:24:44 -0000
To: beginners@perl.org, perl-beginners@moderators.isc.org
MBOX-Line: From news@google.com Sat May 26 17:24:43 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Received: (qmail 15863 invoked from network); 26 May 2007 17:24:42 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 May 2007 17:24:42 -0000
Received: (qmail 24639 invoked by uid 225); 26 May 2007 17:24:41 -0000
Delivered-To: news-moderator-perl.beginners@perl.org
Received: (qmail 24630 invoked by alias); 26 May 2007 17:24:40 -0000
Received-SPF: neutral (x1.develooper.com: 216.168.1.22 is neither permitted nor denied by domain of news@google.com)
Received: from trinity.supernews.net (HELO trinity.supernews.net) (216.168.1.22)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 26 May 2007 10:24:37 -0700
Received: from proxy.google.com ([64.233.167.4]:57376)
	by trinity.supernews.net with esmtps (TLSv1:AES256-SHA:256)
	(Exim 4.66 (FreeBSD))
	(envelope-from <news@google.com>)
	id 1Hs00H-000Nhj-Jt
	for perl-beginners@moderators.isc.org; Sat, 26 May 2007 17:24:33 +0000
Received: from AR019023
	by proxy.google.com with ESMTP id l4QHONYH005642
	for <perl-beginners@moderators.isc.org>; Sat, 26 May 2007 10:24:23 -0700
Received: (from news@localhost)
	by Google Production id l4QHONDg007502
	for perl-beginners@moderators.isc.org; Sat, 26 May 2007 10:24:23 -0700
From: Paul Lalli <mritty@gmail.com>
Subject: Re: accesing a hash of an array of hashes
Date: 26 May 2007 10:24:16 -0700
Organization: http://groups.google.com
Lines: 121
Message-ID: <1180200256.166884.73270@o5g2000hsb.googlegroups.com>
References: <1180181877.144747.216770@p77g2000hsh.googlegroups.com>
NNTP-Posting-Host: 74.70.185.44
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Trace: posting.google.com 1180200263 7480 127.0.0.1 (26 May 2007 17:24:23 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Sat, 26 May 2007 17:24:23 +0000 (UTC)
In-Reply-To: <1180181877.144747.216770@p77g2000hsh.googlegroups.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1),gzip(gfe),gzip(gfe)
Complaints-To: groups-abuse@google.com
Injection-Info: o5g2000hsb.googlegroups.com; posting-host=74.70.185.44;
   posting-account=p3DCbw0AAAAc32agNMy1mXKInuw5KHP_
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.1 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On May 26, 8:17 am, pdcoo...@blueyonder.co.uk (Pauld) wrote:
> ive read a load of data in  from a CSV file with Text::CSV and ended
> up with a hash (%hash) where the keys are the column labels.
> my  @headings=split(/,/,$rows[0])

You're use()'ing Text::CSV, but you're not actually using Text::CSV.
Why?

> and then
>
> for (my $j=1;$j<$#rows;$j++)

Is there a reason you're ignoring the last row completely?

> {
> my $status  = $csv->parse ($rows[$j]);   # parse a CSV string into
> fields

Storing the status is rather pointless if you don't bother actually
checking it. . .

> my @columns = $csv->fields ();           # get the parsed fields
>
> for (my $i=0;$i<$#columns;$i++)

Now you're ignoring the last column.  Do you understand that $#foo is
the *last index* of @foo, and so looping until less than $#foo stops
before the last element?

>   {$hash{$headings[$i]}=$columns[$i];}

Of course, that entire loop would be better served to be a hash
slice...

>
> I want to  process the data once its grouped by the date field present
> in $hash. So i think I want a hash of dates  where the key is that
> date field
> I  push onto the value the hashes of the records that contain the date
>
> push @{$Hofdates{$hash{DATE}}},\%hash;
>
> but im having a problem working out how to access the  individual
> items in the  hashes that are elements of the array

You should read:
perldoc perllol
perldoc perldsc

Go step by step:
(1) %Hofdates is your overall hash.
(2) $Hofdates{'2007-05-26'} is one element of the hash.  That element
is a reference to an array.
(3) @{$Hofdates{'2007-05-26'}} is the array that (2) references.
(4) ${$Hofdates{'2007-05-26'}}[0] is the first element of (3).  That
element is a reference to a hash.
(5) %{${$Hofdates{'2007-05-26'}}[0]} is the hash that (4) references.
(6) ${${$Hofdates{'2007-05-26'}}[0]}{NAME} is the value of (5) at the
key 'NAME'
(7) $Hofdates{'2007-05-26'}[0]{NAME} is the same as (6), but with all
unnecessary punctuation removed.  (See perldocs listed above)

Once you get used to Perl's multi-level structures, you'll find you
don't need to go through this process, as the end result just "makes
sense".

Please note, whenever possible, please try to post a short-but-
complete script that demonstrates what you're trying to do.  That way
we can help you see what you might have done wrong.  For example:

#!/usr/bin/perl
use strict;
use warnings;
use Text::CSV;
use Data::Dumper;

my $csv = Text::CSV->new();
my %records_for;

my $heading = <DATA>;
$csv->parse($heading)
  or die "Could not parse '$heading'.  Failed on " . $csv-
>error_input;
my @heading = $csv->fields();
while (my $line = <DATA>) {
  $csv->parse($line)
    or die "Could not parse line $..  Failed on " . $csv->error_input;
  my @columns = $csv->fields();
  my %hash;
  #use a hash slice rather than a for loop.
  @hash{@heading} = @columns;
  push @{$records_for{$hash{DATE}}}, \%hash;
}

#Take a look at your structure.
print Dumper(\%records_for);

#Get the name of the 2nd record with date '2007-05-26';
print $records_for{'2007-05-26'}[1]{'NAME'}, "\n";

#or, get the names of all records:
foreach my $date (keys %records_for) {
  my $i = 0;
  foreach my $record (@{$records_for{$date}}) {
    print "$date($i): $record->{NAME}\n";
    $i++;
  }
}


__DATA__
NAME,DATE,COLOR,SIZE
Paul,2007-05-26,blue,large
John,2007-04-21,red,small
Mary,2007-05-26,orange,medium
Peter,2006-01-30,blue,small


Hope this helps,
Paul Lalli


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


