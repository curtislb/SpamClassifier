From beginners-return-90827-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 11 12:10:02 2007
Return-Path: <beginners-return-90827-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3BGA00I018860
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 11 Apr 2007 12:10:00 -0400
Received: (qmail 26216 invoked by uid 514); 11 Apr 2007 16:09:32 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 26207 invoked from network); 11 Apr 2007 16:09:32 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 11 Apr 2007 16:09:32 -0000
Received: (qmail 30078 invoked by uid 225); 11 Apr 2007 16:09:32 -0000
Delivered-To: beginners@perl.org
Received: (qmail 30063 invoked by alias); 11 Apr 2007 16:09:31 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.234 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.234)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 11 Apr 2007 09:09:26 -0700
Received: by wr-out-0506.google.com with SMTP id i22so164719wra
        for <beginners@perl.org>; Wed, 11 Apr 2007 09:09:21 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=kwQPfQgQsju6wzYxqDRn1Amld9xaYA0Djs+rsgz7AcOVU0Ce+BYDnEvkKwrBlIu6tM7+W0QVdqo38DwmMg6iLHZAiIXYhFPe8Q/rtP6hNgFGpw9GjsvRpzAmaj7k+tWl2aP37UBP9HD7sTywG2AYM0ylAyEAfAGD8XpLMU1yaWk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Bs5+DrYK4BtGoAzrpY4zUK2KQnBRmzszMMHyvUhuMS91SLBLiX4GleEosnuQaArHBszTX57u3btMnf6dKu4IMEwBpV+Tf6O3tyuE2VcbqLCo5Mv1gV2ZPlco27xn5ghwmUixjbyGg6idxhDySSQyBxen9hG2dBr7SHGxs+Fb/A8=
Received: by 10.114.136.1 with SMTP id j1mr329101wad.1176307761163;
        Wed, 11 Apr 2007 09:09:21 -0700 (PDT)
Received: by 10.115.54.15 with HTTP; Wed, 11 Apr 2007 09:09:21 -0700 (PDT)
Message-ID: <58ce48dc0704110909h55ef4ea6g9f55ead5a9351ea8@mail.gmail.com>
Date: Wed, 11 Apr 2007 12:09:21 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Tom Phoenix" <tom@stonehenge.com>
Subject: Re: CGI Header
Cc: "Jen mlists" <practicalperl@gmail.com>,
   "beginners perl" <beginners@perl.org>
In-Reply-To: <31086b240704110750t6155976amc67eba75add2b572@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fbe35f750704102127i6dccef04gadd22ff949d8479b@mail.gmail.com>
	 <31086b240704102136y5d467bddk53bf77a79e0a5de7@mail.gmail.com>
	 <fbe35f750704110215y4633b15y17d8175a862b9b21@mail.gmail.com>
	 <31086b240704110750t6155976amc67eba75add2b572@mail.gmail.com>
Status: O
Content-Length: 941
Lines: 39

On 4/11/07, Tom Phoenix <tom@stonehenge.com> wrote:
snip
>   my $header_is_complete;  # starts out false
>
>   sub ensure_header {
>     return if $header_is_complete;
>     my($q) = @_;
>     print $q->header();
>     $header_is_complete = 1;
>   }
snip

Is there a reason you are not using an our variable instead of a my variable:

sub ensure_header {
    our $header_is_complete;
    return if $header_is_complete;
    my($q) = @_;
    print $q->header();
    $header_is_complete = 1;
}

Or even better using a block to hide that variable from other functions:

{ #keep $header_is_complete private to this function
    my $header_is_complete;
    sub ensure_header {
        return if $header_is_complete;
        my($q) = @_;
        print $q->header();
        $header_is_complete = 1;
    }
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


