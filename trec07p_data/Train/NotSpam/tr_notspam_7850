From beginners-return-91358-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat May  5 09:47:53 2007
Return-Path: <beginners-return-91358-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l45DlpqD027881
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 5 May 2007 09:47:52 -0400
Received: (qmail 25432 invoked by uid 514); 5 May 2007 13:47:46 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 25423 invoked from network); 5 May 2007 13:47:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 5 May 2007 13:47:46 -0000
Received: (qmail 28045 invoked by uid 225); 5 May 2007 13:47:45 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28038 invoked by alias); 5 May 2007 13:47:45 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from mail25.syd.optusnet.com.au (HELO mail25.syd.optusnet.com.au) (211.29.133.166)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 05 May 2007 06:47:43 -0700
Received: from [192.168.2.103] (c220-239-239-20.rivrw6.nsw.optusnet.com.au [220.239.239.20])
	by mail25.syd.optusnet.com.au (8.13.1/8.13.1) with ESMTP id l45DlZ9U009547
	for <beginners@perl.org>; Sat, 5 May 2007 23:47:36 +1000
Subject: hash containing a hash, sorting keys help
From: Ken Foskey <foskey@optushome.com.au>
To: "Beginners, Perl" <beginners@perl.org>
Content-Type: text/plain
Date: Sat, 05 May 2007 23:48:17 +1000
Message-Id: <1178372897.9556.8.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit

I cannot get the syntax right for child lookup, Data::Dumper confirms
that I have the structure as I expect (logic may be totally wrong
though).  I going to do a webpage pstree command.

    foreach my $child (sort keys( $parent{$pid} )) {
        dump_process( $child );
    }

Type of arg 1 to keys must be hash (not hash element) at ./visualise.cgi
line 46, near "} )"

Initial $pid is zero and the entry looks like this:

            '0' => {
                     'ntp' => 1,
                     'hplip' => 1,
                     '1' => 1,
                     'klog' => 1,
                     'cupsys' => 1,
                     '101' => 1,
                     'root' => 1,
                     '117' => 1,
                     'avahi' => 1,
                     'user' => 1
                   },


#!/usr/bin/perl -w
# vi:set sw=4 ts=4 et cin:
# $Id:$

=head1 SYNOPSIS
 
Provide a tree function of processes on a unix server
 
   usage: visualise.cgi user=username

=head1 DESCRIPTION

Use the PS command to generate a tree of commands on a Unix server.

=head1 AUTHOR

Ken Foskey

=head1 COPYRIGHT

Copyright 2007 Salmat

=cut

use warnings;
use strict;

use CGI qw(:standard);
use Data::Dumper::Simple;

my ( $line, $user, $pid, $ppid, $c, $stime, $tty, $time, $command);
my $indent = 0;

my %parent;
my %process;

my $user_selected = param('user');

sub dump_process
{
    my $pid = shift;
    $indent++;
    my $spaces = substr( "            ", 0, $indent );
    print "$spaces<li>$process{$pid}</li>\n";
    print "$spaces<ul>\n";
#    foreach my $child (sort keys( $parent{$pid} )) {
#        dump_process( $child );
#    }
    print "$spaces</ul>\n";
    $indent--;
}

open( PS, '-|', 'ps -ef' ) or die "Unable to run PS command $!";

$line = <PS>;  # ignore heading!

while( $line = <PS> ) {
    chomp $line;

    ($user, $pid, $ppid, $c, $stime, $tty, $time, $command) = split( /
*/, $line, 8 );
    if( ! $user_selected or $user_selected eq $user ) {
        $process{$pid} = $command;
        if( $ppid eq "1" ) {
            $ppid = $user;  # group users commands under 1.
            $parent{0}->{$ppid} = 1; # link up to top process.
        }
        $parent{$ppid}->{$pid} = 1; 
    }
}

print Dumper %parent;

$process{0} = "*nix" if( ! $process{0} );

dump_process( '0' );

close( PS );



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


