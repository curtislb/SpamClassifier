From r-help-bounces@stat.math.ethz.ch  Mon Apr  9 12:59:52 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l39Gxp0I016913
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 9 Apr 2007 12:59:52 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l39Gwevh030834;
	Mon, 9 Apr 2007 18:58:50 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.3 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.171])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l39GwPm1030757
	for <R-help@stat.math.ethz.ch>; Mon, 9 Apr 2007 18:58:26 +0200
Received: by ug-out-1314.google.com with SMTP id p37so2135176ugc
	for <R-help@stat.math.ethz.ch>; Mon, 09 Apr 2007 09:58:25 -0700 (PDT)
Received: by 10.67.116.2 with SMTP id t2mr5383159ugm.1176137905589;
	Mon, 09 Apr 2007 09:58:25 -0700 (PDT)
Received: by 10.67.123.10 with HTTP; Mon, 9 Apr 2007 09:58:25 -0700 (PDT)
Message-ID: <644e1f320704090958l2803ca0bi43d6706c7020403@mail.gmail.com>
Date: Mon, 9 Apr 2007 12:58:25 -0400
From: "jim holtman" <jholtman@gmail.com>
To: "Muenchen, Robert A (Bob)" <muenchen@utk.edu>
In-Reply-To: <D028EEB4CA113D4EAFDD485CCC998277AF9B9D@UTKFSVS4.utk.tennessee.edu>
MIME-Version: 1.0
Content-Disposition: inline
References: <D028EEB4CA113D4EAFDD485CCC998277AF9B9D@UTKFSVS4.utk.tennessee.edu>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: marc_schwartz@comcast.net, R-help@stat.math.ethz.ch
Subject: Re: [R] do.call vs. lapply for lists
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2926
Lines: 83

On 4/9/07, Muenchen, Robert A (Bob) <muenchen@utk.edu> wrote:
> Hi All,
>
> I'm trying to understand the difference between do.call and lapply for
> applying a function to a list. Below is one of the variations of
> programs (by Marc Schwartz) discussed here recently to select the first
> and last n observations per group.
>
> I've looked in several books, the R FAQ and searched the archives, but I
> can't find enough to figure out why lapply doesn't do what do.call does
> in this case. The help files & newsletter descriptions of do.call sound
> like it would do the same thing, but I'm sure that's due to my lack of
> understanding about their specific terminology. I would appreciate it if
> you could take a moment to enlighten me.
>
> Thanks,
> Bob
>
> mydata <- data.frame(
>  id      = c('001','001','001','002','003','003'),
>  math    = c(80,75,70,65,65,70),
>  reading = c(65,70,88,NA,90,NA)
> )
> mydata
>
> mylast <- lapply( split(mydata,mydata$id), tail, n=1)
> mylast
> class(mylast) #It's a list, so lapply will so *something* with it.
>
> #This gets the desired result:
> do.call("rbind", mylast)
This is doing a single 'rbind' with the elements of the list as the
parameters so you are effectively creating a single data frame from
it.
>
> #This doesn't do the same thing, which confuses me:
> lapply(mylast,rbind)
This is applying 'rbind' separately to each element of the list (that
is what lapply does - call the function with each element) and will
return a list which is exactly the same.
>
> #...and data.frame won't fix it as I've seen it do in other
> circumstances:
> data.frame( lapply(mylast,rbind) )
What you are effectively doing is calling data.frame with as many
parameters as you have elements of the list.  See what happens with:

> data.frame(a=list(a=1,b=2), b=list(a=3,b=4))
  a.a a.b b.a b.b
1   1   2   3   4

>
> =========================================================
>  Bob Muenchen (pronounced Min'-chen), Manager
>  Statistical Consulting Center
>  U of TN Office of Information Technology
>  200 Stokely Management Center, Knoxville, TN 37996-0520
>  Voice: (865) 974-5230
>  FAX:   (865) 974-4810
>  Email: muenchen@utk.edu
>  Web:   http://oit.utk.edu/scc,
>  News:  http://listserv.utk.edu/archives/statnews.html
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


-- 
Jim Holtman
Cincinnati, OH
+1 513 646 9390

What is the problem you are trying to solve?

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

