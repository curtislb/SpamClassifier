From perl6-all-return-81031-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May  1 15:14:31 2007
Return-Path: <perl6-all-return-81031-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l41JEUb9011984
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 1 May 2007 15:14:30 -0400
Received: (qmail 1294 invoked by uid 514); 1 May 2007 19:14:28 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 1289 invoked from network); 1 May 2007 19:14:28 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
X-ORBL: [71.139.27.123]
Date: Tue, 1 May 2007 11:23:03 -0700
From: Larry Wall <larry@wall.org>
To: p6l <perl6-language@perl.org>
Subject: Re: Default filehandles, or topicalizing filehandles, or something
Message-ID: <20070501182303.GA7891@wall.org>
Mail-Followup-To: p6l <perl6-language@perl.org>
References: <010520071001251494%brian.d.foy@gmail.com> <ef30550b0705010926i551fa130l6edb31f29f49e860@mail.gmail.com> <20070501171820.GA6050@wall.org> <f60fe000705011041n7a962b42p2b96b71eec3664b3@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <f60fe000705011041n7a962b42p2b96b71eec3664b3@mail.gmail.com>
User-Agent: Mutt/1.4.2.2i
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
Status: O
Content-Length: 1340
Lines: 28

On Tue, May 01, 2007 at 01:41:45PM -0400, Mark J. Reed wrote:
: On 5/1/07, Larry Wall <larry@wall.org> wrote:
: >The plan introduced in A06 was to leave $*('IN'|'OUT'|'ERR') bound
: >to stdin, stdout, and stderr (which can still be dickered with on
: >the POSIXy level, of course), and instead emulate p5's select(FH)
: >using a global variable $*DEFOUT for the default handle of print
: >(and now say as well).
: 
: What about the default handle for warn/die?  $*DEFERR?

Could certainly work it the same way.

: I think I prefer a more significant difference between the default
: targets and the POSIXy std* values that they are initialized to,  like
: the Ruby notion of using global variables initialized to named
: constants, e.g. $stderr starts out as equal to STDERR but can be
: reassigned...

Well, the question is, what does a subprocess get for fd(2) after
you do that?  I'd prefer to keep $*ERR nailed to fd(2) in general so
that modifying $*ERR actually changes the stderr of new subprocesses.
But that doesn't give you a method of indirection inside the current
process, so $*DEFERR would be a way to do that.  Forcing people
to use an explicit handle in that case would be another approach,
but certainly something like $*DEFERR would be kinder to embedding
systems that want to intercept such messages and log them.

Larry

