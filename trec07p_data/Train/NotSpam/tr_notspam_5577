From beginners-return-91128-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 27 10:59:53 2007
Return-Path: <beginners-return-91128-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3RExq6w026943
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 27 Apr 2007 10:59:53 -0400
Received: (qmail 9017 invoked by uid 514); 27 Apr 2007 14:59:46 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 9006 invoked from network); 27 Apr 2007 14:59:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Apr 2007 14:59:46 -0000
Received: (qmail 9095 invoked by uid 225); 27 Apr 2007 14:59:45 -0000
Delivered-To: beginners@perl.org
Received: (qmail 9088 invoked by alias); 27 Apr 2007 14:59:45 -0000
X-Spam-Status: No, hits=4.4 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,RCVD_IN_BL_SPAMCOP_NET,RCVD_IN_CBL,RCVD_IN_SORBS_WEB,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of frenchyp@gmail.com designates 64.233.162.226 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.226)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 27 Apr 2007 07:59:43 -0700
Received: by nz-out-0506.google.com with SMTP id 12so1139855nzp
        for <beginners@perl.org>; Fri, 27 Apr 2007 07:59:39 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:subject:from:to:in-reply-to:references:content-type:date:message-id:mime-version:x-mailer:content-transfer-encoding;
        b=OMdNuwoaV1N/OkYOZG4j/TiCG90wUw6dR0kanTtbmW6sRhuX7GbcHiCtNXXC0GVN7CytiQ0Ud8U91DfF5B6jtrSv3c0UOU9AFCAOvdtpgSlMhWFsUuoNbPtrW69qUsHCzk5255YgRPQmIdkddTjIaPQ3NMtSuk6tjRvgv4KY3YY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:subject:from:to:in-reply-to:references:content-type:date:message-id:mime-version:x-mailer:content-transfer-encoding;
        b=c92zRz2R/3PNd+LiInoaH/94A+AYLY3D2tT7BAPaxOOrloiX9qF67w9p3z1Q6+sTl7hR3v3kpjyjwbERfRFiEs33vt+B2zk3or2QFB6GSsf7HDI/Ve96yLMR0mCfHSue3ixgnXdLJdXYcDrhdzfZYw+Qv3obEbgtvmC/mUEt/UE=
Received: by 10.114.181.1 with SMTP id d1mr1051982waf.1177685978821;
        Fri, 27 Apr 2007 07:59:38 -0700 (PDT)
Received: from ?10.1.1.224? ( [64.79.222.10])
        by mx.google.com with ESMTP id t1sm1960009poh.2007.04.27.07.59.37;
        Fri, 27 Apr 2007 07:59:37 -0700 (PDT)
Subject: Re: improving my code: array of references
From: Pierre Mariani <frenchyp@gmail.com>
To: beginners@perl.org
In-Reply-To: <46315FFF.9010108@richweb.com>
References: <6567.33482.qm@web30211.mail.mud.yahoo.com>
	 <1177624580.10826.12.camel@mariani.spry.com>
	 <bb075cdf0704261520k5de953dcmf54ff6151df69a25@mail.gmail.com>
	 <1177626362.10826.19.camel@mariani.spry.com> <46315FFF.9010108@richweb.com>
Content-Type: text/plain
Date: Fri, 27 Apr 2007 07:51:39 -0700
Message-Id: <1177685500.14854.24.camel@mariani.spry.com>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.3 
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 2318
Lines: 74

Matthew and Rob, thank you for your replies.


> - It's unclear whether you have a fixed set of variables to process.
> Is
>   the list always the same?

Yes, the list is always the same.

> - Why are you using references? Are you sure you need to?
> 
> - modify_variable() doesn't appear to modify anything, otherwise why
> are
>   you assigning its return value to the scalar passed as a parameter?
> It
>   seems to be just a function.

Modify_variable modifies its input variable.

Please correct me if I am wrong.
My understanding is that:
1) if I do:
	my @array = ($a, $b, $c);
	for (@array) { $_ = modify_variable($_)}
I am going to modify $array[0], $array[1] and $array[2], and NOT $a, $b,
$c.

2) if I do:
	for ($a, $b, $c) {$_ = modify_variable($_)}
I am going to modify $a, $b, $c, which is good, but if $a, $b, $c are
big I am going to be passing around lots of data.

So I think that using 2) with references on variables would be the ideal
solution.

> >From what I can see, you need no more than:
> 
>   $_ = function($_) foreach ($var1, $var2, $var3);
> 
> Will this do? Or is there more to the problem than you've explained?

Yes, that works in my case. I just thought that there might be a more
"elegant" way of doing it.

> Conway (in Perl Best Practices) prefers the block form of map, since in 
> his opinion, it's more readable.  So you could rewrite it as:
> 
> my @tmp = ( $var1, $var2, $var3 );
> @tmp = map { modify_variable } @tmp
>
> I'm guessing that the code within modify_variable uses $_ under the 
> hood?  That may end up biting you later on, if you use modify_variable 
> in different places.  If $_ is in use by other code or gets changed on 
> you unexpectedly, you may have some difficult debugging ahead of you.   
> The following may prove clearer when reading it 6 months from now:
> 
> map { modify_variable($_) } = \($var1, $var2, $var3);

I like this syntax too. The only difference in my case is that
modify_variable works with the content of the variable, not with a
reference (and I can't modify it).
So I will have to write it this way:
 
	map { modify_variable(${$_}) } = \($var1, $var2, $var3);

Thank you for your advices.



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


