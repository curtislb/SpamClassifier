From beginners-return-91285-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 16:40:21 2007
Return-Path: <beginners-return-91285-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l42KeJb9027227
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 16:40:20 -0400
Received: (qmail 22621 invoked by uid 514); 2 May 2007 20:40:12 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 22612 invoked from network); 2 May 2007 20:40:12 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 May 2007 20:40:12 -0000
Received: (qmail 28494 invoked by uid 225); 2 May 2007 20:40:12 -0000
Delivered-To: beginners@perl.org
Received: (qmail 28487 invoked by alias); 2 May 2007 20:40:11 -0000
X-Spam-Status: No, hits=-1.6 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,NO_REAL_NAME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of jbuburuz@sce.carleton.ca designates 134.117.56.4 as permitted sender)
Received: from sangam.sce.carleton.ca (HELO sangam.sce.carleton.ca) (134.117.56.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 13:39:56 -0700
Received: from webmail.sce.carleton.ca (webmail.sce.carleton.ca [134.117.56.46])
	by sangam.sce.carleton.ca (8.13.7/8.13.1) with ESMTP id l42Kdkij027617
	for <beginners@perl.org>; Wed, 2 May 2007 16:39:46 -0400
Received: from 134.117.60.110
        (SquirrelMail authenticated user jbuburuz)
        by webmail.sce.carleton.ca with HTTP;
        Wed, 2 May 2007 16:39:46 -0400 (EDT)
Message-ID: <61920.134.117.60.110.1178138386.squirrel@webmail.sce.carleton.ca>
In-Reply-To: <4638CCDA.3040908@telus.net>
References: 
    <61268.134.117.60.110.1178124981.squirrel@webmail.sce.carleton.ca>
    <4638CCDA.3040908@telus.net>
Date: Wed, 2 May 2007 16:39:46 -0400 (EDT)
Subject: Re: crypt() and /etc/shadow entries do not match?
From: jbuburuz@sce.carleton.ca
To: "Perl Beginners" <beginners@perl.org>
User-Agent: SquirrelMail/1.4.9a
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
Importance: Normal


Thanks John and Chas!

> jbuburuz@sce.carleton.ca wrote:
>> Hey folks,
>
> Hello,
>
>> I have been using crypt for a while. No problems until recently.
>>
>> Problem crypt does not return a hash that matches getpwnam(). I have
>> been
>> using crypt for a long time without any problems.
>>
>> Bellow is test script I have using for testing hashs. The output of the
>> script bellow is as follows(Note passwd  for user "test" is "hello"):
>>
>> linux:/tmp# ./perltest.pl
>> Enter a string to encrypt with DES: hello
>> Enter two random alphanumerics to be used as a salt:n$!
>>
>> "hello" encrypted using the perl crypt() function and salt "$!" returns:
>> $!8VHq6xLWgQc  $1$70w840Bc$Hkmqjlz8N7abM2SGlLm0T1
>>
>> crypt returns= $!8VHq6xLWgQc
>> hash value returned by getpwnam= $1$70w840Bc$Hkmqjlz8N7abM2SGlLm0T1
>>
>> I have tested crypt() on debian, and redhat. Same problems. The has
>> values
>> do not match each other.
>>
>> Please help, any suggestions.
>>
>> thanks
>>
>> jerry
>>
>> #########################################################################
>> Perl script bellow
>> #########################################################################
>> #!/usr/bin/perl
>>
>> print "Enter a string to encrypt with DES:n";
>> chomp(my $string = <STDIN>); #Take the input from the user and remove
>> the n
>>
>> print "Enter two random alphanumerics to be used as a salt:n";
>> chomp(my $salt = <STDIN>);
>>
>> my $encrypted_string = crypt($string,$salt); #take the string and the
>> salt
>> and put through crypt()
>>
>> $pass = (getpwnam(test))[1];
>
> You need to use the old password as the salt, so change that to:
>
> my $pass = ( getpwnam 'test' )[ 1 ];
>
> my $encrypted_string = crypt $string, $pass;

Great! the above works! John your correction works!

Thanks Chas your perldoc helped out a lot as well.

>
>
>> print qq~
>> "$string" encrypted using the perl crypt() function and salt "$salt"
>> returns:
>> $encrypted_string  $pass
>> ~;
>
>
>
> John
> --
> Perl isn't a toolbox, but a small machine shop where you can special-order
> certain sorts of tools at low cost and in short order.       -- Larry Wall
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>

thanks again,

jerry


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


