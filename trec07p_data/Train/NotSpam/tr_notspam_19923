From beginners-return-92496-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun 17 00:20:25 2007
Return-Path: <beginners-return-92496-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5H4KOL9022568
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 17 Jun 2007 00:20:24 -0400
Received: (qmail 30175 invoked by uid 514); 17 Jun 2007 04:20:17 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 30166 invoked from network); 17 Jun 2007 04:20:17 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 Jun 2007 04:20:17 -0000
Received: (qmail 25997 invoked by uid 225); 17 Jun 2007 04:20:17 -0000
Delivered-To: beginners@perl.org
Received: (qmail 25990 invoked by alias); 17 Jun 2007 04:20:16 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from elasmtp-mealy.atl.sa.earthlink.net (HELO elasmtp-mealy.atl.sa.earthlink.net) (209.86.89.69)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 16 Jun 2007 21:20:12 -0700
Received: from [63.26.164.198] (helo=[63.26.164.198])
	by elasmtp-mealy.atl.sa.earthlink.net with asmtp (Exim 4.34)
	id 1HzmFD-00089j-Ej
	for beginners@perl.org; Sun, 17 Jun 2007 00:20:08 -0400
Message-ID: <4674AA1F.7070803@earthlink.net>
Date: Sat, 16 Jun 2007 22:27:27 -0500
From: "Mumia W." <mumia.w.18.spam+nospam@earthlink.net>
User-Agent: Thunderbird 1.5.0.10 (X11/20070221)
MIME-Version: 1.0
To: Beginners List <beginners@perl.org>
Subject: Re: character encoding & regex
References: <46743A15.3030206@tacocat.net> <4674505D.3040106@earthlink.net> <46745D9C.20402@tacocat.net>
In-Reply-To: <46745D9C.20402@tacocat.net>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-ELNK-Trace: 5d730262a02eef364886dd14879fb8dbda7403c53f5cc7e274bf435c0eb9d478eee15ddb228a014a13af0244ced7826f48ab746ca4c6e5e5350badd9bab72f9c
X-Originating-IP: 63.26.164.198

On 06/16/2007 05:01 PM, Tom Allison wrote:
> Mumia W. wrote:
>>
>> On 06/16/2007 02:29 PM, Tom Allison wrote:
>>> I'm trying to do some regular expression on strings in email. 
>>> [...]
>>> And with unicode and locales and bytes it all gets extremely ugly.
>>>
>>> I found something that SpamAssassin uses to convert all this "goo" 
>>> into a repeatable set of characters (which is all I'm really after) 
>>> by running something that looks like this:
>>>
>>
>> What do you mean by a "repeatable set of characters"? Unicode 
>> characters are repeatable.
> 
> The fundamental problem is that this:
> 
> $string =~ /(\w\w\w+)/
> returns nothing because unicode/utf8/Big5 characters are not considered 
> 'words'.
> [...]

Many UTF8 characters are words, and many are not. Consider this program 
(written in utf-8):

#!/usr/bin/perl
use strict;
use warnings;
use encoding 'utf8', 'STDOUT', 'utf8';

my $string2 = '☺ 膄 膅 膆 ☺
á é í ó ú ¶ | ✗ ∷ е み む も
ä ë ï ö ü µ  ± × ṁ · ';

my @wchars = $string2 =~ /(\w)/g;
print "@wchars\n";

exit;
__END__

My output for this program is this:

膄 膅 膆 á é í ó ú е み む も ä ë ï ö ü µ ṁ

Notice that some characters made it and some didn't. In order to do this 
right, I had to enable a utf8 locale in my Debian O/S [ :-) ]. Then I 
set LANG=en_US.UTF-8 before writing the program in vim.

Furthermore, I had to tell Perl that the program was written in utf8 
using the 'encoding' module.

Basically, the '\w' in a regular expression is sensitive to the current 
locale, and if utf8 is enabled in the locale, '\w' will (probably) know 
which unicode characters are word characters and which are not.

BTW, I don't know Chinese or Korean. I just know how to play with vim 
digraphs enough to enter random foreign characters--sort of like a 
monkey banging on a computer keyboard :-)

> And I don't really care to get exactly the right character.
> I could just as easily use the character ascii values, but the regex for 
> that is not something I'm familiar with.
> 
> I got this far:
> my $string = chr(0x263a);
> my @A = unpack "C*", $string;
> 
> # @A = ( 226, 152, 186 )
> 
> At least this is consistent.
> But there are a lot of characters that I want to break on and I don't 
> know that I can do this.  The best I can come up with is:
> 
> my $string = chr(0x263a);
> $string = $string .' '. $string;
> print $string,"\n";
> foreach my $str (split / / ,$string) {
>     my @A = unpack "C*", $str;
>     print "FOO: @A\n";
> }
> exit;
> 
> Using the above I can get a consistent array of characters but I don't 
> know if this will work for any character encoding.  I guess this is part 
> of my question/quandry.
> 
> One thing I'm not sure about is if the MIME::Parser is even decoding 
> things sanely.  I suspect it isn't because I get '?' a lot.
> 
> I installed urxvt from my Debian installation [ :) ] and I get...
> 

:-)

> Wide character in print at unicode_capture.pl line 5.
> âº
> Wide character in print at unicode_capture.pl line 9.
> âº âº
> FOO: 226 152 186
> FOO: 226 152 186
> 
> However it doesn't print the boxes, which is good.
> 
> 

Put "use encoding 'iso-8859-1', STDOUT => 'utf8';" at the top of your 
file. Also read up on the encoding module (perldoc encoding).

This will probably work a lot better if you've configured your system to 
support a utf8 locale:

http://www.debian.org/doc/manuals/reference/ch-tune.en.html#s-activate-locales

BTW, you're using a great O/S ;-)



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


