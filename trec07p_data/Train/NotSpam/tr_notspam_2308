From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue Apr 17 02:36:09 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3H6a90I023971
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 17 Apr 2007 02:36:09 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 9E8401638B3
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 17 Apr 2007 06:35:45 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id BECF4162AE9; Tue, 17 Apr 2007 06:35:13 +0000 (GMT)
Date: Tue, 17 Apr 2007 16:34:54 +1000
To: samba-cvs@samba.org
From: tridge@samba.org
Message-Id: <20070417063513.BECF4162AE9@lists.samba.org>
Subject: Rev 132: we should not lock in a normal ctdb_call(),
	as we want them to run concurrently in http://samba.org/~tridge/ctdb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 1756
Lines: 61

------------------------------------------------------------
revno: 132
revision-id: tridge@samba.org-20070417063453-11bf89e87ab63211
parent: tridge@samba.org-20070417062032-cf77c470b80c77d1
committer: Andrew Tridgell <tridge@samba.org>
branch nick: tridge
timestamp: Tue 2007-04-17 16:34:53 +1000
message:
  we should not lock in a normal ctdb_call(), as we want them to run concurrently
modified:
  common/ctdb_client.c           ctdb_client.c-20070411010216-3kd8v37k61steeya-1
=== modified file 'common/ctdb_client.c'
--- a/common/ctdb_client.c	2007-04-17 06:20:32 +0000
+++ b/common/ctdb_client.c	2007-04-17 06:34:53 +0000
@@ -245,22 +245,14 @@
 		ux_socket_connect(ctdb);
 	}
 
-	ret = ctdb_ltdb_lock(ctdb_db, call->key);
-	if (ret != 0) {
-		printf("failed to lock ltdb record\n");
-		return NULL;
-	}
-
 	ret = ctdb_ltdb_fetch(ctdb_db, call->key, &header, ctdb_db, &data);
 	if (ret != 0) {
-		ctdb_ltdb_unlock(ctdb_db, call->key);
 		return NULL;
 	}
 
 #if 0
 	if (header.dmaster == ctdb->vnn && !(ctdb->flags & CTDB_FLAG_SELF_CONNECT)) {
 		state = ctdb_call_local_send(ctdb_db, call, &header, &data);
-		ctdb_ltdb_unlock(ctdb_db, call->key);
 		return state;
 	}
 #endif
@@ -268,7 +260,6 @@
 	state = talloc_zero(ctdb_db, struct ctdb_call_state);
 	if (state == NULL) {
 		printf("failed to allocate state\n");
-		ctdb_ltdb_unlock(ctdb_db, call->key);
 		return NULL;
 	}
 
@@ -278,7 +269,6 @@
 	state->c = ctdbd_allocate_pkt(ctdb, len);
 	if (state->c == NULL) {
 		printf("failed to allocate packet\n");
-		ctdb_ltdb_unlock(ctdb_db, call->key);
 		return NULL;
 	}
 	talloc_set_name_const(state->c, "ctdbd req_call packet");
@@ -318,7 +308,6 @@
 			ctdb_call_timeout, state);
 */
 
-	ctdb_ltdb_unlock(ctdb_db, call->key);
 	return state;
 }
 

