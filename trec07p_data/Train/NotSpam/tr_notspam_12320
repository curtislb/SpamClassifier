From r-help-bounces@stat.math.ethz.ch  Mon May 21 18:39:47 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4LMdjqD004662
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 21 May 2007 18:39:46 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4LMcR3S007436;
	Tue, 22 May 2007 00:38:38 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL, BAYES_50,
	SPF_HELO_PASS autolearn=no version=3.1.8
Received: from ciao.gmane.org (main.gmane.org [80.91.229.2])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4LMcLev007407
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Tue, 22 May 2007 00:38:21 +0200
Received: from list by ciao.gmane.org with local (Exim 4.43)
	id 1HqGW4-0001gD-5m
	for r-help@stat.math.ethz.ch; Tue, 22 May 2007 00:38:12 +0200
Received: from 204-56-6-101.stowers-institute.org ([204.56.6.101])
	by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
	id 1AlnuQ-0007hv-00
	for <r-help@stat.math.ethz.ch>; Tue, 22 May 2007 00:38:12 +0200
Received: from efg by 204-56-6-101.stowers-institute.org with local (Gmexim
	0.1 (Debian)) id 1AlnuQ-0007hv-00
	for <r-help@stat.math.ethz.ch>; Tue, 22 May 2007 00:38:12 +0200
X-Injected-Via-Gmane: http://gmane.org/
To: r-help@stat.math.ethz.ch
From: "Earl F. Glynn" <efg@stowers-institute.org>
Date: Mon, 21 May 2007 17:38:02 -0500
Lines: 78
Message-ID: <f2t70a$c1s$1@sea.gmane.org>
X-Complaints-To: usenet@sea.gmane.org
X-Gmane-NNTP-Posting-Host: 204-56-6-101.stowers-institute.org
X-MSMail-Priority: Normal
X-Newsreader: Microsoft Outlook Express 6.00.2900.3028
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
X-RFC2646: Format=Flowed; Original
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: [R] Need 64-bit integers on 32-bit platform
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

I'm using the latest R on Windows XP:

> R.version
               _
platform       i386-pc-mingw32
arch           i386
os             mingw32
system         i386, mingw32
status
major          2
minor          5.0
year           2007
month          04
day            23
svn rev        41293
language       R
version.string R version 2.5.0 (2007-04-23)

I understand this:

> .Machine$integer.max
[1] 2147483647

> .Machine$sizeof.longlong
[1] 8

So how can I get a "longlong" (i.e., 64-bit = 8-byte integers) in my 
environment?  Where is there no storage.mode of "longlong" or "int64"?

I'm reading electrophysiology data with a time stamp that's in a 64-bit 
integer (it's a microsecond clock count) but I'm getting negative values 
returned in R:

# Why no warning if this call doesn't return an 8-byte integer?
TimeStamp   <- readBin(connection, integer(), size=8,  1)
[1] -311761023
[1] -311756172

I can get the hex values of these numbers like this:

TimeStamp   <- readBin(connection, raw(),       8)
[1] 81 e7 6a ed 01 00 00 00
[1] 74 fa 6a ed 01 00 00 00

I can see what these number should be by converting to decimal in Excel:
=HEX2DEC("01ed6ae781")
8278173569

=HEX2DEC("01ed6afa74")
8278178420

How can I get these 8-byte integers in R so I don't have to use this ugly 
kludge?

# KLUDGE
TimeStamp   <- readBin(connection, integer(), size=4,  2)

> TimeStamp
[1] -311761023          1

# Convert integers to doubles since a double has larger range for integers 
than 32-bit integers:
>storage.mode(TimeStamp) <- "double"

# This seems to work, but is too ugly:
> TimeStamp[2]*2^32 + (2^32 + TimeStamp[1])
[1] 8278173569

Can anyone suggest a better way?

Thanks for any suggestions.

efg

Earl F. Glynn
Stowers Institute for Medical Research

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

