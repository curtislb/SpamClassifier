From perl6-all-return-80553-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Apr 13 13:15:11 2007
Return-Path: <perl6-all-return-80553-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3DHFA0I014466
	for <ktwarwic@speedy.uwaterloo.ca>; Fri, 13 Apr 2007 13:15:10 -0400
Received: (qmail 32000 invoked by uid 514); 13 Apr 2007 17:14:46 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 31995 invoked from network); 13 Apr 2007 17:14:45 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: softfail (x1.develooper.com: transitioning domain of chromatic@wgz.org does not designate 63.251.223.186 as permitted sender)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of chromatic@wgz.org designates 63.105.17.39 as permitted sender)
From: chromatic <chromatic@wgz.org>
Organization: Snafu
To: parrot-porters@perl.org
Subject: Re: [svn:parrot] r18180 - trunk/src/io
Date: Fri, 13 Apr 2007 10:13:09 -0700
User-Agent: KMail/1.9.5
References: <20070413164452.24818CB9B8@x12.develooper.com>
In-Reply-To: <20070413164452.24818CB9B8@x12.develooper.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704131013.09961.chromatic@wgz.org>
X-Virus-Scanned: by amavisd-new at wgz.org
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
Status: O
Content-Length: 310
Lines: 11

On Friday 13 April 2007 09:44, smash@cvs.perl.org wrote:

> Log:
> [src/io]
>  * prevent segmentation fault when calling poll on null PMC (RT#41894 for
> details)

Hm, every time I fix one of these, I wonder if there's a better place to 
prevent it.  What's the code flow look like to get to this point?

-- c

