From beginners-return-91021-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 06:49:09 2007
Return-Path: <beginners-return-91021-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PAn76w029498
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 06:49:08 -0400
Received: (qmail 14936 invoked by uid 514); 25 Apr 2007 10:49:02 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 14927 invoked from network); 25 Apr 2007 10:49:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Apr 2007 10:49:01 -0000
Received: (qmail 30404 invoked by uid 225); 25 Apr 2007 10:49:01 -0000
Delivered-To: beginners@perl.org
Received: (qmail 30393 invoked by alias); 25 Apr 2007 10:49:00 -0000
X-Spam-Status: No, hits=-1.1 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,RCVD_NUMERIC_HELO,SPF_HELO_PASS,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of gclpb-beginners@m.gmane.org designates 80.91.229.2 as permitted sender)
Received: from main.gmane.org (HELO ciao.gmane.org) (80.91.229.2)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 03:48:50 -0700
Received: from list by ciao.gmane.org with local (Exim 4.43)
	id 1Hgf38-0007NQ-2x
	for beginners@perl.org; Wed, 25 Apr 2007 12:48:38 +0200
Received: from 58.68.24.229 ([58.68.24.229])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <beginners@perl.org>; Wed, 25 Apr 2007 12:48:38 +0200
Received: from tuxkumar by 58.68.24.229 with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <beginners@perl.org>; Wed, 25 Apr 2007 12:48:38 +0200
X-Injected-Via-Gmane: http://gmane.org/
To: beginners@perl.org
From: Saravana Kumar <tuxkumar@gmail.com>
Subject:  Re: Reading and matching email ids
Date:  Wed, 25 Apr 2007 16:18:39 +0530
Message-ID:  <f0nblv$7sq$1@sea.gmane.org>
References:  <f0a0vo$n49$1@sea.gmane.org> <46288D09.6080602@yahoo-inc.com> <f0a4uu$7tv$1@sea.gmane.org> <ca5781c80704200724j7c133709i3709d7833a6f1b3@mail.gmail.com> <f0c897$end$1@sea.gmane.org>
Reply-To: tuxkumar@gmail.com
Mime-Version:  1.0
Content-Type:  text/plain; charset=us-ascii
Content-Transfer-Encoding:  7Bit
X-Complaints-To: usenet@sea.gmane.org
X-Gmane-NNTP-Posting-Host: 58.68.24.229
User-Agent: KNode/0.9.0
Sender: news <news@sea.gmane.org>
Status: O
Content-Length: 3268
Lines: 113

Saravana Kumar wrote:

> yitzle wrote:
> 
>> You can read one list into an array (@list) and then loop through the
>> other file ($item) and grep the list for the item.
>> 
>> for ($item = <>) { # or foreach
>>   print "$item found" if ( grep $item, @list );
>> }
>> 
>> On 4/20/07, Saravana Kumar <tuxkumar@gmail.com> wrote:
>>> Boga Srinivas wrote:
>>>
>>> > Hi kumar,
>>> >
>>> > Try this.
>>> >
>>> > bseenu@bseenu-dt:~/perl$ cat reg.pl
>>> > #! /usr/bin/perl
>>> > $id="user1\@example.net";
>>> > while(<>) {
>>> > chomp($_);print "$_\t";
>>> > print "$id found\n" if  /$id/;
>>> > print "$id not found\n" if ! /$id/;
>>> > }
>>> >
>>> > bseenu@bseenu-dt:~/perl$ cat mail.txt
>>> > user1@example.net
>>> > user2@example.net
>>> > user3@example.net
>>> > bseenu@bseenu-dt:~/perl$ ./reg.pl < mail.txt
>>> > user1@example.net       user1@example.net found
>>> > user2@example.net       user1@example.net not found
>>> > user3@example.net       user1@example.net not found
>>> >
>>> >
>>> > ~Regards
>>> > -srini
>>>
>>> Yes. I have tried that. It works. My problem is that the $id that i am
>>> matching will also be read from another file.
>>>
>>> ie., a list of ids read one by one from a file and matched against
>>> another file which has another list.
>>>
>>> Thanks! for your time.
>>>
>>> SK
>>>
>>> >
>>> > Saravana Kumar wrote:
>>> >> Hi list,
>>> >>
>>> >> I am testing a regex with email ids. I have a list of ids that i want
>>> >> to match against a one more list of ids.
>>> >>
>>> >> I have this:
>>> >> #! /usr/bin/perl
>>> >> $id="user1@example.net";
>>> >> while(<>) {
>>> >> chomp($_);print "$_\t";
>>> >> print "$id found\n" if  /$id/;
>>> >> print "$id not found\n" if ! /$id/;
>>> >> }
>>> >>
>>> >> and a file /tmp/sampleids
>>> >> user1@example.net
>>> >> user2@example.net
>>> >> user3@example.net
>>> >> user1\@example\.net
>>> >>
>>> >> When i run it i get :
>>> >> user1@example.net       user1.net not found
>>> >> user2@example.net       user1.net not found
>>> >> user3@example.net       user1.net not found
>>> >> user1\@example\.net     user1.net not found
>>> >>
>>> >> When i try to match simple text it works but matching email ids
>>> >> doesn't. What am i doing wrong here?
>>> >>
>>> >> Please help me with this.
>>> >>
>>> >> TIA,
>>> >> SK
>> 
> Thanks to all who replied. Will try these out and post the results.
> 
> Regds,
> SK

I tried various options but could not make it work. I was writing a perl
script to filter the mails.

The script will read directly from the mail program. Compare the from
addresses with contents in a file. If the id is present in the file then
the mail will be allowed; else denied.

First i regex the lines and store the from line in $from. Then i check if
the id(in $from) is in the acl file i have. 

As you may know $from may have a String(fullname) with the email id or
simply the email id alone.

However i try it doesn't work. I can still give the ids directly in the if
condition(escaping @ & .). But i want to have the list of allowed ids in a
separate file so that the script need not be changed everytime we add new
ids. 

ideas?

TIA,
SK


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


