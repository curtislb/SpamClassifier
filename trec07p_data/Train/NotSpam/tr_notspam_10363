From perl6-all-return-81365-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 14 20:28:53 2007
Return-Path: <perl6-all-return-81365-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4F0SqqD029270
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 14 May 2007 20:28:52 -0400
Received: (qmail 24001 invoked by uid 514); 15 May 2007 00:28:49 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 23996 invoked from network); 15 May 2007 00:28:49 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-1.1 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Mime-Version: 1.0
Message-Id: <p06240801c26eaa3bdc52@[192.168.1.101]>
In-Reply-To: <p06240800c26ea3e05eeb@[192.168.1.101]>
References: <010520071004503787%brian.d.foy@gmail.com>
 <1584795397.20070503140643@shitov.ru>
 <200705111448.05991.chromatic@wgz.org>
 <20070513224235.28013.qmail@lists.develooper.com>
 <46479C1C.4000305@casella.verplant.org>
 <20070514105154.5648.qmail@lists.develooper.com>
 <20070514120717.2d513956.frank@wiles.org>
 <20070514202047.14038.qmail@lists.develooper.com>
 <20070514204607.GG2873@c4.convolution.nl>
 <p06240800c26ea3e05eeb@[192.168.1.101]>
Date: Mon, 14 May 2007 17:28:05 -0700
To: perl6-language@perl.org
From: Darren Duncan <darren@DarrenDuncan.net>
Subject: Re: variable type specific sigils (was Re: Sigils by example)
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Scanned-By: MIMEDefang 2.36
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

At 5:00 PM -0700 5/14/07, Darren Duncan wrote:
>On the other hand, unless this steps on something, I could suggest 
>dropping the @ and % anyway, so we have $array and $hash, and then 
>we could instead use the @ and % sigils as a prefix to indicate in 
>that case that we want them to copy by value.  For example:
>
>   my $foo = [23, 434, 6];
>   my $bar;
>   $bar = $foo; # copy by reference
>   @$bar = @$foo; # copy by value
>
>Actually, I think that would be a vast improvement, as we could then 
>use the @ prefix with any collection type as short-hand to say that 
>= is copy by value.

As a follow-up or clarification of what I just said, here is a proposal ...

Variables of all types have $ sigils.

The semantics of $foo = $bar are unchanged; usually $foo and $bar 
point to the same container after the assignment, afaik.

Prefixing a @ or % before a variable name indicates a syntactic 
short-hand for something concerning the variable.

On declaration, saying @$foo means the same as "Array $foo", and 
saying %$foo means the same as "Hash $foo", or some such.  This works 
for my|our|has etc as well as parameter declarations.  This is 
instead of declaring @foo or %foo.

On use in an expression, @$foo = @$bar indicates we want a copy by 
value or clone or shallow copy or whatever, and $foo and $bar point 
to different containers after the assignment; the semantics are like 
the current @foo = @bar.

Similarly, use eg @@$foo rather than @@foo as appropriate.

With these changes, I see it making Perl more consistent in 
appropriate ways, and easier to use, and huffmanizing isn't worse.

Also, it means we can free up the @ and % rare ASCII symbols for 
other purposes in some situations.

I could also argue that the conception of @ meaning plural vs $ 
singular isn't really an absolute, since any value can be treated as 
either being a collection or being atomic under different 
circumstances.

-- Darren Duncan

