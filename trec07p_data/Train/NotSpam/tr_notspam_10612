From beginners-return-91686-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May 15 12:36:42 2007
Return-Path: <beginners-return-91686-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4FGaeqD007176
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 15 May 2007 12:36:41 -0400
Received: (qmail 14151 invoked by uid 514); 15 May 2007 16:36:31 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 14142 invoked from network); 15 May 2007 16:36:30 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 15 May 2007 16:36:30 -0000
Received: (qmail 2101 invoked by uid 225); 15 May 2007 16:36:30 -0000
Delivered-To: beginners@perl.org
Received: (qmail 2096 invoked by alias); 15 May 2007 16:36:30 -0000
X-Spam-Status: No, hits=2.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 204.209.205.55 as permitted sender)
Received: from defout.telus.net (HELO defout.telus.net) (204.209.205.55)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 15 May 2007 09:36:15 -0700
Received: from priv-edmwaa05.telusplanet.net ([154.20.161.24])
          by priv-edmwes34.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070515163611.OTYX4162.priv-edmwes34.telusplanet.net@priv-edmwaa05.telusplanet.net>
          for <beginners@perl.org>; Tue, 15 May 2007 10:36:11 -0600
Received: from [154.20.161.24] (d154-20-161-24.bchsia.telus.net [154.20.161.24])
	by priv-edmwaa05.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 3ETSHL6T73
	for <beginners@perl.org>; Tue, 15 May 2007 10:36:11 -0600 (MDT)
Message-ID: <4649E17C.8020504@telus.net>
Date: Tue, 15 May 2007 09:36:12 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Re: qx() won't accept over (about) 128,000 characters
References: <20070515154941.GA28005@coost.com>
In-Reply-To: <20070515154941.GA28005@coost.com>
X-Enigmail-Version: 0.90.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Jameson C. Burt wrote:
> Within Perl, I construct programs in other programming languages 
> and submit the result to a Unix (Linux or IBM AIX) operating system
> with 2GB to 8GB memory.
> I submit such a program to the operating system using Perl's
>   qx()
> Unfortunately, giving qx() over 128,420 characters (about and can vary
> by a few characters) then returns nothing.
> Yet, giving qx() 128,000 characters gets properly executed by the
> operating system.
> 
> Following is an example, 
> expedited from my original test that actually had 1270 lines.
> Only with fewer lines (eg, replace 1370 by 1269) will this program output
>    "Last line of large program!"
> Here's the program that constructs 
> and tries giving qx() over 128,000 characters of code:
>    #!/usr/bin/perl -w
>    $shorty = ' ' x 99   .   '#'   .   "\n" ;  #100/101 characters
>    #Repeat 1370 lines of $shorty into @manylines:
>    # foreach $i (0..1269)  {$manylines[$i] = $shorty} ;  #Succeeds
>    foreach $i (0..1370)    {$manylines[$i] = $shorty} ;
>    $manylines[$#manylines + 1] =  'echo "Last Line of large program!"' ;

You can simplify that to:

my @manylines = ( ( ' ' x 99 . "#\n" ) x 1371, 'echo "Last Line of large
program!"' );


>    print qx(@manylines) ;
>    # system(qq(@manylines)) ;   #Same problem.

Your line of code is a comment (The # character starts a comment in shell)
which is why nothing is returned:

$ perl -e'
my @manylines = ( ( " " x 99 . "#\n" ) x 1371, q[echo "Last Line of large
program!"] );
print qx[@manylines];
' | wc
      0       0       0
$ perl -e'
my @manylines = ( ( " " x 99 . "\n" ) x 1371, q[echo "Last Line of large
program!"] );
print qx[@manylines];
' | wc
      1       5      28
$ perl -e'
my @manylines = ( ( " " x 99 . "\n" ) x 1371, q[echo "Last Line of large
program!"] );
print qx[@manylines];
'
Last Line of large program!


> However, appending the following lines to the above code
> will properly execute those 1370  lines.  
>    open(OUTFILE, ">/tmp/zz.out") ;
>    print(OUTFILE  @manylines) ;
>    close(OUTFILE) ;
>    system("bash /tmp/zz.out") ;
> While I can run this latter code, it both adds more code 
> and adds a file to the operating system's filesystem.
> 
> Can qx() accept large numbers of characters,
> perhaps using some simple technique?

When it is saved as a file the shell (bash) ignores the comment lines.



John
-- 
Perl isn't a toolbox, but a small machine shop where you can special-order
certain sorts of tools at low cost and in short order.       -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


