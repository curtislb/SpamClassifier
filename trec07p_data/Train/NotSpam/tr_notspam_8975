From beginners-return-91474-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  9 17:33:46 2007
Return-Path: <beginners-return-91474-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l49LXjqD001618
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 9 May 2007 17:33:46 -0400
Received: (qmail 28310 invoked by uid 514); 9 May 2007 21:33:39 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 28300 invoked from network); 9 May 2007 21:33:39 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 May 2007 21:33:39 -0000
Received: (qmail 2265 invoked by uid 225); 9 May 2007 21:33:39 -0000
Delivered-To: beginners@perl.org
Received: (qmail 2257 invoked by alias); 9 May 2007 21:33:38 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.234 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.234)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 09 May 2007 14:33:28 -0700
Received: by nz-out-0506.google.com with SMTP id 12so344009nzp
        for <beginners@perl.org>; Wed, 09 May 2007 14:33:24 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=p/n9oeb/2o4Des3U6RDeMgv1OrWZ1qRQ1Gb0PWvLF4aL9AY8G4D8JJYCTxRJr6YEDqyrKL1VPtDy2pHaUxBBz7c2N5yz+DwRk6s7IK/2PgU5ciw+PAyNAasUxiEXQxaLeL5Nw3RpNojfwlOrYSL2TdMf34O6s3PusgDjNY0sXFw=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Cpuw0/6Xe7FqqTBnsZq8mTGxpxa2bElvoNPdTxvyi1Ry15/EoANhMRviyFa8gmWU97w6vr6Wp8J8AyR3npDc1JEeQRenjtgSx3hY9TFGv2dAiwEoLknp2R5gAhhmCzInjmQ8Z4hR8+u7drW2Plh2/ZGH/4k3HYKN1M5ab2wJgs0=
Received: by 10.114.149.2 with SMTP id w2mr303906wad.1178746403587;
        Wed, 09 May 2007 14:33:23 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Wed, 9 May 2007 14:33:23 -0700 (PDT)
Message-ID: <58ce48dc0705091433n579b0478yd6ea324b1dbba5e4@mail.gmail.com>
Date: Wed, 9 May 2007 17:33:23 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Tom Allison" <tom@tacocat.net>
Subject: Re: forking problem with dbd::mysql
Cc: pangj@earthlink.net, beginners-list <beginners@perl.org>
In-Reply-To: <122C32F6-7100-492A-BC80-85719AA20FC4@tacocat.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-2022-JP; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <29172822.1178726953247.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>
	 <SiV6GusX.1178734717.5941940.tom@tacocat.net>
	 <58ce48dc0705091409s19194d9fr24ecbfc1f59e7780@mail.gmail.com>
	 <122C32F6-7100-492A-BC80-85719AA20FC4@tacocat.net>

On 5/9/07, Tom Allison <tom@tacocat.net> wrote:
> > sing its handle unexpectedly.
> >
> > The solution:
> >
> > Setting a flag (InactiveDestroy) on the parent's handle inside the
> > child process prevents the automagic closing of the connection.
> >
> > * the magic in this case is the DESTROY method of DBI::db
>
> Where do you get the inactiveDestroy?
> Is this something missed in the RTFM?
>
from perldoc DBI (version 1.53, I don't know when it debuted)
       "InactiveDestroy" (boolean)
           The default value, false, means a handle will be fully destroyed as
           normal when the last reference to it is removed, just as you'd
           expect.

           If set true then the handle will be treated by the DESTROY as if it
           was no longer Active, and so the database engine related effects of
           DESTROYing a handle will be skipped.

           Think of the name as meaning 'treat the handle as not-Active in the
           DESTROY method'.

           For a database handle, this attribute does not disable an explicit
           call to the disconnect method, only the implicit call from DESTROY
           that happens if the handle is still marked as "Active".

           This attribute is specifically designed for use in Unix applica‐
           tions that "fork" child processes. Either the parent or the child
           process, but not both, should set "InactiveDestroy" true on all
           their shared handles.  (Note that some databases, including Oracle,
           don't support passing a database connection across a fork.)

           To help tracing applications using fork the process id is shown in
           the trace log whenever a DBI or handle trace() method is called.
           The process id also shown for every method call if the DBI trace
           level (not handle trace level) is set high enough to show the trace
           from the DBI's method dispatcher, e.g. >= 9.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


