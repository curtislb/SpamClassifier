From perl6-all-return-81377-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May 15 10:09:14 2007
Return-Path: <perl6-all-return-81377-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4FE9DqD005845
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 15 May 2007 10:09:14 -0400
Received: (qmail 26856 invoked by uid 514); 15 May 2007 14:09:10 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 26846 invoked from network); 15 May 2007 14:09:10 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=BAYES_20,DKIM_POLICY_SIGNSOME,DKIM_SIGNED,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-compiler-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-compiler
List-Id: <perl6-compiler.perl.org>
Delivered-To: mailing list perl6-compiler@perl.org
Delivered-To: perl6-compiler@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com.au;
  h=X-YMail-OSG:Received:Date:From:Subject:To:Cc:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding:Message-ID;
  b=ncyCyVfFaI7Lns5plUPpffbFD7MDE+hi2r4SN7+QV8qWUDKyfehEtsWXpG6PxyvyPepLz3SFypfi6Ta7DNiSlC1yxMD6DORVahf1/iPv+MKHRscByqohK4pZwJBx0nkDj2xTZlVBCRE/FUpcT1TF4J2t4WkhLWnHclo1KKOVGKA=;
X-YMail-OSG: BTYZLCIVM1nX5ojVAlUbz7csQzxcTzuehHh228S6TD8ijT31rSiBVPp3V9ubppd006FsP6E4FCjJw5OevZhijJS5c3OxbQPDLf0bIAQ19BffJpeQgRePTZPzDZE9xw--
Date: Wed, 16 May 2007 00:07:13 +1000 (EST)
From: Matthew Keene <dfg778@yahoo.com.au>
Subject: Re: Error calling bless in non-default constructor
To: David Brunton <dbrunton@yahoo.com>
Cc: perl6-compiler@perl.org
In-Reply-To: <191247.64689.qm@web52310.mail.re2.yahoo.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="0-1342931932-1179238033=:46977"
Content-Transfer-Encoding: 8bit
Message-ID: <193515.46977.qm@web36611.mail.mud.yahoo.com>
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.3 required=8.0
	tests=BAYES_50,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_TESTING,DK_SIGNED,DK_VERIFIED,HTML_MESSAGE,KARMA_CONTENT_POSITIVE,SPF_NEUTRAL

--0-1342931932-1179238033=:46977
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit


Thanks for all your help.  Interestingly enough the .perl method reports that the parameter passed to the new method is stored in the object whether it's defined as an attribute or not:

class MattTest {
    has Str $.bar ;
    submethod BUILD (:$foo) {  
        say "passed $foo";
        $.bar = 'def' ;
    }
    
}

my $test = MattTest.new(:foo('abc'));

# Check to see the class is the right kind of thing:

say $test.WHAT ;

# Output the class as a readable string

say $test.perl;

D:\Apps\Perl6>pugs ConstructorTest2.p6
passed abc
MattTest
\MattTest.new(("bar" => "def"), ("foo" => "abc"))

David Brunton <dbrunton@yahoo.com> wrote: >I think so (after fixing a couple of minor typos).
>
>Does this mean that you can only pass defined attributes to a constructor ?  What if you want to pass parameters that are used during build but don't actually need to be stored in the object ?

Hopefully you don't mind my cc'ing  the list- that way someone searching the archives doesn't get stung by my typos ;)

Creating an object should have been:

my MattTest $test .= new(:string<abc>); # TIMTOADY and all that ;)

You can pass objects to BUILD that you don't store in the object:

class MattTest {
    submethod BUILD  (:$foo) {
        say $foo;
    }
}

hth,
-db.

my $test = MattTest(:string('abc'));

# Check to see the class is the right kind of thing:

say $test.WHAT

# Output the class as a readable string

say $test.perl;




----- Original Message ----
From:  Matthew Keene 
To: perl6-compiler@perl.org
Sent: Tuesday, May 15, 2007 5:02:56 AM
Subject: Error calling bless in non-default constructor

I'm trying to use a non-default constructor for a class under Pugs 6.2.13, like so

class MattTest {

  sub new (Class $class : Str $string) {
    say "Passed $string to the constructor for $class" ;
    return $class.bless ;
  }
  
}

my $test = MattTest.new('abc') ;

This is failing with the following output:

D:\Apps\Perl6>pugs ConstructorTest.p6
Passed abc to the constructor for MattTest
*** No such method in class MattTest: "&bless"
    at ConstructorTest.p6 line 5, column 12-25

Am I doing something wrong, or is bless currently unimplemented in Pugs, or is something else wrong.  I have more or less copied the code for the constructor from the test in oo/construction.t.

            
---------------------------------
How would you spend $50,000 to create a more sustainable environment in Australia?  Go to Yahoo!7 Answers and share your idea.




       
____________________________________________________________________________________Get the free Yahoo! toolbar and rest assured with the added security of spyware protection.
http://new.toolbar.yahoo.com/toolbar/features/norton/index.php

              

---------------------------------
Switch to Yahoo!7 Mail: Transfer all your contacts and emails from Hotmail and other providers to Yahoo!7 Mail. Switch now




       
---------------------------------
Get the free Yahoo! toolbar and rest assured with the added security of spyware protection.  

       
---------------------------------
How would you spend $50,000 to create a more sustainable environment in Australia?  Go to Yahoo!7 Answers and share your idea.
--0-1342931932-1179238033=:46977--

