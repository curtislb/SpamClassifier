From beginners-return-91038-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 11:16:18 2007
Return-Path: <beginners-return-91038-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3PFGI6w032170
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 11:16:18 -0400
Received: (qmail 15117 invoked by uid 514); 25 Apr 2007 15:16:11 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 15108 invoked from network); 25 Apr 2007 15:16:11 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Apr 2007 15:16:11 -0000
Received: (qmail 26783 invoked by uid 225); 25 Apr 2007 15:16:10 -0000
Delivered-To: beginners@perl.org
Received: (qmail 26774 invoked by alias); 25 Apr 2007 15:16:10 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.228 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.228)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 08:16:07 -0700
Received: by wr-out-0506.google.com with SMTP id 57so242592wri
        for <beginners@perl.org>; Wed, 25 Apr 2007 08:16:03 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=X5c6xnEiYbowPj/keT/mT1vkmV+3IRmwdNlU4tMis3KoabU/KDU9YX/WbZIN7pfH1Fcs4a0VgBHvqu/JYs9sBlLFvZUpB6v+ibjMGrzZaNZtOAlSs4ZQqBXguARr4C2vsdiG3lwZU2ZabixpdYOvwFaBc+rd+eEA/PQLoFww4Yo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=dXXIK3H12aKDjy1ShR1W1VKcVidleUbLUNIhVQjzl153JOhvGMSc87cqHX6NZBsePO73xzR2mUMih1uvtniM2WSDGaxlXeAPGijtO2RWSM5hUc6AzP6Lk1kTVI7Dl9iRNhhZ6SCLtoLNxFz+0UgW32LYekdTcrSDIp/zxBuEwdQ=
Received: by 10.114.240.1 with SMTP id n1mr193576wah.1177514162667;
        Wed, 25 Apr 2007 08:16:02 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Wed, 25 Apr 2007 08:16:02 -0700 (PDT)
Message-ID: <58ce48dc0704250816t4156409dg914e69d4414161b3@mail.gmail.com>
Date: Wed, 25 Apr 2007 11:16:02 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: yitzle <yitzle@users.sourceforge.net>
Subject: Re: Sort + Use of uninitialized value
Cc: "Beginners Perl" <beginners@perl.org>
In-Reply-To: <ca5781c80704250800q1b089aads9d2b15241795cb71@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <ca5781c80704242237r109cfd60v4ba1ad53e08f5d1a@mail.gmail.com>
	 <58ce48dc0704250621sde0862em372f4de7dc665b2b@mail.gmail.com>
	 <ca5781c80704250800q1b089aads9d2b15241795cb71@mail.gmail.com>
Status: O
Content-Length: 920
Lines: 32

On 4/25/07, yitzle <yitzle@users.sourceforge.net> wrote:
> Inside the loop I check if the value is defined, so I don't care where
> in the order the undefined one shows up in. I don't want to delete
> undefined ones or anything...

Then you can either turn off the warnings for that section (not
advised), ignore the warnings (also not advised), or give the null
values a value.  In the following example I use 0 as the value, but it
could be any numeric value depending on where you want undefined
values to be sorted.

#!/usr/bin/perl

use strict;
use warnings;

my %h = (
        a => { val => 3 },
        b => { val => 34 },
        c => { val => 4 },
        d => { }
);

for my $key (sort { ($h{$a}{val} || 0) <=> ($h{$b}{val} || 0) } keys %h) {
        print "$key\n";
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


