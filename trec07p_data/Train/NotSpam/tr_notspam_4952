From r-help-bounces@stat.math.ethz.ch  Wed Apr 25 12:12:41 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3PGCe6w032734
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 12:12:41 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3PGBaxO030250;
	Wed, 25 Apr 2007 18:11:50 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL, BAYES_50,
	SPF_HELO_PASS autolearn=no version=3.1.8
Received: from mout.perfora.net (mout.perfora.net [74.208.4.195])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3PFdd9t017404
	for <r-help@stat.math.ethz.ch>; Wed, 25 Apr 2007 17:39:40 +0200
Received: from [71.39.177.44] (helo=[192.168.118.73])
	by mrelay.perfora.net (node=mrelayus1) with ESMTP (Nemesis),
	id 0MKp2t-1HgjaW01SJ-0007FU; Wed, 25 Apr 2007 11:39:29 -0400
Message-ID: <462F762B.3030301@acm.org>
Date: Wed, 25 Apr 2007 09:39:23 -0600
From: Tony Plate <tplate@acm.org>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Peter Dalgaard <P.Dalgaard@biostat.ku.dk>
References: <769333.78839.qm@web39711.mail.mud.yahoo.com>
	<462F2F00.3060404@biostat.ku.dk>
In-Reply-To: <462F2F00.3060404@biostat.ku.dk>
X-Provags-ID: V01U2FsdGVkX1+ENvmP/5AWY9rOHUIZXt0Q7fNhWVKm7vsw5rc
	I1coyfLjEjymkL/FCXC333zaFHNRrEGmmKFPLCJH6ZIc9aeMTi
	p5kJiHNn8/Pbfkpru/iHg==
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] regular expressions with grep() and negative indexing
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 1940
Lines: 61

I use regexpr() instead of grep() in cases like this, e.g.:

x2[regexpr("exclude",x2)==-1]

(regexpr returns a vector of the same length as character vector given 
it, so there's no problem with it returning a zero length vector)

-- Tony Plate

Peter Dalgaard wrote:
> Stephen Tucker wrote:
>> Dear R-helpers,
>>
>> Does anyone know how to use regular expressions to return vector elements
>> that don't contain a word? For instance, if I have a vector
>>   x <- c("seal.0","seal.1-exclude")
>> I'd like to get back the elements which do not contain the word "exclude",
>> using something like (I know this doesn't work) but:
>>   grep("[^(exclude)]",x)
>>
>> I can use 
>>   x[-grep("exclude",x)]
>> for this case but then if I use this expression in a recursive function, it
>> will not work for instances in which the vector contains no elements with
>> that word. For instance, if I have
>>   x2 <- c("dolphin.0","dolphin.1")
>> then
>>   x2[-grep("exclude",x2)]
>> will give me 'character(0)'
>>
>> I know I can accomplish this in several steps, for instance:
>>   myfunc <- function(x) {
>>     iexclude <- grep("exclude",x)
>>     if(length(iexclude) > 0) x2 <- x[-iexclude] else x2 <- x
>>     # do stuff with x2 <...?
>>   }
>>
>> But this is embedded in a much larger function and I am trying to minimize
>> intermediate variable assignment (perhaps a futile effort). But if anyone
>> knows of an easy solution, I'd appreciate a tip.
>>   
> It has come up a couple of times before, and yes, it is a bit of a pain.
> 
> Probably the quickest way out is
> 
> negIndex <- function(i) 
> 
>    if(length(i))
> 
>        -i 
> 
>    else 
> 
>        TRUE
>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

