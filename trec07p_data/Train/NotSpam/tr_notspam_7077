From beginners-return-91287-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  2 17:11:54 2007
Return-Path: <beginners-return-91287-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l42LBrb9027514
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 2 May 2007 17:11:53 -0400
Received: (qmail 6631 invoked by uid 514); 2 May 2007 21:11:47 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 6622 invoked from network); 2 May 2007 21:11:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 May 2007 21:11:46 -0000
Received: (qmail 5712 invoked by uid 225); 2 May 2007 21:11:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 5705 invoked by alias); 2 May 2007 21:11:46 -0000
X-Spam-Status: No, hits=-2.4 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,MIME_BASE64_NO_NAME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of daggerquill@gmail.com designates 64.233.184.230 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.230)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 May 2007 14:11:33 -0700
Received: by wr-out-0506.google.com with SMTP id 57so274152wri
        for <beginners@perl.org>; Wed, 02 May 2007 14:11:29 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Vc2ZVvncwqmGO41OioPm+anM9D0eiFr6VaifT+TWTrdZq2sGu8kuipeTvcIYKIGXewC1X0bhaqTEghL81nku0hfLhEqbB57LPTdIIAkJzS+5UbucGK0s1rhY6EHIVHOnrmaQlB7g/QeCkGRLt4NKgkiwd2k+smtid4IbfvQ8D2o=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=VLOYFUdCcMr/jRsI6xrIx87t90OaSM1bXN2uEC6jgWuzsrQ7zKseFGv0InG8TkoJOrdR0BbP7G04Cm096VOq6SjlY8Ik+tFO+vMTh0Hc5naT2svp3HksLoSPQOZk0xTqjQRwU6wvdNanJYuspSXP+ggS22L00pasXOaTQilxJhI=
Received: by 10.114.148.1 with SMTP id v1mr395746wad.1178140288360;
        Wed, 02 May 2007 14:11:28 -0700 (PDT)
Received: by 10.115.111.18 with HTTP; Wed, 2 May 2007 14:11:28 -0700 (PDT)
Message-ID: <4ce365ec0705021411o627edf6cg4d9ec02ce82d34b@mail.gmail.com>
Date: Wed, 2 May 2007 17:11:28 -0400
From: "Jay Savage" <daggerquill@gmail.com>
To: beginners@perl.org, "Chris E. Rempola" <chris@bayarea.net>
Subject: Re: Checking if files are older than 20 mins in a particular directory
In-Reply-To: <4638E7FB.5050402@350.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-7; format=flowed
Content-Disposition: inline
References: <20070502191646.28095.qmail@lists.develooper.com>
	 <4638E7FB.5050402@350.com>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by flax9.uwaterloo.ca id l42LBrb9027514

On 5/2/07, Rob Dixon <rob.dixon@350.com> wrote:> Chris E. Rempola wrote:> > Hi All:> >> > Could someone point me in the right direction to write out a simple Perl> > script to check for old files in a particular directory that are older> > than 20 mins.  Is there a module to grab current timestamp?  Thanks.>> Check out>>   perldoc -f -x>> and look at the -M option. It gives the age of the file in days in> floating point, so if its greater than 20/(24*60) your file is older than> twenty minutes.>> HTH,>> Rob
Not quite. -M reports "Script start time minus file modification time,in days." To put it another way, -M reports how old the file was whenthe script started running. Or more appropriately, how old the filewould have been when the script started running, assuming its currentmtime. That's not the same thing as how old the file is when the testis executed.
For short-lived scripts, the difference is mainly a technicalityForlong-running programs, though, -M's behavior has serious consequences.-M on its own is useless in, say, a daemon that runs for days ormonths--if you're lucky--or even in a program that just takes a whileto process all its data. The math to correct for running time iscomplicated by -M returning fractional days. To use -M effectively,you need to do something like:
    my $minutes = 20;    if ( (-M "file") + ((time - $^T) / (24 * 60 * 60)) >$limit_minutes/(24*60) )        { do something }
Usually it's easier to just use the mtime from stat():
    if (time - (stat "file")[9] > $minutes * 60)        { do something }
Best,
-- jay--------------------------------------------------This email and attachment(s): [  ] blogable; [ x ] ask first; [  ]private and confidential
daggerquill [at] gmail [dot] comhttp://www.tuaw.com  http://www.downloadsquad.com  http://www.engatiki.org
values of â will give rise to dom!

