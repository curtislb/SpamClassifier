From beginners-return-92108-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun  3 05:43:02 2007
Return-Path: <beginners-return-92108-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l539h1hB014255
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 3 Jun 2007 05:43:01 -0400
Received: (qmail 3197 invoked by uid 514); 3 Jun 2007 09:42:49 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3188 invoked from network); 3 Jun 2007 09:42:48 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 Jun 2007 09:42:48 -0000
Received: (qmail 7136 invoked by uid 225); 3 Jun 2007 09:42:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7127 invoked by alias); 3 Jun 2007 09:42:46 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.182 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.182)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 03 Jun 2007 02:42:43 -0700
Received: by wa-out-1112.google.com with SMTP id m38so1389837waf
        for <beginners@perl.org>; Sun, 03 Jun 2007 02:42:39 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=teBPfnMZz4TjfH215o4qkPY9zvsJKchpHEsNbzCzlsT0Bv5IT7DHyGgFzIbMq6UzsoD0hHF4PmVge4TmXeCexweXk7XNAnsrxxT5kO5EjgsTdFHdNiU6KFJ0XB77Qksq/AbAKBtg8Z7e7DZfeJi4Q8wfigDFH6itvBK+tqDkVcI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=JZyoTDDXIlDQLy4pvhKsAnA23AhB/Fb+cwiulQVvBBKF60pLvmmRdgDQ4tGhA0U0OER1TNfUDMY5fyBKfRCLEbTgzv/3t+YJmZWhuRduCb0KPV/1ny5hkWzLPGffDA2tztJXDCEmT4IbBOAL8HHZFMh/uT0UyCIwgg29wEDKmJU=
Received: by 10.115.110.6 with SMTP id n6mr3642375wam.1180863759179;
        Sun, 03 Jun 2007 02:42:39 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Sun, 3 Jun 2007 02:42:39 -0700 (PDT)
Message-ID: <58ce48dc0706030242v9ab59ddp690ee65eaf45fc96@mail.gmail.com>
Date: Sun, 3 Jun 2007 05:42:39 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: Ryan <cryan2@stny.rr.com>
Subject: Re: freeze after <STDIN>
Cc: beginners@perl.org
In-Reply-To: <46625E55.20306@stny.rr.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <46625E55.20306@stny.rr.com>

On 6/3/07, Ryan <cryan2@stny.rr.com> wrote:
snip
> open F, "JunkTestText.txt";
> local $/ = "\*\*\*";
> my @sections = <F>;
> close F;
snip
> When executed, it runs up to and including asking me for input from the
> terminal.  When I enter a value for $patient (a 7-digit number) and
> press enter, nothing happens.  The cursor goes down to the next line and
> just waits.
snip

The Problem is in that section of code.  You did the right thing using
local to limit the scope of $/, but failed to do the other necessary
thing: add a block around the code to cause it to revert back.  This
being Perl there are several solutions.  Here are few in order of my
preference.

#!/usr/bin/perl

use strict;
use warnings;

print "use do to make the three steps into one\n";
my @sections1 = do {
        open my $file, '<', 'JunkTestText.txt';
        local $/ = '***';
        <$file>;
};

print map { "[$_]\n" } @sections1;

print "use a bare block to limit the scope\n";
my @sections2;
{
        open my $file, '<', 'JunkTestText.txt';
        local $/ = '***';
        @sections2 = <$file>;
}

print map { "[$_]\n" } @sections2;

print "save to old value of \$/ and put it back\n";
my $old_in_sep = $/;
$/ = '***';
open my $file, '<', 'JunkTestText.txt';
my @sections3 = <$file>;
#this was not necessary before because
#the file handle closes when it goes
#out of scope
close $file;
$/ = $old_in_sep;

print map { "[$_]\n" } @sections3;

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


