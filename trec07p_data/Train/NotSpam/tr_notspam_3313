From r-help-bounces@stat.math.ethz.ch  Thu Apr 19 17:52:52 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3JLqp0I030317
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 19 Apr 2007 17:52:52 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JLpOdr024516;
	Thu, 19 Apr 2007 23:51:32 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=AWL,
	BAYES_40 autolearn=no version=3.1.8
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.251])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3JLpDE6024463
	for <r-help@stat.math.ethz.ch>; Thu, 19 Apr 2007 23:51:13 +0200
Received: by an-out-0708.google.com with SMTP id c24so697607ana
	for <r-help@stat.math.ethz.ch>; Thu, 19 Apr 2007 14:51:12 -0700 (PDT)
Received: by 10.100.33.14 with SMTP id g14mr1251732ang.1177019472567;
	Thu, 19 Apr 2007 14:51:12 -0700 (PDT)
Received: by 10.100.37.16 with HTTP; Thu, 19 Apr 2007 14:51:12 -0700 (PDT)
Message-ID: <59d7961d0704191451g5907b380n4e890a3bcb252b84@mail.gmail.com>
Date: Thu, 19 Apr 2007 14:51:12 -0700
From: "Henrik Bengtsson" <hb@stat.berkeley.edu>
To: "Duncan Murdoch" <murdoch@stats.uwo.ca>
In-Reply-To: <4627D9D0.4020904@stats.uwo.ca>
MIME-Version: 1.0
Content-Disposition: inline
References: <4626BF97.7000707@williams.edu>
	<40e66e0b0704181908o2a594f5n4691fc6224a880d7@mail.gmail.com>
	<4627D11B.5010000@williams.edu> <4627D9D0.4020904@stats.uwo.ca>
X-Google-Sender-Auth: d30a079c88362244
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch,
   Bernhard Klingenberg <Bernhard.Klingenberg@williams.edu>
Subject: Re: [R] erratic behavior of match()?
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2553
Lines: 70

...and so say google [http://www.google.com/search?q=1%250.1]:

	"1 modulo 0.1 = 0.1",

so end of discussion ;)

In bit of a food coma now, but the following is interesting:

   r = a %% b
<=>
  r = (b*a/b) %% (b*b/b)
<=>
  r = b*((a/b) %% 1)

> modulo <- function(a, b) { b * ((a/b) %% 1) }
> intdiv <- function(a, b) { as.integer(a/b - modulo(a,b)) }

> a <- 1
> b <- 0.1
> modulo(a, b)
[1] 0
> stopifnot(all.equal(a, (a %% b) + b * (a %/% b)))
> stopifnot(all.equal(a, modulo(a, b) + b * intdiv(a,b)))

The question is, do we gain anything at all from this, i.e. is the set
of "odd" results larger or smaller than using a %% b, or is just a
different equally sized set of numbers?  ...and of course it will be a
matter of how we want to define modulo - mathematically or "IEEE
numerically".  Though, there is no such as thing as a free lunch, so
probably nothing to see here...

/Henrik

On 4/19/07, Duncan Murdoch <murdoch@stats.uwo.ca> wrote:
> On 4/19/2007 4:29 PM, Bernhard Klingenberg wrote:
> > Thank you! Is floating point arithmetic also the reason why
> >
> > 1 %% 0.1
> >
> > gives the "surprising" answer 0.1 (because 0.1 cannot be written as a
> > fraction with denominator a power of 2, e.g. 1%%0.5 correctly gives 0).
> >
> > This seems to go a bit against the statement in the help for '%%', which
> > states "For real arguments, '%%' can be subject to catastrophic loss of
> > accuracy if 'x' is much larger than 'y', and a warning is given if this
> > is detected."
>
> I don't see the contradiction.  The statement is talking about one way
> to get imprecise results; you may have found another.
>
> However, I'm not sure if you can blame %% in your example:  the loss of
> precision probably came from the translation of "0.1" to the internal
> representation.  I think "0.1" ends up a little bit larger than 0.1
> after string conversion and rounding, so 1 %/% 0.1 should give 9, and 1
> %% 0.1 should give something very close to 0.1, as you saw.
>
> Duncan Murdoch
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

