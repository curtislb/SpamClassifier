From perl6-all-return-82001-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 16 07:11:41 2007
Return-Path: <perl6-all-return-82001-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5GBBeL9013140
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 16 Jun 2007 07:11:40 -0400
Received: (qmail 30274 invoked by uid 514); 16 Jun 2007 11:11:38 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 30269 invoked from network); 16 Jun 2007 11:11:37 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-0.2 required=8.0
	tests=BAYES_40,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of thoughtstream@gmail.com designates 209.85.146.180 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:reply-to:user-agent:mime-version:to:subject:references:in-reply-to:content-type:content-transfer-encoding:sender;
        b=bafDDRb+Bld/bwh7cDPRdZG6OKY+aAin2c+blz/YYwixJ5jp+56EmJ+RzBhfbMvXfOlNIbLXTP9yJIB/IGqS3tSNoDZNoSVXwevE6eEQOFUWVwRTThL8sP34/UU6hX0nJ0Ldrz9RbL6l6EFbsUbk9HdjngLszm6mlKCBT2rsn7I=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:reply-to:user-agent:mime-version:to:subject:references:in-reply-to:content-type:content-transfer-encoding:sender;
        b=JHgrWr99SMPM6piLbRJaShb2oYcgjDzigHRzaX2V1dgdUrcXisE8QlszVercnJGyntSizOX5BCfCHFMnBwJ/xBCe1d4c1qom3APAUjsswY46bdZqxBoonq5zNmVLSfaA8Pe4z2zZik/A1RhM9eHyZ3+cUZ+yg4rGYfeRrvLWJfw=
Message-ID: <4673C546.5060806@conway.org>
Date: Sat, 16 Jun 2007 21:11:02 +1000
From: Damian Conway <damian@conway.org>
Reply-To: damian@conway.org
User-Agent: Thunderbird 2.0.0.4 (Macintosh/20070604)
MIME-Version: 1.0
To: "perl6-language@perl.org" <perl6-language@perl.org>
Subject: Re: [svn:perl6-synopsis] r14421 - doc/trunk/design/syn
References: <20070613205525.7ECA0CB9B8@x12.develooper.com> <ef30550b0706131429o34838a6es6704e8ec73851b49@mail.gmail.com> <467073C4.6020708@conway.org> <ef30550b0706140749w6c6290e9qc164901b578a8d5b@mail.gmail.com> <832f158a0706141722o5f68cf09l724d4f4520ee146@mail.gmail.com> <150620070756055824%brian.d.foy@gmail.com>
In-Reply-To: <150620070756055824%brian.d.foy@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Sender: Damian Conway <thoughtstream@gmail.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS

brian wrote:

 > As you know, one of the biggest complaints about Perl is that you have
 > to have a lot of special rules knowledge to figure some things out.
 > Whether that is true doesn't really matter: people still complain about
 > it.
 >
 > In this case, it will actually be true.

I don't think that's the case. I think the new approach to Pod has
exactly the opposite effect: it *eliminates* the need for a lot of
special rules and contextual understandings.


 > This impacts Learning Perl 6 rather early because it's a rule that
 > people need to know at the same time that we tell them that whitespace
 > is insignificant.

I'm pretty sure "Learning Perl 6" won't say that. Mainly because it's
not true. Whitespace in Perl 6 isn't always insignificant, even in the
simplest examples. Indeed, whitespace is significantly less
insignificant in Perl 6 than it was in Perl 5.


 > That's not really true anymore because a newline followed by an =
 > followed by begin is this special case, **no matter how it shows up
 > in the program**. Now there's this extra footnote to explain this
 > situation, and at the level of basic syntax, we have to explain a
 > lot more.

I don't think so.

There are two distinct models we're considering in this thread. The
first model is that Pod is a layer entirely syntactically separate from
Perl, and which is preprocessed out of existence before the compiler
ever sees the source of a program. Call this the "Separation model".

The second model is that Pod is an integral syntactic feature of
Perl: effectively a special kind of comment. Call this the
"Integration model".

The rule you have to teach under the Separation model is:

     "Any line that starts with an = is Pod...and not part of your program."

Whereas the rule you have to teach under the Integration model is:

     "Any line that starts with an = is Pod...and not part of your program
          ...UNLESS it's part of an assignment or comparator or inside a string
             in which case it's something else
              ...UNLESS it's also inside a code block inside that string,
                 in which case it's a Pod command again
                     ...UNLESS it's part of a nested assignment or comparator
                        or doubly nested inside the nested string
                            ...UNLESS it's in a doubly nested code block
                               inside that nested string
                                   ...etc.
                                       ...etc."


So, for example, consider the following lines:

     $var

     =comment  Is this Pod?qq{

     =comment  Is this Pod?qq{

     =comment  Is this Pod?qq{

     }}}

Which of those are Pod and which are Perl?

Under the Separation model, they're all Pod;
under the Integration model, only one of them is.


 > So, if this is the case, how will a new Perl 6 user debug a program
 > failure when part of their program mysteriously disappears because
 > they just happened to have =begin at the beginning of a line?

The same way they debug it when part of their program mysteriously
disappears because they just happened to have # at the beginning of a
line: by learning to distinguish between code and commentary.

Except, of course, the Pod mysteriously vanishing will be considerably
easier to debug, because ALL lines starting with =begin vanish, whereas
only some lines beginning with # do.


 > Also, doesn't this then limit Pod to Perl 6 (which I thought was not
 > the goal)? I doubt other languages will want to deal with this
 > situation.

As Smylers so ably pointed out, enabling Pod to be parsed independently
of the underlying language syntax actually makes it vastly easier to use
Pod with other languages. All you need to do is insert a Pod-stripping
preprocessor (already written, as it happens) before the language's 
compiler...as, indeed, the Perl6::Pod does for Perl 5.


The bottom line is that separated Pod conforms to a single simple rule,
which makes it:

     * easy to teach:               "a = in column 1 is Pod"
     * not context-sensitive:       "a = in column 1 is ALWAYS Pod"
     * easy for humans to identify: "is there an = in the first column?"
     * easy for machines to parse:  "is there an = in the first column?"
     * easy to use:                 "put a = in column 1"
     * easy to avoid                "keep the = out of column 1"

I truly think it works better that way :-)

Damian

