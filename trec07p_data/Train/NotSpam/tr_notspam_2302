From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue Apr 17 02:04:22 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3H64L0I023755
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 17 Apr 2007 02:04:22 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 6CE31162ADE
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 17 Apr 2007 06:03:57 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=3.8 tests=AWL,BAYES_50,INFO_TLD,
	RCVD_IN_DSBL,SPF_PASS autolearn=no version=3.1.7
X-Original-To: samba-technical@lists.samba.org
Delivered-To: samba-technical@lists.samba.org
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.226])
	by lists.samba.org (Postfix) with ESMTP id 5D23C162AC2
	for <samba-technical@lists.samba.org>;
	Tue, 17 Apr 2007 06:03:34 +0000 (GMT)
Received: by wx-out-0506.google.com with SMTP id h30so1904482wxd
	for <samba-technical@lists.samba.org>;
	Mon, 16 Apr 2007 23:03:33 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
	b=N/rfh1viPZqmNGG7Zzoqldsb9F618sSEx8aFCnsI9cKDlan9Wy/5kE1m33lbWljQAK+AeHh289ZcN0sj2uWIygf9WMRragmjraPFoBr9nGMQwvqoCqRazdzPyicc5C6ELjaASdpXzqApVOSGtOMI9igigjLpa7ICpEbBmHwCgB0=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
	b=oEa1tmJrSaXyuhyRZXvC8mR7B2QI3c/0u/e4M9bTMmwRp5ugO932HIcKkuH3ZDQc57D0phQN4CpsYXAA5TAZU43SXD07c8frbMPBwCaCpAFnIh4/ClX2xujGmBAWmh8cA90L0yA8Dv1rB/0wy9wqMXSh5ADn6/6vJujSW8zI0y0=
Received: by 10.70.130.19 with SMTP id c19mr12086959wxd.1176789813575;
	Mon, 16 Apr 2007 23:03:33 -0700 (PDT)
Received: by 10.70.118.1 with HTTP; Mon, 16 Apr 2007 23:03:33 -0700 (PDT)
Message-ID: <3641a2b10704162303h3c99a449o48f8abdc8e950f18@mail.gmail.com>
Date: Tue, 17 Apr 2007 00:03:33 -0600
From: "John Jorgensen" <jorgensen.john@gmail.com>
To: samba-technical@lists.samba.org
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Subject: FiniteStateMachine's assumption about first property is non-standard
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 1836
Lines: 38

I've noticed a Minor issue in swat as a consequence of a class
exercise (I'm trying to semi-automatically generate graphviz code for
drawing pictures of Swat finite state machines).

The implementation of start states in  qx.util.fsm.FiniteStateMachine
depends on an assumption which isn't warranted by the JavaScript
definition, though the assumption is probably fulfilled by most
browsers you care about.

Looking for the Start states for my graphs, I found the comment in
qx.util.fsm.FiniteStateMachine reading:

 "The starting state is defined as the first state added
   to the finite state machine."

The implementation of this specification in
qx.util.fsm.FiniteStateMachine.start() assumes that the first property
added to an Object (in this case the _states object) will always be
listed first in an enumeration of that object's properties.  That is
certainly true for all the browsers I've tried, and competitive
pressure between the browsers may have made it true for all of them (a
3-year-old article google turned up,
http://blog.persistent.info/2004/08/javascript-associative-arrays.html,
says that khtml and opera used to produce arbitrary enumeration
orders, but opera 9.10 enumerates properties in the order they were
added).

According to David Flanagan's "Javascript: The Definitive Guide", 5th
edition, p. 108, though, no enumeration order is guaranteed. I'm not
experienced in reading standardese, but section 12.6.4 of the ECMA-262
specification of ECMAScript says that the "mechanics of enumerating
the properties ... is implementation dependent. The order of
enumeration is defined by the object."

So, strictly speaking, FiniteStateMachine.js should save the start
state under a separate name, rather than relying on it always being
enumerated first. But you might decide that's too persnickety to worry
about.

