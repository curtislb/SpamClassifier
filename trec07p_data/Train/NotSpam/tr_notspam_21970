From beginners-return-92714-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jun 24 00:00:29 2007
Return-Path: <beginners-return-92714-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5O40RL9027210
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 24 Jun 2007 00:00:28 -0400
Received: (qmail 651 invoked by uid 514); 24 Jun 2007 04:00:21 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 642 invoked from network); 24 Jun 2007 04:00:21 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 24 Jun 2007 04:00:21 -0000
Received: (qmail 11269 invoked by uid 225); 24 Jun 2007 04:00:20 -0000
Delivered-To: beginners@perl.org
Received: (qmail 11254 invoked by alias); 24 Jun 2007 04:00:20 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 66.249.82.236 as permitted sender)
Received: from wx-out-0506.google.com (HELO wx-out-0506.google.com) (66.249.82.236)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 23 Jun 2007 21:00:18 -0700
Received: by wx-out-0506.google.com with SMTP id r21so1239217wxc
        for <beginners@perl.org>; Sat, 23 Jun 2007 21:00:14 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=lUFFnVv8CwkFftp8Lrq+1th0pxK06Rl7PejumQWAEpGUlDwKOIUMX+4+slCoxR/3zrTeFEfqlR9iYLdCs5LpzkfTB7UcHPOl/rJd+CTQ+LGsFYC9u7WyErhOdP2c+mBuNzGBnZMwhW/zRto0H9fjhg+6BSMub0rvKALODtWtR+A=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=iXpmx3KD03iivqHXx85ysAvBkvQ48/wehF6gBjiBUA5jbFACLjSHFpwzmyTD65ekVcnUxIB7qT3hitNd+HE0Cku1G1wRAbyRGa+WIdPVl94nY4Syy2bMxFdgvS8AG13yeUw0YVrcOcMKP6zTzhQD+bb2z7fwWiYHNwLQt0I0QFs=
Received: by 10.90.96.7 with SMTP id t7mr3498304agb.1182657614463;
        Sat, 23 Jun 2007 21:00:14 -0700 (PDT)
Received: by 10.90.116.9 with HTTP; Sat, 23 Jun 2007 21:00:14 -0700 (PDT)
Message-ID: <31086b240706232100y1f20fb05v3a04ec9dafe197ff@mail.gmail.com>
Date: Sat, 23 Jun 2007 21:00:14 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Vahid Moghaddasi" <vahid.moghaddasi@gmail.com>
Subject: Re: grep from one file and write to another
Cc: beginners@perl.org
In-Reply-To: <a3bd4fe00706232018t41e6011fl925e1c320aad68c7@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <a3bd4fe00706231903k6cd592e3t9bbffaecd15c5996@mail.gmail.com>
	 <31086b240706231943q6d5d5804yb4eae0caa2d4b18a@mail.gmail.com>
	 <a3bd4fe00706232018t41e6011fl925e1c320aad68c7@mail.gmail.com>
X-Google-Sender-Auth: c1590c51f65f3fc8

On 6/23/07, Vahid Moghaddasi <vahid.moghaddasi@gmail.com> wrote:

> For each field (user) in the filter.in file, I will have to find the
> user in passwd file, wouldn't I need to re-read the passwd file as
> much as there are fields in filter.in file?

Probably not. For one solution, you might be able to use getpwnam to
get the information for each username individually, so you never need
to read from the password file at all.

    my($name, $passwd, $uid, $gid,
          $quota, $comment, $gcos, $dir, $shell, $expire)
        = getpwnam($username);

But maybe you need the actual password file.

> I am not sure how much I can read into memory space without affecting
> other programs but the entire FILTERfh could be a pretty large. Each
> line could have up to 100 fields (users) and there could be 3 or 5
> lines. How would I read them into memory? In an array?

300 to 500 usernames? If every username is meant to be unique, this
sounds like it's asking to be a hash. A hash with hundreds of
key-value pairs is easy for Perl to handle, so unless each value is
very large you shouldn't have memory issues.

Once you've built the hash, you can traverse the password file (or use
getpwent) and quickly identify the matching usernames from the hash.

Cheers!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


