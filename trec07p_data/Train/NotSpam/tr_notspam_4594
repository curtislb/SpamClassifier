From r-help-bounces@stat.math.ethz.ch  Tue Apr 24 12:15:11 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3OGF96w016027
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 24 Apr 2007 12:15:10 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3OGDmVd030203;
	Tue, 24 Apr 2007 18:14:00 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.3 required=5.0 tests=AWL,
	BAYES_50 autolearn=no version=3.1.8
Received: from mica.fhcrc.org (MICA.FHCRC.ORG [140.107.152.12])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3OGDZKb030159
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <r-help@stat.math.ethz.ch>; Tue, 24 Apr 2007 18:13:36 +0200
Received: from gopher4.fhcrc.org (GOPHER4.FHCRC.ORG [140.107.170.154])
	by mica.fhcrc.org (8.12.11.20060308/8.12.11/SuSE Linux 0.7) with ESMTP
	id l3OGDCwh025667; Tue, 24 Apr 2007 09:13:21 -0700
Received: by gopher4.fhcrc.org (Postfix, from userid 37962)
	id 1189B26854A; Tue, 24 Apr 2007 09:13:12 -0700 (PDT)
To: nicolas bertin <nbertin@gsc.riken.jp>
References: <1177398220.3363.281.camel@anx133.gsc.riken.jp>
From: Martin Morgan <mtmorgan@fhcrc.org>
Date: Tue, 24 Apr 2007 09:13:12 -0700
In-Reply-To: <1177398220.3363.281.camel@anx133.gsc.riken.jp> (nicolas
	bertin's message of "Tue, 24 Apr 2007 16:03:40 +0900")
Message-ID: <6phk5w1lpif.fsf@gopher4.fhcrc.org>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
X-PMX-Version: 5.3.1.294258, Antispam-Engine: 2.5.1.298604,
	Antispam-Data: 2007.4.24.83933
X-FHCRC-SCANNED: Tue Apr 24 09:13:26 2007
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] Error in clusterApply(): recursive default argument
 reference
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 3799
Lines: 131

Hi Nicolas --

I think your code is assuming that all nodes have access to the same
set of variables. One solution is to write in a more completely
'functional' style

parNullDistribIntersection <- function(g1, g2, perm=1000, cl=cl) {
    n1 = nodes(g1)                      
    parSapply(cl, 1:perm,
              function(i, g1, g2, n1) {
                  nodes(g1) <- sample(n1)
                  numEdges(intersection(g1,g2))
              },
              g1, g2, n1)
}              

Another possibility is to ensure that the relevant variables are
exported to the cluster before parSapply. With both of these you'll
want to pay some attention to the costs of communicating the data to
the nodes, which could easily be overwhelming (Rmpi's version of
parSapply is smarter at doing the data transfer -- log n time rather
than linear time, where n is the number of nodes -- and more flexible
in distributing the work).

Hope that helps,

Martin


nicolas bertin <nbertin@gsc.riken.jp> writes:

> Hi,
>
> I want to compute a distribution of the intersection of a graph and
> 'randomized' graphs induced by the permutations of node labels (to
> preserve the graph topology).
> Since I ll have many permutations to perform, I was thinking of using
> the snow package and in particular "parSapply" to divide the work
> between my 4 CPUs.
> But I get the following error message :
>
> Error in clusterApply(cl, splitList(x, length(cl)), lapply, fun, ...) : 
>         recursive default argument reference
>
> What am i doing wrong ?
>
> Some details about my platform and R version :
> -----------------------------------------------
> $platform
> [1] "x86_64-redhat-linux-gnu"
> $version.string
> [1] "R version 2.4.1 (2006-12-18)"
>
>
> Below is the snippet of code generating the error message :
> -----------------------------------------------------------
> ### libraries ###
> library(graph)
> library(snow)
>
> ### functions ###
> nullDistribIntersection <- function(g1, g2, perm=1000)
> {
>   n1 <- nodes(g1)
>   sapply(1:perm,
> 	  function(i)
> 	  {
>             nodes(g1) <- sample(n1)
> 	    numEdges(intersection(g1,g2))
> 	  }
> 	 )
> }
>
>
> parNullDistribIntersection <- function(g1, g2, perm=1000, cl=cl)
> {
>   n1 <- nodes(g1)
>   parSapply(cl, 1:perm,
> 	  function(i)
> 	  {
>             nodes(g1) <- sample(n1)
> 	    numEdges(intersection(g1,g2))
> 	  }
> 	 )
> }
>
>
> ## initialize the graph and the rand seed
> set.seed(123)
> g <- randomEGraph(LETTERS[1:15], edges = 100)
>
> ## compute a distribution of the intersection of the graph 
> ## and a 'randomized' graph induced by the permutations of
> ## node labels (to preserve the graph topology)
> cat("1CPU sys time:",
>     system.time(
>                  dist <- nullDistribIntersection(g,g)
>                ),
>     "\n"
>     )
>
> cl <- makeCluster(c("localhost", "localhost"), type = "SOCK")
> cat("Cluster sys time:",
>     system.time(
>                  dist <- parNullDistribIntersection(g,g)
>                ),
>     "\n"
>     )
> ----------------------------------------------------------------
>
> Thanks in advance.
>
> Nicolas Bertin 
> GSC / RIKEN Yokohama
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

-- 
Martin Morgan
Bioconductor / Computational Biology
http://bioconductor.org

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

