From perl6-all-return-81234-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May  9 17:10:25 2007
Return-Path: <perl6-all-return-81234-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l49LANqD001420
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 9 May 2007 17:10:23 -0400
Received: (qmail 18025 invoked by uid 514); 9 May 2007 21:10:20 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 18016 invoked from network); 9 May 2007 21:10:20 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: domain of nick@flirble.org designates 194.70.3.20 as permitted sender)
Date: Wed, 9 May 2007 22:01:03 +0100
From: Nicholas Clark <nick@ccl4.org>
To: chromatic <chromatic@wgz.org>
Cc: perl6-internals@perl.org
Subject: Re: [svn:parrot] r18381 - trunk/include/parrot
Message-ID: <20070509210103.GL18077@plum.flirble.org>
Mail-Followup-To: chromatic <chromatic@wgz.org>, perl6-internals@perl.org
References: <20070501234157.8CE9ACB9B8@x12.develooper.com> <20070501234122.9F5F8CB9B8@x12.develooper.com> <20070509195357.GJ52711@colon.colondot.net> <200705091306.49336.chromatic@wgz.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200705091306.49336.chromatic@wgz.org>
User-Agent: Mutt/1.4.2.1i
X-Organisation: Tetrachloromethane
Sender: Nicholas Clark <nick@flirble.org>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_HELO_PASS,SPF_PASS

On Wed, May 09, 2007 at 01:06:49PM -0700, chromatic wrote:
> On Wednesday 09 May 2007 12:53:57 Nicholas Clark wrote:
> 
> > On Tue, May 01, 2007 at 04:41:22PM -0700, particle@cvs.perl.org wrote:
> > > +
> > > +#define STRING_IS_NULL(s) ((s) == NULL)
> > > +#define STRING_IS_EMPTY(s) !(int)(s)->strlen

> Does !(int)(s)->strlen really scan as quickly and easily as STRING_IS_EMPTY?

Mmm, yes, thinking about it more...
What's that int cast doing there?

Smells like a bug. Either (s)->strlen is going to be zero, in which case
! of it is true, or it's going to be in the range INT_MIN to INT_MAX, in
which case it's not true, or it's going to be outside that range, in which
case the cast is undefined behaviour. (because it's signed)

I've not checked, and I'm not sure if it's going to be easy to do so, but
I assume that the cast was moved into the macro as part of refactoring,
and has been in the code for some time.

So, !s->strlen does scan as quickly and easily.

s == NULL is also more tersely written as !s, which, I feel, is also clearer
to regular C programmers.

I've also intentionally left the parentheses off, as once you aren't using
macros, you can choose not to use them on simple expressions.

> > Arguably one of the mistakes of Perl 5 was to use too many macros, which
> > unintentionally contributes to obfuscating the code.
> 
> It's not as if *these* are SvPVNL and SvPVZ, or was that SVpvNL or SvPv 
> or....?

Yes. Those ones. But after about 5 years I started to see the patterns in them.

Clearly 5 years isn't a rapid learning curve.

Nicholas Clark

