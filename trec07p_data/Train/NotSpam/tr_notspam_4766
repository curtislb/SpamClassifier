From beginners-return-91009-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 00:15:55 2007
Return-Path: <beginners-return-91009-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3P4Fr6w022760
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 00:15:54 -0400
Received: (qmail 3853 invoked by uid 514); 25 Apr 2007 04:15:49 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3821 invoked from network); 25 Apr 2007 04:15:48 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 25 Apr 2007 04:15:48 -0000
Received: (qmail 11702 invoked by uid 225); 25 Apr 2007 04:15:48 -0000
Delivered-To: beginners@perl.org
Received: (qmail 11691 invoked by alias); 25 Apr 2007 04:15:48 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 64.233.184.238 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.238)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 24 Apr 2007 21:15:46 -0700
Received: by wr-out-0506.google.com with SMTP id 57so83637wri
        for <beginners@perl.org>; Tue, 24 Apr 2007 21:15:41 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=KIDq5hZt8VXzkAOE5nqnrx0KSAYfCdjj/73IzwKAXnXcj9vRWHLJLFImHlrTf6WnxJhVrvktUpKvxDFCqIkkj+rX2C11bQY3781yMYrxp0qHKYHrBG0oINpBiWiRFHYcf1Smgvl2PUWYTj3gnb8XBimXR2XgptPvL09GJvgVVLQ=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=klZu2aOtpeDXFIsi7IosjD01RqqOAqWR+Y0G8XtCfNY0S6BYI/9FkS/Q2TCD8YFYGbTwxn8wxqdrS63RuIBe5AI9aRob6PEtM+2eOkXNfItRR3xsLYGv4izVdx5rN0LPJmmwb/6UmZ2dzzabIf56MbSSJ5VVjD70Go2cCYGs+DE=
Received: by 10.90.103.2 with SMTP id a2mr103787agc.1177474541837;
        Tue, 24 Apr 2007 21:15:41 -0700 (PDT)
Received: by 10.90.113.16 with HTTP; Tue, 24 Apr 2007 21:15:41 -0700 (PDT)
Message-ID: <31086b240704242115x3cc8f2b6o21b5c3d0151660f1@mail.gmail.com>
Date: Tue, 24 Apr 2007 21:15:41 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: som.ctc@gmail.com
Subject: Re: Math::BigFloat
Cc: beginners@perl.org
In-Reply-To: <e9a6a7e60704242100h228f2b68na272ee8ff20ee23d@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <e9a6a7e60704242100h228f2b68na272ee8ff20ee23d@mail.gmail.com>
X-Google-Sender-Auth: 8ddea020739fc87b
Status: O
Content-Length: 925
Lines: 36

On 4/24/07, Somu <som.ctc@gmail.com> wrote:

> I'm unable to compare numbers using the module. Actually i can only
> use it to create numbers like 0 or inf or 1 or their negatives. But i
> dont know how to use their methods. Bcoz the examples in the doc
> aren't working. Can i get some simple examples?

What are you doing that isn't working? "Because" if the documentation
examples don't work for you, why should this work?

  #!/usr/bin/perl

  use strict;
  use warnings;

  use Math::BigFloat;

  my $big = Math::BigFloat->new(200);
  my $other = Math::BigFloat->new(100);

  if ($big > $other) {
    print "It seems that $big is bigger than $other.\n";
  } else {
    print "Actually $other is at least as large as $big.\n";
  }

Cheers!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


