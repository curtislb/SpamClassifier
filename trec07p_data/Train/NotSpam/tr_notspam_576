From r-help-bounces@stat.math.ethz.ch  Tue Apr 10 18:18:37 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3AMIa0I002640
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 10 Apr 2007 18:18:36 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3AMHCW1000555;
	Wed, 11 Apr 2007 00:17:22 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=AWL,
	SPF_HELO_PASS autolearn=no version=3.1.8
Received: from talk.nabble.com (www.nabble.com [72.21.53.35])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3AMGwwQ000408
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Wed, 11 Apr 2007 00:16:59 +0200
Received: from [72.21.53.38] (helo=jubjub.nabble.com)
	by talk.nabble.com with esmtp (Exim 4.50) id 1HbOe1-0006Om-AA
	for r-help@stat.math.ethz.ch; Tue, 10 Apr 2007 15:16:57 -0700
Message-ID: <9929835.post@talk.nabble.com>
Date: Tue, 10 Apr 2007 15:16:57 -0700 (PDT)
From: yoooooo <magno_yu@ml.com>
To: r-help@stat.math.ethz.ch
MIME-Version: 1.0
X-Nabble-From: magno_yu@ml.com
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: [R] Memory management
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 1412
Lines: 42


Hi all, I'm just curious how memory management works in R... I need to run an
optimization that keeps calling the same function with a large set of
parameters... so then I start to wonder if it's better if I attach the
variables first vs passing them in (coz that involves a lot of copying.. )

Thus, I do this
fn3 <- function(x, y, z, a, b, c){ sum(x, y, z, a, b, c) }
fn4 <- function(){ sum(x, y, z, a, b, c) }

rdn <- rep(1.1, times=1e8)
r <- proc.time()
for (i in 1:5)
  fn3(rdn, rdn, rdn, rdn, rdn, rdn)
time1 <- proc.time() - r
print(time1)

lt <- list(x = rdn, y = rdn, z = rdn, a = rdn, b = rdn, c = rdn)
attach(lt)
r <- proc.time()
for (i in 1:5)
  fn4()
time2 <- proc.time() - r
print(time2)
detach("lt")

The output is
[1] 25.691  0.003 25.735  0.000  0.000
[1] 25.822  0.005 25.860  0.000  0.000

Turns out attaching takes longer to run.. which is counter intuitive (unless
the search to the pos=2 envir takes long time as well) Do you guys know why
this is the case? 
-- 
View this message in context: http://www.nabble.com/Memory-management-tf3556238.html#a9929835
Sent from the R help mailing list archive at Nabble.com.

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

