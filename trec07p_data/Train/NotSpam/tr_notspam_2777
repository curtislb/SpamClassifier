From beginners-return-90899-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 18 10:45:27 2007
Return-Path: <beginners-return-90899-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3IEjP0I011901
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 18 Apr 2007 10:45:26 -0400
Received: (qmail 19820 invoked by uid 514); 18 Apr 2007 14:44:55 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 19809 invoked from network); 18 Apr 2007 14:44:55 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 18 Apr 2007 14:44:55 -0000
Received: (qmail 20542 invoked by uid 225); 18 Apr 2007 14:44:54 -0000
Delivered-To: beginners@perl.org
Received: (qmail 20535 invoked by alias); 18 Apr 2007 14:44:54 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_POLICY_SIGNSOME,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from grant.njpservices.com (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 18 Apr 2007 07:44:47 -0700
Received: from [85.92.179.53] (85-92-179-53.eurisp.net [85.92.179.53] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l3IEiZa23216;
	Wed, 18 Apr 2007 15:44:35 +0100
Message-ID: <46262ED1.8030308@350.com>
Date: Wed, 18 Apr 2007 15:44:33 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: beginners@perl.org
CC: "Johnson, Reginald \(GTI\)" <reggie_johnson@ml.com>
Subject: Re: Return value from subroutine
References: <ED83D6D3B238844AB4C3A1285725F65C0CC9CF@MLNYC724MB.amrs.win.ml.com>
In-Reply-To: <ED83D6D3B238844AB4C3A1285725F65C0CC9CF@MLNYC724MB.amrs.win.ml.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Status: O
Content-Length: 2040
Lines: 106

Johnson, Reginald (GTI) wrote:
>
> I don't see what I'm doing wrong here. I just want to compare the value
> of $_ and return the indicated string if there is a match.
>
> #!/usr/bin/perl
>
> use strict;
> use warnings;
>
> my $temp_proc;
> my $mnt_proc = "AVI";
> $temp_proc = convert_mnt_proc($mnt_proc);
> 
> #*************************************************************************
> sub convert_mnt_proc {
>   $_ = shift;
>   if ($_ eq /AVI/) {
>     return = "Audit Volume";
>   }
> # elsif (/BKP/) {
> #   return = "BACKUP";
> # }
> # elsif (/DBB/) {
> #   return = "Database Backup";
> # }
> # elsif (/RCL/) {
> #   return = "Reclamation";
> # }
> # elsif (/BSP/) {
> #   return = "Backup Storage Pool";
> # }
> # elsif (/MIG/) {
> #   return = "Migration";
> # }
> # elsif (/MDT/) {
> #   return = "Move Data";
> # }
> # elsif (/IMP/) {
> #   return = "Import Node";
> # }
> } #end convert_
>
> Can't modify return in scalar assignment at fixit.pl line 12, near
> ""Audit Volume";"
> Execution of fixit.pl aborted due to compilation errors.

Your error message is because you are trying to assign to the return()
function, which is invalid syntax. You should be writing

  return "Audit Volume";

Furthermore your function will fail because the test

  $_ eq /AVI/

is equivalent to

  $_ eq ($_ =~ m/AVI/)

which is either

  $_ eq '1'

or

  $_ eq ''

depending on whether the regex pattern matched against $_.

What you need is simply

  if ($_ eq 'AVI') {
    return "Audit Volume";
  }

and finally, this whole subroutine is pretending to be a hash:

use strict;
use warnings;

my %convert_mnt_proc = (
  AVI => 'Audit Volume',
  BKP => 'BACKUP',
  DBB => 'Database Backup',
  RCL => 'Reclamation',
  BSP => 'Backup Storage Pool',
  MIG => 'Migration',
  MDT => 'Move Data',
  IMP => 'Import Node',
);

my $mnt_proc = 'AVI';
my $temp_proc = $convert_mnt_proc{$mnt_proc};



HTH,

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


