From beginners-return-91349-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri May  4 13:39:43 2007
Return-Path: <beginners-return-91349-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l44HdfqD018063
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 4 May 2007 13:39:42 -0400
Received: (qmail 3095 invoked by uid 514); 4 May 2007 17:39:37 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3086 invoked from network); 4 May 2007 17:39:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 4 May 2007 17:39:37 -0000
Received: (qmail 24464 invoked by uid 225); 4 May 2007 17:39:36 -0000
Delivered-To: beginners@perl.org
Received: (qmail 24455 invoked by alias); 4 May 2007 17:39:36 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from nemesis.sciencephoto.co.uk (HELO nemesis.sciencephoto.co.uk) (194.200.237.131)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 04 May 2007 10:39:28 -0700
Received: from [194.200.237.196] (helo=[194.200.237.196])
	by nemesis.sciencephoto.co.uk with esmtp (Exim 4.50)
	id 1Hk1kZ-0007Gr-Io
	for beginners@perl.org; Fri, 04 May 2007 18:39:23 +0100
From: "Beginner" <dermot@sciencephoto.com>
To: beginners@perl.org
Date: Fri, 04 May 2007 18:39:18 +0100
MIME-Version: 1.0
Subject: CGI OO style
Message-ID: <463B7DD6.24035.276218B9@dermot.sciencephoto.com>
Priority: normal
X-mailer: Pegasus Mail for Windows (4.41)
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7BIT
Content-description: Mail message body

Hi Again,

I am trying to make a progressbar and am stuck. I might not sure if 
it my lack of understanding of the differences between the OO style 
or function-oriented style (to paraphrase the Stein-monster) of 
writing CGI scripts.

Script 1 uses the function style and works albeit with one javascript 
error.

Script 2 is my effort at the OO style. It fills my http logs with 
errors as well as causing a similar number of javascript errors.

The only think that looks relevant in the module documents is under 
bugs, caveats, todo:

"Parameter passing doesn't match CGI.pm"

I not sure what that means exactly. Is it relevant?

So is my style wrong or am I changing the expected behaviour of the 
module if I use an OO style or is it something else altogether.

Thanx (sorry for the long-winded post),
Dp.

======== script 1 ===========
#!/usr/bin/perl

use strict;
use warnings;
use CGI::ProgressBar qw/:standard/;

$| = 1;

 my $q = new CGI::ProgressBar;
 print header,
        start_html(-title => "Testing",
                   -style => {-src => '/css/mycss.css'},
        ),
        p('A test'),

# Define progress bar.
  progress_bar(
         -from => 1,
         -to => 50,
         -debug => 1,
         -width => 30,
        );

 for (1..5) {
        print update_progress_bar;
        sleep 1;
 }
 print hide_progress_bar;
 print end_html;
======================== enf of script 1 ========

========== script 2 ================
#!/usr/bin/perl

use strict;
use warnings;
use CGI::ProgressBar qw/:standard/;


$| = 1;

 my $q = new CGI::ProgressBar;
 print $q->header;
 print $q->start_html(-title => "A test",
                      -style => {-src => '/css/mycss.css'},
        );
 $q->p('Sending Mail');

# Define progress bar.
  $q->progress_bar(
         -from => 1,
         -to => 12,
         -debug => 0,
         -width => 30,
        );

 for (1..5) {
        print $q->update_progress_bar;
        sleep 1;
 }
 print $q->hide_progress_bar;

 print $q->end_html;

======= end of script 2 ========


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


