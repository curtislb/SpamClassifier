From beginners-return-91734-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed May 16 07:33:16 2007
Return-Path: <beginners-return-91734-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4GBXEqD017957
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 16 May 2007 07:33:15 -0400
Received: (qmail 3046 invoked by uid 514); 16 May 2007 11:33:06 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 3037 invoked from network); 16 May 2007 11:33:06 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 16 May 2007 11:33:06 -0000
Received: (qmail 14953 invoked by uid 225); 16 May 2007 11:33:06 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14948 invoked by alias); 16 May 2007 11:33:05 -0000
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.132.242 as permitted sender)
Received: from an-out-0708.google.com (HELO an-out-0708.google.com) (209.85.132.242)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 16 May 2007 04:32:57 -0700
Received: by an-out-0708.google.com with SMTP id d40so29042and
        for <beginners@perl.org>; Wed, 16 May 2007 04:32:52 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Fn2dG3KqJKtXFFsqgfXlFTZnUc7kqwxEVF3zYkeftsKEG8PPBMhSGiX8c315dGEQjLaCqPswTbtIZyPlpJqQopP5tu9r5rZY2N2+582PO8w3LVxySFw7PmEkjCRI8CRxTZcpeA1boCxe81o40p/632v2MUN5MtUxZLYBWBHUnis=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=ZqvwckuEbeGJesM2RAOIMhQuJQWV+CM7fFElcGjDW0L/dAyKZ80+GTEj5wWX12rFhxmFbBLYy14vfiGa5V9f0AEQLCXt/7d8thReh4lc8amhcEpKdwkMY7OErRSTwk08MaOUme88ZYFBguf3gckg7THRn+doLX9krwzP7brGsFc=
Received: by 10.115.59.4 with SMTP id m4mr2106593wak.1179315171943;
        Wed, 16 May 2007 04:32:51 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Wed, 16 May 2007 04:32:46 -0700 (PDT)
Message-ID: <58ce48dc0705160432q511d3be6u9c2c6f44f21ecc93@mail.gmail.com>
Date: Wed, 16 May 2007 07:32:46 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Mathew Snyder" <theillien@yahoo.com>
Subject: Re: YARQ: Yet Another Regex Question
Cc: "Perl Beginners" <beginners@perl.org>
In-Reply-To: <464AE51D.5080304@yahoo.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <464AE51D.5080304@yahoo.com>

On 5/16/07, Mathew Snyder <theillien@yahoo.com> wrote:
> I have a trouble ticket application that uses a regex to find a piece of
> information in an incoming email and auto populate a field if it is found.  The
> line it will be looking for is
> CUSTOMER ENVIRONMENT customer_name
> where customer_name will never have a space making it one word.  If I just want
> to pull from the line the customer_name would my regex look like
> $MatchString = "CUSTOMER ENVIRONMENT\s+(\w)"

Bad idea.  Use qr() instead.

>
> For what it's worth the line that will handle this is
> $found = ($Transaction->Attachments->First->Content =~ /$MatchString/m);
> I'm guessing that when used in an assignment like this, $1 will be used as the
> value.  The contents of (\w) in this case.  Is that correct?
snip

Yes, the $1 match variable will hold the match if $found is true.  A
common idiom is therefore

my $name;
my $regex = qr/CUSTOMER ENVIRONMENT\s+(\w)/;
if ($Transaction->Attachments->First->Content =~ /$regex) {
    $name = $1;
} else {
    die "could not find name";
}

Another way to write this is

my $regex = qr/CUSTOMER ENVIRONMENT\s+(\w)/;
my ($name) = $Transaction->Attachments->First->Content =~ /$regex/
    or die "could not find name";

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


