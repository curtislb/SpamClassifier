From sugar-bounces@laptop.org  Mon Apr 16 19:59:55 2007
Return-Path: <sugar-bounces@laptop.org>
Received: from pedal.laptop.org (pedal.laptop.org [18.85.2.148])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3GNxs0I020765
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 16 Apr 2007 19:59:54 -0400
Received: from pedal.laptop.org (localhost [127.0.0.1])
	by pedal.laptop.org (Postfix) with ESMTP id 902FD4F7F3;
	Mon, 16 Apr 2007 19:59:04 -0400 (EDT)
X-Original-To: sugar@laptop.org
Delivered-To: sugar@laptop.org
Received: from spam.laptop.org (spam.laptop.org [18.85.46.23])
	by pedal.laptop.org (Postfix) with ESMTP id 64D094F7F3
	for <sugar@laptop.org>; Mon, 16 Apr 2007 19:59:03 -0400 (EDT)
X-ASG-Debug-ID: 1176767966-05b900020000-3Xmyjt
X-Barracuda-URL: http://18.85.46.23:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: www.WarpOMatic.com[66.98.182.86]
X-Barracuda-Start-Time: 1176767966
X-Barracuda-Encrypted: DHE-RSA-AES256-SHA
Received: from WarpOMatic.com (www.WarpOMatic.com [66.98.182.86])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by spam.laptop.org (Spam Firewall) with ESMTP
	id 591822CE8; Mon, 16 Apr 2007 19:59:27 -0400 (EDT)
Received: from [172.20.101.148] (adsl-69-111-192-60.dsl.snfc21.sbcglobal.net
	[69.111.192.60]) (authenticated bits=0)
	by WarpOMatic.com (8.12.10/8.12.10) with ESMTP id l3GNu38u005344;
	Mon, 16 Apr 2007 16:56:03 -0700
Message-ID: <46240DD6.1070600@DonHopkins.com>
Date: Mon, 16 Apr 2007 16:59:18 -0700
From: Don Hopkins <dhopkins@DonHopkins.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Dan Williams <dcbw@redhat.com>
X-ASG-Orig-Subj: Re: [sugar] Cairo tile engine,
	and accessing 565 buffers from cairo and C
References: <461F508F.8000406@rpi.edu> <46216D8A.4000103@DonHopkins.com>	
	<1176615055.864.14.camel@localhost.localdomain>	
	<87fy70tdn9.wl%cworth@cworth.org>
	<1176753788.29852.17.camel@localhost.localdomain>
In-Reply-To: <1176753788.29852.17.camel@localhost.localdomain>
X-ImpeachBushNow-Information: Please contact postmaster@WarpOMatic.com for
	more information
X-ImpeachBushNow: Found to be clean
X-Barracuda-Bayes: INNOCENT GLOBAL 0.0000 1.0000 -2.0210
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at laptop.org
X-Barracuda-Spam-Score: -2.02
X-Barracuda-Spam-Status: No, SCORE=-2.02 using global scores of TAG_LEVEL=3.5
	QUARANTINE_LEVEL=1000.0 KILL_LEVEL=5.5 tests=
X-Barracuda-Spam-Report: Code version 3.1, rules version 3.1.14404
	Rule breakdown below
	pts rule name              description
	---- ----------------------
	--------------------------------------------------
Cc: Games for the OLPC <games@laptop.org>,
   "OLPC Developer's List" <devel@laptop.org>,
   "'Sugar List'" <sugar@laptop.org>, Carl Worth <cworth@redhat.com>
Subject: Re: [sugar] Cairo tile engine,
 and accessing 565 buffers from cairo and C
X-BeenThere: sugar@laptop.org
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Discussion of OLPC design,
	desktop platform and user experience" <sugar.laptop.org>
List-Unsubscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=unsubscribe>
List-Archive: <http://mailman.laptop.org/pipermail/sugar>
List-Post: <mailto:sugar@laptop.org>
List-Help: <mailto:sugar-request@laptop.org?subject=help>
List-Subscribe: <http://mailman.laptop.org/mailman/listinfo/sugar>,
	<mailto:sugar-request@laptop.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: sugar-bounces@laptop.org
Errors-To: sugar-bounces@laptop.org
Status: O
Content-Length: 2759
Lines: 54

Thanks for all the great explanations! That's very helpful.

I want to draw RGB tiles (alpha is not necessary) on the screen as fast 
as possible, double buffering them in 16 bit X images, so I can 
incrementally update the tiles, then blit them to a composition surface 
in the server, then draw sprites and cairo graphics over them, them blit 
the resulting image to the screen, all in 16 bits 565 in the server (or 
24 bits 888 once that's supported).

I am loading in the tile set from a png file, so it comes in as a 24 bit 
RGB surface.
Currently I am making a bunch of small tiles in individual surfaces, and 
drawing those individually with Cairo.
An alternative would be to keep all tiles in one surface, and translate 
and clip the surface appropriately to draw each tile, which would save 
memory (because of the memory fragmentation and overhead of having 
hundreds of small surfaces versus one big surface). But I am afraid the 
overhead of drawing the rectangle, clipping to it, and blitting the 
large image through it would be slower than simply drawing a bunch of 
small surfaces without any clipping. Is that a valid assumption, or is 
there a fast path for drawing a surface clipped through a rectangle? I'm 
writing the tile drawing code that calls cairo in C, so the Python 
interpreter overhead is not an issue.

Currently the tile surfaces are 24 bit RGB surfaces, that I create by 
calling create_similar on the 24 bit RGB tile set I read in from a png 
file.
But I would rather make all those tile surfaces (or the one tile set 
surface that I clip) in the X server, so they will blit faster.

xHow do I create an cairo xlib surface from Python? Is there a supported 
way to call cairo_xlib_surface_create from Python?
When I call the cairo.XlibSurface constructor, it throws an exception 
that says the surface cannot be directly instantiated.
The only factory method I can find on cairo.XlibSurface is 
create_similar, but I have no idea how to get ahold of an original 
cairo.XlibSurface instance to call create_similar on.
The closest thing I can find is a C method on the gdk drawable object, 
called ref_cairo_surface, that does what I need, but I don't know how to 
call that directly from Python, either.
Maybe I could add a special purpose method to my Python module called 
RefCairoSurface that takes a PyGObject, pulls out the GObject, and calls 
GDK_DRAWABLE_GET_CLASS on that to get the drawable, then calls 
ref_cairo_surface on that to get the cairo surface.

Is there an easy way to get ahold of the cairo surface from a cairo 
context, or from a gdk drawable, from Python?

    -Don

_______________________________________________
Sugar mailing list
Sugar@laptop.org
http://mailman.laptop.org/mailman/listinfo/sugar

