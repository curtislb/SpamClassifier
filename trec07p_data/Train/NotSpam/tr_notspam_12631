From r-help-bounces@stat.math.ethz.ch  Tue May 22 16:50:15 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4MKoEqD016890
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 22 May 2007 16:50:15 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4MKn0pO030962;
	Tue, 22 May 2007 22:49:10 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.3 required=5.0 tests=AWL, BAYES_50,
	SPF_HELO_PASS autolearn=no version=3.1.8
Received: from kuber.nabble.com (kuber.nabble.com [216.139.236.158])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4MJWeYf006038
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Tue, 22 May 2007 21:32:42 +0200
Received: from isper.nabble.com ([192.168.236.156])
	by kuber.nabble.com with esmtp (Exim 4.63)
	(envelope-from <bounces@nabble.com>) id 1Hqa64-00036j-ED
	for r-help@stat.math.ethz.ch; Tue, 22 May 2007 12:32:40 -0700
Message-ID: <10750855.post@talk.nabble.com>
Date: Tue, 22 May 2007 12:32:40 -0700 (PDT)
From: Vladimir Eremeev <wl2776@gmail.com>
To: r-help@stat.math.ethz.ch
In-Reply-To: <971536df0705220959q4a3b7ec7ta75b7a0f7f7e66e@mail.gmail.com>
MIME-Version: 1.0
X-Nabble-From: wl2776@gmail.com
References: <10741597.post@talk.nabble.com>
	<971536df0705220959q4a3b7ec7ta75b7a0f7f7e66e@mail.gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Subject: Re: [R] Please, remind a function name
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch


My solution (after a cup of coffee :) ):

model.formula<-switch(model.type,S=[s-model formula],HK=[hk-model formula])
model<-lm(model.formula)


Gabor Grothendieck wrote:
> 
> You could use the class dispatching mechanism:
> 
> 
> mymodel <- function(a, b, method = "S") {
> 	.Class <- method
> 	NextMethod("mymodel")
> }
> 
> mymodel.S <- function(a, b, method = "S") cat("S:", a, b, method, "\n")
> mymodel.HK <- function(a, b, method = "S") cat("HK:", a, b, method, "\n")
> 
> mymodel(1:3, 1:4)
> mymodel(1:3, 1:4, "S")
> mymodel(1:3, 1:4, "HK")
> 
> 
> 
> On 5/22/07, Vladimir Eremeev <wl2776@gmail.com> wrote:
>>
>> Sorry, I'm stuck. :)
>>
>> I am writing a function, which would fit either one linear model or
>> another
>> one, depending on its argument model.type.
>> And I don't want to use several if's, because R allows doing it with much
>> more beauty.
>>
>> That is I am looking for prettier alternative to the following
>>
>> AB2C<-function(a,b,model.type="S") { # or HK, and return NULL if this
>> argument has any other value
>> [ do some stuff]
>>
>>  if(model.type=="S") model<-lm( [s.model formula] )
>>  else if (model.type == "HK") model<-lm([hk.model formula])
>>  else model<-NULL
>>
>>  return(model)
>> }
>>
>> I was looking at "switch", but didn't come to solution. Sorry <:)
> 
> 

-- 
View this message in context: http://www.nabble.com/Please%2C-remind-a-function-name-tf3797444.html#a10750855
Sent from the R help mailing list archive at Nabble.com.

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

