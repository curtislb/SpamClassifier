From beginners-return-92644-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Jun 21 23:22:23 2007
Return-Path: <beginners-return-92644-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5M3MLL9000659
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 21 Jun 2007 23:22:22 -0400
Received: (qmail 8331 invoked by uid 514); 22 Jun 2007 03:22:15 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 8322 invoked from network); 22 Jun 2007 03:22:14 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 22 Jun 2007 03:22:14 -0000
Received: (qmail 18128 invoked by uid 225); 22 Jun 2007 03:22:14 -0000
Delivered-To: beginners@perl.org
Received: (qmail 18121 invoked by alias); 22 Jun 2007 03:22:13 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of dharshana.ve@gmail.com designates 64.233.166.183 as permitted sender)
Received: from py-out-1112.google.com (HELO py-out-1112.google.com) (64.233.166.183)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 21 Jun 2007 20:22:10 -0700
Received: by py-out-1112.google.com with SMTP id f47so1452145pye
        for <beginners@perl.org>; Thu, 21 Jun 2007 20:22:06 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=WQzwunlZl85pb1fvnqJ7ITdXWG2rP8BtzFJplJ4BGuKHVOkR9JZi9ht4HsnURwfKWgHpLGQlqcgrDC8j6cJP9se6fi83RKeALIWogHMtYsxvnitjKrykp7kRp7QQvHIPhMYH42UN7t3BqdMT5vv/zn/ka4yyPkNPzfSNFIka6Nk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=d+skzAdyWKujjvLc1B8Cv0xTcwp8lnFPpvY7hvnG4rbzzvIzdtcEkFoqBKXEjwBArC0HdW6FD6CFK/fYVrvuKoK4ZGEh5YC5flQ2rMANZuh4VjWGjGK/mxWM0OMr2IKJEeVcqDAhh2HZNEUtOmTFA5ltE+QW0vHH5HjX413LLk4=
Received: by 10.65.139.9 with SMTP id r9mr4889720qbn.1182482526119;
        Thu, 21 Jun 2007 20:22:06 -0700 (PDT)
Received: by 10.64.156.1 with HTTP; Thu, 21 Jun 2007 20:22:06 -0700 (PDT)
Message-ID: <9f91e0840706212022q40ec7b1aq9119d7ca1e896ec3@mail.gmail.com>
Date: Fri, 22 Jun 2007 08:52:06 +0530
From: "Dharshana Eswaran" <dharshana.ve@gmail.com>
To: "Paul Lalli" <mritty@gmail.com>
Subject: Re: Regarding file handling
Cc: beginners@perl.org
In-Reply-To: <1182433672.340429.172880@u2g2000hsc.googlegroups.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_41_6308572.1182482526032"
References: <9f91e0840706210631g62917448s773f8dd021d1a9c1@mail.gmail.com>
	 <1182433672.340429.172880@u2g2000hsc.googlegroups.com>
X-Virus-Checked: Checked

------=_Part_41_6308572.1182482526032
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 6/21/07, Paul Lalli <mritty@gmail.com> wrote:
>
> On Jun 21, 9:31 am, dharshana...@gmail.com (Dharshana Eswaran) wrote:
> > Hi All,
> >
> > I am reading a certain data from one file and writing to another file.
> In
> > the original file, there are few lines, which occur more than once in
> > different lines. When i am writing it to the second file, i don't want
> it to
> > be written more than once. I mean, it should not be repetitive. The file
> are
> > just two simple text files.
> >
> > In achieving what i need, i thought simultaneous reading and writing to
> the
> > file is required, to know if the lines are being written for the second
> > time. But i don't know how to achieve this.
> >
> > A sample of the text file is shown below:
> > STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T
> > {
> >     STACK_CC_SS_COMMON_TYPE_REFERENCE_PROTOCOL_DIS_T
> > protocol_discriminator;
> >     STACK_CC_SS_COMMON_TYPE_REFERENCE_TRANSACTION_ID_T
> transaction_id;} STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T;
> > };
> >
> > STACK_CC_SS_COMMON_TYPE_CHANNEL_INFO_T
> > {
> >     STACK_CC_SS_COMMON_TYPE_CHANNEL_TYPE_T channel_type;
> >     STACK_CC_SS_COMMON_TYPE_CHANNEL_MODE_T channel_mode;}
> STACK_CC_SS_COMMON_TYPE_CHANNEL_INFO_T;
> > };
> >
> > STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T
> > {
> >     STACK_CC_SS_COMMON_TYPE_REFERENCE_PROTOCOL_DIS_T
> > protocol_discriminator;
> >     STACK_CC_SS_COMMON_TYPE_REFERENCE_TRANSACTION_ID_T   transaction_id;
> >
> > } STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T;
> > };
> >
>
> It looks as though your data is delimited by "};\n\n".  Is that
> correct?  That is, each "block" of text ends with that string, and you
> want to only print out the first instance of each block?  You can
> control Perl's notion of what a "line" is via the $/ variable.  See
> perldoc perlvar for more information.
>
> To only print one instance of any given block, use a hash.  Each time
> through your read loop, check to see if that block is in the hash.  If
> it is, don't print it.  If it's not, do print it, and then add it to
> the hash.  For example:
>
> #!/usr/bin/perl
> use strict;
> use warnings;
> open my $fh, '<', "infile.txt" or die $!;
> open my $ofh, '>', "outfile.txt" or die $!;
> local $/ = "};\n\n";
> my %printed;
> while (my $record = <$fh>) {
>    print $ofh $record unless $printed{$record}++;
> }
> __END__
>
> Hope that helps,
> Paul Lalli
>
>
> --
> To unsubscribe, e-mail: beginners-unsubscribe@perl.org
> For additional commands, e-mail: beginners-help@perl.org
> http://learn.perl.org/
>
>
>
I am unable to get the desired result. Its printing all the instances of the
block.

Thanks and Regards,
Dharshana

------=_Part_41_6308572.1182482526032--

