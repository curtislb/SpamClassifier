From beginners-return-91918-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon May 28 07:15:04 2007
Return-Path: <beginners-return-91918-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4SBF1qD013634
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 28 May 2007 07:15:02 -0400
Received: (qmail 31740 invoked by uid 514); 28 May 2007 11:14:53 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 31730 invoked from network); 28 May 2007 11:14:52 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 May 2007 11:14:52 -0000
Received: (qmail 31787 invoked by uid 225); 28 May 2007 11:14:52 -0000
Delivered-To: beginners@perl.org
Received: (qmail 31782 invoked by alias); 28 May 2007 11:14:51 -0000
X-Spam-Status: No, hits=0.7 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.fast4.net (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 28 May 2007 04:14:44 -0700
Received: from [85.92.161.130] (85-92-161-130.eurisp.net [85.92.161.130] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l4SBEXF02182;
	Mon, 28 May 2007 12:14:34 +0100
Message-ID: <465AB99F.2050903@350.com>
Date: Mon, 28 May 2007 12:14:39 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
CC: Brian <googleAcct@screenlight.com>
Subject: Re: Array of Array refs
References: <1180324847.364219.70910@r19g2000prf.googlegroups.com>
In-Reply-To: <1180324847.364219.70910@r19g2000prf.googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Brian wrote:
> Hi All-
>   I am trudging through some DBI, XML, etc.. I had a problem and was
> baffled by how to get at array elements out of a series of pushed
> array refs. But, by simplifying the problem, I found that the syntax I
> used was in error. here is the small sample, already debugged. Hope
> this helps someone...
> 
> #!/usr/bin/perl
> 
> 	my @tRespsA;
> 
> 	my @fieldList = ( "one", "two", "three", "four" );
> 	my @r1 = ( 1, 2, 3, 4 );
> 	my @r2 = ( 13, 14, 15, 16 );
> 	my @r3 = ( 23, 24, 25, 26 );
> 
> 	push @tRespsA, \@r1;
> 	push @tRespsA, \@r2;
> 	push @tRespsA, \@r3;
> 
> 	foreach my $tRowRef ( @tRespsA ) {
> 		my $tCnt=0;
> 		foreach my $tFld (@fieldList) {
> 			#if ( $tRowRef->[ $tCnt] eq "") { next; }
> 			print $tFld . "='" . $tRowRef->[ $tCnt++ ] . "' \r";
> 		}
> 	}

First of all, /always/

  use strict;
  use warnings;

I think you're still a little confused and thinking in another language - something
like C? Your program works, sure, but iterating over a list of header names in the
inner loop confuses things and won't provide a general solution. Also your cryptic
variable names don't help.

Take a look at this program and see what you think. The variable $i wouldn't be
necessary at all if we weren't displaying header names as well as the array data.

HTH,

Rob


use strict;
use warnings;

my @r1 = ( 1, 2, 3, 4 );
my @r2 = ( 13, 14, 15, 16 );
my @r3 = ( 23, 24, 25, 26 );

my @array2d;
push @array2d, \@r1;
push @array2d, \@r2;
push @array2d, \@r3;

my @heads = qw/ one two three four /;

foreach my $row (@array2d) {
  my $i = 0;
  foreach my $col (@$row) {
    printf "%s = %s\n", $heads[$i++], $col;
  }
  print "\n";
}

**OUTPUT**

one = 1
two = 2
three = 3
four = 4

one = 13
two = 14
three = 15
four = 16

one = 23
two = 24
three = 25
four = 26


-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


