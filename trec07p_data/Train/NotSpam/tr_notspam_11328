From perl6-all-return-81448-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu May 17 11:18:44 2007
Return-Path: <perl6-all-return-81448-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4HFIgqD001128
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 17 May 2007 11:18:43 -0400
Received: (qmail 21606 invoked by uid 514); 17 May 2007 15:18:39 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 21601 invoked from network); 17 May 2007 15:18:38 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DKIM_SIGNED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of parrotcode@gmail.com)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of parrotcode@gmail.com designates 64.233.184.231 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=Pct3G2gnrRbyqlqckzuZaDIUTLC0DwClieBjBlk0is3hdrzWaLiDxiq3e+G+GrQI1JvWEN8oFWTTfh4EZ3FvHBlF76FebmVKPqdIPo4ptwb8c64ofssqWQph59V70Nys8CrU1pEr0lM3W4McUTirYIlKtW4zrzfdmRcZ6LnE6Lc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=sTXL1Hv8CBb7pgxqHz+UeGXMZL81IkIHnktz8hmP8oU7VH4kgnAhBY8OilHuo3PnY56lnlP+XVZ94Khq0kiou0x8ZZWeurm/QZXcNr/NnOm4aQdR19oELtbGx/CUf/Rpt+rlVJ62EERBUkl1if7M1bAktNoGrxfWe/vXycKsufE=
Message-ID: <7b0e52b40705170817v72515411n736e5e10bbc6b6bd@mail.gmail.com>
Date: Thu, 17 May 2007 23:17:38 +0800
From: "Klaas-Jan Stol" <parrotcode@gmail.com>
To: "Andy Spieherty" <spiehera@lafayette.edu>
Subject: Re: FoTW: src/debug.c -- function and macro do the same thing
Cc: "jerry gay" <jerry.gay@gmail.com>, p2 <parrot-porters@perl.org>
In-Reply-To: <Pine.LNX.4.62.0705161352010.11220@fractal.phys.lafayette.edu>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_44173_6208555.1179415058241"
References: <1d9a3f400705160845w56586b74w36e632f492c3ce5@mail.gmail.com>
	 <20070516160041.GD20876@plum.flirble.org>
	 <1d9a3f400705160936u125d3eddha1fec9c84f54d13a@mail.gmail.com>
	 <Pine.LNX.4.62.0705161352010.11220@fractal.phys.lafayette.edu>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,HTML_MESSAGE,SPF_NEUTRAL

------=_Part_44173_6208555.1179415058241
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 5/17/07, Andy Spieherty <spiehera@lafayette.edu> wrote:
>
> On Wed, 16 May 2007, jerry gay wrote:
>
> > good comments... but why keep both function and macro? which would you
> > prefer keeping over the other, and why? i can't understand why both
> > exist.
>
> In src/debug.c, for handling user input, I don't see any particular
> advantage to the macro version.  The function version is easier to debug
> with a debugger (should that ever be necessary), makes for a (possibly)
> smaller object file, and can be inlined by a smart optimizing compiler
> anyway.  For such a trivial function, these are all rather trivial
> differences, but you still might as well get rid of the macro.


Yes, I totally agree. A macro might be nice for simple one-liners that are
called so often that a function would really slow things down. But then it
would need to be called VERY often, before you notice anything on machines
nowadays.

kjs

--
>     Andy Spieherty              spiehera@lafayette.edu
>

------=_Part_44173_6208555.1179415058241--

