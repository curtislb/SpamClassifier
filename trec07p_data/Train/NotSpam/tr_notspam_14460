From beginners-return-91955-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue May 29 19:24:16 2007
Return-Path: <beginners-return-91955-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l4TNODhB005078
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 29 May 2007 19:24:14 -0400
Received: (qmail 12149 invoked by uid 514); 29 May 2007 23:24:01 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Delivered-To: moderator for beginners@perl.org
Received: (qmail 27152 invoked from network); 29 May 2007 15:28:56 -0000
Delivered-To: beginners@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Message-ID: <465C3C61.4060109@hc.ru>
Date: Tue, 29 May 2007 18:44:49 +0400
From: Eugene Kosov <kosov@hc.ru>
User-Agent: Thunderbird 1.5 (X11/20060914)
MIME-Version: 1.0
To: Alma Tirkey <almatirkey@gmail.com>
CC: Perl Beginners <beginners@perl.org>
Subject: Re: Error with Html code
References: <1180413537.257963.234470@j4g2000prf.googlegroups.com>	 <465C113F.5040008@hc.ru>	 <43b1e5120705290531y675bcb0dma4c7e2c2f456f931@mail.gmail.com>	 <465C2809.2030000@hc.ru> <43b1e5120705290642v60b706ecg77df891a2a5bbe21@mail.gmail.com>
In-Reply-To: <43b1e5120705290642v60b706ecg77df891a2a5bbe21@mail.gmail.com>
Content-Type: multipart/signed; protocol="application/x-pkcs7-signature"; micalg=sha1; boundary="------------ms080207080502090103040505"
X-SpamTest-Envelope-From: kosov@hc.ru
X-SpamTest-Group-ID: 00000000
X-SpamTest-Info: Profiles 1084 [May 29 2007]
X-SpamTest-Info: {received from trusted sender <kosov@hc.ru>: common white list}
X-SpamTest-Method: white email list
X-SpamTest-Rate: 0
X-SpamTest-Status: Trusted
X-SpamTest-Status-Extended: trusted
X-SpamTest-Version: SMTP-Filter Version 3.0.0 [0255], KAS30/Release

--------------ms080207080502090103040505
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

> Thanks . I have a another struggling end .
> 
> I need to filter the result by a specific file
> extension (like pdf). how can i do it ?
> 
> i need to check after upload a file that it should be pdf. if it is not 
> then i need to display an error that only pdf files need to be uploaded.
> 
> 
> regards
> alma

"perldoc CGI" should help you on uploading files.

Filter extensions?

die("Only PDF files allowed!")
	unless($uploadedFile =~ /\.pdf$/i);

Once again, post to the list, not to me personaly!

--------------ms080207080502090103040505
Content-Type: application/x-pkcs7-signature; name="smime.p7s"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="smime.p7s"
Content-Description: S/MIME Cryptographic Signature

MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIH4zCC
AkwwggG1oAMCAQICEF+XiRKhI0i3bhJAtlvAMEswDQYJKoZIhvcNAQEFBQAwYjELMAkGA1UE
BhMCWkExJTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMT
I1RoYXd0ZSBQZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBMB4XDTA2MTExNTExMzIzNVoX
DTA3MTExNTExMzIzNVowPTEfMB0GA1UEAxMWVGhhd3RlIEZyZWVtYWlsIE1lbWJlcjEaMBgG
CSqGSIb3DQEJARYLa29zb3ZAaGMucnUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAK61
E5LGDM1+h+wauw15xftF78j8g/gGEabtIMqe6qL6yArSxlH0Tp3xVj31yA9HroLV6Jy28heu
uiRQl0hCcvCt/1sY/Pd3aftHinPignnLC6/iUC6l7mBS92b7bWwMN/ouml7LOu+/p2ds170Q
bQ8G6t0iRSdrnwtktRopyrT/AgMBAAGjKDAmMBYGA1UdEQQPMA2BC2tvc292QGhjLnJ1MAwG
A1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEFBQADgYEAeTQh7fmVh4DszUlO5b51lxdc3zCLy+n+
/MtqR39PrNWxHriOlMTcSK4V6WU4FJKn5P8SHwL23fYQCHZgJ1KpIT4bqiFQ8BdviHsrElgM
BglsUwD5wulv/aRtzeieDdaCdDbb+6jijto30YGtqWwTShgbW7denZbrGcnFWqsGB5IwggJM
MIIBtaADAgECAhBfl4kSoSNIt24SQLZbwDBLMA0GCSqGSIb3DQEBBQUAMGIxCzAJBgNVBAYT
AlpBMSUwIwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNU
aGF3dGUgUGVyc29uYWwgRnJlZW1haWwgSXNzdWluZyBDQTAeFw0wNjExMTUxMTMyMzVaFw0w
NzExMTUxMTMyMzVaMD0xHzAdBgNVBAMTFlRoYXd0ZSBGcmVlbWFpbCBNZW1iZXIxGjAYBgkq
hkiG9w0BCQEWC2tvc292QGhjLnJ1MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCutROS
xgzNfofsGrsNecX7Re/I/IP4BhGm7SDKnuqi+sgK0sZR9E6d8VY99cgPR66C1eictvIXrrok
UJdIQnLwrf9bGPz3d2n7R4pz4oJ5ywuv4lAupe5gUvdm+21sDDf6Lppeyzrvv6dnbNe9EG0P
BurdIkUna58LZLUaKcq0/wIDAQABoygwJjAWBgNVHREEDzANgQtrb3NvdkBoYy5ydTAMBgNV
HRMBAf8EAjAAMA0GCSqGSIb3DQEBBQUAA4GBAHk0Ie35lYeA7M1JTuW+dZcXXN8wi8vp/vzL
akd/T6zVsR64jpTE3EiuFellOBSSp+T/Eh8C9t32EAh2YCdSqSE+G6ohUPAXb4h7KxJYDAYJ
bFMA+cLpb/2kbc3ong3WgnQ22/uo4o7aN9GBralsE0oYG1u3Xp2W6xnJxVqrBgeSMIIDPzCC
AqigAwIBAgIBDTANBgkqhkiG9w0BAQUFADCB0TELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdl
c3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYDVQQKExFUaGF3dGUgQ29uc3Vs
dGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEkMCIGA1UE
AxMbVGhhd3RlIFBlcnNvbmFsIEZyZWVtYWlsIENBMSswKQYJKoZIhvcNAQkBFhxwZXJzb25h
bC1mcmVlbWFpbEB0aGF3dGUuY29tMB4XDTAzMDcxNzAwMDAwMFoXDTEzMDcxNjIzNTk1OVow
YjELMAkGA1UEBhMCWkExJTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4x
LDAqBgNVBAMTI1RoYXd0ZSBQZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBMIGfMA0GCSqG
SIb3DQEBAQUAA4GNADCBiQKBgQDEpjxVc1X7TrnKmVoeaMB1BHCd3+n/ox7svc31W/Iadr1/
DDph8r9RzgHU5VAKMNcCY1osiRVwjt3J8CuFWqo/cVbLrzwLB+fxH5E2JCoTzyvV84J3PQO+
K/67GD4Hv0CAAmTXp6a7n2XRxSpUhQ9IBH+nttE8YQRAHmQZcmC3+wIDAQABo4GUMIGRMBIG
A1UdEwEB/wQIMAYBAf8CAQAwQwYDVR0fBDwwOjA4oDagNIYyaHR0cDovL2NybC50aGF3dGUu
Y29tL1RoYXd0ZVBlcnNvbmFsRnJlZW1haWxDQS5jcmwwCwYDVR0PBAQDAgEGMCkGA1UdEQQi
MCCkHjAcMRowGAYDVQQDExFQcml2YXRlTGFiZWwyLTEzODANBgkqhkiG9w0BAQUFAAOBgQBI
jNFQg+oLLswNo2asZw9/r6y+whehQ5aUnX9MIbj4Nh+qLZ82L8D0HFAgk3A8/a3hYWLD2ToZ
foSxmRsAxRoLgnSeJVCUYsfbJ3FXJY3dqZw5jowgT2Vfldr394fWxghOrvbqNOUQGls1TXfj
ViF4gtwhGTXeJLHTHUb/XV9lTzGCAuMwggLfAgEBMHYwYjELMAkGA1UEBhMCWkExJTAjBgNV
BAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMTI1RoYXd0ZSBQZXJz
b25hbCBGcmVlbWFpbCBJc3N1aW5nIENBAhBfl4kSoSNIt24SQLZbwDBLMAkGBSsOAwIaBQCg
ggHDMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTA3MDUyOTE0
NDQ0OVowIwYJKoZIhvcNAQkEMRYEFMY29HkdXaz8z5hj369dlfuch9UHMFIGCSqGSIb3DQEJ
DzFFMEMwCgYIKoZIhvcNAwcwDgYIKoZIhvcNAwICAgCAMA0GCCqGSIb3DQMCAgFAMAcGBSsO
AwIHMA0GCCqGSIb3DQMCAgEoMIGFBgkrBgEEAYI3EAQxeDB2MGIxCzAJBgNVBAYTAlpBMSUw
IwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUg
UGVyc29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIQX5eJEqEjSLduEkC2W8AwSzCBhwYLKoZI
hvcNAQkQAgsxeKB2MGIxCzAJBgNVBAYTAlpBMSUwIwYDVQQKExxUaGF3dGUgQ29uc3VsdGlu
ZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVyc29uYWwgRnJlZW1haWwgSXNzdWlu
ZyBDQQIQX5eJEqEjSLduEkC2W8AwSzANBgkqhkiG9w0BAQEFAASBgF/EVOFkwKoSn9CxXI5e
b2yyPePRiQeLIs9p0tdtvgsLkkw6O4QJkRqc7quKXGuwHmTlzqE5EVmd/4JNGizxodJGvNL8
LqmhMSOcnr2+HfixPOcwe5BjNlI20dGgHoi2ll9/JgfzF6Z1Z8c8DsnpbJoWesDUGueAnfEx
mGEk5FAZAAAAAAAA
--------------ms080207080502090103040505--

