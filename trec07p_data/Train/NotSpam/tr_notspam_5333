From r-help-bounces@stat.math.ethz.ch  Thu Apr 26 14:48:28 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3QImR6w015751
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 26 Apr 2007 14:48:28 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3QIlX0n007455;
	Thu, 26 Apr 2007 20:47:43 +0200
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=AWL,
	BAYES_40 autolearn=no version=3.1.8
Received: from fisher.stats.uwo.ca (fisher.stats.uwo.ca [129.100.76.201])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l3QIiHvA006604
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <r-help@stat.math.ethz.ch>; Thu, 26 Apr 2007 20:44:18 +0200
Received: from [192.168.0.176] (djm.stats.uwo.ca [129.100.76.113])
	by fisher.stats.uwo.ca (8.13.1/8.13.1) with ESMTP id l3QIiG2q032563;
	Thu, 26 Apr 2007 14:44:16 -0400
Message-ID: <4630F334.2@stats.uwo.ca>
Date: Thu, 26 Apr 2007 14:45:08 -0400
From: Duncan Murdoch <murdoch@stats.uwo.ca>
User-Agent: Thunderbird 1.5.0.10 (Windows/20070221)
MIME-Version: 1.0
To: "xpRt.wannabe" <xprt.wannabe@gmail.com>
References: <a4fecdd70704260948y76879330u74d3e4cb88249da5@mail.gmail.com>	<4630DA7E.1000302@stats.uwo.ca>
	<a4fecdd70704261131s48b4ede1y5da4c4558621d561@mail.gmail.com>
In-Reply-To: <a4fecdd70704261131s48b4ede1y5da4c4558621d561@mail.gmail.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] A coding question involving variable assignments in ifelse()
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Status: O
Content-Length: 2437
Lines: 76

On 4/26/2007 2:31 PM, xpRt.wannabe wrote:
> Just to be sure, is what I have below the right intepretation of your
> suggestion:

Yes, that's what I suggested.

Duncan Murdoch

> deductible <- 15
> coverage.limit <- 75
> insurance.threshold <- deductible + coverage.limit
> 
> tmpf <- function() {
> loss <- rlnorm(rpois(1, 3), 2, 5)
> n <- length(loss)
> accept <- runif(n) < 0.8
> payout <- runif(n) < 0.999
> sum(ifelse(accept & payout, ifelse(loss > insurance.threshold, loss -
> coverage.limit, pmin(loss, deductible)), 0))
> }
> net <- replicate(1000000, tmpf())
> 
> On 4/26/07, Duncan Murdoch <murdoch@stats.uwo.ca> wrote:
>> On 4/26/2007 12:48 PM, xpRt.wannabe wrote:
>> > Dear List,
>> >
>> > Below is a simple, standard loss model that takes into account the
>> > terms of an insurance policy:
>> >
>> > deductible <- 15
>> > coverage.limit <- 75
>> > insurance.threshold <- deductible + coverage.limit
>> >
>> > tmpf <- function() {
>> > loss <- rlnorm(rpois(1, 3), 2, 5)
>> > sum(ifelse(loss > insurance.threshold, loss - coverage.limit,
>> > pmin(loss, deductible)))
>> > }
>> > net <- replicate(1000000, tmpf())
>> >
>> > Now, I would like to enhance the model by incorporating the following
>> > two probabilities:
>> >
>> > 1. Probability of claim being accepted by the insurance company, say, 0.8
>> > 2. Probability of payout by the insurance company, say, 0.999
>> >
>> > Could anyone suggest how one might do this?
>>
>> A general way to generate events with probability p is runif(n) < p.  So
>> I'd add
>>
>> n <- length(loss)
>> accept <- runif(n) < 0.8
>> payout <- runif(n) < 0.999
>>
>> and then require "accept & payout"  before any payment at all, e.g.
>>
>> sum(ifelse(accept & payout, [ your old ifelse expression ], 0))
>>
>> There are a lot of implicit independence assumptions here; they may not
>> be very realistic.
>>
>> Duncan Murdoch
>>
> 
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

