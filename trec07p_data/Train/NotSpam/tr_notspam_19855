From perl6-all-return-82015-ktwarwic=speedy.uwaterloo.ca@perl.org  Sat Jun 16 16:15:54 2007
Return-Path: <perl6-all-return-82015-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5GKFrL9019126
	for <ktwarwic@flax9.uwaterloo.ca>; Sat, 16 Jun 2007 16:15:54 -0400
Received: (qmail 4772 invoked by uid 514); 16 Jun 2007 20:15:51 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 4766 invoked from network); 16 Jun 2007 20:15:51 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Sat, 16 Jun 2007 15:15:21 -0500
From: Jonathan Scott Duff <duff@pobox.com>
To: mark@overmeer.net, perl6-language@perl.org
Subject: Re: [svn:perl6-synopsis] r14421 - doc/trunk/design/syn
Message-ID: <20070616201521.GA1199@pobox.com>
Reply-To: duff@pobox.com
Mail-Followup-To: mark@overmeer.net, perl6-language@perl.org
References: <20070613205525.7ECA0CB9B8@x12.develooper.com> <ef30550b0706131429o34838a6es6704e8ec73851b49@mail.gmail.com> <467073C4.6020708@conway.org> <20070614082341.GU31918@earth.overmeer.net> <832f158a0706141717j7accfb36w92bf3a2ed7a8e115@mail.gmail.com> <20070615075949.GR31918@earth.overmeer.net> <20070616090944.GG6900@stripey.com> <20070616103358.GB10601@earth.overmeer.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20070616103358.GB10601@earth.overmeer.net>
User-Agent: Mutt/1.4.2.1i
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

On Sat, Jun 16, 2007 at 12:33:58PM +0200, Mark Overmeer wrote:
> * Smylers (Smylers@stripey.com) [070616 09:09]:
> > > * Damian Conway (damian@conway.org) [070615 00:17]:
> > > > * Pod 6 is both a structural and a semantic scheme; you can specify
> > > >   both the structure of a document, and the meaning of its various
> > > >   components
> > > 
> > > Yes, and that is one of the things which worries me most *You can*.
> > > It's full freedom,
> > 
> > You're concerned that an aspect of Perl 6 might have too much freedom?
> > Isn't Perl all about giving users freedom to choose their own way of
> > doing something?
> 
> Why treat documentation as a second-class citizen all the time?  Why
> have a standard syntax for regexes, and not for docs?  Aren't you glad
> that at last we get a standard for OO programming and named parameters?
> The boundary between freedom and anacharchy is faint.

The docs *do* have a standard syntax.  I think you've been arguing for
a more *specific* standard syntax and semantics.

You mention OOP.  For Perl 5 we have a standard, if very general,
syntax and "open" semantics that have allowed people to implement OOP
in a variety of ways.  This was all well and good for a while until we
realized that there should be some more reasonable defaults (in both
syntax and semantics) for common operations in OOP.

I think it's the same thing with POD6. It's "open" enough that many
documentation systems can be built from it (man pages, books, magazines,
wikis, etc.) For some of those documentation systems we'll have nice
conventions and other conventions will grow as needed. If we find that
convention isn't enough in specific areas, we'll start to grow
requirements for those cases. Requirements will be enforced by the
tools we use, not by the documentation specification (that way we can
use the same source document for multiple purposes with different
requirements).

Also, I don't think that documentation is being treated as
second-class at all.  It's being treated as first-class but different.
To form a poor analogy, imagine threads woven together to make a
tapestry.  The blue threads are just as important as the red threads,
but they each may have different purposes in the overall design.

my two cents,

-Scott
-- 
Jonathan Scott Duff <duff@pobox.com>

