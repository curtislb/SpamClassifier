From beginners-return-90788-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Apr  9 12:37:33 2007
Return-Path: <beginners-return-90788-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l39GbW0I016629
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 9 Apr 2007 12:37:32 -0400
Received: (qmail 20468 invoked by uid 514); 9 Apr 2007 16:37:01 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 20459 invoked from network); 9 Apr 2007 16:37:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 Apr 2007 16:37:01 -0000
Received: (qmail 13281 invoked by uid 225); 9 Apr 2007 16:37:00 -0000
Delivered-To: beginners@perl.org
Received: (qmail 13273 invoked by alias); 9 Apr 2007 16:37:00 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.239 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.239)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 09 Apr 2007 09:36:57 -0700
Received: by nz-out-0506.google.com with SMTP id s1so1099898nze
        for <beginners@perl.org>; Mon, 09 Apr 2007 09:36:53 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=QN/r6DE+11yQTg35VbQrPw+DoPtDMdav79WZ7cxT3nbOlNmvnRARwP36XBECllAUInoaLsriJqk2lpFm7ifhcHpbiPsNsOay4OS8rdB9W2O6AsJF82FqCcw9ck0O3Zeuaif7AHMAtTtYBFl41o8pIJOwCk7JkCG+lGS8KTT1k38=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=JqRdp56+h4WvJAtUzWW5uipLIMylGU2ImSJBM0gQS5LeBifRfcCqq8XxOLZ7D0j/X2kSN/OGdhJxSduBDWdGLzNfm5ymJvWNtgDV8Bw7TJwzkTM10VB6LumyVxCmvuWPwrHinJRKCFYdlmhxbu7Fol+SZl4tdJ663W4gokyX6h4=
Received: by 10.114.75.1 with SMTP id x1mr2417932waa.1176136612625;
        Mon, 09 Apr 2007 09:36:52 -0700 (PDT)
Received: by 10.115.54.15 with HTTP; Mon, 9 Apr 2007 09:36:52 -0700 (PDT)
Message-ID: <58ce48dc0704090936n38cf5822s7bd686699eedc08d@mail.gmail.com>
Date: Mon, 9 Apr 2007 12:36:52 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: beginners@perl.org
Subject: Re: Beginning to use the stricts and warnings
In-Reply-To: <20070409152657.GB8815@princo>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <415032.78097.qm@web56303.mail.re3.yahoo.com>
	 <58ce48dc0704090750v1b52e82byd67ee07d6d25dcd0@mail.gmail.com>
	 <20070409152657.GB8815@princo>
Status: O
Content-Length: 1672
Lines: 53

On 4/9/07, Jean-Rene David <jrdavid@magma.ca> wrote:
> * Chas Owens [2007.04.09 11:00]:
> > >       for (my $i = 0; $i < @banks; $i++)
> >
> > If you must loop this way at least do it like this:
> >
> > for my $i (0 .. $#banks) {}
> >
> > But most likely you don't need to loop that way and it is better to
> > loop this way:
> >
> > for my $bank (@banks) {}
>
> I've been wondering: is the array guaranteed to be
> traversed in the same order in all three cases?

All three loops process the array in the same order (from index 0 to
index $#array).  The benefit of the index-less version is that you
cannot make an off-by-one-error.  Examine the following loops:

for (my $i = 1; $i < @banks; $i++)
for (my $i = 0; $i <= @banks; $i++)
for (my $i = 1; $i <= @banks; $i++)
for my $i (0 .. @banks)
for my $i (1 .. @banks)
for my $i (1 .. $#banks)

How easy do you think it will be to find the error?  What if the code
seems to be doing the right thing?  It is much safer to say

for my $bank (@banks)

You know for certain that each element of @array will be visited.

It is also important to note that there is no difference between $bank
and $banks[$i].  If you modify $bank then the corresponding element in
@banks is also modified.

>
> And are the latter two really "for" and not
> "foreach"?
snip

foreach is now only an alias for for, if that makes any sense.  They
used to have separate functionality, but somewhere around 5.6 they
were merged.  The term foreach is only kept around for legacy code;
new code should use for.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


