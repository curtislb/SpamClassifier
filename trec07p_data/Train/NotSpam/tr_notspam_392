From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue Apr 10 06:49:06 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l3AAn60I027992
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 10 Apr 2007 06:49:06 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 419A5163847
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 10 Apr 2007 10:48:43 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: *
X-Spam-Status: No, score=1.3 required=3.8 tests=AWL,BAYES_05,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id 2ECFA162ACE; Tue, 10 Apr 2007 10:48:22 +0000 (GMT)
Date: Tue, 10 Apr 2007 20:48:31 +1000
To: samba-cvs@samba.org
From: tridge@samba.org
Message-Id: <20070410104822.2ECFA162ACE@lists.samba.org>
Subject: Rev 84: fix the queueing for partially connected tcp sockets in
	http://samba.org/~tridge/ctdb
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Status: O
Content-Length: 2248
Lines: 61

------------------------------------------------------------
revno: 84
revision-id: tridge@samba.org-20070410104831-d956235aa1d7329f
parent: tridge@samba.org-20070410094029-2b9561032c749c8a
committer: Andrew Tridgell <tridge@samba.org>
branch nick: tridge
timestamp: Tue 2007-04-10 20:48:31 +1000
message:
  fix the queueing for partially connected tcp sockets
modified:
  tcp/ctdb_tcp.h                 ctdb_tcp.h-20061127103747-l8xeniwiapbydehq-3
  tcp/tcp_connect.c              tcp_connect.c-20061128004937-x70q1cu5xzg5g2tm-1
  tcp/tcp_init.c                 tcp_init.c-20061128004937-x70q1cu5xzg5g2tm-2
=== modified file 'tcp/ctdb_tcp.h'
--- a/tcp/ctdb_tcp.h	2007-04-10 09:33:21 +0000
+++ b/tcp/ctdb_tcp.h	2007-04-10 10:48:31 +0000
@@ -48,5 +48,6 @@
 void ctdb_tcp_node_connect(struct event_context *ev, struct timed_event *te, 
 			   struct timeval t, void *private);
 void ctdb_tcp_read_cb(uint8_t *data, size_t cnt, void *args);
+void ctdb_tcp_tnode_cb(uint8_t *data, size_t cnt, void *private);
 
 #define CTDB_TCP_ALIGNMENT 8

=== modified file 'tcp/tcp_connect.c'
--- a/tcp/tcp_connect.c	2007-04-10 09:40:29 +0000
+++ b/tcp/tcp_connect.c	2007-04-10 10:48:31 +0000
@@ -37,7 +37,7 @@
 /*
   called when a complete packet has come in - should not happen on this socket
  */
-static void ctdb_tcp_tnode_cb(uint8_t *data, size_t cnt, void *private)
+void ctdb_tcp_tnode_cb(uint8_t *data, size_t cnt, void *private)
 {
 	struct ctdb_node *node = talloc_get_type(private, struct ctdb_node);
 	struct ctdb_tcp_node *tnode = talloc_get_type(node->private, 
@@ -80,8 +80,7 @@
 	
         setsockopt(tnode->fd,IPPROTO_TCP,TCP_NODELAY,(char *)&one,sizeof(one));
 
-	tnode->queue = ctdb_queue_setup(node->ctdb, node, tnode->fd, CTDB_TCP_ALIGNMENT,
-					ctdb_tcp_tnode_cb, node);
+	ctdb_queue_set_fd(tnode->queue, tnode->fd);
 
 	/* tell the ctdb layer we are connected */
 	node->ctdb->upcalls->node_connected(node);

=== modified file 'tcp/tcp_init.c'
--- a/tcp/tcp_init.c	2007-04-10 09:40:29 +0000
+++ b/tcp/tcp_init.c	2007-04-10 10:48:31 +0000
@@ -67,6 +67,10 @@
 
 	tnode->fd = -1;
 	node->private = tnode;
+
+	tnode->queue = ctdb_queue_setup(node->ctdb, node, tnode->fd, CTDB_TCP_ALIGNMENT,
+					ctdb_tcp_tnode_cb, node);
+	
 	return 0;
 }
 

