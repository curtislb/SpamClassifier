From beginners-return-91076-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Apr 25 22:41:36 2007
Return-Path: <beginners-return-91076-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by speedy.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l3Q2fZ6w006971
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 25 Apr 2007 22:41:35 -0400
Received: (qmail 32457 invoked by uid 514); 26 Apr 2007 02:41:30 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 32448 invoked from network); 26 Apr 2007 02:41:30 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Apr 2007 02:41:30 -0000
Received: (qmail 14276 invoked by uid 225); 26 Apr 2007 02:41:30 -0000
Delivered-To: beginners@perl.org
Received: (qmail 14267 invoked by alias); 26 Apr 2007 02:41:29 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.184.231 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.231)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 25 Apr 2007 19:41:27 -0700
Received: by wr-out-0506.google.com with SMTP id 57so424197wri
        for <beginners@perl.org>; Wed, 25 Apr 2007 19:41:22 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=DeVRTq68HpGjQBx8FBYTnGxD0k29De2NnG4OlAMMgHmTjmXM5FTnZus7xz5ICNY6GUKGwkOAhnpsm8KsD2Y3wpWTWX3zFgP7tD3b8cfkxPf3y+gqf95G/1Vn1ntCWg3ezz7zerHXEefow2Y1yClcFFgUARpCUmeUOC/SsCzOULc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=D+Nig3/SUU6j6XYIlr+01HloVPFW45qeCky0arWJw3VmH2ql5erZxrzf2GPS3q1MjVAzpyysABn2ZOh5gaHUzFI8hcWKHL2aeAlB2t3wtP5tvD6lXCZombmQ34yZHj0eaxW6537WAfoRdmrl8KnRSCgxvCgSRGu8kzySmHP3fPM=
Received: by 10.114.150.1 with SMTP id x1mr437854wad.1177555282169;
        Wed, 25 Apr 2007 19:41:22 -0700 (PDT)
Received: by 10.114.92.6 with HTTP; Wed, 25 Apr 2007 19:41:21 -0700 (PDT)
Message-ID: <58ce48dc0704251941i314b1397v9b449725b460d08c@mail.gmail.com>
Date: Wed, 25 Apr 2007 22:41:21 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "John W. Krahn" <krahnj@telus.net>
Subject: Re: RegEx Substitution + Arrays
Cc: "Perl Beginners" <beginners@perl.org>
In-Reply-To: <46300E3E.3060706@telus.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <ca5781c80704251554v37ebb2e6m260a38e88877caf0@mail.gmail.com>
	 <200704260215.35921.seanie@wdcc.org.uk> <4630050C.7070808@350.com>
	 <200704260309.00539.seanie@wdcc.org.uk> <46300E3E.3060706@telus.net>
Status: O
Content-Length: 1344
Lines: 40

On 4/25/07, John W. Krahn <krahnj@telus.net> wrote:
> Seanie wrote:
> > Rob Dixon wrote:
> >>> map(s/$find/$replace/, @arr);
> >> Haha yes you can, but if you want to write nasty code go for
> >>   grep s/$find/$replace/, @arr;
> >> which also works.
> >
> > True, but grep implies "find stuff", while map implies "do stuff", so your
> > nasty code is way, way, nastier than mine - it masks the intention.
> >
> > Maybe using map in void context is deep-level wrongness, but it'd be nice if
> > somebody would explain WHY, instead of posting "don't do it" one-liners.
>
> perldoc perl581delta
> [ snip ]
>        Miscellaneous Enhancements
>
>        "map" in void context is no longer expensive. "map" is now context
>        aware, and will not construct a list if called in void context.
>
>
> So it is not really "wrong" anymore (for certain values of "wrongness".)
>
>
>
> John
> --
> Perl isn't a toolbox, but a small machine shop where you can special-order
> certain sorts of tools at low cost and in short order.       -- Larry Wall

It is no longer inefficient; however, it is still an abuse of map and
longer than the for loop version.  It is hard to defend the use of map
in a void context.

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


