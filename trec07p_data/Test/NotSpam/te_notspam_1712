From beginners-return-92964-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jul  2 13:50:48 2007
Return-Path: <beginners-return-92964-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l62HolL9017001
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 2 Jul 2007 13:50:47 -0400
Received: (qmail 28440 invoked by uid 514); 2 Jul 2007 17:50:38 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 28430 invoked from network); 2 Jul 2007 17:50:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 Jul 2007 17:50:37 -0000
Received: (qmail 27771 invoked by uid 225); 2 Jul 2007 17:50:37 -0000
Delivered-To: beginners@perl.org
Received: (qmail 27764 invoked by alias); 2 Jul 2007 17:50:36 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.178 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.178)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 02 Jul 2007 10:50:33 -0700
Received: by wa-out-1112.google.com with SMTP id v27so1965732wah
        for <beginners@perl.org>; Mon, 02 Jul 2007 10:50:29 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=maE+dCap41D89+C05IWDkGpIEq0wUUssrSL9nr6zWstf5bSa5B6U2mPY8xK2VwQv5tR2vdaxZ9tCeMUi5vPaFB4VqcHWhFcCVfoRNLMRhIS/VtPj7pB50OYT7ywWEFllr/Mxfk5HVvroFTNv2Ne5mmHnhKzZX/IOw2KdYxSWQ0o=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=GotDfeY0Hepn1Esu4qk9bg4gs/mbQgX/jxISPpD6h0noNziRFMZO/5IsPIXjvgUR9d9iOtlrOizXjYRUPi58QrFN6iw0mU9q/LeXGbjFK6EUnVY99KiuqcFqj7KNy1+nKmpv1gSIUy8Q/UBK9L5kTy6g5dti//ZXdr5Dnc+ReBM=
Received: by 10.114.175.16 with SMTP id x16mr5368701wae.1183398628999;
        Mon, 02 Jul 2007 10:50:28 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Mon, 2 Jul 2007 10:50:28 -0700 (PDT)
Message-ID: <58ce48dc0707021050h3a0641bdu4820317058d760f7@mail.gmail.com>
Date: Mon, 2 Jul 2007 13:50:28 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "nagandla@gmail.com" <nagandla@gmail.com>
Subject: Re: sorted hash positions
Cc: beginners@perl.org
In-Reply-To: <1183382426.084705.116910@d30g2000prg.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1183382426.084705.116910@d30g2000prg.googlegroups.com>

On 7/2/07, nagandla@gmail.com <nagandla@gmail.com> wrote:
snip
> wat i need is for ex if i gave 34567 it has to tell the position of
> the hash 4th position...
>
> how can i do that.....
snip

Given what you have said, I would define your problem as
    Given a list of coins and their current value, let me to query
    that list for the relative position of one coin to the others.
If that is the requirement, then this is how I would about it*.

#!/usr/bin/perl

use strict;
use warnings;

my %coins_by_value = (
        12345   => 91,
        987658  => 35.5,
        wer123  => 99.8,
        '456hn' => 56.4,
        34567   => 78.9,
        '00000' => 99.9,
        yui345  => 45.4
);

my %coins_by_position = build_relative_positions(\%coins_by_value);

my $coin     = shift;
my $position = $coins_by_position{$coin};
my $n        = keys %coins_by_value;
my $larger   = $position - 1;
my $smaller  = $n - $position;

print "$coin is in postion $position with ",
        "$larger coins worth more and $smaller",
        " coins worth less.\n";

sub build_relative_positions {
        my $coins_by_value = shift;
        my $i;
        return (
                map  { $_ => ++$i }
                sort { $coins_by_value->{$b} <=> $coins_by_value->{$a} }
                keys %$coins_by_value
        );
}


* well, I would probably really use a database and issue a query like
select
    (select count(*) from coins b where b.value < a.value) as worth_less,
    (select count(*) from coins c where c.value < a.value) as worth_more
from coins a
where name = ?

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


