From r-help-bounces@stat.math.ethz.ch  Fri Jun 29 13:14:39 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5THEcL9028574
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 29 Jun 2007 13:14:39 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l5THDvaU010066;
	Fri, 29 Jun 2007 19:14:10 +0200
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on hypatia.math.ethz.ch
X-Spam-Level: 
X-Spam-Status: No, score=0.6 required=5.0 tests=AWL, BAYES_50, DKIM_SIGNED,
	DKIM_VERIFIED, HTML_MESSAGE,
	WHOIS_MYPRIVREG autolearn=no version=3.2.0
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.175])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l5THDmIY009970
	for <r-help@stat.math.ethz.ch>; Fri, 29 Jun 2007 19:13:48 +0200
Received: by ug-out-1314.google.com with SMTP id m3so808295uge
	for <r-help@stat.math.ethz.ch>; Fri, 29 Jun 2007 10:13:48 -0700 (PDT)
Received: by 10.67.21.11 with SMTP id y11mr1270104ugi.1183137228283;
	Fri, 29 Jun 2007 10:13:48 -0700 (PDT)
Received: by 10.66.234.6 with HTTP; Fri, 29 Jun 2007 10:13:48 -0700 (PDT)
Message-ID: <644e1f320706291013j208c3d80ye8da99221ed5781@mail.gmail.com>
Date: Fri, 29 Jun 2007 13:13:48 -0400
From: "jim holtman" <jholtman@gmail.com>
To: runner <sunnyside500@gmail.com>
In-Reply-To: <11363041.post@talk.nabble.com>
MIME-Version: 1.0
References: <11363041.post@talk.nabble.com>
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Content-Disposition: inline
Cc: r-help@stat.math.ethz.ch
Subject: Re: [R] regexpr
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch

mylist=c("MN","NY","FL")
g=regexpr(paste(mylist[1], "$", sep=""), "Those from MN:")
if (g>0)
{
"On list"
}

or in a loop

for (i in mylist){
    if (regexpr(paste(mylist[i], "$", sep="")) > 0){
        .....code for those from....
    }
}



On 6/29/07, runner <sunnyside500@gmail.com> wrote:
>
>
> Hi,
>
> I 'd like to match each member of a list to a target string, e.g.
> ------------------------------
> mylist=c("MN","NY","FL")
> g=regexpr(mylist[1], "Those from MN:")
> if (g>0)
> {
> "On list"
> }
> ------------------------------
> My question is:
>
> How to add an end-of-string symbol '$' to the to-match string? so that 'M'
> won't match.
>
> Of course, "MN$" will work, but i want to use it in a loop; "mylist[i]" is
> what i need. I tried "mylist[1]$", but didn't work. So why it doesn't
> extrapolate? How to do it?
>
> Thanks a lot!
> --
> View this message in context:
> http://www.nabble.com/regexpr-tf4000743.html#a11363041
> Sent from the R help mailing list archive at Nabble.com.
>
> ______________________________________________
> R-help@stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>



-- 
Jim Holtman
Cincinnati, OH
+1 513 646 9390

What is the problem you are trying to solve?

	[[alternative HTML version deleted]]

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

