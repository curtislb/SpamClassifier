From beginners-return-92796-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 27 10:11:47 2007
Return-Path: <beginners-return-92796-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5REBjL9027659
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 27 Jun 2007 10:11:46 -0400
Received: (qmail 25032 invoked by uid 514); 27 Jun 2007 14:11:35 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 25023 invoked from network); 27 Jun 2007 14:11:35 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Jun 2007 14:11:35 -0000
Received: (qmail 21030 invoked by uid 225); 27 Jun 2007 14:11:34 -0000
Delivered-To: beginners@perl.org
Received: (qmail 21021 invoked by alias); 27 Jun 2007 14:11:34 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.232 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.232)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 27 Jun 2007 07:11:29 -0700
Received: by nz-out-0506.google.com with SMTP id x7so172963nzc
        for <beginners@perl.org>; Wed, 27 Jun 2007 07:11:25 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=YmnKvGr5QXIT489kUs3MCAtAgMx7U9H1vIIeX4dAnUnjVPYwqJ+iyqpdl3woyAjN7M4geHe+YTqoR7rZ7/cxC3/68RZ9VvWz+ybhzBwtKx30QEgOMWY0P8iaPYiG8V99vWv7dQr/tVzqb/6PLKxvYrLtSHbjNE8UN+IlkZvoufY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=N153zjMUXFq+asyQXUB9O/Kg8ZVN/Z6DPno+Ieo6KMm+UH2HIMWsfgGCG8kAytlSOXyF/p0JHzy8Qo72IcCEeTSIp9TlVA47OeV1R3Igw1IqeFpgJCU1dvzbK9dTX3/eXlVm/wnvR5t5WR1WOBSMR5HDyfMQlmz7ttX6PCW9Kqs=
Received: by 10.115.61.1 with SMTP id o1mr490618wak.1182953484466;
        Wed, 27 Jun 2007 07:11:24 -0700 (PDT)
Received: by 10.114.102.6 with HTTP; Wed, 27 Jun 2007 07:11:24 -0700 (PDT)
Message-ID: <58ce48dc0706270711j668c3e73g68315beb195ac4cf@mail.gmail.com>
Date: Wed, 27 Jun 2007 10:11:24 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: perl_power <campbell262@gmail.com>
Subject: Re: Problems Assigning Unique Values to a Hash
Cc: beginners@perl.org
In-Reply-To: <1182949932.917727.55890@m36g2000hse.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1182869472.052881.185180@u2g2000hsc.googlegroups.com>
	 <31086b240706261548i20005da7nd22906c3aa691630@mail.gmail.com>
	 <1182949932.917727.55890@m36g2000hse.googlegroups.com>

On 6/27/07, perl_power <campbell262@gmail.com> wrote:
> Tom,
>
> I did make some changes but that actually is still causing me to
> output each line while looping through the file instead of only adding
> unique key value pairs to the hash.  I can only guess I am overriding
> the hash each time it loops?  Also don't understand the line break I
> am getting between the number and is unique.
snip

Here is the output I get from your code:
The cellphone is unique
The cola is unique
The monitors is unique
The mugs is unique

Okay, I see 3 possibilities.
    1. You are not running the code you think your are running
(unsaved file, saved to wrong file, etc)
    2. There is something weird about your environment you haven't told us yet.
    3. You copied the code by hand and fixed the bug in the transfer.

Also, here is a list of things you can do (or not do) to make your code better.
    1. always use the strict pragma
    2. always use the three argument version of open
    3. use \n inside strings rather than counting on a literal linefeed working
    4. numbering your errors in die is worthless, the file and line
number are printed automatically if the the error string does not end
with \n
    5. only use parenthesis when you really need them, "my (%hash);" is foolish
    6. learn when you need to specify the default variable ($_) and
when you don't
    7. never use an if statement just to get the else clause, use
"unless (exists $hash{$product})", "if (not exists $hash{$product})",
or "if (!exists $hash{$product})"

Here is your code after following the advice above.

#!/usr/bin/perl

use strict;
use warnings;

my $infile = 'products.out';
open my $file, '<', $infile
        or die "could not open $infile for reading:$!\nStopped";

my %hash;
while(<$file>) {
        my ($product, $qty) = split /\|/;
        unless (exists $hash{$product}) {
                $hash{$product} = $qty;
                print "The $product is unique\n";
        }
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


