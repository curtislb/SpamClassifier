From r-help-bounces@stat.math.ethz.ch  Thu Jul  5 07:55:05 2007
Return-Path: <r-help-bounces@stat.math.ethz.ch>
Received: from hypatia.math.ethz.ch (hypatia.math.ethz.ch [129.132.145.15])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l65Bt4L9025567
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 5 Jul 2007 07:55:04 -0400
Received: from hypatia.math.ethz.ch (hypatia [129.132.145.15])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l65BsTxg021809;
	Thu, 5 Jul 2007 13:54:39 +0200
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on hypatia.math.ethz.ch
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=BAYES_50, DKIM_POLICY_SIGNSOME,
	WEIRD_QUOTING autolearn=no version=3.2.0
Received: from smtp-2.sys.kth.se (smtp-2.sys.kth.se [130.237.32.160])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l65BsId7021757
	for <r-help@stat.math.ethz.ch>; Thu, 5 Jul 2007 13:54:18 +0200
Received: from localhost (localhost [127.0.0.1])
	by smtp-2.sys.kth.se (Postfix) with ESMTP id E3F2C14D827
	for <r-help@stat.math.ethz.ch>; Thu,  5 Jul 2007 13:54:17 +0200 (CEST)
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch
Received: from smtp-2.sys.kth.se ([127.0.0.1])
	by localhost (smtp-2.sys.kth.se [127.0.0.1]) (amavisd-new, port 10024)
	with LMTP id FVP4+t1TiF+h for <r-help@stat.math.ethz.ch>;
	Thu,  5 Jul 2007 13:54:10 +0200 (CEST)
Received: from webmail.sys.kth.se (unknown
	[IPv6:2001:6b0:1:1300:214:38ff:fec5:5a2d])
	by smtp-2.sys.kth.se (Postfix) with ESMTP id 89B6714D7F9
	for <r-help@stat.math.ethz.ch>; Thu,  5 Jul 2007 13:54:10 +0200 (CEST)
Received: from 193.183.79.7 (SquirrelMail authenticated user eb99lamo)
	by webmail.sys.kth.se with HTTP;
	Thu, 5 Jul 2007 13:54:10 +0200 (CEST)
Message-ID: <8299.193.183.79.7.1183636450.squirrel@webmail.sys.kth.se>
Date: Thu, 5 Jul 2007 13:54:10 +0200 (CEST)
From: "Lars Modig" <eb99lamo@kth.se>
To: r-help@stat.math.ethz.ch
User-Agent: SquirrelMail/1.4.5
MIME-Version: 1.0
X-Priority: 3 (Normal)
Importance: Normal
Subject: [R] select data from large CSV file
X-BeenThere: r-help@stat.math.ethz.ch
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: "Main R Mailing List: Primary help" <r-help.stat.math.ethz.ch>
List-Unsubscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=unsubscribe>
List-Archive: <https://stat.ethz.ch/pipermail/r-help>
List-Post: <mailto:r-help@stat.math.ethz.ch>
List-Help: <mailto:r-help-request@stat.math.ethz.ch?subject=help>
List-Subscribe: <https://stat.ethz.ch/mailman/listinfo/r-help>,
	<mailto:r-help-request@stat.math.ethz.ch?subject=subscribe>
Content-Type: text/plain; charset="iso-8859-1"
Sender: r-help-bounces@stat.math.ethz.ch
Errors-To: r-help-bounces@stat.math.ethz.ch
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l65Bt4L9025567

Hello


I’ve got a large CSV file (>500M) with statistical data. It’s devided in
12 columns and I don’t know how many lines.
The second column is the date and the second is a unique code for the
location, the rest is (lets say different whether data.  See example
below.
070704, 25, --,--,--,temperature, 22, --,--,30, 20,Y
070705, 25, --,--,--,temperature, 22, --,--,30, 20,Y
070705, 25, --,--,--,pressure, 1200, --,--,1000, 1100,N
070705, 26, --,--,--,temperature, 22, --,--,30, 20,Y
…
First I tried with data <- read.csv. and of course the memory got full.
Then I found in the archive that you could use scan. So then I wrote the
following lines below to search for location and store one location with
all different data in one variable.

# collect the different pnc's
 b=2                                        #compare from second number
 alike=TRUE                                 #Dim alike like a boolean
 stored = 910286609                         #first number is known
  for(i in 1: 100){                         #start counting and scaning
     data_final <- matrix(unlist(scan("C:/Documents and
Settings/modiglar/Desktop/temp/et.csv",sep="," ,
what=list("","","","","","","","","","","",""), skip=i ,
n=12)),ncol=12, byrow=TRUE)


      a=1                                     #compare from the 1:th stored
      while( a < b){                          #---
                                              #
        if(as.numeric(data_final[2] != stored[a])) #compare
          { a=a+1                                  #
          alike=FALSE  }                           #
        else{                                      #
           alike=TRUE                              #
           break }                                 #
      }                                            # ---

      if (alike==FALSE){                           #
         stored[b]=as.numeric(data_final[2])       # Store new data
         b=b+1                                     #
      }
  }

#------------------------------------------------------------
# save 1 pnc at the time
d=1
saved_data = 1:1200 ; dim(saved_data) <- c(12,100)
save_data_nr = 1                               #Stored number
  for(i in 1: 100){                            #start counting and scaning
     data_final <- matrix(unlist(scan("C:/Documents and
Settings/modiglar/Desktop/temp/et.csv",sep="," ,
what=list("","","","","","","","","","","",""), skip=i ,
n=12)),ncol=12, byrow=TRUE)


      if(as.numeric(data_final[2] == stored[save_data_nr])) #compare
        { saved_data[,d] <-  matrix(unlist(data_final),ncol=12,
byrow=TRUE)  #Store new data
         d=d+1 }                                         #
                                                         #
                                                         #
 }
As you can see I’m not so familiar with R, and therefore I have probably
done this the wrong way.

As I understand when running this, is that scan opens up the file count
down to the line that should be read and read it, then closing the file
again. So when I’m starting to come to line number at 10000 then it
starting to take time. I let the computer run over night, but it was still
far from finished when I stopped the loop.

So how should I do this? Maybe I also need to sort on the date, and that
is hopefully in order so then you should be able to cut the file every
time you hit a new month but that will also take time if I do it like
this.

Thank you for your help in advance.

Lars

______________________________________________
R-help@stat.math.ethz.ch mailing list
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

