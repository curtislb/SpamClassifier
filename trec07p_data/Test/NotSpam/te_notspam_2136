From beginners-return-93016-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jul  3 21:43:14 2007
Return-Path: <beginners-return-93016-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l641hCL9004150
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 3 Jul 2007 21:43:13 -0400
Received: (qmail 18258 invoked by uid 514); 4 Jul 2007 01:43:03 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 18249 invoked from network); 4 Jul 2007 01:43:03 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 4 Jul 2007 01:43:03 -0000
Received: (qmail 7216 invoked by uid 225); 4 Jul 2007 01:43:02 -0000
Delivered-To: beginners@perl.org
Received: (qmail 7210 invoked by alias); 4 Jul 2007 01:43:01 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 209.85.132.241 as permitted sender)
Received: from an-out-0708.google.com (HELO an-out-0708.google.com) (209.85.132.241)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 03 Jul 2007 18:42:57 -0700
Received: by an-out-0708.google.com with SMTP id c25so400978ana
        for <beginners@perl.org>; Tue, 03 Jul 2007 18:42:52 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=NBW4KqrP84nFJho3M0aQ5pSV2+G28RzcBPw23HjAt8aXvg4cN2jl173J8Um5pAHsOhjN0aCD3GZq0Ob1bNoophixuucbkxD9fUpwZeL8rOmOZM4ZDBRGHjwbl1hREggVR9Xv2TYhSlJliMJsWWrUXUtYMoWvE54KSVBF8PyrOKM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=iRSXu7NTC4cCFsT58+56LBXVVotdyo/fRC7KU+GbeGf4ySpQLKHO2dped8TNm2Sg0o/CrAl2T1WnWIba2xwoh0cvBENzFhAaZjuhrFS1t90rQq1uPfGRXyfuiC9hRGmqzjJR+Ec8f25dB5+aWZ4ioYMsf6TK6jZf4h04sXEqml0=
Received: by 10.90.29.18 with SMTP id c18mr6835618agc.1183513372517;
        Tue, 03 Jul 2007 18:42:52 -0700 (PDT)
Received: by 10.90.116.2 with HTTP; Tue, 3 Jul 2007 18:42:52 -0700 (PDT)
Message-ID: <31086b240707031842l2e26a2ex6cbb058adabf281a@mail.gmail.com>
Date: Tue, 3 Jul 2007 18:42:52 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: "Joseph L. Casale" <JCasale@activenetwerx.com>
Subject: Re: formatting a string
Cc: "beginners@perl.org" <beginners@perl.org>
In-Reply-To: <80D663F66DF55241BD12E3DB42DDF132045367CCCD@an-ex.ActiveNetwerx.int>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <80D663F66DF55241BD12E3DB42DDF132045367CCCD@an-ex.ActiveNetwerx.int>
X-Google-Sender-Auth: daf4e59f43109461

On 7/3/07, Joseph L. Casale <JCasale@activenetwerx.com> wrote:

> I always deal with indices' 1 through to the end in the function in question,
> so it's easy to get the second indices (First disc) and so on.

Huh?

> I need to manipulate the path though now, I am wanting to search
> for *all* the text following the third "/" and before the fourth "/" and
> replace it with a string variable.

That sounds almost as if you're wanting to use substr and index: index
to locate each "/", and substr to work with the identified part of the
string.

Or maybe you want to use a substitution (s///), but I doubt that.

But if you're really manipulating file and directory names, probably a
solution involving (say) File::Basename or another module would be
more likely to be correct.

Hope this helps!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


