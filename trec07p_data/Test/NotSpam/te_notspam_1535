From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon Jul  2 01:22:03 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l625M2L9009395
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 2 Jul 2007 01:22:02 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id CE5AC163887
	for <ktwarwic@speedy.uwaterloo.ca>; Mon,  2 Jul 2007 05:21:58 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=0.7 required=3.8 tests=AWL,BAYES_05,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-technical@samba.org
Delivered-To: samba-technical@samba.org
Received: by lists.samba.org (Postfix, from userid 603)
	id 6DCB9162ADC; Mon,  2 Jul 2007 05:21:23 +0000 (GMT)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <18056.35742.867413.834173@samba.org>
Date: Mon, 2 Jul 2007 15:22:38 +1000
To: Volker.Lendecke@SerNet.DE
In-Reply-To: <E1I4bRs-000879-TU@intern.SerNet.DE>
References: <E1I4bRs-000879-TU@intern.SerNet.DE>
X-Mailer: VM 7.19 under Emacs 22.0.95.1
From: tridge@samba.org
Cc: samba-technical@samba.org
Subject: Re: talloc_stack.c?
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: tridge@samba.org
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Volker,

 > +/*
 > + * Implement a stack of talloc frames. We can't rely on a linked list with
 > + * talloc destructors because in a hierarchy of talloc destructors the parent
 > + * destructor is called before its children destructors.
 > + */

linked lists work fine - I use them all the time with talloc
destructors. 

You are right that the parent destructor is called first, but the
memory is actually freed from the bottom up (ie. child is freed
first). The recursion marks the memory for deletion on the way down
(to prevent loops) and actually frees it on the way up.

Did you try and use talloc destructors with linked lists and hit a
problem or did you just assume they wouldn't work from looking at the
code? If they didn't work, can you post a snippet of code showing what
you tried to do?

Regarding the talloc_stack.c idea, this is awfully similar to what we
have had in the past with a "loop" memory context - a memory context
that gets freed in the top level event loop. What advantage does
talloc_stack have over that idea? (that idea is still present in the
lp_TALLOC_FREE() call and tmp_talloc_ctx() in Samba3.

(what is this obsession with capitalising routine names? I sometimes
wonder if some people think that CAPITALS makes code less buggy?)

Cheers, Tridge

