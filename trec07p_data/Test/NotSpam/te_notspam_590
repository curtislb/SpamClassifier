From beginners-return-92824-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 27 22:45:55 2007
Return-Path: <beginners-return-92824-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5S2jrL9003942
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 27 Jun 2007 22:45:54 -0400
Received: (qmail 2740 invoked by uid 514); 28 Jun 2007 02:45:45 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 2731 invoked from network); 28 Jun 2007 02:45:45 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Jun 2007 02:45:45 -0000
Received: (qmail 23676 invoked by uid 225); 28 Jun 2007 02:45:45 -0000
Delivered-To: beginners@perl.org
Received: (qmail 23659 invoked by alias); 28 Jun 2007 02:45:44 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 209.85.146.179 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.179)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 27 Jun 2007 19:45:38 -0700
Received: by wa-out-1112.google.com with SMTP id v27so116532wah
        for <beginners@perl.org>; Wed, 27 Jun 2007 19:45:34 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=YzoBARBNxW2r4XIXbRzg88+6n8Mo6w4+fOp/CDsu2Idnd4dZCfu6/w/4fthRjSQxdyMJ9LO1Rm6SGpLCZJ2UYCrPr6r1ZPCaWqHA0XZMfVhw4CJb8ocLj4NjKJWOF8xrJqbnntRwlfIHlBWTmZ1dutOAP4vlp9kLAk2WXxy6g2E=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=HxkoOVuTk23SveX5r9uhAbpRoV5RZC2E8XW9CU7vKzkd1v5wilCru99R9ABERzAwlPnAcB3XniT6R4Njq0qRtETAuFXEPRmS1WrVATisyL5cST7F1VI604GxTDePFZDO62bXnAqfTzBTDiqff+teWjO54fSZeRL+hdGyEECHf0o=
Received: by 10.114.89.1 with SMTP id m1mr1093515wab.1182998734140;
        Wed, 27 Jun 2007 19:45:34 -0700 (PDT)
Received: by 10.114.102.6 with HTTP; Wed, 27 Jun 2007 19:45:34 -0700 (PDT)
Message-ID: <58ce48dc0706271945w48343976u35354ff81392fb1a@mail.gmail.com>
Date: Wed, 27 Jun 2007 22:45:34 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Dharshana Eswaran" <dharshana.ve@gmail.com>
Subject: Re: String Manipulation
Cc: "Tom Phoenix" <tom@stonehenge.com>, "Perl Beginners" <beginners@perl.org>
In-Reply-To: <9f91e0840706271810y641b8cd2y25d3756c51224c03@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <9f91e0840706271220q2566504fq6042ad20af74fad6@mail.gmail.com>
	 <31086b240706271234i2eea880ey5da3277e01406002@mail.gmail.com>
	 <9f91e0840706271810y641b8cd2y25d3756c51224c03@mail.gmail.com>

On 6/27/07, Dharshana Eswaran <dharshana.ve@gmail.com> wrote:
> On 6/28/07, Tom Phoenix <tom@stonehenge.com> wrote:
> >
> > On 6/27/07, Dharshana Eswaran <dharshana.ve@gmail.com> wrote:
> >
> > > I am unable to get a generalised way in which it can extract them as few
> > > structures have comments, few does not hav comments etc.
> >
> > Does the data have some defined grammar, or a definable one at least?
>
>
>
> The defined Grammer here is
> {
> xyz1 abc1; /*Comments*/
> xyz2 abc2;
> xyz3 abc3[req];
> xyz4 abc4[req]; /*Comments*/
> };
>
> Here, i have defined different possibility of occurences of the structure
> elements. If i could get a regex for extracting xyz1, xyz2, xyz3, xyz4 and
> abc1, abc2, abc3[req], abc4[req] would be helpful. Here, the comments are of
> no use, i just need to ignore them.
>
> >If you are up to using Parse::RecDescent, it will probably do the job.
>
> I am restricted from using modules and i am unable to come up with a regex
> or regexes to do this job.
>
>   >http://search.cpan.org/author/DCONWAY/Parse-RecDescent-1.94
> >/lib/Parse/RecDescent.pod
>
> >Hope this helps!
>
> >--Tom Phoenix
> >Stonehenge Perl Training
>
> Can anyone guide me in this?
>
> Thanks and Regards,
> Dharshana
>

It is fragile, but here are a set of regexes that parse the string you
mentioned.  I did notice that this string differs significantly from
the ones you gave earlier and this set of regexes will not correctly
handle them.

#!/usr/bin/perl

use strict;
use warnings;

my $comment    = qr{\s* (?:/\* .*? \*/ \s*)*}xs;
my $identifier = qr{ [A-Za-z_]\w* }xs;
my $statement  = qr{
        \s*
        ($identifier)
        \s+
        ($identifier)
        \s*
        (?: \[ (.*?) \] )?
        \s*
        ;
        \s*
        $comment?
}xs;

my $str = <<EOS;
{
        xyz1 abc1; /*Comments*/
        xyz2 abc2;
        xyz3 abc3[req];
        xyz4 abc4[req]; /*Comments*/
};
EOS

my @m = $str =~ /$statement/g;

my $iter = by_n(3, \@m);

while ((my ($type, $var, $elems) = $iter->()) == 3) {
        if ($elems) {
                $type = "array of $type with $elems elements";
        }
        print "type is $type and variable is $var\n";
}

sub by_n {
        my ($n, $a) = @_;
        my $i = 0;
        sub {
                return undef if $i > $#$a;
                my @ret = @{$a}[$i .. $i + $n - 1];
                $i += $n;
                return @ret;
        }
}

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


