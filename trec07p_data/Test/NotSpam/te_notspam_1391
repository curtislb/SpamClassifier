From beginners-return-92925-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jul  1 05:40:35 2007
Return-Path: <beginners-return-92925-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l619eYL9031515
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 1 Jul 2007 05:40:34 -0400
Received: (qmail 5515 invoked by uid 514); 1 Jul 2007 09:40:26 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 5506 invoked from network); 1 Jul 2007 09:40:25 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jul 2007 09:40:25 -0000
Received: (qmail 22912 invoked by uid 225); 1 Jul 2007 09:40:25 -0000
Delivered-To: beginners@perl.org
Received: (qmail 22908 invoked by alias); 1 Jul 2007 09:40:25 -0000
X-Spam-Status: No, hits=0.4 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,DK_POLICY_TESTING,FORGED_YAHOO_RCVD,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from mailx.servervault.com (HELO mailx.servervault.com) (216.12.128.138)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 01 Jul 2007 02:40:20 -0700
Received: from [192.168.4.118] ([192.168.4.118]) by mailx.servervault.com with Microsoft SMTPSVC(6.0.3790.1830);
	 Sun, 1 Jul 2007 05:40:14 -0400
Message-ID: <4687767F.9070206@yahoo.com>
Date: Sun, 01 Jul 2007 05:40:15 -0400
From: Mathew Snyder <theillien@yahoo.com>
User-Agent: Thunderbird 1.5.0.12 (X11/20060911)
MIME-Version: 1.0
To: Perl Beginners <beginners@perl.org>
Subject: Problem with runaway format
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 01 Jul 2007 09:40:14.0397 (UTC) FILETIME=[D37426D0:01C7BBC3]

I have a script which places data 4 levels deep in a HoHoHoH.  It grabs tickets
in our ticket system using the systems API and places attributes about each
piece of activity into the hash. The has is called %tickets.  It looks like

$tickets{action_creator}{ticket_customer}{ticket_number}{ticket_subject}.

Each is self explanatory with the value under ticket_subject being the total
time the action creator spent on the whole ticket.  The actual code

# gather up all of the tickets, transactions, and time for each user and
successively place
# all data into a HoHoH working down from user to environment to ticket
# we go through each date in the range individually so we can make sure we only
get the transactions that
# have been added during the date range
foreach my $date (@searchDate) {
        while (my $ticket = $tix->Next) {
                $tikSubj{$ticket->id} = $ticket->Subject;
                my $env = $ticket->FirstCustomFieldValue('Environment');
                my $transactions = $ticket->Transactions;
                while (my $transaction  = $transactions->Next) {
                        my $creator     = $transaction->CreatorObj;

                        # we need to make sure the transaction is in the date
range requested
                        # it's set up like this so we can chop the timestamp off
of the Created string
                        (my $checkDate  = $transaction->Created) =~ s/\s.*$//;

                        # we only want transactions that are within the date
range, have TimeWorked
                        # set, and the creator of which is one of the actual
users and not someone
                        # that was created upon ticket submission or Cc addition
                        next unless (($checkDate eq $date) &&
($creator->Privileged) && ($transaction->TimeTaken));

                        # if all of the above stipulations are met add the time
worked to the hash

$tickets{$creator->Name}{$env}{$ticket->id}{$ticket->Subject} +=
$transaction->TimeTaken;
                }
        }
}

And the formatting

foreach my $user (keys %tickets) {
        open TIMESHEET,
">/work_reports/ticketlists/ticketlists_$endDate/ticketlist_$user" . "_" .
"$endDate.txt" or die "Can't open file: $!";
        print TIMESHEET "List of tickets worked on by $user during week ending
$endDate", "\n\n";

        foreach my $env (sort keys %{ $tickets{$user} }){

format TIMESHEET_TOP =
@<<<<<<<<<<<<<<<<<<<<
$env
 Ticket ID                      Subject                      hh:mm
------------------------------------------------------------------
.

                write TIMESHEET_TOP;

                foreach my $id (sort keys %{ $tickets{$user}{$env} }) {
                        foreach my $subject (keys %{ $tickets{$user}{$env}{$id} }) {
format TIMESHEET =
@#########  ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  @>>>>
           $id, $tickets{$user}{$env}{$id},
$tickets{$user}{$env}{$id}{$subject}
~~          ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            $tickets{$user}{$env}{$id}
.

                                write TIMESHEET;
                        }
                        print TIMESHEET "\n";
                }
        }
}

The problem didn't surface until I went from using the %tikSubj hash seen near
the top of the code snippet to a multi-level hash.  But then, using %tikSubj
presents its own bug for some reason.

Knowing that you don't know the intricacies of the system I'm working with, I
won't be sad if no one has any input ;).

Thanks
Mathew
-- 
Keep up with me and what I'm up to: http://theillien.blogspot.com

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


