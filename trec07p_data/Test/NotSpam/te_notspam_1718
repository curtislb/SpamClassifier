From beginners-return-92965-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jul  2 14:03:48 2007
Return-Path: <beginners-return-92965-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l62I3jL9017156
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 2 Jul 2007 14:03:46 -0400
Received: (qmail 2689 invoked by uid 514); 2 Jul 2007 18:03:33 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 2680 invoked from network); 2 Jul 2007 18:03:33 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 Jul 2007 18:03:33 -0000
Received: (qmail 2598 invoked by uid 225); 2 Jul 2007 18:03:32 -0000
Delivered-To: beginners@perl.org
Received: (qmail 2588 invoked by alias); 2 Jul 2007 18:03:31 -0000
X-Spam-Status: No, hits=-1.1 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_TESTING,DK_SIGNED,DK_VERIFIED,DNS_FROM_RFC_BOGUSMX,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtp105.plus.mail.re1.yahoo.com (HELO smtp105.plus.mail.re1.yahoo.com) (69.147.102.68)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 02 Jul 2007 11:03:28 -0700
Received: (qmail 21687 invoked from network); 2 Jul 2007 18:03:23 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=Received:X-YMail-OSG:Message-ID:Date:From:User-Agent:MIME-Version:To:CC:Subject:References:In-Reply-To:Content-Type;
  b=N5oVv77x1mfkCQPWEYh9MRFTpFHw82QphzWsmyral/SkmQ/7GoKv/jfbyuwiz1LjWuzR5f8eouscGkP2lrZIzKIadbjX3RBiYm4TJeplGnioVL32A+y+GgAaa74HIcanpJhCdWYG7JfBkUrF6eb57zJHp2Tz6pRlhr+WWaMDbGA=  ;
Received: from unknown (HELO ?127.0.0.1?) (theillien@76.21.182.124 with plain)
  by smtp105.plus.mail.re1.yahoo.com with SMTP; 2 Jul 2007 18:03:23 -0000
X-YMail-OSG: 5iNwSOoVM1n1c60_FiurmYv6bTkVcq3ZO8V0uCQkfEbp8UgS5bSh9xSfK.8XvwMGlqv0gEQUIvQ59cGt8Oee17NQcTO6tuFpM.NDfTe5PY4qlbmBzQ--
Message-ID: <46893D27.90002@yahoo.com>
Date: Mon, 02 Jul 2007 14:00:07 -0400
From: Mathew <theillien@yahoo.com>
User-Agent: Thunderbird 2.0.0.4 (Windows/20070604)
MIME-Version: 1.0
To: Tom Phoenix <tom@stonehenge.com>
CC: Perl Beginners <beginners@perl.org>
Subject: Re: Problem with runaway format
References: <4687767F.9070206@yahoo.com> <31086b240707021010v47bd2f86k87b23476cbe7dfd7@mail.gmail.com>
In-Reply-To: <31086b240707021010v47bd2f86k87b23476cbe7dfd7@mail.gmail.com>
Content-Type: multipart/mixed;
 boundary="------------000804000506020001040606"
X-Virus-Checked: Checked

--------------000804000506020001040606
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit

Tom Phoenix wrote:
> On 7/1/07, Mathew Snyder <theillien@yahoo.com> wrote:
> 
>> The problem didn't surface until I went from using the %tikSubj hash
>> seen near
>> the top of the code snippet to a multi-level hash.  But then, using
>> %tikSubj
>> presents its own bug for some reason.
> 
> One tricky bit about using formats is that the variables you're
> interpolating into a format have to be in scope when the format is
> compiled. If there's no lexical ("my") variable of the given name, the
> format uses the global of the same name.
> 
> That doesn't seem especially likely with the given source code,
> though. Have you tried using the debugger? And you are using both
> "strict" and "warnings"?
> 
> Good luck with it!
> 
> --Tom Phoenix
> Stonehenge Perl Training
> 

Yeah, I started to use the debugger but the test system I'm using to
test this is so dang slow that I lost my interest and moved on to simply
trying to tool around with the code.  Probably not the best debugging
approach.  I've attached the actual script for perusal.

You'll see another hash called %tikSubj.  Initially, I used this instead
of the longer %tickets hash and had %tickets store the summed up time
under the {$id}.  This posed it's own problems in that only a few of the
ticket subjects would subsequently be printed out.  That part I've
driven myself insane trying to figure out.

The problem with the format didn't arise until I switched from the
%tikSubj hash to the longer %tickets hash.

Mathew
Keep up with my goings on at http://theillien.blogspot.com

--------------000804000506020001040606
Content-Type: text/plain;
 name="ticket_lists.pl"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="ticket_lists.pl"

#!/usr/bin/perl

#######################################################
#  Name:     ticket_list.pl
#  version:  1.4.1
#  Date:     May 29, 2007
#  Author:   Mathew Snyder
#  Comments: A script which gathers the tickets
#			 worked on by each person in Ops and
#			 Engineering during the prior week.
#			 It places them in individual files for
#			 each user.  It then emails them to each
#			 person that has requested it.
#######################################################

use warnings;
use strict;
use lib '/usr/local/rt-3.6.3/lib';
use lib '/usr/local/rt-3.6.3/local/lib';
use lib '/usr/local/lib';
use RT;
use RT::Tickets;
use RT::Users;
use Reports::Dates;
use MIME::Lite;

RT::LoadConfig();
RT::Init();

# Declare our global variables
#my @users = qw/sveirs rbates msnyder mhanson mclemson koporto jgoode jcurran dsd datreides cwhite/;
my @users = qw/msnyder/;
my (%tickets, %tikSubj);

# These are dates which will be either searched against or inserted into the email
my $startDate   = startDate;
my $endDate     = endDate;
my $searchStart = searchStart;
my $searchEnd   = searchEnd;
my @searchDate  = Reports::Dates::searchDate;

my $tix = new RT::Tickets(RT::SystemUser);
$tix->FromSQL('LastUpdated >= "' . $searchStart. '" AND LastUpdated <= "' . $searchEnd . '"');

# gather up all of the tickets, transactions, and time for each user and successively place 
# all data into a HoHoH working down from user to environment to ticket
# we go through each date in the range individually so we can make sure we only get the transactions that
# have been added during the date range
foreach my $date (@searchDate) {
	while (my $ticket = $tix->Next) {
		$tikSubj{$ticket->id} = $ticket->Subject;
		my $subject = $ticket->Subject;
		my $id = $ticket->id;
		my $env = $ticket->FirstCustomFieldValue('Environment');
		my $transactions = $ticket->Transactions;
		while (my $transaction  = $transactions->Next) {
			my $creator     = $transaction->CreatorObj;
			my $user = $creator->Name;
			# we need to make sure the transaction is in the date range requested
			# it's set up like this so we can chop the timestamp off of the Created string	
			(my $checkDate  = $transaction->Created) =~ s/\s.*$//;

			# we only want transactions that are within the date range, have TimeWorked
			# set, and the creator of which is one of the actual users and not someone 
			# that was created upon ticket submission or Cc addition
			next unless (($checkDate eq $date) && ($creator->Privileged) && ($transaction->TimeTaken));

			# if all of the above stipulations are met add the time worked to the hash
		#	$tickets{$user}{$env}{$id} += $transaction->TimeTaken;
			$tickets{$user}{$env}{$id}{$subject} += $transaction->TimeTaken;
		}
	}
}

# Format the time spent on each ticket as hh:mm
foreach my $user (keys %tickets) {
	foreach my $env (keys %{ $tickets{$user} }) {
		foreach my $tikID (keys %{ $tickets{$user}{$env} }) {
			foreach my $subject (keys %{ $tickets{$user}{$env}{$tikID} }) {
				my @endTime;
#				my $temp          = $tickets{$user}{$env}{$tikID};
				my $temp          = $tickets{$user}{$env}{$tikID}{$subject};
				my $temp2         = $temp / 60;
				my @temp          = split /\./, $temp2;
				$endTime[0]       = $temp[0];
				$endTime[1]       = $temp % 60;
#				$tickets{$user}{$env}{$tikID} = sprintf '%d:%02d', @endTime[0,1];
				$tickets{$user}{$env}{$tikID}{$subject} = sprintf '%d:%02d', @endTime[0,1];
			}
		}
	}
}

mkdir "/work_reports/ticketlists/ticketlists_$endDate", 0777;

foreach my $user (keys %tickets) {
	open TIMESHEET, ">/work_reports/ticketlists/ticketlists_$endDate/ticketlist_$user" . "_" . "$endDate.txt" or die "Can't open file: $!";
	print TIMESHEET "List of tickets worked on by $user during week ending $endDate", "\n\n";

	# Print the header for our data using preset formats.  They are offset the way they are due to the
	# requirement that the closing "." be in the first column of the script.  All lines have subsequently
	# been aligned similarly so as not to confuse anyone regarding the association.  I would have
	# declared them earlier in the script but due to the use of scoped variables the compilation
	# will fail if I do.
	foreach my $env (sort keys %{ $tickets{$user} }){

format TIMESHEET_TOP =
@<<<<<<<<<<<<<<<<<<<<
$env
 Ticket ID                      Subject                      hh:mm
------------------------------------------------------------------
.

		write TIMESHEET_TOP;

		foreach my $id (sort keys %{ $tickets{$user}{$env} }) {
			foreach my $subject (keys %{ $tickets{$user}{$env}{$id} }) {
format TIMESHEET =
@#########  ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  @>>>>
	   $id, $tickets{$user}{$env}{$id},                      $tickets{$user}{$env}{$id}{$subject}
~~          ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            $tickets{$user}{$env}{$id}
.

				write TIMESHEET;
			}
			print TIMESHEET "\n";
		}
		#print TIMESHEET "\n";
	}
}

close TIMESHEET;

# build and send the ticket lists for everyone in the "mailing list"
foreach my $user (@users) {
        my $emailTo      = "$user\@servervault.com";
        my $emailFrom    = "RT-Devel";
        my $emailSubj    = "RT Ticket List for The Week Ending $endDate";
        my $emailMsg     = "Attached is a file containing a list of tickets worked on by you during the last week.  If you made a comment on a ticket but did not add any time it will not show up.  Only tickets on which you've actually marked down time worked will appear in this list.\n\nFor some reason, some ticket subjects are not being inserted into the report.  I have yet to figure out why.  Rest assured, thought, that I am working on sorting that out.  In the meantime, please enjoy the alterations that were requested.  :)";

        my $fullEmail    = new MIME::Lite(From    => $emailFrom,
                                          To      => $emailTo,
                                          Subject => $emailSubj,
                                          Type    => "multipart/mixed");

        $fullEmail->attach(Type        => "TEXT",
                           Data        => $emailMsg);

        $fullEmail->attach(Type        => "text/plain",
                           Path        => "/work_reports/ticketlists/ticketlists_$endDate/ticketlist_$user" . "_" . "$endDate.txt",
                           Disposition => "attachment");

        $fullEmail->send("sendmail", "/usr/sbin/sendmail -t");
}

exit;


--------------000804000506020001040606
Content-Type: text/plain; charset=us-ascii

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/

--------------000804000506020001040606--

