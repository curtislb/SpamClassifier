From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Mon Jul  2 03:15:53 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l627FrL9010321
	for <ktwarwic@speedy.uwaterloo.ca>; Mon, 2 Jul 2007 03:15:53 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 81B05162AFA
	for <ktwarwic@speedy.uwaterloo.ca>; Mon,  2 Jul 2007 07:15:49 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=3.8 tests=AWL,BAYES_00,RCVD_IN_DSBL,
	UNPARSEABLE_RELAY autolearn=no version=3.1.7
X-Original-To: samba-technical@samba.org
Delivered-To: samba-technical@samba.org
Received: from mail.SerNet.de (mail.SerNet.DE [193.175.80.2])
	by lists.samba.org (Postfix) with ESMTP id 58A69162ADC;
	Mon,  2 Jul 2007 07:15:27 +0000 (GMT)
Received: from intern.SerNet.DE by mail.SerNet.DE with esmtp (Exim 4.51 #1)
	id 1I5G86-000562-GI; Mon, 02 Jul 2007 09:15:26 +0200
Received: by intern.SerNet.DE
	id 1I5G86-000529-75; Mon, 02 Jul 2007 09:15:26 +0200
Received: by intern.SerNet.DE
	id 1I5G86-000525-0p; Mon, 02 Jul 2007 09:15:26 +0200
Date: Mon, 2 Jul 2007 09:15:10 +0200
From: Volker Lendecke <Volker.Lendecke@SerNet.DE>
To: tridge@samba.org
References: <E1I4bRs-000879-TU@intern.SerNet.DE>
	<18056.35742.867413.834173@samba.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="yrj/dFKFPuw6o+aM"
Content-Disposition: inline
In-Reply-To: <18056.35742.867413.834173@samba.org>
User-Agent: Mutt/1.5.13 (2006-08-11)
Message-Id: <E1I5G86-000529-75@intern.SerNet.DE>
Organization: SerNet GmbH, Goettingen, Germany
Cc: samba-technical@samba.org
Subject: Re: talloc_stack.c?
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: Volker.Lendecke@SerNet.DE
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org


--yrj/dFKFPuw6o+aM
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Jul 02, 2007 at 03:22:38PM +1000, tridge@samba.org wrote:
> linked lists work fine - I use them all the time with talloc
> destructors.=20
>=20
> You are right that the parent destructor is called first, but the
> memory is actually freed from the bottom up (ie. child is freed
> first). The recursion marks the memory for deletion on the way down
> (to prevent loops) and actually frees it on the way up.

I would like to set the top of the stack from the topmost
destructor, but the children's ones are called after it, so
they would overwrite the top.

> Regarding the talloc_stack.c idea, this is awfully similar to what we
> have had in the past with a "loop" memory context - a memory context
> that gets freed in the top level event loop. What advantage does
> talloc_stack have over that idea? (that idea is still present in the
> lp_TALLOC_FREE() call and tmp_talloc_ctx() in Samba3.

Sure. But with the talloc stack I want to make that more
fine grained. For example a routine to handle a single smb
request might have to do quite a bit of looping, and I want
to give that routine a chance to clean up memory earlier
than the main talloc loop would.

Volker

--yrj/dFKFPuw6o+aM
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQFGiKX9pZr5CauZH5wRAtw+AJ4uI4Av5y7Nx7xHo8KtXktU2adA8QCgtkh0
jD/Y/3op1XZxux4I3iLdPRQ=
=o9k/
-----END PGP SIGNATURE-----

--yrj/dFKFPuw6o+aM--

