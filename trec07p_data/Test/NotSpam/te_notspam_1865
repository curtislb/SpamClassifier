From beginners-return-92982-ktwarwic=speedy.uwaterloo.ca@perl.org  Tue Jul  3 02:42:50 2007
Return-Path: <beginners-return-92982-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l636gmL9024760
	for <ktwarwic@flax9.uwaterloo.ca>; Tue, 3 Jul 2007 02:42:49 -0400
Received: (qmail 18834 invoked by uid 514); 3 Jul 2007 06:42:40 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 18825 invoked from network); 3 Jul 2007 06:42:40 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 Jul 2007 06:42:40 -0000
Received: (qmail 9251 invoked by uid 225); 3 Jul 2007 06:42:39 -0000
Delivered-To: beginners@perl.org
Received: (qmail 9232 invoked by alias); 3 Jul 2007 06:42:37 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of chas.owens@gmail.com designates 64.233.162.228 as permitted sender)
Received: from nz-out-0506.google.com (HELO nz-out-0506.google.com) (64.233.162.228)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 02 Jul 2007 23:42:34 -0700
Received: by nz-out-0506.google.com with SMTP id v1so866531nzb
        for <beginners@perl.org>; Mon, 02 Jul 2007 23:42:30 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=OaWZxpe0bh4ANaCW0/9f7dVw6xKR9RF0OBojOV3F0fY3OQ0SYg2VwBfCqvC3iox0ctLnV3dsiGADsDSpVohfKh8wz429s6Z23S3+0VbdITY+uSwmH7k6Rs9kRbeRpPkpAUdas86XIXpZISQGLv6xV3MhUkfHtCuz1ZjR6GcTEDY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=hbEpw49ypP8ueoAZ5x6OliuqK+a+Uv0+igs47FZ1voKZ7a8KpKHEobrkk1T/wF7TTA/FnE3L8Od7nr90Hv/pGf81ZXp7pvbUfty4QGBRjyYYj9W7Ca447JM4ZgdyNXtnUh3LKeMiy/tKYgxiAG5nHiV0Z3szeE77Gols7+8m6EA=
Received: by 10.114.107.19 with SMTP id f19mr5816746wac.1183444949732;
        Mon, 02 Jul 2007 23:42:29 -0700 (PDT)
Received: by 10.114.79.3 with HTTP; Mon, 2 Jul 2007 23:42:29 -0700 (PDT)
Message-ID: <58ce48dc0707022342j4a7ad371nfd13ca725e18322@mail.gmail.com>
Date: Tue, 3 Jul 2007 02:42:29 -0400
From: "Chas Owens" <chas.owens@gmail.com>
To: "Paul Johnson" <paul@pjcj.net>
Subject: Re: Conditional question
Cc: "Prabu Ayyappan" <prabu.ayyappan@yahoo.com>,
   "Joseph L. Casale" <JCasale@activenetwerx.com>,
   "beginners@perl.org" <beginners@perl.org>
In-Reply-To: <20070703060501.GL20560@pjcj.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <80D663F66DF55241BD12E3DB42DDF132045367CCC4@an-ex.ActiveNetwerx.int>
	 <376276.44699.qm@web57113.mail.re3.yahoo.com>
	 <58ce48dc0707022231i609ce386h6feaedb14d8b7642@mail.gmail.com>
	 <20070703060501.GL20560@pjcj.net>

On 7/3/07, Paul Johnson <paul@pjcj.net> wrote:
snip
> And, in this case, more accurate.  Unless you know something the rest of us
> don't.
snip

The trinary operator (?:) returns the value of either the true or
false portion depending on the conditional portion, so putting print
in both the true and false portions is redundant.  Also 0 is one of
the 5ish false values* so !$var1 is the same thing** as $var1 == 0 and
1 is one of the infinite true values***  so $var2 is equivalent to
$var2 == 1 so long as you are testing for truth rather than the
specific value 1.

#!/usr/bin/perl -l

use strict;
use warnings;

my $var1 = 0;
my $var2 = 1;
print "should print hai:", !$var1 && $var2 ? "hai" : "bye";

$var1 = 1;
print "should print bye:", !$var1 && $var2 ? "hai" : "bye";

$var2 = $var1 = 0;
print "should print bye:", !$var1 && $var2 ? "hai" : "bye";

* The false values are empty list, empty string, undef, string
containing only one zero, and any number -- but not string -- that is
equivalent to 0
** well, this is a little white lie because undef == 0 throws a
warning when the warnings pragma is in effect, but that is the only
difference.
*** anything that is not false, i.e. all strings except the one
character string "0", any reference, and any numeric value other than
0

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


