From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Wed Jun 27 18:10:59 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5RMAxL9000676
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 27 Jun 2007 18:10:59 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id 4553D16383B
	for <ktwarwic@speedy.uwaterloo.ca>; Wed, 27 Jun 2007 22:10:56 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 1017)
	id C58C0162B72; Wed, 27 Jun 2007 22:10:26 +0000 (GMT)
To: samba-cvs@samba.org
From: obnox@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070627221026.C58C0162B72@lists.samba.org>
Date: Wed, 27 Jun 2007 22:10:26 +0000 (GMT)
Subject: svn commit: samba r23639 - in branches: SAMBA_3_0/source/lib
	SAMBA_3_0_26/source/lib
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: obnox
Date: 2007-06-27 22:10:25 +0000 (Wed, 27 Jun 2007)
New Revision: 23639

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23639

Log:
Eliminate trailing whitespaces in the new tdb_validate functions...

Michael


Modified:
   branches/SAMBA_3_0/source/lib/util_tdb.c
   branches/SAMBA_3_0_26/source/lib/util_tdb.c


Changeset:
Modified: branches/SAMBA_3_0/source/lib/util_tdb.c
===================================================================
--- branches/SAMBA_3_0/source/lib/util_tdb.c	2007-06-27 20:32:35 UTC (rev 23638)
+++ branches/SAMBA_3_0/source/lib/util_tdb.c	2007-06-27 22:10:25 UTC (rev 23639)
@@ -990,7 +990,7 @@
  * internal validation function, executed by the child.  
  */
 static int tdb_validate_child(const char *tdb_path,
-			      tdb_validate_data_func validate_fn, 
+			      tdb_validate_data_func validate_fn,
 			      int pfd)
 {
 	int ret = -1;
@@ -998,7 +998,7 @@
 	int num_entries = 0;
 	TDB_CONTEXT *tdb = NULL;
 	struct tdb_validation_status v_status;
-	
+
 	v_status.tdb_error = False;
 	v_status.bad_freelist = False;
 	v_status.bad_entry = False;
@@ -1050,7 +1050,7 @@
 	if (tdb) {
 		if (ret == 0) {
 			tdb_close(tdb);
-		} 
+		}
 		else if (tfd != -1) {
 			close(tfd);
 		}
@@ -1072,10 +1072,10 @@
 	int pipe_fds[2];
 	struct tdb_validation_status v_status;
 	int bytes_read = 0;
-	
-	/* fork and let the child do the validation. 
+
+	/* fork and let the child do the validation.
 	 * benefit: no need to twist signal handlers and panic functions.
-	 * just let the child panic. we catch the signal. 
+	 * just let the child panic. we catch the signal.
 	 * communicate the extended status struct over a pipe. */
 
 	if (pipe(pipe_fds) != 0) {
@@ -1099,7 +1099,7 @@
 
 	/* parent */
 
-	DEBUG(10, ("tdb_validate: fork succeeded, child PID = %d\n", 
+	DEBUG(10, ("tdb_validate: fork succeeded, child PID = %d\n",
 		   child_pid));
 	close(pipe_fds[1]); /* close writing fd */
 
@@ -1151,7 +1151,6 @@
 			     "unexpected PID.");
 	}
 
-		
 	DEBUG(10, ("tdb_validate: validating child returned.\n"));
 	if (WIFEXITED(child_status)) {
 		DEBUG(10, ("tdb_validate: child exited, code %d.\n",

Modified: branches/SAMBA_3_0_26/source/lib/util_tdb.c
===================================================================
--- branches/SAMBA_3_0_26/source/lib/util_tdb.c	2007-06-27 20:32:35 UTC (rev 23638)
+++ branches/SAMBA_3_0_26/source/lib/util_tdb.c	2007-06-27 22:10:25 UTC (rev 23639)
@@ -990,7 +990,7 @@
  * internal validation function, executed by the child.  
  */
 static int tdb_validate_child(const char *tdb_path,
-			      tdb_validate_data_func validate_fn, 
+			      tdb_validate_data_func validate_fn,
 			      int pfd)
 {
 	int ret = -1;
@@ -998,7 +998,7 @@
 	int num_entries = 0;
 	TDB_CONTEXT *tdb = NULL;
 	struct tdb_validation_status v_status;
-	
+
 	v_status.tdb_error = False;
 	v_status.bad_freelist = False;
 	v_status.bad_entry = False;
@@ -1050,7 +1050,7 @@
 	if (tdb) {
 		if (ret == 0) {
 			tdb_close(tdb);
-		} 
+		}
 		else if (tfd != -1) {
 			close(tfd);
 		}
@@ -1072,10 +1072,10 @@
 	int pipe_fds[2];
 	struct tdb_validation_status v_status;
 	int bytes_read = 0;
-	
-	/* fork and let the child do the validation. 
+
+	/* fork and let the child do the validation.
 	 * benefit: no need to twist signal handlers and panic functions.
-	 * just let the child panic. we catch the signal. 
+	 * just let the child panic. we catch the signal.
 	 * communicate the extended status struct over a pipe. */
 
 	if (pipe(pipe_fds) != 0) {
@@ -1099,7 +1099,7 @@
 
 	/* parent */
 
-	DEBUG(10, ("tdb_validate: fork succeeded, child PID = %d\n", 
+	DEBUG(10, ("tdb_validate: fork succeeded, child PID = %d\n",
 		   child_pid));
 	close(pipe_fds[1]); /* close writing fd */
 
@@ -1151,7 +1151,6 @@
 			     "unexpected PID.");
 	}
 
-		
 	DEBUG(10, ("tdb_validate: validating child returned.\n"));
 	if (WIFEXITED(child_status)) {
 		DEBUG(10, ("tdb_validate: child exited, code %d.\n",

