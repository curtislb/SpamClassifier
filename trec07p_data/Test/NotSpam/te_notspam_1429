From samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Sun Jul  1 10:20:04 2007
Return-Path: <samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l61EK3L9001700
	for <ktwarwic@speedy.uwaterloo.ca>; Sun, 1 Jul 2007 10:20:03 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id DEF9016390C
	for <ktwarwic@speedy.uwaterloo.ca>; Sun,  1 Jul 2007 14:19:59 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=3.8 tests=AWL,BAYES_00,RCVD_IN_DSBL,
	UNPARSEABLE_RELAY autolearn=no version=3.1.7
X-Original-To: samba-technical@lists.samba.org
Delivered-To: samba-technical@lists.samba.org
Received: from mail.SerNet.de (mail.SerNet.DE [193.175.80.2])
	by lists.samba.org (Postfix) with ESMTP id B410B162BD6;
	Sun,  1 Jul 2007 14:19:42 +0000 (GMT)
Received: from intern.SerNet.DE by mail.SerNet.DE with esmtp (Exim 4.51 #1)
	id 1I50H7-0001cM-SN; Sun, 01 Jul 2007 16:19:41 +0200
Received: by intern.SerNet.DE
	id 1I50H7-000868-8n; Sun, 01 Jul 2007 16:19:41 +0200
Received: by intern.SerNet.DE
	id 1I50H6-000863-W8; Sun, 01 Jul 2007 16:19:41 +0200
Date: Sun, 1 Jul 2007 16:19:40 +0200
From: Michael Adam <ma@sernet.de>
To: Volker Lendecke <Volker.Lendecke@sernet.de>
References: <20070630235224.17FF3162BD8@lists.samba.org>
	<20070630235349.GA1418@jeremy2.wintest.samba.local>
	<E1I4mvc-0007vV-DH@intern.SerNet.DE>
	<20070701003949.GB1418@jeremy2.wintest.samba.local>
	<20070701061430.GA4174@sernet.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20070701061430.GA4174@sernet.de>
User-Agent: Mutt/1.5.9i
Message-Id: <E1I50H7-000868-8n@intern.SerNet.DE>
Organization: SerNet GmbH, Goettingen, Germany
Cc: samba-technical@lists.samba.org, Jeremy Allison <jra@samba.org>
Subject: Re: svn commit: samba r23668 - in branches: SAMBA_3_0/source/lib
	SAMBA_3_0_26/source/lib
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: "Discussions on Samba internals. For general questions please
	subscribe to the list samba@samba.org"
	<samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>, 
	<mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-technical>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
	<mailto:samba-technical-request@lists.samba.org?subject=subscribe>
Sender: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-technical-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by flax9.uwaterloo.ca id l61EK3L9001700

On Sun, Jul 01, 2007 at 08:14:30AM +0200, Volker Lendecke wrote:
> On Sat, Jun 30, 2007 at 05:39:49PM -0700, Jeremy Allison wrote:
> > On Sun, Jul 01, 2007 at 02:04:36AM +0200, Michael Adam wrote:
> > > 
> > > I did not create a security hole (kept at the worst): 
> > > This block of code was just indented one additional level. 
> > > num_ucs2 = length/2, length being passed to the function. 
> > > So there is no danger of wrap here. - right?
> > 
> > Where did length come from ? Please check length.
> 
> length is client-determined here, so definitely tainted (in
> the perl sense). But still I don't see how this can wrap.
> length and num_ucs2 are both unsigned, and right before the
> malloc(num_ucs2+1) num_ucs2 was calculated as
> num_ucs2=length/2. 

This was exactly my reasoning, why num_ucs2 can't wrap.

But of course length itself is potentially dangerous here,
since "length + 2" is passed to convert_string_talloc a
couple of lines further down (since the function adds a
(two byte) zero to the end of the input string.

So what to do about that? Check for length >= 
(maximum of uint32) - 2  and return an error when
this is the case?

Michael

-- 
Michael Adam <ma@sernet.de>
SerNet GmbH, Bahnhofsallee 1b, 37081 Göttingen
phone: +49-551-370000-0, fax: +49-551-370000-9
AG Göttingen, HRB 2816, GF: Dr. Johannes Loxen
http://www.SerNet.DE, mailto: Info @ SerNet.DE

