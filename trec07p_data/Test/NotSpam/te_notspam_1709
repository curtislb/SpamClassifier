From beginners-return-92963-ktwarwic=speedy.uwaterloo.ca@perl.org  Mon Jul  2 13:46:02 2007
Return-Path: <beginners-return-92963-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l62Hk0L9016934
	for <ktwarwic@flax9.uwaterloo.ca>; Mon, 2 Jul 2007 13:46:01 -0400
Received: (qmail 24875 invoked by uid 514); 2 Jul 2007 17:45:50 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 24866 invoked from network); 2 Jul 2007 17:45:49 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 Jul 2007 17:45:49 -0000
Received: (qmail 25008 invoked by uid 225); 2 Jul 2007 17:45:49 -0000
Delivered-To: beginners@perl.org
Received: (qmail 24997 invoked by alias); 2 Jul 2007 17:45:48 -0000
X-Spam-Status: No, hits=-1.1 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_TESTING,DK_SIGNED,DK_VERIFIED,DNS_FROM_RFC_BOGUSMX,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtp111.plus.mail.re1.yahoo.com (HELO smtp111.plus.mail.re1.yahoo.com) (69.147.102.74)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 02 Jul 2007 10:45:46 -0700
Received: (qmail 20269 invoked from network); 2 Jul 2007 17:45:41 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=Received:X-YMail-OSG:Message-ID:Date:From:User-Agent:MIME-Version:To:CC:Subject:References:In-Reply-To:Content-Type:Content-Transfer-Encoding;
  b=H+WIQFs9kBO8Ri7XSz3cF1i+aqoPKnZF1oWveb2c+A+FHTzIgjndVk96zmGjtRZm/03TD/sIOrizynllPFTieYMO5EyTgNVw+33Ljb9JuaWxntV7UkfO+/RhGR0cdjLtGFflsjVE1hpsgdnS4lt+h5zwUY1W76HkZdYTKq7Wo+g=  ;
Received: from unknown (HELO ?127.0.0.1?) (theillien@76.21.182.124 with plain)
  by smtp111.plus.mail.re1.yahoo.com with SMTP; 2 Jul 2007 17:45:41 -0000
X-YMail-OSG: sl3ig18VM1n0KQGxvTPszx_1_cuGDEq7pzp8Mpul.jyajeyfZUGO1dZbaelrGTyqfwQ20OySwtU3dXwsu6Ga8k60LwFWVWNUS7z1F3XYAqoKhGiMHw--
Message-ID: <46893901.7050308@yahoo.com>
Date: Mon, 02 Jul 2007 13:42:25 -0400
From: Mathew <theillien@yahoo.com>
User-Agent: Thunderbird 2.0.0.4 (Windows/20070604)
MIME-Version: 1.0
To: kens <kenslaterpa@hotmail.com>
CC: beginners@perl.org
Subject: Re: Problem with runaway format
References: <4687767F.9070206@yahoo.com> <1183376285.900919.133570@q69g2000hsb.googlegroups.com>
In-Reply-To: <1183376285.900919.133570@q69g2000hsb.googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit

kens wrote:
> On Jul 1, 5:40 am, theill...@yahoo.com (Mathew Snyder) wrote:
>> I have a script which places data 4 levels deep in a HoHoHoH.  It grabs tickets
>> in our ticket system using the systems API and places attributes about each
>> piece of activity into the hash. The has is called %tickets.  It looks like
>>
>> $tickets{action_creator}{ticket_customer}{ticket_number}{ticket_subject}.
>>
>> Each is self explanatory with the value under ticket_subject being the total
>> time the action creator spent on the whole ticket.  The actual code
>>
>> # gather up all of the tickets, transactions, and time for each user and
>> successively place
>> # all data into a HoHoH working down from user to environment to ticket
>> # we go through each date in the range individually so we can make sure we only
>> get the transactions that
>> # have been added during the date range
>> foreach my $date (@searchDate) {
>>         while (my $ticket = $tix->Next) {
>>                 $tikSubj{$ticket->id} = $ticket->Subject;
>>                 my $env = $ticket->FirstCustomFieldValue('Environment');
>>                 my $transactions = $ticket->Transactions;
>>                 while (my $transaction  = $transactions->Next) {
>>                         my $creator     = $transaction->CreatorObj;
>>
>>                         # we need to make sure the transaction is in the date
>> range requested
>>                         # it's set up like this so we can chop the timestamp off
>> of the Created string
>>                         (my $checkDate  = $transaction->Created) =~ s/\s.*$//;
>>
>>                         # we only want transactions that are within the date
>> range, have TimeWorked
>>                         # set, and the creator of which is one of the actual
>> users and not someone
>>                         # that was created upon ticket submission or Cc addition
>>                         next unless (($checkDate eq $date) &&
>> ($creator->Privileged) && ($transaction->TimeTaken));
>>
>>                         # if all of the above stipulations are met add the time
>> worked to the hash
>>
>> $tickets{$creator->Name}{$env}{$ticket->id}{$ticket->Subject} +=
>> $transaction->TimeTaken;
>>                 }
>>         }
>>
>> }
>>
>> And the formatting
>>
>> foreach my $user (keys %tickets) {
>>         open TIMESHEET,
>> ">/work_reports/ticketlists/ticketlists_$endDate/ticketlist_$user" . "_" .
>> "$endDate.txt" or die "Can't open file: $!";
>>         print TIMESHEET "List of tickets worked on by $user during week ending
>> $endDate", "\n\n";
>>
>>         foreach my $env (sort keys %{ $tickets{$user} }){
>>
>> format TIMESHEET_TOP =
>> @<<<<<<<<<<<<<<<<<<<<
>> $env
>>  Ticket ID                      Subject                      hh:mm
>> ------------------------------------------------------------------
>> .
>>
>>                 write TIMESHEET_TOP;
>>
>>                 foreach my $id (sort keys %{ $tickets{$user}{$env} }) {
>>                         foreach my $subject (keys %{ $tickets{$user}{$env}{$id} }) {
>> format TIMESHEET =
>> @#########  ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  @>>>>
>>            $id, $tickets{$user}{$env}{$id},
>> $tickets{$user}{$env}{$id}{$subject}
> 
> I know little about the 'format' function (never use it) but what is
> it you are trying to print in the above statement? It looks to me like
> you are trying to print the $id variable and then some hash
> references.
> 
> Ken
> 

The value under $ticket{$user}{$env}{$id}{$subject} is the total time
the user spent on the ticket.

>> ~~          ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>             $tickets{$user}{$env}{$id}
>> .
>>
>>                                 write TIMESHEET;
>>                         }
>>                         print TIMESHEET "\n";
>>                 }
>>         }
>>
>> }
>>
>> The problem didn't surface until I went from using the %tikSubj hash seen near
>> the top of the code snippet to a multi-level hash.  But then, using %tikSubj
>> presents its own bug for some reason.
>>
>> Knowing that you don't know the intricacies of the system I'm working with, I
>> won't be sad if no one has any input ;).
>>
>> Thanks
>> Mathew
>> --
>> Keep up with me and what I'm up to:http://theillien.blogspot.com
> 
> 
> 

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


