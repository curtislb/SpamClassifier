From perl6-all-return-82454-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun 29 14:44:30 2007
Return-Path: <perl6-all-return-82454-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5TIiTL9029571
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 29 Jun 2007 14:44:30 -0400
Received: (qmail 28021 invoked by uid 514); 29 Jun 2007 18:44:25 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 28016 invoked from network); 29 Jun 2007 18:44:25 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: local policy)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
Date: Fri, 29 Jun 2007 13:37:01 -0500
From: "Patrick R. Michaud" <pmichaud@pobox.com>
To: jerry gay <jerry.gay@gmail.com>
Cc: parrot-porters@perl.org
Subject: Re: pdd15: How do I subclass a parrot; PMC class?
Message-ID: <20070629183700.GC27722@host.pmichaud.com>
References: <20070628204742.GB11745@host.pmichaud.com> <1d9a3f400706291123p6621b86dn2782fd41b1661d10@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1d9a3f400706291123p6621b86dn2782fd41b1661d10@mail.gmail.com>
User-Agent: Mutt/1.4.2.1i
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host.pmichaud.com
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [32003 505] / [47 12]
X-AntiAbuse: Sender Address Domain - host.pmichaud.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Fri, Jun 29, 2007 at 11:23:46AM -0700, jerry gay wrote:
> On 6/28/07, Patrick R. Michaud <pmichaud@pobox.com> wrote:
> >Another question about pdd15...:
> >
> >If I'm in a different HLL namespace (e.g., via a .HLL directive), how do
> >I get a PMC class from the 'parrot' HLL namespace?
> >
> >Here is an example (which obviously won't work):  I'm creating a
> >'perl6;Str' class and then attempting to add (parrot's) String class
> >as a parent.  But of course the constant 'String' here refers to
> >the wrong HLL namespace:
> >
> >    $ cat z.pir
> >    .HLL "perl6", ""
> >
> >    .namespace [ "" ]
> >
> >    .sub main :main
> >        # create 'Str' class
> >        $P1 = new 'Class'
> >        $P1.'name'('Str')
> >
> >        # add parrot;String PMC as a parent class
> >        $P2 = get_class 'String'
> >        addparent $P1, $P2
> >    .end
> >
> >    $ ./parrot z.pir
> >    Class 'String' doesn't exist
> >    current instr.: 'perl6;;main' pc 12 (z.pir:11)
> >    $
> >
> >Of course, I'm mostly interested in knowing what the answer "should be", 
> >but I'm
> >also interested in what "works today".
> >
> i've tried attacking this from a number of directions with current
> functionality, and can't seem to get anything to work.
> 
> note that this example only works if *both* the .HLL and .namespace
> lines are commented out. i can't quite figure out why that is, but
> i'll to stare at the C source a bit and see if something jumps out.

I think this is a case where the spec simply doesn't cover the needed
behavior yet, not that the implementation is missing something.

If I use C< get_class "String" > in a HLL other than parrot, 
then I somewhat expect the behavior we're already seeing.  In
other words, we're asking for a "String" class in the current
(HLL) namespace, and there isn't one, and thus we get an
exception.

So, the question is -- how do we locate PMC classes in other
HLL namespaces?

Pm

