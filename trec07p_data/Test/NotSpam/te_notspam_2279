From beginners-return-93038-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jul  4 12:16:28 2007
Return-Path: <beginners-return-93038-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l64GGRL9012780
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 4 Jul 2007 12:16:28 -0400
Received: (qmail 22651 invoked by uid 514); 4 Jul 2007 16:16:17 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Delivered-To: moderator for beginners@perl.org
Received: (qmail 20600 invoked from network); 4 Jul 2007 15:09:46 -0000
Delivered-To: beginners@perl.org
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of thebarncat@gmail.com)
To: beginners@perl.org
MBOX-Line: From news@google.com Wed Jul 04 15:02:47 2007
Delivered-To: colobus-nntpmod@lists.develooper.com
Delivered-To: news-moderator-perl.beginners@perl.org
Received-SPF: neutral (x1.develooper.com: 130.59.1.10 is neither permitted nor denied by domain of news@google.com)
From: "thebarncat@gmail.com" <thebarncat@gmail.com>
Subject: Re: hash comparison ideas
Date: Wed, 04 Jul 2007 15:02:32 -0000
Organization: http://groups.google.com
Lines: 52
Message-ID: <1183561352.679055.206010@r34g2000hsd.googlegroups.com>
References: <1183514264.855772.317770@q69g2000hsb.googlegroups.com>
   <468B3898.9030800@telus.net>
NNTP-Posting-Host: 66.16.55.172
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Trace: posting.google.com 1183561352 27982 127.0.0.1 (4 Jul 2007 15:02:32 GMT)
X-Complaints-To: groups-abuse@google.com
NNTP-Posting-Date: Wed, 4 Jul 2007 15:02:32 +0000 (UTC)
In-Reply-To: <468B3898.9030800@telus.net>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; IEMB3; .NET CLR 2.0.50727; IEMB3),gzip(gfe),gzip(gfe)
Complaints-To: groups-abuse@google.com
Injection-Info: r34g2000hsd.googlegroups.com; posting-host=66.16.55.172;
   posting-account=ahgkIw0AAAC0YMw3uJouIn0lQdwE-1WR
X-Posted-By: 63.251.223.186
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL

On Jul 4, 2:05 am, kra...@telus.net (John W. Krahn) wrote:
>
> > I have  a script which contains 2 hashes of file names as the keys and
> > md5 sums as the values. I am looking for ideas on fast and efficient
> > ways to compare the 2 hashes in the manner of the pseudo code below
>
> Can you fill us in on the big picture?  Perhaps you need a hash of arrays
> where the keys are the md5 sums and the values are arrays of file names?

the base hash is an initial collection of current file names and check
sums.  the script is kind of a poor man's incremental backup. here is
a snippet. the files_db hash (base hash) comes from a file
--
my %files;
find sub {
	$path = $File::Find::dir;
	(my $tpath = $path) =~ s/^c:/$target/;
	mkpath ($tpath, {verbose => 1} ) unless -e $tpath;
	if ( -f ) {
	       # copy any files that don't exists at all on target
	      (my $tname = $name) =~ s/^c:/$target/;
	      copy ($name, $tpath) and print "copying $name\n"  unless -e
$tname;

	      open F,  $_ or do {
        	      warn "Cannot open '$File::Find::name' $!";
        	      return;
                      };

	     binmode(F);
	     my $digest = Digest::MD5->new;
	     $digest->addfile(*F);
	     my $sum = $digest->hexdigest;

	    $files{$name} = $sum;
	    if ( exists $files_db{$name} and ( $files{$name} ==
$files_db{$name} ) ) {
                                ####
		# **compare sums and do stuff here**
	   }
            }

}, $dir;

--

i am not sure how hash of arrays will help as each key = 1 sum  and
vice versa
Thanks for your help and any suggestions
Jim



-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


