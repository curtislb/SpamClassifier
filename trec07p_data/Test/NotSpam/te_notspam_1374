From perl6-all-return-82477-ktwarwic=speedy.uwaterloo.ca@perl.org  Sun Jul  1 03:56:49 2007
Return-Path: <perl6-all-return-82477-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l617umL9017120
	for <ktwarwic@flax9.uwaterloo.ca>; Sun, 1 Jul 2007 03:56:49 -0400
Received: (qmail 13489 invoked by uid 514); 1 Jul 2007 07:56:43 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 13484 invoked from network); 1 Jul 2007 07:56:43 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-language-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-language
List-Id: <perl6-language.perl.org>
Delivered-To: mailing list perl6-language@perl.org
Delivered-To: perl6-language@perl.org
Received-SPF: pass (x1.develooper.com: domain of lrpalmer@gmail.com designates 209.85.146.177 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=pOO3w6hxYvxv9k1NX6pumEC86O2+2l1azwaMM5JPv6IZMav3CNg8rRV2Olmdklyw4FLFsrSB+HZgUSGLOnXBk3KHX+4QComLJ2kM4VwUZW3NcurPIRkZe+2FDBq/QqB4DilOGUj7WNdqPXqZeAEFEIEGWoiRQ+nQlKI6dxJ+fG0=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=gR01nxRgkbKbapdmjf72fLCPupWdW79850QVgvL7cKXnosUW879Vkaf0h3wcBRaG+zc1XxEWq2H6HPa0gRlzkRQabz2Zo04sLZenn0A8dncgvMJMi7hHe4ZCNLoGWpXvRV8GkebZjrNOuxiQGvVgH0v7j0WmhT500KzPHaS3TNs=
Message-ID: <7ca3f0160707010056v2fbf2eb5u66d5e71c575d9f26@mail.gmail.com>
Date: Sun, 1 Jul 2007 01:56:18 -0600
From: "Luke Palmer" <lrpalmer@gmail.com>
To: "Amir E. Aharoni" <amir.aharoni@gmail.com>
Subject: Re: **{x,y} quantifier
Cc: perl6-language <perl6-language@perl.org>
In-Reply-To: <97f280ea0707010034w16854fb3o462a8208ad965780@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <97f280ea0707010034w16854fb3o462a8208ad965780@mail.gmail.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS

On 7/1/07, Amir E. Aharoni <amir.aharoni@gmail.com> wrote:
> I got the reply that it is similar to exponentiation of variables in math:
>
> a ** 5 == a * a * a * a * a == aaaaa
>
> It makes sense after it is explained and i do like the rationalization
> of the range as a list-like range, instead of the comma, but the **
> syntax is rather ugly to my taste. Seeing that the ** quantifier is
> not yet implemented anyway, I thought what could replace it, and the
> best i could find was <1 .. 3>.
>
> My rationale is this:
>
> * It looks clean.
>
> * It the chapter about Extensible metasyntax (<...>) in S05 most
> paragraphs begin by "A leading X means yadda yadda", where X can be:
>
>     * whitespace
>     * alphabetic character (not alphanumeric!)
>     * ? $ :: @ % { & [ + - . ! ~~
>
> ... so numbers are not covered.
>
> * As a side effect, * is a shortcut for <0 .. Inf>, + is a shortcut
> for <1 .. Inf>, ? * is a shortcut for <0 .. 1>.
>
> * The ? of non-greediness can come before the closing > - <1 .. 3 ?>

Your argument seems to be "<1..3> is cleaner-looking to me, and it is
possible to implement".  While that second constraint is always an
important one, cleanliness is not the highest concern.  There's more
to beauty than what the eye can see.

I believe that **{1..3} was at one point spelled <1,3>.  The rather
glaring inconsistency of that is that <>-constructions are always
assertions, never modifiers.   That is to say, in the rest of the
regex design, whenever you see <blah>, it never depends on what comes
before it.

Another important loss if we were to go with <1..3> would be the
ability to have runtime-dependent ranges; e.g.:

    / ($ntimes) x**{$ntimes} /

You also lose the ** exponentiation mnemonic, which I found pretty on
the inside :-).  You also lose the *-like (because it really is just a
special kind of *) mnemonic.  I think the losses are too great to
warrant such a change just for the purpose of visual appeal.

Luke

