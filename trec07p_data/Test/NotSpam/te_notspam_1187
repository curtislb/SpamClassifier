From perl6-all-return-82462-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun 29 18:45:57 2007
Return-Path: <perl6-all-return-82462-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5TMjuL9032003
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 29 Jun 2007 18:45:56 -0400
Received: (qmail 26578 invoked by uid 514); 29 Jun 2007 22:44:39 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 26498 invoked from network); 29 Jun 2007 22:44:38 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: moderator for perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: pass (x1.develooper.com: local policy)
From: Ron Blaschke (via RT) <parrotbug-followup@parrotcode.org>
X-RT-NewTicket: yes
To: bugs-bitbucket@netlabs.develooper.com
Resent-To: perl6-internals@perl.org
Mail-Followup-To: perl6-internals@perl.org
Reply-To: perl6-internals@perl.org
Date: Fri, 29 Jun 2007 11:30:12 -0700
Subject: [perl #43438] [PATCH][Win32] Update Win32 stat 
In-Reply-To: <468541CB.3030106@rblasch.org>
References: <RT-Ticket-43438@perl.org> <468541CB.3030106@rblasch.org>
Message-ID: <rt-3.6.HEAD-1276-1183141812-1106.43438-72-0@perl.org>
X-RT-Loop-Prevention: perl
RT-Ticket: perl #43438
Managed-by: RT 3.6.HEAD (http://www.bestpractical.com/rt/)
RT-Originator: ron@rblasch.org
MIME-Version: 1.0
X-RT-Original-Encoding: utf-8
Content-type: multipart/mixed; boundary="----------=_1183141812-1276-129"
Resent-Message-Id: <20070629183012.AF5A92AFDE@x3.develooper.com>
Resent-Date: Fri, 29 Jun 2007 11:30:12 -0700 (PDT)
Resent-From: rt-ron=rblasch.org@netlabs.develooper.com
X-Virus-Checked: Checked
X-Virus-Checked: Checked
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS

------------=_1183141812-1276-129
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

# New Ticket Created by  Ron Blaschke 
# Please include the string:  [perl #43438]
# in the subject line of all future correspondence about this issue. 
# <URL: http://rt.perl.org/rt3/Ticket/Display.html?id=43438 >


Attached patch steal the basic layout from
F<config/gen/platform/generic/stat.c> and makes the
F<t/pmc/io.t> "stat failed" test work.

Changed Files:
    config/gen/platform/win32/stat.c
    t/pmc/io.t

Tested on:

Visual C++ 8.0
$ runtests t\pmc\io.t
t\pmc\io......ok
All tests successful.

Test Summary Report
-------------------
t\pmc\io.t (Wstat: 0 Tests: 45 Failed: 0)
  Tests skipped: 8
Files=1, Tests=45,  3 wallclock secs ( 0.00 cusr +  0.00 csys =  0.00 CPU)


Visual C++ 7.1
$ runtests t\pmc\io.t
t\pmc\io......ok
All tests successful.

Test Summary Report
-------------------
t\pmc\io.t (Wstat: 0 Tests: 45 Failed: 0)
  Tests skipped: 8
Files=1, Tests=45,  3 wallclock secs ( 0.00 cusr +  0.00 csys =  0.00 CPU)


MinGW GCC 3.4.2
$ runtests t\pmc\io.t
t\pmc\io......ok
All tests successful.

Test Summary Report
-------------------
t\pmc\io.t (Wstat: 0 Tests: 45 Failed: 0)
  Tests skipped: 8
Files=1, Tests=45,  6 wallclock secs ( 0.00 cusr +  0.00 csys =  0.00 CPU)

Ron

------------=_1183141812-1276-129
Content-Type: text/plain; charset="ascii"; name="win32_stat.patch"
Content-Disposition: inline; filename="win32_stat.patch"
Content-Transfer-Encoding: 7bit
RT-Attachment: 43438/266046/116394

Index: config/gen/platform/win32/stat.c
===================================================================
--- config/gen/platform/win32/stat.c	(revision 19421)
+++ config/gen/platform/win32/stat.c	(working copy)
@@ -2,173 +2,145 @@
  * File stat stuff
  */
 
+static INTVAL
+stat_common(Interp *interpreter, struct _stat *statbuf,
+        INTVAL thing, int status)
+{
+    INTVAL result;
+
+    if (thing == STAT_EXISTS)
+        return status == 0;
+    if (status == -1) {
+        const char *err = strerror(errno);
+        real_exception(interpreter, NULL, E_IOError,
+                "stat failed: %s", err);
+    }
+
+    switch (thing) {
+        case STAT_FILESIZE:
+            result = statbuf->st_size;
+            break;
+
+        case STAT_ISDIR:
+            result = S_ISDIR(statbuf->st_mode);
+            break;
+
+        case STAT_ISDEV:
+            result = S_ISCHR(statbuf->st_mode) || S_ISBLK(statbuf->st_mode);
+            break;
+
+        case STAT_CREATETIME:
+            result = -1;
+            break;
+
+        case STAT_ACCESSTIME:
+            result = statbuf->st_atime;
+            break;
+
+        case STAT_MODIFYTIME:
+            result = statbuf->st_mtime;
+            break;
+
+        case STAT_CHANGETIME:
+            result = statbuf->st_ctime;
+            break;
+
+        case STAT_BACKUPTIME:
+            result = -1;
+            break;
+
+        case STAT_UID:
+            result = statbuf->st_uid;
+            break;
+
+        case STAT_GID:
+            result = statbuf->st_gid;
+            break;
+
+        case STAT_PLATFORM_DEV:
+            result = statbuf->st_dev;
+            break;
+
+        case STAT_PLATFORM_INODE:
+            result = statbuf->st_ino;
+            break;
+
+        case STAT_PLATFORM_MODE:
+            result = statbuf->st_mode;
+            break;
+
+        case STAT_PLATFORM_NLINKS:
+            result = statbuf->st_nlink;
+            break;
+
+        case STAT_PLATFORM_DEVTYPE:
+            result = statbuf->st_rdev;
+            break;
+
+        case STAT_PLATFORM_BLOCKSIZE:
+            internal_exception(1, "STAT_PLATFORM_BLOCKSIZE not supported");
+            break;
+
+        case STAT_PLATFORM_BLOCKS:
+            internal_exception(1, "STAT_PLATFORM_BLOCKS not supported");
+            break;
+
+        default:
+            result = -1;
+    }
+
+    return result;
+}
+
 PMC *
 Parrot_stat_file(Parrot_Interp interpreter, STRING *filename)
 {
-  return NULL;
+    return NULL;
 }
 
 PMC *
 Parrot_stat_info_pmc(Parrot_Interp interpreter, STRING *filename, INTVAL thing)
 {
-  return NULL;
+    return NULL;
 }
 
 INTVAL
 Parrot_stat_info_intval(Parrot_Interp interpreter, STRING *file, INTVAL thing)
 {
-  struct stat statbuf;
-  char *filename;
-  INTVAL result = -1;
-  int status;
+    struct _stat statbuf;
+    char *filename;
+    int status;
 
-  /* Get the name of the file as something we can use */
-  filename = string_to_cstring(interpreter, file);
+    /* Get the name of the file as something we can use */
+    filename = string_to_cstring(interpreter, file);
 
-  /* Everything needs the result of stat, so just go do it */
-  status = stat(filename, &statbuf);
-
-  switch (thing) {
-  case STAT_EXISTS:
-    result = (status == 0);
-    break;
-  case STAT_FILESIZE:
-    result = statbuf.st_size;
-    break;
-  case STAT_ISDIR:
-    result = S_ISDIR(statbuf.st_mode);
-    break;
-  case STAT_ISDEV:
-    result = S_ISCHR(statbuf.st_mode) || S_ISBLK(statbuf.st_mode);
-    break;
-  case STAT_CREATETIME:
-    result = -1;
-    break;
-  case STAT_ACCESSTIME:
-    result = statbuf.st_atime;
-    break;
-  case STAT_MODIFYTIME:
-    result = statbuf.st_mtime;
-    break;
-  case STAT_CHANGETIME:
-    result = statbuf.st_ctime;
-    break;
-  case STAT_BACKUPTIME:
-    result = -1;
-    break;
-  case STAT_UID:
-    result = statbuf.st_uid;
-    break;
-  case STAT_GID:
-    result = statbuf.st_gid;
-    break;
-  case STAT_PLATFORM_DEV:
-    result = statbuf.st_dev;
-    break;
-  case STAT_PLATFORM_INODE:
-    result = statbuf.st_ino;
-    break;
-  case STAT_PLATFORM_MODE:
-    result = statbuf.st_mode;
-    break;
-  case STAT_PLATFORM_NLINKS:
-    result = statbuf.st_nlink;
-    break;
-  case STAT_PLATFORM_DEVTYPE:
-    result = statbuf.st_rdev;
-    break;
-  case STAT_PLATFORM_BLOCKSIZE:
-    internal_exception(1, "STAT_PLATFORM_BLOCKSIZE not supported");
-    break;
-  case STAT_PLATFORM_BLOCKS:
-    internal_exception(1, "STAT_PLATFORM_BLOCKS not supported");
-    break;
-  }
-
-  string_cstring_free(filename);
-  return result;
+    /* Everything needs the result of stat, so just go do it */
+    status = _stat(filename, &statbuf);
+    string_cstring_free(filename);
+    return stat_common(interpreter, &statbuf, thing, status);
 }
 
 INTVAL
 Parrot_fstat_info_intval(Parrot_Interp interpreter, INTVAL file, INTVAL thing)
 {
-  struct stat statbuf;
-  INTVAL result = -1;
-  int status;
+    struct _stat statbuf;
+    int status;
 
-  /* Everything needs the result of stat, so just go do it */
-  status = fstat(file, &statbuf);
-
-  switch (thing) {
-  case STAT_EXISTS:
-    result = (status == 0);
-    break;
-  case STAT_FILESIZE:
-    result = statbuf.st_size;
-    break;
-  case STAT_ISDIR:
-    result = S_ISDIR(statbuf.st_mode);
-    break;
-  case STAT_ISDEV:
-    result = S_ISCHR(statbuf.st_mode) || S_ISBLK(statbuf.st_mode);
-    break;
-  case STAT_CREATETIME:
-    result = -1;
-    break;
-  case STAT_ACCESSTIME:
-    result = statbuf.st_atime;
-    break;
-  case STAT_MODIFYTIME:
-    result = statbuf.st_mtime;
-    break;
-  case STAT_CHANGETIME:
-    result = statbuf.st_ctime;
-    break;
-  case STAT_BACKUPTIME:
-    result = -1;
-    break;
-  case STAT_UID:
-    result = statbuf.st_uid;
-    break;
-  case STAT_GID:
-    result = statbuf.st_gid;
-    break;
-  case STAT_PLATFORM_DEV:
-    result = statbuf.st_dev;
-    break;
-  case STAT_PLATFORM_INODE:
-    result = statbuf.st_ino;
-    break;
-  case STAT_PLATFORM_MODE:
-    result = statbuf.st_mode;
-    break;
-  case STAT_PLATFORM_NLINKS:
-    result = statbuf.st_nlink;
-    break;
-  case STAT_PLATFORM_DEVTYPE:
-    result = statbuf.st_rdev;
-    break;
-  case STAT_PLATFORM_BLOCKSIZE:
-    internal_exception(1, "STAT_PLATFORM_BLOCKSIZE not supported");
-    break;
-  case STAT_PLATFORM_BLOCKS:
-    internal_exception(1, "STAT_PLATFORM_BLOCKS not supported");
-    break;
-  }
-
-  return result;
+    /* Everything needs the result of stat, so just go do it */
+    status = _fstat(file, &statbuf);
+    return stat_common(interpreter, &statbuf, thing, status);
 }
 
 FLOATVAL
 Parrot_stat_info_floatval(Parrot_Interp interpreter, STRING *filename, INTVAL thing)
 {
-  return -1;
+    return -1;
 }
 
 STRING *
 Parrot_stat_info_string(Parrot_Interp interpreter, STRING *filename, INTVAL thing)
 {
-  return NULL;
+    return NULL;
 }
 
 /*
Index: t/pmc/io.t
===================================================================
--- t/pmc/io.t	(revision 19421)
+++ t/pmc/io.t	(working copy)
@@ -900,10 +900,7 @@
 OUTPUT
 unlink("temp.file");
 
-SKIP: {
-    skip 'broken on windows', 1 if $^O eq 'MSWin32';
-
-    pir_error_output_like( <<'CODE', <<"OUTPUT", "stat failed" );
+pir_error_output_like( <<'CODE', <<"OUTPUT", "stat failed" );
 .sub main :main
     .local pmc pio
     .local int len
@@ -916,7 +913,6 @@
 CODE
 /stat failed:/
 OUTPUT
-}
 
 # Local Variables:
 #   mode: cperl

------------=_1183141812-1276-129--

