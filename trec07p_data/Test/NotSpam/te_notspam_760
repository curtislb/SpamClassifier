From beginners-return-92859-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Jun 28 11:07:22 2007
Return-Path: <beginners-return-92859-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5SF7KL9012220
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 28 Jun 2007 11:07:21 -0400
Received: (qmail 11309 invoked by uid 514); 28 Jun 2007 15:07:13 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 11299 invoked from network); 28 Jun 2007 15:07:12 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Jun 2007 15:07:12 -0000
Received: (qmail 27502 invoked by uid 225); 28 Jun 2007 15:07:12 -0000
Delivered-To: beginners@perl.org
Received: (qmail 27492 invoked by alias); 28 Jun 2007 15:07:11 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of daggerquill@gmail.com designates 64.233.184.229 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.229)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 28 Jun 2007 08:07:04 -0700
Received: by wr-out-0506.google.com with SMTP id 68so475817wra
        for <beginners@perl.org>; Thu, 28 Jun 2007 08:06:59 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=ndr2T8xskMVdp/4JkZD8wsPuK4KOPKitUWR9mQ3E77hj6m0/fiqTGuI5Ms/5ZCWrcDHSEIuikrDn4Xp/KPKh6o7gNVEDXk+2v64jJ0HkCLocWdQQXqNPahlYeMw0P0J0tlEGNu95BIQk+/uDV2miSKmiHmE8zXGe24CVxdp3KVM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=QFv9ZLobadkiu+Vh9nOi6u48QDP9td+IuETngmNo7P3KjCgF10G/8E4aK0DeTACoDL6X3fEWJjGCKKpppQfi/WzLoZFi2jDmyMtcDoiJ2pjGeJwJHiG3+Ag6IaZSbofa/l9MNX1+J+8jKVtZvJdghxf3orhPBezi0izJRtne+TU=
Received: by 10.90.81.14 with SMTP id e14mr1790801agb.1183043219171;
        Thu, 28 Jun 2007 08:06:59 -0700 (PDT)
Received: by 10.35.109.15 with HTTP; Thu, 28 Jun 2007 08:06:59 -0700 (PDT)
Message-ID: <4ce365ec0706280806r5561c27fpff75db6f21a8f746@mail.gmail.com>
Date: Thu, 28 Jun 2007 11:06:59 -0400
From: "Jay Savage" <daggerquill@gmail.com>
To: "Dharshana Eswaran" <dharshana.ve@gmail.com>,
   "Perl List" <beginners@perl.org>
Subject: Re: String Manipulation
In-Reply-To: <9f91e0840706271810y641b8cd2y25d3756c51224c03@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-7; format=flowed
Content-Disposition: inline
References: <9f91e0840706271220q2566504fq6042ad20af74fad6@mail.gmail.com>
	 <31086b240706271234i2eea880ey5da3277e01406002@mail.gmail.com>
	 <9f91e0840706271810y641b8cd2y25d3756c51224c03@mail.gmail.com>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by flax9.uwaterloo.ca id l5SF7KL9012220

On 6/27/07, Dharshana Eswaran <dharshana.ve@gmail.com> wrote:> On 6/28/07, Tom Phoenix <tom@stonehenge.com> wrote:> >> > On 6/27/07, Dharshana Eswaran <dharshana.ve@gmail.com> wrote:> >> > > I am unable to get a generalised way in which it can extract them as few> > > structures have comments, few does not hav comments etc.> >> > Does the data have some defined grammar, or a definable one at least?>>>> The defined Grammer here is> {> xyz1 abc1; /*Comments*/> xyz2 abc2;> xyz3 abc3[req];> xyz4 abc4[req]; /*Comments*/> };>> Here, i have defined different possibility of occurences of the structure> elements. If i could get a regex for extracting xyz1, xyz2, xyz3, xyz4 and> abc1, abc2, abc3[req], abc4[req] would be helpful. Here, the comments are of> no use, i just need to ignore them.
Correct me if I'm wrong, but from your example, it looks like all the"Dtata Types" are uppercase alphanumerics and underscores, and all the"variable names" are preceded with at least one space.
I would start with something like the (fragile) following:
    my @lines = split /\n/, $string;    while (@lines) {        $_ = shift @lines;        next if /^{/ or /^}/;        my ($type, $name) = /([A-Z_]+)\s*(\S+)/;        if ($name =~ /\[\S+\]/) {            do something with the extra data, or not        }    }
HTH,
-- jay--------------------------------------------------This email and attachment(s): [  ] blogable; [ x ] ask first; [  ]private and confidential
daggerquill [at] gmail [dot] comhttp://www.tuaw.com  http://www.downloadsquad.com  http://www.engatiki.org
values of â will give rise to dom!

