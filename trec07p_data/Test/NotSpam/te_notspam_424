From beginners-return-92803-ktwarwic=speedy.uwaterloo.ca@perl.org  Wed Jun 27 11:23:10 2007
Return-Path: <beginners-return-92803-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5RFN9L9028609
	for <ktwarwic@flax9.uwaterloo.ca>; Wed, 27 Jun 2007 11:23:09 -0400
Received: (qmail 25552 invoked by uid 514); 27 Jun 2007 15:23:02 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 25543 invoked from network); 27 Jun 2007 15:23:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Jun 2007 15:23:01 -0000
Received: (qmail 29578 invoked by uid 225); 27 Jun 2007 15:23:01 -0000
Delivered-To: beginners@perl.org
Received: (qmail 29573 invoked by alias); 27 Jun 2007 15:23:00 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_NEUTRAL,WHOIS_NETSOLPR
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from smtp.njpservices.co.uk (HELO smtp.njpservices.co.uk) (84.45.106.4)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 27 Jun 2007 08:22:51 -0700
Received: from [85.92.185.27] (85-92-185-27.eurisp.net [85.92.185.27] (may be forged))
	by smtp.njpservices.co.uk (8.10.2/8.10.2) with ESMTP id l5RFMZF07389;
	Wed, 27 Jun 2007 16:22:35 +0100
Message-ID: <468280B9.4010308@350.com>
Date: Wed, 27 Jun 2007 16:22:33 +0100
From: Rob Dixon <rob.dixon@350.com>
User-Agent: Thunderbird 1.5.0.12 (Windows/20070509)
MIME-Version: 1.0
To: beginners@perl.org
CC: Amichai Teumim <amichai@teumim.com>
Subject: Re: regular expressions issue
References: <848c3f360706270758j62e5fce4ie87a166792c0d4e@mail.gmail.com>
In-Reply-To: <848c3f360706270758j62e5fce4ie87a166792c0d4e@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Amichai Teumim wrote:
>
> I created a file called data.txt which contains a bunch of junk, including
> some IPs. I want $line to be  stored in
> $ip<http://www.tek-tips.com/viewthread.cfm?qid=1382614&page=1#>
> .
> 
> It works, except for the regular expressions which should find only IPs. If
> I use the regular expression with the grep command in terminal I get only
> the IPs. Here in Perl I don't get any output.
> 
> #!/usr/bin/perl
> 
> @input = `cat ~/ip.txt`;
> 
> foreach $line (@input){
>  if($line =~ /[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}/){ 
> 
>  $ip = $line;
>  print $ip;
>  }
> }
> 
> Any ideas? It's breaking my head.

Perl doesn't require the braces to be escaped. As it is the regex is matching literal
braces in the string which don't exist. Try this:

  if ($line =~ /[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}/) {
    :
  }

and, by the way, [0-9] is more concise than [[:digit:]].

HTH,

Rob

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


