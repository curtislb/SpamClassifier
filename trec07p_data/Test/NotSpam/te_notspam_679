From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Thu Jun 28 06:33:33 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5SAXWL9009162
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 28 Jun 2007 06:33:32 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id B6E28162BD6
	for <ktwarwic@speedy.uwaterloo.ca>; Thu, 28 Jun 2007 10:33:28 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 1017)
	id 71EF0162AD5; Thu, 28 Jun 2007 10:32:53 +0000 (GMT)
To: samba-cvs@samba.org
From: obnox@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070628103253.71EF0162AD5@lists.samba.org>
Date: Thu, 28 Jun 2007 10:32:53 +0000 (GMT)
Subject: svn commit: samba r23641 - in branches: SAMBA_3_0/source/lib
	SAMBA_3_0/source/param SAMBA_3_0_26/source/lib
	SAMBA_3_0_26/source/param
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: obnox
Date: 2007-06-28 10:32:52 +0000 (Thu, 28 Jun 2007)
New Revision: 23641

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23641

Log:
Put check for forbidden values in smbconf into a function.
(This will be used in a next step to prevent storing these
values in reg_smbconf.c.)

Michael


Modified:
   branches/SAMBA_3_0/source/lib/util_reg.c
   branches/SAMBA_3_0/source/param/loadparm.c
   branches/SAMBA_3_0_26/source/lib/util_reg.c
   branches/SAMBA_3_0_26/source/param/loadparm.c


Changeset:
Modified: branches/SAMBA_3_0/source/lib/util_reg.c
===================================================================
--- branches/SAMBA_3_0/source/lib/util_reg.c	2007-06-27 22:45:08 UTC (rev 23640)
+++ branches/SAMBA_3_0/source/lib/util_reg.c	2007-06-28 10:32:52 UTC (rev 23641)
@@ -117,3 +117,25 @@
 	string_sub(key, "\\", "/", len+1);
 	strupper_m(key);
 }
+
+/*
+ * check whether a given value name is forbidden in registry (smbconf)
+ */
+BOOL registry_smbconf_valname_forbidden(const char *valname)
+{
+	/* hard code the list of forbidden names here for now */
+	const char *forbidden_valnames[] = {
+		"include",
+		"lock directory",
+		"lock dir",
+		NULL
+	};
+	const char **forbidden = NULL;
+
+	for (forbidden = forbidden_valnames; *forbidden != NULL; forbidden++) {
+		if (strwicmp(valname, *forbidden) == 0) {
+			return True;
+		}
+	}
+	return False;
+}

Modified: branches/SAMBA_3_0/source/param/loadparm.c
===================================================================
--- branches/SAMBA_3_0/source/param/loadparm.c	2007-06-27 22:45:08 UTC (rev 23640)
+++ branches/SAMBA_3_0/source/param/loadparm.c	2007-06-28 10:32:52 UTC (rev 23641)
@@ -3165,10 +3165,7 @@
 				  &type,
 				  &size,
 				  &data_p);
-		if ((strwicmp(valname,"include") == 0) ||
-		    (strwicmp(valname, "lock directory") == 0) ||
-		    (strwicmp(valname, "lock dir") == 0)) 
-		{
+		if (registry_smbconf_valname_forbidden(valname)) {
 			DEBUG(10, ("process_registry_globals: Ignoring "
 				   "parameter '%s' in registry.\n", valname));
 			continue;

Modified: branches/SAMBA_3_0_26/source/lib/util_reg.c
===================================================================
--- branches/SAMBA_3_0_26/source/lib/util_reg.c	2007-06-27 22:45:08 UTC (rev 23640)
+++ branches/SAMBA_3_0_26/source/lib/util_reg.c	2007-06-28 10:32:52 UTC (rev 23641)
@@ -117,3 +117,25 @@
 	string_sub(key, "\\", "/", len+1);
 	strupper_m(key);
 }
+
+/*
+ * check whether a given value name is forbidden in registry (smbconf)
+ */
+BOOL registry_smbconf_valname_forbidden(const char *valname)
+{
+	/* hard code the list of forbidden names here for now */
+	const char *forbidden_valnames[] = {
+		"include",
+		"lock directory",
+		"lock dir",
+		NULL
+	};
+	const char **forbidden = NULL;
+
+	for (forbidden = forbidden_valnames; *forbidden != NULL; forbidden++) {
+		if (strwicmp(valname, *forbidden) == 0) {
+			return True;
+		}
+	}
+	return False;
+}

Modified: branches/SAMBA_3_0_26/source/param/loadparm.c
===================================================================
--- branches/SAMBA_3_0_26/source/param/loadparm.c	2007-06-27 22:45:08 UTC (rev 23640)
+++ branches/SAMBA_3_0_26/source/param/loadparm.c	2007-06-28 10:32:52 UTC (rev 23641)
@@ -3166,10 +3166,7 @@
 				  &type,
 				  &size,
 				  &data_p);
-		if ((strwicmp(valname,"include") == 0) ||
-		    (strwicmp(valname, "lock directory") == 0) ||
-		    (strwicmp(valname, "lock dir") == 0)) 
-		{
+		if (registry_smbconf_valname_forbidden(valname)) {
 			DEBUG(10, ("process_registry_globals: Ignoring "
 				   "parameter '%s' in registry.\n", valname));
 			continue;

