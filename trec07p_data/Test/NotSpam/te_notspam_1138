From perl6-all-return-82455-ktwarwic=speedy.uwaterloo.ca@perl.org  Fri Jun 29 14:46:04 2007
Return-Path: <perl6-all-return-82455-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l5TIk3L9029594
	for <ktwarwic@flax9.uwaterloo.ca>; Fri, 29 Jun 2007 14:46:03 -0400
Received: (qmail 29481 invoked by uid 514); 29 Jun 2007 18:45:59 -0000
Mailing-List: contact perl6-all-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:perl6-all@perl.org>
List-Help: <mailto:perl6-all-help@perl.org>
List-Unsubscribe: <mailto:perl6-all-unsubscribe@perl.org>
List-Subscribe: <mailto:perl6-all-subscribe@perl.org>
List-Id: <perl6-all.perl.org>
Delivered-To: mailing list perl6-all@perl.org
Received: (qmail 29476 invoked from network); 29 Jun 2007 18:45:59 -0000
Delivered-To: perl6-all-poster@perl.org
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
X-Mailing-List: contact perl6-internals-help@perl.org; run by ezmlm
X-Mailing-List-Name: perl6-internals
List-Id: <perl6-internals.perl.org>
Delivered-To: mailing list perl6-internals@perl.org
Delivered-To: perl6-internals@perl.org
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of jerry.gay@gmail.com)
Delivered-To: perlmail-parrot-porters@onion.perl.org
Delivered-To: parrot-porters@perl.org
Received-SPF: pass (x1.develooper.com: domain of jerry.gay@gmail.com designates 66.249.90.176 as permitted sender)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=lzx9CnMDkrv2obZC3mlXh3FTF00mr3gupj9AOGy4XWnKj8vDhmcOIdzxrWBFYlXKmIk3rTtyzHjYGKRwPBz8kYnF3RC3fHzC0Uhb+N3hgXphMFSDPAYO9MwB/SF5BIER79jigsNr058h56xzRIR/O8/WvqqnTGkNjqJ0q/uv3+o=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=uQzJaciyV7v1BJd60+Zd5c7kpZcD9hDCLunjUJZMYmZkoiwj2wPXIcboXLoJga3IQLaY3x2Wd2sVdPJhwNYngvbWJlObyhd1NfQHKmRH0azcngWagktXYbi+9qyvDb4bcu4e1XPAlqhIsGXOJ+URnVmiR1Va+xqtPGL8GnxwnA4=
Message-ID: <1d9a3f400706291145i52371738rba2ed7540efc29db@mail.gmail.com>
Date: Fri, 29 Jun 2007 11:45:18 -0700
From: "jerry gay" <jerry.gay@gmail.com>
To: "Patrick R. Michaud" <pmichaud@pobox.com>
Subject: Re: pdd15: How do I subclass a parrot; PMC class?
Cc: parrot-porters@perl.org
In-Reply-To: <20070629183700.GC27722@host.pmichaud.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <20070628204742.GB11745@host.pmichaud.com>
	 <1d9a3f400706291123p6621b86dn2782fd41b1661d10@mail.gmail.com>
	 <20070629183700.GC27722@host.pmichaud.com>
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Old-Spam-Check-By: la.mx.develooper.com
X-Old-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_NEUTRAL

On 6/29/07, Patrick R. Michaud <pmichaud@pobox.com> wrote:
> On Fri, Jun 29, 2007 at 11:23:46AM -0700, jerry gay wrote:
> > On 6/28/07, Patrick R. Michaud <pmichaud@pobox.com> wrote:
> > >Another question about pdd15...:
> > >
> > >If I'm in a different HLL namespace (e.g., via a .HLL directive), how do
> > >I get a PMC class from the 'parrot' HLL namespace?
> > >
> > >Here is an example (which obviously won't work):  I'm creating a
> > >'perl6;Str' class and then attempting to add (parrot's) String class
> > >as a parent.  But of course the constant 'String' here refers to
> > >the wrong HLL namespace:
> > >
> > >    $ cat z.pir
> > >    .HLL "perl6", ""
> > >
> > >    .namespace [ "" ]
> > >
> > >    .sub main :main
> > >        # create 'Str' class
> > >        $P1 = new 'Class'
> > >        $P1.'name'('Str')
> > >
> > >        # add parrot;String PMC as a parent class
> > >        $P2 = get_class 'String'
> > >        addparent $P1, $P2
> > >    .end
> > >
> > >    $ ./parrot z.pir
> > >    Class 'String' doesn't exist
> > >    current instr.: 'perl6;;main' pc 12 (z.pir:11)
> > >    $
> > >
> > >Of course, I'm mostly interested in knowing what the answer "should be",
> > >but I'm
> > >also interested in what "works today".
> > >
> > i've tried attacking this from a number of directions with current
> > functionality, and can't seem to get anything to work.
> >
> > note that this example only works if *both* the .HLL and .namespace
> > lines are commented out. i can't quite figure out why that is, but
> > i'll to stare at the C source a bit and see if something jumps out.
>
> I think this is a case where the spec simply doesn't cover the needed
> behavior yet, not that the implementation is missing something.
>
> If I use C< get_class "String" > in a HLL other than parrot,
> then I somewhat expect the behavior we're already seeing.  In
> other words, we're asking for a "String" class in the current
> (HLL) namespace, and there isn't one, and thus we get an
> exception.
>
> So, the question is -- how do we locate PMC classes in other
> HLL namespaces?
>
the get_class opcode takes a NameSpace PMC or a String, as per
src/ops/object.ops:


  =item B<get_class>(out PMC, in STR)

  =item B<get_class>(out PMC, in PMC)

  Find the PMC for a class, by string name or by key.

  =cut

mind you, the documentation could be a bit more specific, but i expect
that passing it a NameSpace PMC relative to the root namespace should
work. i haven't been able to get it to work--but i'd be happy to be
proven wrong.
~jerry

