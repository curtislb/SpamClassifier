From samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org  Tue Jun 26 09:45:41 2007
Return-Path: <samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org>
Received: from lists.samba.org (mail.samba.org [66.70.73.150])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l5QDjeL9011504
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 26 Jun 2007 09:45:40 -0400
Received: from dp.samba.org (localhost [127.0.0.1])
	by lists.samba.org (Postfix) with ESMTP id C07FB16388D
	for <ktwarwic@speedy.uwaterloo.ca>; Tue, 26 Jun 2007 13:45:37 +0000 (GMT)
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on dp.samba.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.4 required=3.8 tests=AWL,BAYES_00,NO_REAL_NAME,
	NO_RELAYS,RCVD_IN_DSBL autolearn=no version=3.1.7
X-Original-To: samba-cvs@samba.org
Delivered-To: samba-cvs@samba.org
Received: by lists.samba.org (Postfix, from userid 1017)
	id C9E74162ACB; Tue, 26 Jun 2007 13:45:09 +0000 (GMT)
To: samba-cvs@samba.org
From: obnox@samba.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Message-Id: <20070626134509.C9E74162ACB@lists.samba.org>
Date: Tue, 26 Jun 2007 13:45:09 +0000 (GMT)
Subject: svn commit: samba r23610 - in branches: SAMBA_3_0/source/lib
	SAMBA_3_0/source/nsswitch SAMBA_3_0_26/source/lib
	SAMBA_3_0_26/source/nsswitch
X-BeenThere: samba-cvs@lists.samba.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: samba-technical@lists.samba.org
List-Id: Samba CVS and subversion commit messages <samba-cvs.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/archive/samba-cvs>
List-Post: <mailto:samba-cvs@lists.samba.org>
List-Help: <mailto:samba-cvs-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-cvs>,
	<mailto:samba-cvs-request@lists.samba.org?subject=subscribe>
Sender: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org
Errors-To: samba-cvs-bounces+ktwarwic=speedy.uwaterloo.ca@lists.samba.org

Author: obnox
Date: 2007-06-26 13:45:07 +0000 (Tue, 26 Jun 2007)
New Revision: 23610

WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23610

Log:
Move some winbindd_cache specific flags and actions 
back to winbindd_cache.c. The generic mechanism
should open the cache tdb readonly and with default
flags.

Michael


Modified:
   branches/SAMBA_3_0/source/lib/util_tdb.c
   branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c
   branches/SAMBA_3_0_26/source/lib/util_tdb.c
   branches/SAMBA_3_0_26/source/nsswitch/winbindd_cache.c


Changeset:
Modified: branches/SAMBA_3_0/source/lib/util_tdb.c
===================================================================
--- branches/SAMBA_3_0/source/lib/util_tdb.c	2007-06-26 10:19:06 UTC (rev 23609)
+++ branches/SAMBA_3_0/source/lib/util_tdb.c	2007-06-26 13:45:07 UTC (rev 23610)
@@ -1005,12 +1005,7 @@
 	v_status.unknown_key = False;
 	v_status.success = True;
 
-	tdb = tdb_open_log(tdb_path,
-			WINBINDD_CACHE_TDB_DEFAULT_HASH_SIZE,
-			lp_winbind_offline_logon() 
-				?  TDB_DEFAULT 
-				: (TDB_DEFAULT | TDB_CLEAR_IF_FIRST),
-			O_RDWR|O_CREAT, 0600);
+	tdb = tdb_open_log(tdb_path, 0, TDB_DEFAULT, O_RDONLY, 0);
 	if (!tdb) {
 		v_status.tdb_error = True;
 		v_status.success = False;
@@ -1182,4 +1177,3 @@
 
 	return ret;
 }
-

Modified: branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c
===================================================================
--- branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c	2007-06-26 10:19:06 UTC (rev 23609)
+++ branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c	2007-06-26 13:45:07 UTC (rev 23610)
@@ -3279,14 +3279,32 @@
 
 int winbindd_validate_cache(void)
 {
-	int ret;
+	int ret = -1;
+	const char *tdb_path = lock_path("winbindd_cache.tdb");
+	TDB_CONTEXT *tdb = NULL;
 
 	DEBUG(10, ("winbindd_validate_cache: replacing panic function\n"));
 	smb_panic_fn = validate_panic;
 
+
+	tdb = tdb_open_log(tdb_path, 
+			   WINBINDD_CACHE_TDB_DEFAULT_HASH_SIZE,
+			   ( lp_winbind_offline_logon() 
+			     ? TDB_DEFAULT 
+			     : TDB_DEFAULT | TDB_CLEAR_IF_FIRST ),
+			   O_RDWR|O_CREAT, 
+			   0600);
+	if (!tdb) {
+		DEBUG(0, ("winbindd_validate_cache: "
+			  "error opening/initializing tdb\n"));
+		goto done;
+	}
+	tdb_close(tdb);
+
 	ret = tdb_validate(lock_path("winbindd_cache.tdb"),
 			   cache_traverse_validate_fn);
 
+done:
 	DEBUG(10, ("winbindd_validate_cache: restoring panic function\n"));
 	smb_panic_fn = smb_panic;
 	return ret;

Modified: branches/SAMBA_3_0_26/source/lib/util_tdb.c
===================================================================
--- branches/SAMBA_3_0_26/source/lib/util_tdb.c	2007-06-26 10:19:06 UTC (rev 23609)
+++ branches/SAMBA_3_0_26/source/lib/util_tdb.c	2007-06-26 13:45:07 UTC (rev 23610)
@@ -1005,12 +1005,7 @@
 	v_status.unknown_key = False;
 	v_status.success = True;
 
-	tdb = tdb_open_log(tdb_path,
-			WINBINDD_CACHE_TDB_DEFAULT_HASH_SIZE,
-			lp_winbind_offline_logon() 
-				?  TDB_DEFAULT 
-				: (TDB_DEFAULT | TDB_CLEAR_IF_FIRST),
-			O_RDWR|O_CREAT, 0600);
+	tdb = tdb_open_log(tdb_path, 0, TDB_DEFAULT, O_RDONLY, 0);
 	if (!tdb) {
 		v_status.tdb_error = True;
 		v_status.success = False;
@@ -1182,4 +1177,3 @@
 
 	return ret;
 }
-

Modified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_cache.c
===================================================================
--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_cache.c	2007-06-26 10:19:06 UTC (rev 23609)
+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_cache.c	2007-06-26 13:45:07 UTC (rev 23610)
@@ -3279,14 +3279,32 @@
 
 int winbindd_validate_cache(void)
 {
-	int ret;
+	int ret = -1;
+	const char *tdb_path = lock_path("winbindd_cache.tdb");
+	TDB_CONTEXT *tdb = NULL;
 
 	DEBUG(10, ("winbindd_validate_cache: replacing panic function\n"));
 	smb_panic_fn = validate_panic;
 
+
+	tdb = tdb_open_log(tdb_path, 
+			   WINBINDD_CACHE_TDB_DEFAULT_HASH_SIZE,
+			   ( lp_winbind_offline_logon() 
+			     ? TDB_DEFAULT 
+			     : TDB_DEFAULT | TDB_CLEAR_IF_FIRST ),
+			   O_RDWR|O_CREAT, 
+			   0600);
+	if (!tdb) {
+		DEBUG(0, ("winbindd_validate_cache: "
+			  "error opening/initializing tdb\n"));
+		goto done;
+	}
+	tdb_close(tdb);
+
 	ret = tdb_validate(lock_path("winbindd_cache.tdb"),
 			   cache_traverse_validate_fn);
 
+done:
 	DEBUG(10, ("winbindd_validate_cache: restoring panic function\n"));
 	smb_panic_fn = smb_panic;
 	return ret;

